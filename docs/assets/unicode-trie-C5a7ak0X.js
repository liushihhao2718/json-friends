import{t as c}from"./tiny-inflate-C0OKPvUD.js";const T=new Uint8Array(new Uint32Array([305419896]).buffer)[0]===18,E=(r,t,s)=>{let e=r[t];r[t]=r[s],r[s]=e},I=r=>{const t=r.length;for(let s=0;s<t;s+=4)E(r,s,s+3),E(r,s+1,s+2)},l=r=>{T&&I(r)};var o={swap32LE:l};const a=c,{swap32LE:L}=o,h=11,n=5,N=h-n,U=65536>>h,A=1<<N,S=A-1,i=2,D=1<<n,_=D-1,u=65536>>n,w=1024>>n,x=u+w,g=x,F=32,p=g+F,H=1<<i;class X{constructor(t){const s=typeof t.readUInt32BE=="function"&&typeof t.slice=="function";if(s||t instanceof Uint8Array){let e;if(s)this.highStart=t.readUInt32LE(0),this.errorValue=t.readUInt32LE(4),e=t.readUInt32LE(8),t=t.slice(12);else{const f=new DataView(t.buffer);this.highStart=f.getUint32(0,!0),this.errorValue=f.getUint32(4,!0),e=f.getUint32(8,!0),t=t.subarray(12)}t=a(t,new Uint8Array(e)),t=a(t,new Uint8Array(e)),L(t),this.data=new Uint32Array(t.buffer)}else({data:this.data,highStart:this.highStart,errorValue:this.errorValue}=t)}get(t){let s;return t<0||t>1114111?this.errorValue:t<55296||t>56319&&t<=65535?(s=(this.data[t>>n]<<i)+(t&_),this.data[s]):t<=65535?(s=(this.data[u+(t-55296>>n)]<<i)+(t&_),this.data[s]):t<this.highStart?(s=this.data[p-U+(t>>h)],s=this.data[s+(t>>n&S)],s=(s<<i)+(t&_),this.data[s]):this.data[this.data.length-H]}}var y=X;export{y as u};

{"version":3,"file":"json2csv-BPkPuabW.js","sources":["../../src/lib/json2csv.js"],"sourcesContent":["var errorMissingSeparator = 'Missing separator option.',\n  errorEmpty = 'JSON is empty.',\n  errorEmptyHeader = 'Could not detect header. Ensure first row cotains your column headers.',\n  errorNotAnArray = 'Your JSON must be an array or an object.',\n  errorItemNotAnObject = 'Item in array is not an object: {0}';\n\nfunction flattenArray(array, ancestors) {\n  ancestors || (ancestors = []);\n\n  function combineKeys(a, b) {\n    var result = a.slice(0);\n    if (!Array.isArray(b)) return result;\n    for (var i = 0; i < b.length; i++)\n      if (result.indexOf(b[i]) === -1) result.push(b[i]);\n    return result;\n  }\n\n  function extend(target, source) {\n    target = target || {};\n    for (var prop in source) {\n      if (typeof source[prop] === 'object') {\n        target[prop] = extend(target[prop], source[prop]);\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n    return target;\n  }\n\n  var rows = [];\n  for (var i = 0; i < array.length; i++) {\n    var o = array[i],\n      row = {},\n      orows = {},\n      count = 1;\n\n    if (o !== undefined && o !== null && (!isObject(o) || Array.isArray(o)))\n      throw errorItemNotAnObject.replace('{0}', JSON.stringify(o));\n\n    var keys = getKeys(o);\n    for (var k = 0; k < keys.length; k++) {\n      var value = o[keys[k]],\n        keyChain = combineKeys(ancestors, [keys[k]]),\n        key = keyChain.join('.');\n      if (Array.isArray(value)) {\n        orows[key] = flattenArray(value, keyChain);\n        count += orows[key].length;\n      } else {\n        row[key] = value;\n      }\n    }\n\n    if (count == 1) {\n      rows.push(row);\n    } else {\n      var keys = getKeys(orows);\n      for (var k = 0; k < keys.length; k++) {\n        var key = keys[k];\n        for (var r = 0; r < orows[key].length; r++) {\n          rows.push(extend(extend({}, row), orows[key][r]));\n        }\n      }\n    }\n  }\n  return rows;\n}\n\nfunction isObject(o) {\n  return o && typeof o == 'object';\n}\n\nfunction getKeys(o) {\n  if (!isObject(o)) return [];\n  return Object.keys(o);\n}\n\nexport default function convert(data, options) {\n  options || (options = {});\n\n  if (!isObject(data)) throw errorNotAnArray;\n  if (!Array.isArray(data)) data = [data];\n\n  var separator = options.separator || ',';\n  if (!separator) throw errorMissingSeparator;\n\n  var flatten = options.flatten || false;\n  if (flatten) data = flattenArray(data);\n\n  var allKeys = [],\n    allRows = [];\n  for (var i = 0; i < data.length; i++) {\n    var o = data[i],\n      row = {};\n    if (o !== undefined && o !== null && (!isObject(o) || Array.isArray(o)))\n      throw errorItemNotAnObject.replace('{0}', JSON.stringify(o));\n    var keys = getKeys(o);\n    for (var k = 0; k < keys.length; k++) {\n      var key = keys[k];\n      if (allKeys.indexOf(key) === -1) allKeys.push(key);\n      var value = o[key];\n      if (value === undefined && value === null) continue;\n      if (typeof value == 'string') {\n        row[key] = '\"' + value.replace(/\"/g, options.output_csvjson_variant ? '\\\\\"' : '\"\"') + '\"';\n        if (options.output_csvjson_variant) row[key] = row[key].replace(/\\n/g, '\\\\n');\n      } else {\n        row[key] = JSON.stringify(value);\n        if (!options.output_csvjson_variant && (isObject(value) || Array.isArray(value)))\n          row[key] = '\"' + row[key].replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n') + '\"';\n      }\n    }\n    allRows.push(row);\n  }\n\n  const keyValues = [];\n  for (var i = 0; i < allKeys.length; i++) {\n    keyValues.push('\"' + allKeys[i].replace(/\"/g, options.output_csvjson_variant ? '\\\\\"' : '\"\"') + '\"');\n  }\n\n  var csv = keyValues.join(separator) + '\\n';\n  for (var r = 0; r < allRows.length; r++) {\n    var row = allRows[r],\n      rowArray = [];\n    for (var k = 0; k < allKeys.length; k++) {\n      var key = allKeys[k];\n      rowArray.push(row[key] || (options.output_csvjson_variant ? 'null' : ''));\n    }\n    csv += rowArray.join(separator) + (r < allRows.length - 1 ? '\\n' : '');\n  }\n\n  return csv;\n}"],"names":["errorMissingSeparator","errorNotAnArray","errorItemNotAnObject","flattenArray","array","ancestors","combineKeys","a","b","result","i","extend","target","source","prop","rows","o","row","orows","count","isObject","keys","getKeys","k","value","keyChain","key","r","convert","data","options","separator","flatten","allKeys","allRows","keyValues","csv","rowArray"],"mappings":"AAAG,IAACA,EAAwB,4BAG1BC,EAAkB,2CAClBC,EAAuB,sCAEzB,SAASC,EAAaC,EAAOC,EAAW,CACtCA,IAAcA,EAAY,CAAA,GAE1B,SAASC,EAAYC,EAAGC,EAAG,CACzB,IAAIC,EAASF,EAAE,MAAM,CAAC,EACtB,GAAI,CAAC,MAAM,QAAQC,CAAC,EAAG,OAAOC,EAC9B,QAASC,EAAI,EAAGA,EAAIF,EAAE,OAAQE,IACxBD,EAAO,QAAQD,EAAEE,CAAC,CAAC,IAAM,IAAID,EAAO,KAAKD,EAAEE,CAAC,CAAC,EACnD,OAAOD,CACR,CAED,SAASE,EAAOC,EAAQC,EAAQ,CAC9BD,EAASA,GAAU,GACnB,QAASE,KAAQD,EACX,OAAOA,EAAOC,CAAI,GAAM,SAC1BF,EAAOE,CAAI,EAAIH,EAAOC,EAAOE,CAAI,EAAGD,EAAOC,CAAI,CAAC,EAEhDF,EAAOE,CAAI,EAAID,EAAOC,CAAI,EAG9B,OAAOF,CACR,CAGD,QADIG,EAAO,CAAA,EACFL,EAAI,EAAGA,EAAIN,EAAM,OAAQM,IAAK,CACrC,IAAIM,EAAIZ,EAAMM,CAAC,EACbO,EAAM,CAAE,EACRC,EAAQ,CAAE,EACVC,EAAQ,EAEV,GAAuBH,GAAM,OAAS,CAACI,EAASJ,CAAC,GAAK,MAAM,QAAQA,CAAC,GACnE,MAAMd,EAAqB,QAAQ,MAAO,KAAK,UAAUc,CAAC,CAAC,EAG7D,QADIK,EAAOC,EAAQN,CAAC,EACXO,EAAI,EAAGA,EAAIF,EAAK,OAAQE,IAAK,CACpC,IAAIC,EAAQR,EAAEK,EAAKE,CAAC,CAAC,EACnBE,EAAWnB,EAAYD,EAAW,CAACgB,EAAKE,CAAC,CAAC,CAAC,EAC3CG,EAAMD,EAAS,KAAK,GAAG,EACrB,MAAM,QAAQD,CAAK,GACrBN,EAAMQ,CAAG,EAAIvB,EAAaqB,EAAOC,CAAQ,EACzCN,GAASD,EAAMQ,CAAG,EAAE,QAEpBT,EAAIS,CAAG,EAAIF,CAEd,CAED,GAAIL,GAAS,EACXJ,EAAK,KAAKE,CAAG,MAGb,SADII,EAAOC,EAAQJ,CAAK,EACfK,EAAI,EAAGA,EAAIF,EAAK,OAAQE,IAE/B,QADIG,EAAML,EAAKE,CAAC,EACPI,EAAI,EAAGA,EAAIT,EAAMQ,CAAG,EAAE,OAAQC,IACrCZ,EAAK,KAAKJ,EAAOA,EAAO,CAAA,EAAIM,CAAG,EAAGC,EAAMQ,CAAG,EAAEC,CAAC,CAAC,CAAC,CAIvD,CACD,OAAOZ,CACT,CAEA,SAASK,EAASJ,EAAG,CACnB,OAAOA,GAAK,OAAOA,GAAK,QAC1B,CAEA,SAASM,EAAQN,EAAG,CAClB,OAAKI,EAASJ,CAAC,EACR,OAAO,KAAKA,CAAC,EADK,CAAA,CAE3B,CAEe,SAASY,EAAQC,EAAMC,EAAS,CAG7C,GAFAA,IAAYA,EAAU,CAAA,GAElB,CAACV,EAASS,CAAI,EAAG,MAAM5B,EACtB,MAAM,QAAQ4B,CAAI,IAAGA,EAAO,CAACA,CAAI,GAEtC,IAAIE,EAAYD,EAAQ,WAAa,IACrC,GAAI,CAACC,EAAW,MAAM/B,EAEtB,IAAIgC,EAAUF,EAAQ,SAAW,GAC7BE,IAASH,EAAO1B,EAAa0B,CAAI,GAIrC,QAFII,EAAU,CAAE,EACdC,EAAU,CAAA,EACHxB,EAAI,EAAGA,EAAImB,EAAK,OAAQnB,IAAK,CACpC,IAAIM,EAAIa,EAAKnB,CAAC,EACZO,EAAM,CAAA,EACR,GAAuBD,GAAM,OAAS,CAACI,EAASJ,CAAC,GAAK,MAAM,QAAQA,CAAC,GACnE,MAAMd,EAAqB,QAAQ,MAAO,KAAK,UAAUc,CAAC,CAAC,EAE7D,QADIK,EAAOC,EAAQN,CAAC,EACXO,EAAI,EAAGA,EAAIF,EAAK,OAAQE,IAAK,CACpC,IAAIG,EAAML,EAAKE,CAAC,EACZU,EAAQ,QAAQP,CAAG,IAAM,IAAIO,EAAQ,KAAKP,CAAG,EACjD,IAAIF,EAAQR,EAAEU,CAAG,EACbF,IAAU,QAAaA,IAAU,OACjC,OAAOA,GAAS,UAClBP,EAAIS,CAAG,EAAI,IAAMF,EAAM,QAAQ,KAAMM,EAAQ,uBAAyB,MAAQ,IAAI,EAAI,IAClFA,EAAQ,yBAAwBb,EAAIS,CAAG,EAAIT,EAAIS,CAAG,EAAE,QAAQ,MAAO,KAAK,KAE5ET,EAAIS,CAAG,EAAI,KAAK,UAAUF,CAAK,EAC3B,CAACM,EAAQ,yBAA2BV,EAASI,CAAK,GAAK,MAAM,QAAQA,CAAK,KAC5EP,EAAIS,CAAG,EAAI,IAAMT,EAAIS,CAAG,EAAE,QAAQ,KAAM,KAAK,EAAE,QAAQ,MAAO,KAAK,EAAI,MAE5E,CACDQ,EAAQ,KAAKjB,CAAG,CACjB,CAED,MAAMkB,EAAY,CAAA,EAClB,QAASzB,EAAI,EAAGA,EAAIuB,EAAQ,OAAQvB,IAClCyB,EAAU,KAAK,IAAMF,EAAQvB,CAAC,EAAE,QAAQ,KAAMoB,EAAQ,uBAAyB,MAAQ,IAAI,EAAI,GAAG,EAIpG,QADIM,EAAMD,EAAU,KAAKJ,CAAS,EAAI;AAAA,EAC7BJ,EAAI,EAAGA,EAAIO,EAAQ,OAAQP,IAAK,CAGvC,QAFIV,EAAMiB,EAAQP,CAAC,EACjBU,EAAW,CAAA,EACJd,EAAI,EAAGA,EAAIU,EAAQ,OAAQV,IAAK,CACvC,IAAIG,EAAMO,EAAQV,CAAC,EACnBc,EAAS,KAAKpB,EAAIS,CAAG,IAAMI,EAAQ,uBAAyB,OAAS,GAAG,CACzE,CACDM,GAAOC,EAAS,KAAKN,CAAS,GAAKJ,EAAIO,EAAQ,OAAS,EAAI;AAAA,EAAO,GACpE,CAED,OAAOE,CACT"}
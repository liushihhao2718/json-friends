let h=[],c=[],u=[];function j(e,n="ObjectType"){for(h=[],c=[],u=[],u.push([n,a(e)]),console.log(u);u.length>0;){const[r,t]=u.shift();console.log(r,t),g(r,t)}return c.join(`

`)}function g(e,n){if(p(n))c.push(["/**",` * @typedef ${e}`,` * @property {${n}}`," */"].join(`
`));else if(Array.isArray(n))if(n.length==1){if(p(n[0]))return` * @property {${n[0]}[]} ${e}`;{const r=y(e);return u.push([r,n[0]]),` * @property {${r}[]} ${e}`}}else{const r=n.map((t,o)=>{if(p(t))return t;{const s=y(e)+"_"+o;return u.push([s,t]),s}});c.push(["/**",` * @typedef {Array<${r.join(" | ")}>} ${e}`," */"].join(`
`))}else c.push(["/**",` * @typedef ${e}`,...Object.entries(n).map(([r,t])=>{if(Array.isArray(t))if(t.length==1){if(p(t[0]))return` * @property {${t[0]}[]} ${r}`;{const o=y(r);return u.push([o,t[0]]),` * @property {${o}[]} ${r}`}}else return` * @property {Array<${t.map((s,i)=>{if(p(s))return s;{const f=y(r)+"_"+i;return u.push([f,s]),f}}).join(" | ")}>} ${r}`;if(p(t))return` * @property {${t}} ${r}`;{const o=y(r);return u.push([o,t]),` * @property {${o}} ${r}`}})," */"].join(`
`))}function y(e){return e.charAt(0).toUpperCase()+e.slice(1)}function a(e,n=0){if(n>10)throw Error("object too deep.");if(e==="")return"string";if(!e)return"null";if(Array.isArray(e)){if(e.length===0)return"array";const s=[];return e.forEach((i,f)=>{const l=a(i,n++);s.find($=>d($,l))||(p(l)||h.push(l),s.push(l))}),s}const r=typeof e;if(r!=="object")return r;const t=Object.entries(e);if(t.length==0)return"object";const o=t.map(s=>{const[i,f]=s;return[i,a(f,n+1)]});return Object.fromEntries(o)}function d(e,n){return JSON.stringify(e)===JSON.stringify(n)}function p(e){return["string","number","bigint","boolean","undefined","symbol","null","object"].includes(e)}export{j as default};

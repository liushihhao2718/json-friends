{"version":3,"file":"json2jsdoc-CLr_t6Nd.js","sources":["../../src/lib/json2jsdoc.js"],"sourcesContent":["let All_Keys = [];\nlet typedef_comments = []\nlet levels = []\n\n/**\n * \n * @param {Object} data \n * @param {string} key\n */\nexport default function init(data, key = 'ObjectType') {\n  All_Keys = [];\n  typedef_comments = []\n  levels = []\n\n  levels.push([key, objectKey(data)])\n\n  console.log(levels)\n\n  while (levels.length > 0) {\n    const [k, v] = levels.shift();\n\n    console.log(k, v)\n    jsdoc_gen(k, v);\n  }\n  return typedef_comments.join('\\n\\n');\n}\n\nfunction jsdoc_gen(k, v) {\n  if (isPrimitive(v)) {\n    typedef_comments.push(\n      [`/**`, ` * @typedef ${k}`,\n        ` * @property {${v}}`,\n        ` */`].join('\\n')\n    )\n  }\n  else if(Array.isArray(v)){\n    if (v.length == 1) {\n      if (isPrimitive(v[0])) {\n        return ` * @property {${v[0]}[]} ${k}`;\n      }\n      else {\n        const new_key = firstLetterUpperCase(k);\n        levels.push([new_key, v[0]])\n        return ` * @property {${new_key}[]} ${k}`;\n      }\n    }\n\n    else {\n      const types = v.map((x, i) => {\n        if (!isPrimitive(x)) {\n          const new_key = firstLetterUpperCase(k) + '_'+i;\n          levels.push([new_key, x])\n          return new_key\n        }\n        else return x;\n      })\n\n      typedef_comments.push(\n        [`/**`, \n        ` * @typedef {Array<${types.join(' | ')}>} ${k}`,\n          ` */`].join('\\n')\n      )\n    }\n  }\n  else {\n\n    typedef_comments.push(\n      [`/**`, ` * @typedef ${k}`,\n        ...Object.entries(v).map(([k_in, v_in]) => {\n\n          if (Array.isArray(v_in)) {\n            if (v_in.length == 1) {\n              if (isPrimitive(v_in[0])) {\n                return ` * @property {${v_in[0]}[]} ${k_in}`;\n              }\n              else {\n                const new_key = firstLetterUpperCase(k_in);\n                levels.push([new_key, v_in[0]])\n                return ` * @property {${new_key}[]} ${k_in}`;\n              }\n            }\n\n            else {\n              const types = v_in.map((x, i) => {\n                if (!isPrimitive(x)) {\n                  const new_key = firstLetterUpperCase(k_in) + '_'+i;\n                  levels.push([new_key, x])\n                  return new_key\n                }\n                else return x;\n              })\n              return ` * @property {Array<${types.join(' | ')}>} ${k_in}`;\n            }\n\n          }\n          if (isPrimitive(v_in)) {\n            return ` * @property {${v_in}} ${k_in}`;\n          }\n          else {\n            const new_key = firstLetterUpperCase(k_in);\n            levels.push([new_key, v_in])\n            return ` * @property {${new_key}} ${k_in}`;\n          }\n        }),\n        ` */`].join('\\n')\n    )\n  }\n}\n\nfunction firstLetterUpperCase(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/**\n * \n * @param {object} obj non array object\n * @param {number} depth object parse depth\n */\nfunction objectKey(obj, depth = 0) {\n  if (depth > 10) throw Error('object too deep.');\n\n  if (obj === '') return 'string';\n  if (!obj) return 'null';\n  if (Array.isArray(obj)) {\n\n\n    /** [] */\n    if (obj.length === 0) {\n      return 'array'\n    }\n\n    const array_result = []\n    obj.forEach((o, i) => {\n      const key = objectKey(o, depth++)\n\n      if (array_result.find(x => deepEqual(x, key))) return;\n      if (!isPrimitive(key)) All_Keys.push(key);\n      array_result.push(key)\n    })\n\n\n    return array_result\n  }\n\n  const type = typeof obj;\n  if (type !== 'object') return type;\n  const entries = Object.entries(obj);\n\n  if (entries.length == 0) return 'object';\n  const properties = entries.map(x => {\n    const [k, v] = x;\n    return [k, objectKey(v, depth + 1)]\n  })\n  return Object.fromEntries(properties);\n}\n\n\nfunction deepEqual(obj1, obj2) {\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\n}\n\n\nfunction isPrimitive(str) {\n  return ['string', 'number', 'bigint', 'boolean', 'undefined', 'symbol', 'null', 'object'].includes(str)\n}"],"names":["All_Keys","typedef_comments","levels","init","data","key","objectKey","k","v","jsdoc_gen","isPrimitive","new_key","firstLetterUpperCase","types","x","i","k_in","v_in","str","obj","depth","array_result","o","deepEqual","type","entries","properties","obj1","obj2"],"mappings":"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"}
{"version":3,"file":"@glideapps-VH0SUwHK.js","sources":["../../node_modules/@glideapps/ts-necessities/dist/default-map.js","../../node_modules/@glideapps/ts-necessities/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultMap = void 0;\n/**\n * A `Map` that returns default values for keys that are not present.\n *\n * To map strings to `Set`s of numbers, for example, `DefaultMap` can\n * be used like this:\n *\n * ```\n * const m = new DefaultMap<string, Set<number>>(() => new Set());\n * m.get(\"foo\"); // returns an empty `Set`\n * m.get(\"bar\").add(1);\n * m.get(\"bar\"); // returns a `Set` containing `1`.\n * ```\n *\n * @typeParam K The key type.\n * @typeParam V The value type.\n */\nclass DefaultMap extends Map {\n    /**\n     *\n     * @param _defaultFunc Must return the default value for key `k`.  Will only be called when necessary.\n     * @param initKVPs An array of [key, value] arrays to initialize the map with.\n     */\n    constructor(_defaultFunc, initKVPs) {\n        super(initKVPs);\n        this._defaultFunc = _defaultFunc;\n    }\n    /**\n     * Returns the value for `k`.  If `k` is not present, creates\n     * the default value via [[_defaultFunc]], sets that default\n     * as the value for `k` and returns it.\n     */\n    get(k) {\n        let v = super.get(k);\n        if (v === undefined) {\n            // There's an edge case here, which is that the value\n            // for `k` exists, but it's `undefined`.  To guard\n            // against that we have this extra check.\n            if (this.has(k))\n                return v;\n            v = this._defaultFunc(k);\n            this.set(k, v);\n        }\n        return v;\n    }\n    /**\n     * Sets the value for `k` to `f(v)` where `v` is the previous\n     * value for `k`, or the default if not present.  Returns the new\n     * value.\n     *\n     * These two lines are equivalent:\n     *\n     * ```\n     * m.set(\"foo\", m.get(\"foo\") + 1);\n     * m.update(\"foo\", x => x + 1);\n     * ```\n     */\n    update(k, f) {\n        const v = f(this.get(k));\n        this.set(k, v);\n        return v;\n    }\n}\nexports.DefaultMap = DefaultMap;\n//# sourceMappingURL=default-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultMap = exports.exceptionToError = exports.exceptionToString = exports.filterUndefined = exports.mapFilterUndefined = exports.hasOwnProperty = exports.isEnumValue = exports.definedMap = exports.reduceTwo = exports.sleep = exports.dontAwait = exports.defined = exports.assertNever = exports.assert = exports.panic = exports.proveNever = exports.proveType = void 0;\n/**\n * Do nothing, but only compile if `_val` is of type `T`.\n */\nfunction proveType(_val) {\n    // do nothing, just prove the compiler thinks the types match\n}\nexports.proveType = proveType;\n/**\n * Only compile if `_never` has type `never`.  If run, trace the\n * `message` and return `result`.\n */\nfunction proveNever(_never, message, result) {\n    console.trace(message);\n    return result;\n}\nexports.proveNever = proveNever;\n/**\n * Throw an `Error` and trace `message`.\n */\nfunction panic(message = \"This should not happen\") {\n    console.trace(message);\n    debugger;\n    throw new Error(message);\n}\nexports.panic = panic;\n/**\n * Assert that `fact` is `true`.  If the assertion fails, [[panic]]\n * with `message`.\n */\nfunction assert(fact, message = \"Assertion failed\") {\n    if (fact)\n        return;\n    return panic(message);\n}\nexports.assert = assert;\n/**\n * Only compile if `_never` has the type `never`.  If run, [[panic]]\n * with `message`.\n */\nfunction assertNever(_never, message = \"`never` happened\") {\n    return panic(message);\n}\nexports.assertNever = assertNever;\n/**\n * If `v` is not `undefined`, return `v`.  Otherwise, [[panic]] with\n * a message including `reason`.\n */\nfunction defined(v, reason) {\n    if (v === undefined) {\n        return panic(\"Value was undefined but should be defined\" + (reason !== undefined ? ` because: ${reason}` : \"\"));\n    }\n    return v;\n}\nexports.defined = defined;\n/**\n * The only thing this function does is to trace if the promise\n * `p` rejects.  It is useful to explain to ESLint that `p` is\n * intentionally not `await`ed.\n *\n * @deprecated Instead of `dontAwait(x)` use `void x`.\n */\nfunction dontAwait(p) {\n    if (!(p instanceof Promise))\n        return;\n    p.catch(e => {\n        console.trace(\"Unhandled error from unawaited promise\", e);\n        throw e;\n    });\n}\nexports.dontAwait = dontAwait;\n/**\n * A promise that resolves after `ms` milliseconds.\n */\nfunction sleep(ms) {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n}\nexports.sleep = sleep;\n/**\n * If both `a` and `b` are `undefined`, return `undefined`.\n * If exactly one of the two is `undefined`, return the other.\n * If both are not `undefined`, return `f(a, b)`.\n */\nfunction reduceTwo(a, b, f) {\n    if (a === undefined)\n        return b;\n    if (b === undefined)\n        return a;\n    return f(a, b);\n}\nexports.reduceTwo = reduceTwo;\n/**\n * If `x` is undefined, return `undefined`.  Otherwise, return `f(x)`.\n */\nfunction definedMap(x, f) {\n    if (x === undefined)\n        return undefined;\n    return f(x);\n}\nexports.definedMap = definedMap;\n/**\n * If `x` belongs to the enum `e`, return `true`.  Otherwise, return `false`.\n */\nfunction isEnumValue(e, x) {\n    return Object.keys(e).map(k => e[k]).some(v => v === x);\n}\nexports.isEnumValue = isEnumValue;\n/**\n * Returns whether `obj` has `name` as its own property.\n */\nfunction hasOwnProperty(obj, name) {\n    if (obj === undefined || obj === null)\n        return false;\n    return Object.prototype.hasOwnProperty.call(obj, name);\n}\nexports.hasOwnProperty = hasOwnProperty;\n/**\n * Map `f` over `iterable`, and return an array of all results\n * that are not `undefined`.\n */\nfunction mapFilterUndefined(iterable, f) {\n    const result = [];\n    let i = 0;\n    for (const x of iterable) {\n        const y = f(x, i);\n        i += 1;\n        if (y === undefined)\n            continue;\n        result.push(y);\n    }\n    return result;\n}\nexports.mapFilterUndefined = mapFilterUndefined;\n/**\n * Filters out all elements in `arr` that are `undefined`.\n */\nfunction filterUndefined(arr) {\n    const result = [];\n    for (const x of arr) {\n        if (x !== undefined) {\n            result.push(x);\n        }\n    }\n    return result;\n}\nexports.filterUndefined = filterUndefined;\n/**\n * Returns a string representation of `e`, which is supposed to be an\n * exception.\n */\nfunction exceptionToString(e) {\n    if (e === undefined)\n        return \"\";\n    try {\n        return e.toString();\n    }\n    catch (f) {\n        try {\n            return `Exception can't be stringified: ${exceptionToString(f)}`;\n        }\n        catch (_a) {\n            return \"Exception can't be stringified\";\n        }\n    }\n}\nexports.exceptionToString = exceptionToString;\n/**\n * Returns the exception `e` as an instance of `Error`.  If `e` is already an\n * `Error`, it just returns `e`, otherwise it returns an error with\n * `exceptionToString(e)`.\n */\nfunction exceptionToError(e) {\n    if (e instanceof Error) {\n        return e;\n    }\n    else {\n        return new Error(exceptionToString(e));\n    }\n}\nexports.exceptionToError = exceptionToError;\nvar default_map_1 = require(\"./default-map\");\nObject.defineProperty(exports, \"DefaultMap\", { enumerable: true, get: function () { return default_map_1.DefaultMap; } });\n//# sourceMappingURL=index.js.map"],"names":["defaultMap","DefaultMap","_defaultFunc","initKVPs","k","v","f","exports","proveType","_val","proveNever","_never","message","result","panic","assert","fact","assertNever","defined","reason","dontAwait","p","e","sleep","ms","resolve","reduceTwo","a","b","definedMap","x","isEnumValue","hasOwnProperty","obj","name","mapFilterUndefined","iterable","i","y","filterUndefined","arr","exceptionToString","exceptionToError","default_map_1","require$$0"],"mappings":"cACA,OAAO,eAAeA,EAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC1CA,EAAA,WAAG,OAiBrB,MAAMC,UAAmB,GAAI,CAMzB,YAAYC,EAAcC,EAAU,CAChC,MAAMA,CAAQ,EACd,KAAK,aAAeD,CACvB,CAMD,IAAIE,EAAG,CACH,IAAIC,EAAI,MAAM,IAAID,CAAC,EACnB,GAAIC,IAAM,OAAW,CAIjB,GAAI,KAAK,IAAID,CAAC,EACV,OAAOC,EACXA,EAAI,KAAK,aAAaD,CAAC,EACvB,KAAK,IAAIA,EAAGC,CAAC,CAChB,CACD,OAAOA,CACV,CAaD,OAAOD,EAAGE,EAAG,CACT,MAAMD,EAAIC,EAAE,KAAK,IAAIF,CAAC,CAAC,EACvB,YAAK,IAAIA,EAAGC,CAAC,EACNA,CACV,CACL,CACkBL,EAAA,WAAGC,eChErB,OAAO,eAAcM,EAAU,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5DA,EAAA,WAAqBA,mBAA2BA,EAA4B,kBAAAA,EAAA,gBAA0BA,qBAA6BA,EAAyB,eAAAA,EAAA,YAAsBA,aAAqBA,EAAoB,UAAAA,EAAA,MAAgBA,EAAoB,UAAAA,EAAA,QAAkBA,cAAsBA,EAAiB,OAAAA,EAAA,MAAgBA,aAAqBA,EAAoB,UAAA,OAIjX,SAASC,EAAUC,EAAM,CAExB,CACDF,EAAA,UAAoBC,EAKpB,SAASE,EAAWC,EAAQC,EAASC,EAAQ,CACzC,eAAQ,MAAMD,CAAO,EACdC,CACV,CACDN,EAAA,WAAqBG,EAIrB,SAASI,EAAMF,EAAU,yBAA0B,CAC/C,QAAQ,MAAMA,CAAO,EACrB,SACA,MAAM,IAAI,MAAMA,CAAO,CAC1B,CACDL,EAAA,MAAgBO,EAKhB,SAASC,EAAOC,EAAMJ,EAAU,mBAAoB,CAChD,GAAI,CAAAI,EAEJ,OAAOF,EAAMF,CAAO,CACvB,CACDL,EAAA,OAAiBQ,EAKjB,SAASE,EAAYN,EAAQC,EAAU,mBAAoB,CACvD,OAAOE,EAAMF,CAAO,CACvB,CACDL,EAAA,YAAsBU,EAKtB,SAASC,EAAQb,EAAGc,EAAQ,CACxB,OAAId,IAAM,OACCS,EAAM,6CAA+CK,IAAW,OAAY,aAAaA,CAAM,GAAK,GAAG,EAE3Gd,CACV,CACDE,EAAA,QAAkBW,EAQlB,SAASE,EAAUC,EAAG,CACZA,aAAa,SAEnBA,EAAE,MAAMC,GAAK,CACT,cAAQ,MAAM,yCAA0CA,CAAC,EACnDA,CACd,CAAK,CACJ,CACDf,EAAA,UAAoBa,EAIpB,SAASG,EAAMC,EAAI,CACf,OAAO,IAAI,QAAQC,GAAW,CAC1B,WAAWA,EAASD,CAAE,CAC9B,CAAK,CACJ,CACDjB,EAAA,MAAgBgB,EAMhB,SAASG,EAAUC,EAAGC,EAAGtB,EAAG,CACxB,OAAIqB,IAAM,OACCC,EACPA,IAAM,OACCD,EACJrB,EAAEqB,EAAGC,CAAC,CAChB,CACDrB,EAAA,UAAoBmB,EAIpB,SAASG,EAAWC,EAAGxB,EAAG,CACtB,GAAIwB,IAAM,OAEV,OAAOxB,EAAEwB,CAAC,CACb,CACDvB,EAAA,WAAqBsB,EAIrB,SAASE,EAAY,EAAGD,EAAG,CACvB,OAAO,OAAO,KAAK,CAAC,EAAE,IAAI1B,GAAK,EAAEA,CAAC,CAAC,EAAE,KAAKC,GAAKA,IAAMyB,CAAC,CACzD,CACDvB,EAAA,YAAsBwB,EAItB,SAASC,EAAeC,EAAKC,EAAM,CAC/B,OAAyBD,GAAQ,KACtB,GACJ,OAAO,UAAU,eAAe,KAAKA,EAAKC,CAAI,CACxD,CACD3B,EAAA,eAAyByB,EAKzB,SAASG,EAAmBC,EAAU9B,EAAG,CACrC,MAAMO,EAAS,CAAA,EACf,IAAIwB,EAAI,EACR,UAAWP,KAAKM,EAAU,CACtB,MAAME,EAAIhC,EAAEwB,EAAGO,CAAC,EAChBA,GAAK,EACDC,IAAM,QAEVzB,EAAO,KAAKyB,CAAC,CAChB,CACD,OAAOzB,CACV,CACDN,EAAA,mBAA6B4B,EAI7B,SAASI,EAAgBC,EAAK,CAC1B,MAAM3B,EAAS,CAAA,EACf,UAAWiB,KAAKU,EACRV,IAAM,QACNjB,EAAO,KAAKiB,CAAC,EAGrB,OAAOjB,CACV,CACDN,EAAA,gBAA0BgC,EAK1B,SAASE,EAAkB,EAAG,CAC1B,GAAI,IAAM,OACN,MAAO,GACX,GAAI,CACA,OAAO,EAAE,UACZ,OACMnC,EAAG,CACN,GAAI,CACA,MAAO,mCAAmCmC,EAAkBnC,CAAC,CAAC,EACjE,MACU,CACP,MAAO,gCACV,CACJ,CACJ,CACDC,EAAA,kBAA4BkC,EAM5B,SAASC,EAAiB,EAAG,CACzB,OAAI,aAAa,MACN,EAGA,IAAI,MAAMD,EAAkB,CAAC,CAAC,CAE5C,CACDlC,EAAA,iBAA2BmC,EAC3B,IAAIC,EAAgBC,EACpB,OAAO,eAAerC,EAAS,aAAc,CAAE,WAAY,GAAM,IAAK,UAAY,CAAE,OAAOoC,EAAc,UAAW,CAAI,CAAA","x_google_ignoreList":[0,1]}
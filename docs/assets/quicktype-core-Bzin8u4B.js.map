{"version":3,"file":"quicktype-core-Bzin8u4B.js","sources":["../../node_modules/quicktype-core/dist/Messages.js","../../node_modules/quicktype-core/dist/support/Support.js","../../node_modules/quicktype-core/dist/attributes/TypeAttributes.js","../../node_modules/quicktype-core/dist/RendererOptions.js","../../node_modules/quicktype-core/dist/support/Acronyms.js","../../node_modules/quicktype-core/dist/support/Strings.js","../../node_modules/quicktype-core/dist/support/Chance.js","../../node_modules/quicktype-core/dist/attributes/TypeNames.js","../../node_modules/quicktype-core/dist/TypeBuilder.js","../../node_modules/quicktype-core/dist/attributes/StringTypes.js","../../node_modules/quicktype-core/dist/TypeUtils.js","../../node_modules/quicktype-core/dist/GraphRewriting.js","../../node_modules/quicktype-core/dist/Graph.js","../../node_modules/quicktype-core/dist/TypeGraph.js","../../node_modules/quicktype-core/dist/attributes/URIAttributes.js","../../node_modules/quicktype-core/dist/Type.js","../../node_modules/quicktype-core/dist/Naming.js","../../node_modules/quicktype-core/dist/Source.js","../../node_modules/quicktype-core/dist/Annotation.js","../../node_modules/quicktype-core/dist/Renderer.js","../../node_modules/quicktype-core/dist/DeclarationIR.js","../../node_modules/quicktype-core/dist/input/JSONSchemaStore.js","../../node_modules/quicktype-core/dist/attributes/AccessorNames.js","../../node_modules/quicktype-core/dist/attributes/EnumValues.js","../../node_modules/quicktype-core/dist/attributes/Constraints.js","../../node_modules/quicktype-core/dist/input/JSONSchemaInput.js","../../node_modules/quicktype-core/dist/attributes/Description.js","../../node_modules/quicktype-core/dist/Transformers.js","../../node_modules/quicktype-core/dist/support/Comments.js","../../node_modules/quicktype-core/dist/ConvenienceRenderer.js","../../node_modules/quicktype-core/dist/DateTime.js","../../node_modules/quicktype-core/dist/TargetLanguage.js","../../node_modules/quicktype-core/dist/language/CSharp.js","../../node_modules/quicktype-core/dist/language/Golang.js","../../node_modules/quicktype-core/dist/language/CJSON.js","../../node_modules/quicktype-core/dist/language/CPlusPlus.js","../../node_modules/quicktype-core/dist/language/Objective-C.js","../../node_modules/quicktype-core/dist/language/Java.js","../../node_modules/quicktype-core/dist/support/Converters.js","../../node_modules/quicktype-core/dist/language/JavaScriptUnicodeMaps.js","../../node_modules/quicktype-core/dist/language/JavaScript.js","../../node_modules/quicktype-core/dist/language/JavaScriptPropTypes.js","../../node_modules/quicktype-core/dist/language/TypeScriptFlow.js","../../node_modules/quicktype-core/dist/language/Swift.js","../../node_modules/quicktype-core/dist/language/Kotlin.js","../../node_modules/quicktype-core/dist/language/Scala3.js","../../node_modules/quicktype-core/dist/language/Smithy4s.js","../../node_modules/quicktype-core/dist/language/Elm.js","../../node_modules/quicktype-core/dist/language/JSONSchema.js","../../node_modules/quicktype-core/dist/language/Rust.js","../../node_modules/quicktype-core/dist/language/Crystal.js","../../node_modules/quicktype-core/dist/language/ruby/keywords.js","../../node_modules/quicktype-core/dist/language/ruby/index.js","../../node_modules/quicktype-core/dist/language/Dart.js","../../node_modules/quicktype-core/dist/language/Python.js","../../node_modules/quicktype-core/dist/language/Pike.js","../../node_modules/quicktype-core/dist/language/Haskell.js","../../node_modules/quicktype-core/dist/language/TypeScriptZod.js","../../node_modules/quicktype-core/dist/language/Php.js","../../node_modules/quicktype-core/dist/language/TypeScriptEffectSchema.js","../../node_modules/quicktype-core/dist/language/All.js","../../node_modules/quicktype-core/dist/UnionBuilder.js","../../node_modules/quicktype-core/dist/UnifyClasses.js","../../node_modules/quicktype-core/dist/rewrites/CombineClasses.js","../../node_modules/quicktype-core/dist/EncodedMarkovChain.js","../../node_modules/quicktype-core/dist/MarkovChain.js","../../node_modules/quicktype-core/dist/rewrites/InferMaps.js","../../node_modules/quicktype-core/dist/GatherNames.js","../../node_modules/quicktype-core/dist/rewrites/ExpandStrings.js","../../node_modules/quicktype-core/dist/rewrites/FlattenUnions.js","../../node_modules/quicktype-core/dist/rewrites/ResolveIntersections.js","../../node_modules/quicktype-core/dist/rewrites/ReplaceObjectType.js","../../node_modules/quicktype-core/dist/input/CompressedJSON.js","../../node_modules/quicktype-core/dist/input/Inference.js","../../node_modules/quicktype-core/dist/input/Inputs.js","../../node_modules/quicktype-core/dist/rewrites/FlattenStrings.js","../../node_modules/quicktype-core/dist/MakeTransformations.js","../../node_modules/quicktype-core/dist/Run.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/ours/primordials.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/ours/util.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/ours/errors.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/validators.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/utils.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/destroy.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/legacy.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/add-abort-signal.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/buffer_list.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/state.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/from.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/readable.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/writable.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/duplexify.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/duplex.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/transform.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/passthrough.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/pipeline.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/compose.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/internal/streams/operators.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/stream/promises.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/stream.js","../../node_modules/quicktype-core/node_modules/readable-stream/lib/ours/browser.js","../../node_modules/quicktype-core/dist/input/io/get-stream/buffer-stream.js","../../node_modules/quicktype-core/dist/input/io/get-stream/index.js","../../__vite-browser-external","../../node_modules/quicktype-core/dist/input/io/NodeIO.js","../../node_modules/quicktype-core/dist/input/FetchingJSONSchemaStore.js","../../node_modules/quicktype-core/dist/input/PostmanCollection.js","../../node_modules/quicktype-core/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.messageAssert = exports.messageError = exports.QuickTypeError = void 0;\nconst errorMessages = {\n    InternalError: \"Internal error: ${message}\",\n    // Misc\n    MiscJSONParseError: \"Syntax error in ${description} JSON ${address}: ${message}\",\n    MiscReadError: \"Cannot read from file or URL ${fileOrURL}: ${message}\",\n    MiscUnicodeHighSurrogateWithoutLowSurrogate: \"Malformed unicode: High surrogate not followed by low surrogate\",\n    MiscInvalidMinMaxConstraint: \"Invalid min-max constraint: ${min}-${max}\",\n    // Inference\n    InferenceJSONReferenceNotRooted: \"JSON reference doesn't start with '#/': ${reference}\",\n    InferenceJSONReferenceToUnion: \"JSON reference points to a union type: ${reference}\",\n    InferenceJSONReferenceWrongProperty: \"JSON reference points to a non-existant property: ${reference}\",\n    InferenceJSONReferenceInvalidArrayIndex: \"JSON reference uses invalid array index: ${reference}\",\n    // JSON Schema input\n    SchemaArrayIsInvalidSchema: \"An array is not a valid JSON Schema at ${ref}\",\n    SchemaNullIsInvalidSchema: \"null is not a valid JSON Schema at ${ref}\",\n    SchemaRefMustBeString: \"$ref must be a string, but is an ${actual} at ${ref}\",\n    SchemaAdditionalTypesForbidRequired: \"Can't have non-specified required properties but forbidden additionalTypes at ${ref}\",\n    SchemaNoTypeSpecified: \"JSON Schema must specify at least one type at ${ref}\",\n    SchemaInvalidType: \"Invalid type ${type} in JSON Schema at ${ref}\",\n    SchemaFalseNotSupported: 'Schema \"false\" is not supported at ${ref}',\n    SchemaInvalidJSONSchemaType: \"Value of type ${type} is not valid JSON Schema at ${ref}\",\n    SchemaRequiredMustBeStringOrStringArray: \"`required` must be string or array of strings, but is ${actual} at ${ref}\",\n    SchemaRequiredElementMustBeString: \"`required` must contain only strings, but it has ${element}, at ${ref}\",\n    SchemaTypeMustBeStringOrStringArray: \"`type` must be string or array of strings, but is ${actual}\",\n    SchemaTypeElementMustBeString: \"`type` must contain only strings, but it has ${element}\",\n    SchemaArrayItemsMustBeStringOrArray: \"Array items must be an array or an object, but is ${actual}\",\n    SchemaIDMustHaveAddress: \"$id ${id} doesn't have an address at ${ref}\",\n    SchemaWrongAccessorEntryArrayLength: \"Accessor entry array must have the same number of entries as the ${operation} at ${ref}\",\n    SchemaSetOperationCasesIsNotArray: \"${operation} cases must be an array, but is ${cases}, at ${ref}\",\n    SchemaMoreThanOneUnionMemberName: \"More than one name given for union member: ${names}\",\n    SchemaCannotGetTypesFromBoolean: \"Schema value to get top-level types from must be an object, but is boolean, at ${ref}\",\n    SchemaCannotIndexArrayWithNonNumber: \"Trying to index array in schema with key that is not a number, but is ${actual} at ${ref}\",\n    SchemaIndexNotInArray: \"Index ${index} out of range of schema array at ${ref}\",\n    SchemaKeyNotInObject: \"Key ${key} not in schema object at ${ref}\",\n    SchemaFetchError: \"Could not fetch schema ${address}, referred to from ${base}\",\n    SchemaFetchErrorTopLevel: \"Could not fetch top-level schema ${address}\",\n    SchemaFetchErrorAdditional: \"Could not fetch additional schema ${address}\",\n    // GraphQL input\n    GraphQLNoQueriesDefined: \"GraphQL file doesn't have any queries defined.\",\n    // Driver\n    DriverUnknownSourceLanguage: \"Unknown source language ${lang}\",\n    DriverUnknownOutputLanguage: \"Unknown output language ${lang}\",\n    DriverMoreThanOneInputGiven: \"More than one input given for top-level ${topLevel}\",\n    DriverCannotInferNameForSchema: \"Cannot infer name for schema ${uri}\",\n    DriverNoGraphQLQueryGiven: \"Please specify at least one GraphQL query as input\",\n    DriverNoGraphQLSchemaInDir: \"No GraphQL schema in ${dir}\",\n    DriverMoreThanOneGraphQLSchemaInDir: \"More than one GraphQL schema in ${dir}\",\n    DriverSourceLangMustBeGraphQL: \"If a GraphQL schema is specified, the source language must be GraphQL\",\n    DriverGraphQLSchemaNeeded: \"Please specify a GraphQL schema with --graphql-schema or --graphql-introspect\",\n    DriverInputFileDoesNotExist: \"Input file ${filename} does not exist\",\n    DriverCannotMixJSONWithOtherSamples: \"Cannot mix JSON samples with JSON Schems, GraphQL, or TypeScript in input subdirectory ${dir}\",\n    DriverCannotMixNonJSONInputs: \"Cannot mix JSON Schema, GraphQL, and TypeScript in an input subdirectory ${dir}\",\n    DriverUnknownDebugOption: \"Unknown debug option ${option}\",\n    DriverNoLanguageOrExtension: \"Please specify a language (--lang) or an output file extension\",\n    DriverCLIOptionParsingFailed: \"Option parsing failed: ${message}\",\n    // IR\n    IRNoForwardDeclarableTypeInCycle: \"Cannot resolve cycle because it doesn't contain types that can be forward declared\",\n    IRTypeAttributesNotPropagated: \"Type attributes for ${count} types were not carried over to the new graph: ${indexes}\",\n    IRNoEmptyUnions: \"Trying to make an empty union - do you have an impossible type in your schema?\",\n    // Rendering\n    RendererUnknownOptionValue: \"Unknown value ${value} for option ${name}\",\n    // TypeScript input\n    TypeScriptCompilerError: \"TypeScript error: ${message}\"\n};\nclass QuickTypeError extends Error {\n    constructor(errorMessage, messageName, userMessage, properties) {\n        super(userMessage);\n        this.errorMessage = errorMessage;\n        this.messageName = messageName;\n        this.properties = properties;\n    }\n}\nexports.QuickTypeError = QuickTypeError;\nfunction messageError(kind, properties) {\n    const message = errorMessages[kind];\n    let userMessage = message;\n    const propertiesMap = properties;\n    for (const name of Object.getOwnPropertyNames(propertiesMap)) {\n        let value = propertiesMap[name];\n        if (typeof value === \"object\" && typeof value.toString === \"function\") {\n            value = value.toString();\n        }\n        else if (typeof value.message === \"string\") {\n            value = value.message;\n        }\n        else if (typeof value !== \"string\") {\n            value = JSON.stringify(value);\n        }\n        userMessage = userMessage.replace(\"${\" + name + \"}\", value);\n    }\n    throw new QuickTypeError(message, kind, userMessage, propertiesMap);\n}\nexports.messageError = messageError;\nfunction messageAssert(assertion, kind, properties) {\n    if (assertion)\n        return;\n    return messageError(kind, properties);\n}\nexports.messageAssert = messageAssert;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.numberEnumValues = exports.indentationString = exports.parseJSON = exports.inflateBase64 = exports.errorMessage = exports.repeatedCall = exports.repeated = exports.mustNotHappen = exports.panic = exports.assert = exports.assertNever = exports.nonNull = exports.defined = exports.checkArray = exports.checkStringMap = exports.checkString = exports.isStringMap = void 0;\nconst js_base64_1 = require(\"js-base64\");\nconst pako = __importStar(require(\"pako\"));\nconst Messages_1 = require(\"../Messages\");\nconst YAML = __importStar(require(\"yaml\"));\nfunction isStringMap(x, checkValue) {\n    if (typeof x !== \"object\" || Array.isArray(x) || x === null) {\n        return false;\n    }\n    if (checkValue !== undefined) {\n        for (const k of Object.getOwnPropertyNames(x)) {\n            const v = x[k];\n            if (!checkValue(v)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexports.isStringMap = isStringMap;\nfunction checkString(x) {\n    return typeof x === \"string\";\n}\nexports.checkString = checkString;\nfunction checkStringMap(x, checkValue) {\n    if (isStringMap(x, checkValue))\n        return x;\n    return panic(`Value must be an object, but is ${x}`);\n}\nexports.checkStringMap = checkStringMap;\nfunction checkArray(x, checkItem) {\n    if (!Array.isArray(x)) {\n        return panic(`Value must be an array, but is ${x}`);\n    }\n    if (checkItem !== undefined) {\n        for (const v of x) {\n            if (!checkItem(v)) {\n                return panic(`Array item does not satisfy constraint: ${v}`);\n            }\n        }\n    }\n    return x;\n}\nexports.checkArray = checkArray;\nfunction defined(x) {\n    if (x !== undefined)\n        return x;\n    return panic(\"Defined value expected, but got undefined\");\n}\nexports.defined = defined;\nfunction nonNull(x) {\n    if (x !== null)\n        return x;\n    return panic(\"Non-null value expected, but got null\");\n}\nexports.nonNull = nonNull;\nfunction assertNever(x) {\n    return (0, Messages_1.messageError)(\"InternalError\", { message: `Unexpected object ${x}` });\n}\nexports.assertNever = assertNever;\nfunction assert(condition, message = \"Assertion failed\") {\n    if (!condition) {\n        return (0, Messages_1.messageError)(\"InternalError\", { message });\n    }\n}\nexports.assert = assert;\nfunction panic(message) {\n    return (0, Messages_1.messageError)(\"InternalError\", { message });\n}\nexports.panic = panic;\nfunction mustNotHappen() {\n    return panic(\"This must not happen\");\n}\nexports.mustNotHappen = mustNotHappen;\nfunction repeated(n, value) {\n    const arr = [];\n    for (let i = 0; i < n; i++) {\n        arr.push(value);\n    }\n    return arr;\n}\nexports.repeated = repeated;\nfunction repeatedCall(n, producer) {\n    const arr = [];\n    for (let i = 0; i < n; i++) {\n        arr.push(producer());\n    }\n    return arr;\n}\nexports.repeatedCall = repeatedCall;\nfunction errorMessage(e) {\n    if (e instanceof Error) {\n        return e.message;\n    }\n    return e.toString();\n}\nexports.errorMessage = errorMessage;\nfunction inflateBase64(encoded) {\n    const bytes = js_base64_1.Base64.atob(encoded);\n    return pako.inflate(bytes, { to: \"string\" });\n}\nexports.inflateBase64 = inflateBase64;\nfunction parseJSON(text, description, address = \"<unknown>\") {\n    try {\n        // https://gist.github.com/pbakondy/f5045eff725193dad9c7\n        if (text.charCodeAt(0) === 0xfeff) {\n            text = text.slice(1);\n        }\n        return YAML.parse(text);\n    }\n    catch (e) {\n        let message;\n        if (e instanceof SyntaxError) {\n            message = e.message;\n        }\n        else {\n            message = `Unknown exception ${e}`;\n        }\n        return (0, Messages_1.messageError)(\"MiscJSONParseError\", { description, address, message });\n    }\n}\nexports.parseJSON = parseJSON;\nfunction indentationString(level) {\n    return \"  \".repeat(level);\n}\nexports.indentationString = indentationString;\nfunction numberEnumValues(e) {\n    const result = [];\n    for (const k of Object.keys(e)) {\n        const v = e[k];\n        if (typeof v === \"number\") {\n            result.push(v);\n        }\n    }\n    return result;\n}\nexports.numberEnumValues = numberEnumValues;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.increaseTypeAttributesDistance = exports.makeTypeAttributesInferred = exports.combineTypeAttributes = exports.emptyTypeAttributes = exports.TypeAttributeKind = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Support_1 = require(\"../support/Support\");\nclass TypeAttributeKind {\n    constructor(name) {\n        this.name = name;\n    }\n    appliesToTypeKind(kind) {\n        return kind !== \"any\";\n    }\n    combine(_attrs) {\n        return (0, Support_1.panic)(`Cannot combine type attribute ${this.name}`);\n    }\n    intersect(attrs) {\n        return this.combine(attrs);\n    }\n    makeInferred(_) {\n        return (0, Support_1.panic)(`Cannot make type attribute ${this.name} inferred`);\n    }\n    increaseDistance(attrs) {\n        return attrs;\n    }\n    addToSchema(_schema, _t, _attrs) {\n        return;\n    }\n    children(_) {\n        return new Set();\n    }\n    stringify(_) {\n        return undefined;\n    }\n    get inIdentity() {\n        return false;\n    }\n    requiresUniqueIdentity(_) {\n        return false;\n    }\n    reconstitute(_builder, a) {\n        return a;\n    }\n    makeAttributes(value) {\n        const kvps = [[this, value]];\n        return new Map(kvps);\n    }\n    tryGetInAttributes(a) {\n        return a.get(this);\n    }\n    setInAttributes(a, value) {\n        // FIXME: This is potentially super slow\n        return new Map(a).set(this, value);\n    }\n    modifyInAttributes(a, modify) {\n        const modified = modify(this.tryGetInAttributes(a));\n        if (modified === undefined) {\n            // FIXME: This is potentially super slow\n            const result = new Map(a);\n            result.delete(this);\n            return result;\n        }\n        return this.setInAttributes(a, modified);\n    }\n    setDefaultInAttributes(a, makeDefault) {\n        if (this.tryGetInAttributes(a) !== undefined)\n            return a;\n        return this.modifyInAttributes(a, makeDefault);\n    }\n    removeInAttributes(a) {\n        return (0, collection_utils_1.mapFilter)(a, (_, k) => k !== this);\n    }\n    equals(other) {\n        if (!(other instanceof TypeAttributeKind)) {\n            return false;\n        }\n        return this.name === other.name;\n    }\n    hashCode() {\n        return (0, collection_utils_1.hashString)(this.name);\n    }\n}\nexports.TypeAttributeKind = TypeAttributeKind;\nexports.emptyTypeAttributes = new Map();\nfunction combineTypeAttributes(combinationKind, firstOrArray, second) {\n    const union = combinationKind === \"union\";\n    let attributeArray;\n    if (Array.isArray(firstOrArray)) {\n        attributeArray = firstOrArray;\n    }\n    else {\n        if (second === undefined) {\n            return (0, Support_1.panic)(\"Must have on array or two attributes\");\n        }\n        attributeArray = [firstOrArray, second];\n    }\n    const attributesByKind = (0, collection_utils_1.mapTranspose)(attributeArray);\n    function combine(attrs, kind) {\n        (0, Support_1.assert)(attrs.length > 0, \"Cannot combine zero type attributes\");\n        if (attrs.length === 1)\n            return attrs[0];\n        if (union) {\n            return kind.combine(attrs);\n        }\n        else {\n            return kind.intersect(attrs);\n        }\n    }\n    return (0, collection_utils_1.mapFilterMap)(attributesByKind, combine);\n}\nexports.combineTypeAttributes = combineTypeAttributes;\nfunction makeTypeAttributesInferred(attr) {\n    return (0, collection_utils_1.mapFilterMap)(attr, (value, kind) => kind.makeInferred(value));\n}\nexports.makeTypeAttributesInferred = makeTypeAttributesInferred;\nfunction increaseTypeAttributesDistance(attr) {\n    return (0, collection_utils_1.mapFilterMap)(attr, (value, kind) => kind.increaseDistance(value));\n}\nexports.increaseTypeAttributesDistance = increaseTypeAttributesDistance;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnumOption = exports.StringOption = exports.BooleanOption = exports.getOptionValues = exports.Option = void 0;\nconst Support_1 = require(\"./support/Support\");\nconst Messages_1 = require(\"./Messages\");\nconst collection_utils_1 = require(\"collection-utils\");\n/**\n * The superclass for target language options.  You probably want to use one of its\n * subclasses, `BooleanOption`, `EnumOption`, or `StringOption`.\n */\nclass Option {\n    constructor(definition) {\n        definition.renderer = true;\n        this.definition = definition;\n        (0, Support_1.assert)(definition.kind !== undefined, \"Renderer option kind must be defined\");\n    }\n    getValue(values) {\n        const value = values[this.definition.name];\n        if (value === undefined) {\n            return this.definition.defaultValue;\n        }\n        return value;\n    }\n    get cliDefinitions() {\n        return { actual: [this.definition], display: [this.definition] };\n    }\n}\nexports.Option = Option;\nfunction getOptionValues(options, untypedOptionValues) {\n    const optionValues = {};\n    for (const name of Object.getOwnPropertyNames(options)) {\n        optionValues[name] = options[name].getValue(untypedOptionValues);\n    }\n    return optionValues;\n}\nexports.getOptionValues = getOptionValues;\n/**\n * A target language option that allows setting a boolean flag.\n */\nclass BooleanOption extends Option {\n    /**\n     * @param name The shorthand name.\n     * @param description Short-ish description of the option.\n     * @param defaultValue The default value.\n     * @param kind Whether it's a primary or secondary option.\n     */\n    constructor(name, description, defaultValue, kind = \"primary\") {\n        super({\n            name,\n            kind,\n            type: Boolean,\n            description,\n            defaultValue\n        });\n    }\n    get cliDefinitions() {\n        const negated = Object.assign({}, this.definition, {\n            name: `no-${this.definition.name}`,\n            defaultValue: !this.definition.defaultValue\n        });\n        const display = Object.assign({}, this.definition, {\n            name: `[no-]${this.definition.name}`,\n            description: `${this.definition.description} (${this.definition.defaultValue ? \"on\" : \"off\"} by default)`\n        });\n        return {\n            display: [display],\n            actual: [this.definition, negated]\n        };\n    }\n    getValue(values) {\n        let value = values[this.definition.name];\n        if (value === undefined) {\n            value = this.definition.defaultValue;\n        }\n        let negated = values[`no-${this.definition.name}`];\n        if (negated === undefined) {\n            negated = !this.definition.defaultValue;\n        }\n        if (value === \"true\") {\n            value = true;\n        }\n        else if (value === \"false\") {\n            value = false;\n        }\n        if (this.definition.defaultValue) {\n            return value && !negated;\n        }\n        else {\n            return value || !negated;\n        }\n    }\n}\nexports.BooleanOption = BooleanOption;\nclass StringOption extends Option {\n    constructor(name, description, typeLabel, defaultValue, kind = \"primary\") {\n        const definition = {\n            name,\n            kind,\n            type: String,\n            description,\n            typeLabel,\n            defaultValue\n        };\n        super(definition);\n    }\n}\nexports.StringOption = StringOption;\nclass EnumOption extends Option {\n    constructor(name, description, values, defaultValue = undefined, kind = \"primary\") {\n        if (defaultValue === undefined) {\n            defaultValue = values[0][0];\n        }\n        const definition = {\n            name,\n            kind,\n            type: String,\n            description,\n            typeLabel: values.map(([n, _]) => n).join(\"|\"),\n            legalValues: values.map(([n, _]) => n),\n            defaultValue\n        };\n        super(definition);\n        this._values = {};\n        for (const [n, v] of values) {\n            this._values[n] = v;\n        }\n    }\n    getValue(values) {\n        let name = values[this.definition.name];\n        if (name === undefined) {\n            name = this.definition.defaultValue;\n        }\n        if (!(0, collection_utils_1.hasOwnProperty)(this._values, name)) {\n            return (0, Messages_1.messageError)(\"RendererUnknownOptionValue\", { value: name, name: this.definition.name });\n        }\n        return this._values[name];\n    }\n}\nexports.EnumOption = EnumOption;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.acronymStyle = exports.acronymOption = exports.AcronymStyleOptions = exports.acronyms = void 0;\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst Strings_1 = require(\"./Strings\");\nexports.acronyms = [\n    \"aaa\",\n    \"aabb\",\n    \"aac\",\n    \"aal\",\n    \"aalc\",\n    \"aarp\",\n    \"abac\",\n    \"abcl\",\n    \"abi\",\n    \"abm\",\n    \"abr\",\n    \"ac\",\n    \"acd\",\n    \"ack\",\n    \"acl\",\n    \"acm\",\n    \"acme\",\n    \"acp\",\n    \"acpi\",\n    \"acr\",\n    \"adb\",\n    \"adc\",\n    \"adccp\",\n    \"ado\",\n    \"adsl\",\n    \"adt\",\n    \"ae\",\n    \"aes\",\n    \"af\",\n    \"afp\",\n    \"agp\",\n    \"ai\",\n    \"aix\",\n    \"alac\",\n    \"algol\",\n    \"alsa\",\n    \"alu\",\n    \"amd\",\n    \"amoled\",\n    \"amqp\",\n    \"amr\",\n    \"ann\",\n    \"ansi\",\n    \"aop\",\n    \"apci\",\n    \"api\",\n    \"apic\",\n    \"apipa\",\n    \"apl\",\n    \"apr\",\n    \"arin\",\n    \"aros\",\n    \"arp\",\n    \"arpa\",\n    \"arpanet\",\n    \"ascii\",\n    \"aset\",\n    \"asg\",\n    \"asic\",\n    \"asimo\",\n    \"aslr\",\n    \"asm\",\n    \"asmp\",\n    \"asp\",\n    \"asr\",\n    \"assp\",\n    \"ast\",\n    \"ata\",\n    \"atag\",\n    \"atapi\",\n    \"atm\",\n    \"av\",\n    \"avc\",\n    \"avi\",\n    \"awfl\",\n    \"awk\",\n    \"awt\",\n    \"bal\",\n    \"bam\",\n    \"bbp\",\n    \"bbs\",\n    \"bcd\",\n    \"bcnf\",\n    \"beep\",\n    \"ber\",\n    \"bfd\",\n    \"bfs\",\n    \"bft\",\n    \"bgp\",\n    \"bi\",\n    \"binac\",\n    \"bios\",\n    \"bjt\",\n    \"bmp\",\n    \"bnc\",\n    \"boinc\",\n    \"bom\",\n    \"bootp\",\n    \"bpdu\",\n    \"bpel\",\n    \"bpl\",\n    \"bpm\",\n    \"brm\",\n    \"brms\",\n    \"brr\",\n    \"brs\",\n    \"bsa\",\n    \"bsb\",\n    \"bsd\",\n    \"bss\",\n    \"bt\",\n    \"bw\",\n    \"byod\",\n    \"ca\",\n    \"cad\",\n    \"cae\",\n    \"cai\",\n    \"caid\",\n    \"captcha\",\n    \"caq\",\n    \"cd\",\n    \"cde\",\n    \"cdfs\",\n    \"cdma\",\n    \"cdn\",\n    \"cdp\",\n    \"cdsa\",\n    \"cert\",\n    \"ces\",\n    \"cf\",\n    \"cfd\",\n    \"cfg\",\n    \"cg\",\n    \"cga\",\n    \"cgi\",\n    \"cgt\",\n    \"chs\",\n    \"cidr\",\n    \"cifs\",\n    \"cim\",\n    \"cio\",\n    \"cir\",\n    \"cisc\",\n    \"cjk\",\n    \"cjkv\",\n    \"cli\",\n    \"clr\",\n    \"cm\",\n    \"cmdb\",\n    \"cmmi\",\n    \"cmo\",\n    \"cmos\",\n    \"cms\",\n    \"cn\",\n    \"cnc\",\n    \"cng\",\n    \"cnr\",\n    \"cobol\",\n    \"com\",\n    \"corba\",\n    \"cots\",\n    \"cpa\",\n    \"cpan\",\n    \"cpri\",\n    \"cps\",\n    \"cpu\",\n    \"cr\",\n    \"cran\",\n    \"crc\",\n    \"crlf\",\n    \"crm\",\n    \"crs\",\n    \"crt\",\n    \"crud\",\n    \"cs\",\n    \"cse\",\n    \"csi\",\n    \"csm\",\n    \"csp\",\n    \"csrf\",\n    \"css\",\n    \"csv\",\n    \"ct\",\n    \"ctan\",\n    \"ctcp\",\n    \"ctfe\",\n    \"cti\",\n    \"ctl\",\n    \"ctm\",\n    \"cts\",\n    \"ctss\",\n    \"cua\",\n    \"cvs\",\n    \"dac\",\n    \"dal\",\n    \"dao\",\n    \"dap\",\n    \"darpa\",\n    \"dat\",\n    \"db\",\n    \"dba\",\n    \"dbcs\",\n    \"dbms\",\n    \"dcc\",\n    \"dcca\",\n    \"dccp\",\n    \"dcl\",\n    \"dcmi\",\n    \"dcom\",\n    \"dcs\",\n    \"dd\",\n    \"dde\",\n    \"ddi\",\n    \"ddl\",\n    \"ddr\",\n    \"dec\",\n    \"des\",\n    \"dfa\",\n    \"dfd\",\n    \"dfs\",\n    \"dgd\",\n    \"dhcp\",\n    \"dhtml\",\n    \"dif\",\n    \"dimm\",\n    \"din\",\n    \"dip\",\n    \"dism\",\n    \"divx\",\n    \"dkim\",\n    \"dl\",\n    \"dll\",\n    \"dlna\",\n    \"dlp\",\n    \"dma\",\n    \"dmca\",\n    \"dmi\",\n    \"dml\",\n    \"dmr\",\n    \"dmz\",\n    \"dn\",\n    \"dnd\",\n    \"dns\",\n    \"doa\",\n    \"docsis\",\n    \"dom\",\n    \"dos\",\n    \"dp\",\n    \"dpc\",\n    \"dpi\",\n    \"dpmi\",\n    \"dpms\",\n    \"dr\",\n    \"dram\",\n    \"dri\",\n    \"drm\",\n    \"dsa\",\n    \"dsdl\",\n    \"dsdm\",\n    \"dsl\",\n    \"dslam\",\n    \"dsn\",\n    \"dsp\",\n    \"dsssl\",\n    \"dtd\",\n    \"dte\",\n    \"dtp\",\n    \"dtr\",\n    \"dvd\",\n    \"dvi\",\n    \"dvr\",\n    \"dw\",\n    \"eai\",\n    \"eap\",\n    \"eas\",\n    \"ebcdic\",\n    \"ebml\",\n    \"ecc\",\n    \"ecma\",\n    \"ecn\",\n    \"ecos\",\n    \"ecrs\",\n    \"eda\",\n    \"edi\",\n    \"edo\",\n    \"edsac\",\n    \"edvac\",\n    \"eeprom\",\n    \"eff\",\n    \"efi\",\n    \"efm\",\n    \"efs\",\n    \"ega\",\n    \"egp\",\n    \"eide\",\n    \"eigrp\",\n    \"eisa\",\n    \"elf\",\n    \"emacs\",\n    \"ems\",\n    \"eniac\",\n    \"eod\",\n    \"eof\",\n    \"eol\",\n    \"eom\",\n    \"eos\",\n    \"eprom\",\n    \"erd\",\n    \"erm\",\n    \"erp\",\n    \"esb\",\n    \"escon\",\n    \"esd\",\n    \"esr\",\n    \"etl\",\n    \"etw\",\n    \"euc\",\n    \"eula\",\n    \"ewmh\",\n    \"ext\",\n    \"fap\",\n    \"faq\",\n    \"fasm\",\n    \"fbdimm\",\n    \"fcb\",\n    \"fcs\",\n    \"fdc\",\n    \"fdd\",\n    \"fddi\",\n    \"fdm\",\n    \"fdma\",\n    \"fds\",\n    \"fec\",\n    \"femb\",\n    \"fet\",\n    \"fhs\",\n    \"ficon\",\n    \"fifo\",\n    \"fips\",\n    \"fl\",\n    \"flac\",\n    \"flops\",\n    \"fmc\",\n    \"fmo\",\n    \"foldoc\",\n    \"fosdem\",\n    \"fosi\",\n    \"foss\",\n    \"fp\",\n    \"fpga\",\n    \"fps\",\n    \"fpu\",\n    \"fqdn\",\n    \"fru\",\n    \"fs\",\n    \"fsb\",\n    \"fsf\",\n    \"fsm\",\n    \"ftp\",\n    \"ftta\",\n    \"fttc\",\n    \"ftth\",\n    \"fttp\",\n    \"fud\",\n    \"fvek\",\n    \"fws\",\n    \"fxp\",\n    \"fyi\",\n    \"gb\",\n    \"gcc\",\n    \"gcj\",\n    \"gcr\",\n    \"gdb\",\n    \"gdi\",\n    \"geran\",\n    \"gfdl\",\n    \"gif\",\n    \"gigo\",\n    \"gimps\",\n    \"gis\",\n    \"gml\",\n    \"gnu\",\n    \"goms\",\n    \"gpasm\",\n    \"gpfs\",\n    \"gpg\",\n    \"gpgpu\",\n    \"gpib\",\n    \"gpl\",\n    \"gprs\",\n    \"gpt\",\n    \"gpu\",\n    \"gsm\",\n    \"gui\",\n    \"guid\",\n    \"gwt\",\n    \"gyr\",\n    \"hal\",\n    \"hasp\",\n    \"hba\",\n    \"hci\",\n    \"hcl\",\n    \"hd\",\n    \"hdd\",\n    \"hdl\",\n    \"hdmi\",\n    \"hf\",\n    \"hfs\",\n    \"hhd\",\n    \"hid\",\n    \"hig\",\n    \"hird\",\n    \"hlasm\",\n    \"hls\",\n    \"hma\",\n    \"hp\",\n    \"hpc\",\n    \"hpfs\",\n    \"hsdpa\",\n    \"hsm\",\n    \"ht\",\n    \"htc\",\n    \"htm\",\n    \"html\",\n    \"http\",\n    \"https\",\n    \"htx\",\n    \"hurd\",\n    \"hvd\",\n    \"iana\",\n    \"ibm\",\n    \"ic\",\n    \"icann\",\n    \"ich\",\n    \"icmp\",\n    \"icp\",\n    \"ics\",\n    \"ict\",\n    \"id\",\n    \"ide\",\n    \"idf\",\n    \"idl\",\n    \"ids\",\n    \"iec\",\n    \"ieee\",\n    \"ietf\",\n    \"ifl\",\n    \"igmp\",\n    \"igrp\",\n    \"ihv\",\n    \"iiop\",\n    \"iis\",\n    \"ike\",\n    \"il\",\n    \"im\",\n    \"imap\",\n    \"ime\",\n    \"infosec\",\n    \"ip\",\n    \"ipam\",\n    \"ipc\",\n    \"ipl\",\n    \"ipmi\",\n    \"ipo\",\n    \"ipp\",\n    \"ips\",\n    \"iptv\",\n    \"ipx\",\n    \"ir\",\n    \"irc\",\n    \"iri\",\n    \"irp\",\n    \"irq\",\n    \"isa\",\n    \"isam\",\n    \"isatap\",\n    \"isc\",\n    \"isdn\",\n    \"iso\",\n    \"isp\",\n    \"ispf\",\n    \"isr\",\n    \"isv\",\n    \"itil\",\n    \"itl\",\n    \"itu\",\n    \"ivcr\",\n    \"ivrs\",\n    \"jaxb\",\n    \"jaxp\",\n    \"jbod\",\n    \"jce\",\n    \"jcl\",\n    \"jcp\",\n    \"jdbc\",\n    \"jdk\",\n    \"jds\",\n    \"jee\",\n    \"jes\",\n    \"jfc\",\n    \"jfet\",\n    \"jfs\",\n    \"jini\",\n    \"jit\",\n    \"jme\",\n    \"jms\",\n    \"jmx\",\n    \"jndi\",\n    \"jni\",\n    \"jnz\",\n    \"jpeg\",\n    \"jre\",\n    \"js\",\n    \"jse\",\n    \"json\",\n    \"jsp\",\n    \"jtag\",\n    \"jvm\",\n    \"kb\",\n    \"kde\",\n    \"km\",\n    \"krl\",\n    \"kvm\",\n    \"lacp\",\n    \"lan\",\n    \"lb\",\n    \"lba\",\n    \"lcd\",\n    \"lcos\",\n    \"lcr\",\n    \"ldap\",\n    \"le\",\n    \"led\",\n    \"lf\",\n    \"lfs\",\n    \"lga\",\n    \"lgpl\",\n    \"lib\",\n    \"lif\",\n    \"lifo\",\n    \"lilo\",\n    \"lisp\",\n    \"lkml\",\n    \"lm\",\n    \"loc\",\n    \"lpc\",\n    \"lpi\",\n    \"lpt\",\n    \"lru\",\n    \"lsb\",\n    \"lsi\",\n    \"lte\",\n    \"ltl\",\n    \"ltr\",\n    \"lun\",\n    \"lv\",\n    \"lvd\",\n    \"lvm\",\n    \"lzw\",\n    \"mac\",\n    \"manet\",\n    \"mapi\",\n    \"mb\",\n    \"mbcs\",\n    \"mbd\",\n    \"mbr\",\n    \"mca\",\n    \"mcad\",\n    \"mcas\",\n    \"mcdba\",\n    \"mcdst\",\n    \"mcitp\",\n    \"mcm\",\n    \"mcp\",\n    \"mcpc\",\n    \"mcpd\",\n    \"mcsa\",\n    \"mcsd\",\n    \"mcse\",\n    \"mct\",\n    \"mcts\",\n    \"mda\",\n    \"mdf\",\n    \"mdi\",\n    \"mf\",\n    \"mfc\",\n    \"mfm\",\n    \"mgcp\",\n    \"mib\",\n    \"micr\",\n    \"midi\",\n    \"mimd\",\n    \"mime\",\n    \"mimo\",\n    \"minix\",\n    \"mips\",\n    \"mis\",\n    \"misd\",\n    \"mit\",\n    \"mmc\",\n    \"mmds\",\n    \"mmf\",\n    \"mmi\",\n    \"mmio\",\n    \"mmorpg\",\n    \"mmu\",\n    \"mmx\",\n    \"mng\",\n    \"mom\",\n    \"mos\",\n    \"mosfet\",\n    \"motd\",\n    \"mous\",\n    \"mov\",\n    \"mpaa\",\n    \"mpeg\",\n    \"mpl\",\n    \"mpls\",\n    \"mpu\",\n    \"ms\",\n    \"msa\",\n    \"msb\",\n    \"msdn\",\n    \"msi\",\n    \"msn\",\n    \"mt\",\n    \"mta\",\n    \"mtbf\",\n    \"mtu\",\n    \"mua\",\n    \"mvc\",\n    \"mvp\",\n    \"mvs\",\n    \"mwc\",\n    \"mx\",\n    \"mxf\",\n    \"nack\",\n    \"nak\",\n    \"nas\",\n    \"nasm\",\n    \"ncp\",\n    \"ncq\",\n    \"ncsa\",\n    \"ndis\",\n    \"ndps\",\n    \"nds\",\n    \"nep\",\n    \"nfa\",\n    \"nfc\",\n    \"nfs\",\n    \"ngl\",\n    \"ngscb\",\n    \"ni\",\n    \"nic\",\n    \"nim\",\n    \"nio\",\n    \"nist\",\n    \"nlp\",\n    \"nls\",\n    \"nmi\",\n    \"nntp\",\n    \"noc\",\n    \"nop\",\n    \"nos\",\n    \"np\",\n    \"npl\",\n    \"nptl\",\n    \"npu\",\n    \"ns\",\n    \"nsa\",\n    \"nsi\",\n    \"nspr\",\n    \"nss\",\n    \"nt\",\n    \"ntfs\",\n    \"ntlm\",\n    \"ntp\",\n    \"numa\",\n    \"nurbs\",\n    \"nvr\",\n    \"nvram\",\n    \"oat\",\n    \"obsai\",\n    \"odbc\",\n    \"oem\",\n    \"oes\",\n    \"ofdm\",\n    \"oftc\",\n    \"oid\",\n    \"olap\",\n    \"ole\",\n    \"oled\",\n    \"olpc\",\n    \"oltp\",\n    \"omf\",\n    \"omg\",\n    \"omr\",\n    \"oo\",\n    \"ooe\",\n    \"oom\",\n    \"oop\",\n    \"ootb\",\n    \"opml\",\n    \"orb\",\n    \"orm\",\n    \"os\",\n    \"oscon\",\n    \"osdn\",\n    \"osi\",\n    \"ospf\",\n    \"oss\",\n    \"ostg\",\n    \"oui\",\n    \"pap\",\n    \"parc\",\n    \"pata\",\n    \"pbs\",\n    \"pc\",\n    \"pcb\",\n    \"pci\",\n    \"pcl\",\n    \"pcm\",\n    \"pcmcia\",\n    \"pcre\",\n    \"pd\",\n    \"pda\",\n    \"pdf\",\n    \"pdh\",\n    \"pdp\",\n    \"pe\",\n    \"perl\",\n    \"pfa\",\n    \"pg\",\n    \"pga\",\n    \"pgo\",\n    \"pgp\",\n    \"php\",\n    \"pid\",\n    \"pim\",\n    \"pio\",\n    \"pkcs\",\n    \"pki\",\n    \"plc\",\n    \"pld\",\n    \"plt\",\n    \"pmm\",\n    \"png\",\n    \"pnrp\",\n    \"poid\",\n    \"pojo\",\n    \"posix\",\n    \"ppc\",\n    \"ppi\",\n    \"ppp\",\n    \"pptp\",\n    \"pr\",\n    \"ps\",\n    \"psa\",\n    \"psm\",\n    \"psu\",\n    \"psvi\",\n    \"pv\",\n    \"pvg\",\n    \"pvr\",\n    \"pxe\",\n    \"pxi\",\n    \"qa\",\n    \"qdr\",\n    \"qfp\",\n    \"qotd\",\n    \"qsop\",\n    \"qtam\",\n    \"racf\",\n    \"rad\",\n    \"raid\",\n    \"raii\",\n    \"rait\",\n    \"ram\",\n    \"rarp\",\n    \"ras\",\n    \"rc\",\n    \"rcs\",\n    \"rd\",\n    \"rdbms\",\n    \"rdc\",\n    \"rdf\",\n    \"rdm\",\n    \"rdos\",\n    \"rdp\",\n    \"rds\",\n    \"refal\",\n    \"rest\",\n    \"rf\",\n    \"rfc\",\n    \"rfi\",\n    \"rfid\",\n    \"rgb\",\n    \"rgba\",\n    \"rhel\",\n    \"rhl\",\n    \"ria\",\n    \"riaa\",\n    \"rip\",\n    \"rir\",\n    \"risc\",\n    \"rje\",\n    \"rle\",\n    \"rll\",\n    \"rmi\",\n    \"rms\",\n    \"rom\",\n    \"romb\",\n    \"rpc\",\n    \"rpg\",\n    \"rpm\",\n    \"rras\",\n    \"rsa\",\n    \"rsi\",\n    \"rss\",\n    \"rtai\",\n    \"rtc\",\n    \"rte\",\n    \"rtems\",\n    \"rtl\",\n    \"rtos\",\n    \"rtp\",\n    \"rts\",\n    \"rtsp\",\n    \"rtti\",\n    \"rwd\",\n    \"san\",\n    \"sas\",\n    \"sata\",\n    \"sax\",\n    \"sbod\",\n    \"sbu\",\n    \"scada\",\n    \"scid\",\n    \"scm\",\n    \"scp\",\n    \"scpc\",\n    \"scpi\",\n    \"scsa\",\n    \"scsi\",\n    \"sctp\",\n    \"sd\",\n    \"sddl\",\n    \"sdh\",\n    \"sdi\",\n    \"sdio\",\n    \"sdk\",\n    \"sdl\",\n    \"sdn\",\n    \"sdp\",\n    \"sdr\",\n    \"sdram\",\n    \"sdsl\",\n    \"se\",\n    \"sec\",\n    \"sei\",\n    \"seo\",\n    \"sftp\",\n    \"sgi\",\n    \"sgml\",\n    \"sgr\",\n    \"sha\",\n    \"shdsl\",\n    \"sigcat\",\n    \"siggraph\",\n    \"simd\",\n    \"simm\",\n    \"sip\",\n    \"sisd\",\n    \"siso\",\n    \"sles\",\n    \"sli\",\n    \"slm\",\n    \"sloc\",\n    \"sma\",\n    \"smb\",\n    \"smbios\",\n    \"sme\",\n    \"smf\",\n    \"smil\",\n    \"smp\",\n    \"smps\",\n    \"sms\",\n    \"smt\",\n    \"smtp\",\n    \"sna\",\n    \"snmp\",\n    \"sntp\",\n    \"soa\",\n    \"soe\",\n    \"soho\",\n    \"soi\",\n    \"sopa\",\n    \"sp\",\n    \"spa\",\n    \"sparc\",\n    \"spf\",\n    \"spi\",\n    \"spm\",\n    \"spmd\",\n    \"sql\",\n    \"sram\",\n    \"ssa\",\n    \"ssd\",\n    \"ssdp\",\n    \"sse\",\n    \"ssh\",\n    \"ssi\",\n    \"ssid\",\n    \"ssl\",\n    \"ssp\",\n    \"ssse\",\n    \"sssp\",\n    \"sstp\",\n    \"sus\",\n    \"suse\",\n    \"svc\",\n    \"svd\",\n    \"svg\",\n    \"svga\",\n    \"swf\",\n    \"swt\",\n    \"tao\",\n    \"tapi\",\n    \"tasm\",\n    \"tb\",\n    \"tcp\",\n    \"tcu\",\n    \"tdma\",\n    \"tft\",\n    \"tftp\",\n    \"ti\",\n    \"tla\",\n    \"tld\",\n    \"tls\",\n    \"tlv\",\n    \"tnc\",\n    \"tpf\",\n    \"tpm\",\n    \"troff\",\n    \"tron\",\n    \"trsdos\",\n    \"tso\",\n    \"tsp\",\n    \"tsr\",\n    \"tta\",\n    \"ttf\",\n    \"ttl\",\n    \"tts\",\n    \"tty\",\n    \"tucows\",\n    \"twain\",\n    \"uaag\",\n    \"uac\",\n    \"uart\",\n    \"uat\",\n    \"ucs\",\n    \"uddi\",\n    \"udma\",\n    \"udp\",\n    \"uefi\",\n    \"uhf\",\n    \"ui\",\n    \"ul\",\n    \"ula\",\n    \"uma\",\n    \"umb\",\n    \"uml\",\n    \"umpc\",\n    \"umts\",\n    \"unc\",\n    \"univac\",\n    \"ups\",\n    \"uri\",\n    \"url\",\n    \"usb\",\n    \"usr\",\n    \"utc\",\n    \"utf\",\n    \"utp\",\n    \"utran\",\n    \"uucp\",\n    \"uuid\",\n    \"uun\",\n    \"uvc\",\n    \"uwp\",\n    \"ux\",\n    \"vax\",\n    \"vb\",\n    \"vba\",\n    \"vbs\",\n    \"vcpi\",\n    \"vdm\",\n    \"vdsl\",\n    \"vesa\",\n    \"vfat\",\n    \"vfs\",\n    \"vg\",\n    \"vga\",\n    \"vhf\",\n    \"vlan\",\n    \"vlb\",\n    \"vlf\",\n    \"vliw\",\n    \"vlsi\",\n    \"vlsm\",\n    \"vm\",\n    \"vmm\",\n    \"vnc\",\n    \"vod\",\n    \"vpn\",\n    \"vpu\",\n    \"vr\",\n    \"vram\",\n    \"vrml\",\n    \"vsam\",\n    \"vsat\",\n    \"vt\",\n    \"vtam\",\n    \"vtl\",\n    \"wafs\",\n    \"wai\",\n    \"wais\",\n    \"wan\",\n    \"wap\",\n    \"wasm\",\n    \"wbem\",\n    \"wcag\",\n    \"wcf\",\n    \"wdm\",\n    \"wep\",\n    \"wfi\",\n    \"wins\",\n    \"wlan\",\n    \"wma\",\n    \"wmi\",\n    \"wmv\",\n    \"wns\",\n    \"wol\",\n    \"wor\",\n    \"wora\",\n    \"wpa\",\n    \"wpad\",\n    \"wpan\",\n    \"wpf\",\n    \"wsdl\",\n    \"wsfl\",\n    \"wusb\",\n    \"wwan\",\n    \"wwdc\",\n    \"wwid\",\n    \"wwn\",\n    \"www\",\n    \"wysiwyg\",\n    \"wzc\",\n    \"xag\",\n    \"xaml\",\n    \"xcbl\",\n    \"xdm\",\n    \"xdmcp\",\n    \"xhtml\",\n    \"xilp\",\n    \"xml\",\n    \"xmms\",\n    \"xmpp\",\n    \"xms\",\n    \"xns\",\n    \"xp\",\n    \"xpcom\",\n    \"xpi\",\n    \"xpidl\",\n    \"xps\",\n    \"xsd\",\n    \"xsl\",\n    \"xslt\",\n    \"xss\",\n    \"xtf\",\n    \"xul\",\n    \"xvga\",\n    \"yaaf\",\n    \"yacc\",\n    \"yaml\",\n    \"zcav\",\n    \"zcs\",\n    \"zif\",\n    \"zifs\",\n    \"zisc\",\n    \"zma\",\n    \"zoi\",\n    \"zope\",\n    \"zpl\"\n];\nvar AcronymStyleOptions;\n(function (AcronymStyleOptions) {\n    AcronymStyleOptions[\"Pascal\"] = \"pascal\";\n    AcronymStyleOptions[\"Camel\"] = \"camel\";\n    AcronymStyleOptions[\"Original\"] = \"original\";\n    AcronymStyleOptions[\"Lower\"] = \"lowerCase\";\n})(AcronymStyleOptions = exports.AcronymStyleOptions || (exports.AcronymStyleOptions = {}));\nconst acronymOption = function (defaultOption) {\n    return new RendererOptions_1.EnumOption(\"acronym-style\", \"Acronym naming style\", [\n        [AcronymStyleOptions.Original, AcronymStyleOptions.Original],\n        [AcronymStyleOptions.Pascal, AcronymStyleOptions.Pascal],\n        [AcronymStyleOptions.Camel, AcronymStyleOptions.Camel],\n        [AcronymStyleOptions.Lower, AcronymStyleOptions.Lower]\n    ], defaultOption, \"secondary\");\n};\nexports.acronymOption = acronymOption;\nfunction acronymStyle(style) {\n    const options = {\n        [AcronymStyleOptions.Pascal]: Strings_1.allUpperWordStyle,\n        [AcronymStyleOptions.Camel]: Strings_1.firstUpperWordStyle,\n        [AcronymStyleOptions.Original]: Strings_1.originalWord,\n        [AcronymStyleOptions.Lower]: Strings_1.allLowerWordStyle\n    };\n    return options[style];\n}\nexports.acronymStyle = acronymStyle;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeNameStyle = exports.addPrefixIfNecessary = exports.combineWords = exports.allLowerWordStyle = exports.originalWord = exports.allUpperWordStyle = exports.firstUpperWordStyle = exports.splitIntoWords = exports.fastIsUpperCase = exports.startWithLetter = exports.snakeCase = exports.camelCase = exports.pascalCase = exports.decapitalize = exports.capitalize = exports.trimEnd = exports.isWordCharacter = exports.isLetterOrUnderscoreOrDigit = exports.isLetterOrUnderscore = exports.isLetterOrDigit = exports.isNumeric = exports.isDigit = exports.isLetter = exports.isAscii = exports.isPrintable = exports.stringEscape = exports.utf16StringEscape = exports.escapeNonPrintableMapper = exports.standardUnicodeHexEscape = exports.intToHex = exports.repeatString = exports.legalizeCharacters = exports.utf16LegalizeCharacters = exports.utf32ConcatMap = exports.utf16ConcatMap = void 0;\nconst Support_1 = require(\"./Support\");\nconst Acronyms_1 = require(\"./Acronyms\");\nconst Messages_1 = require(\"../Messages\");\nconst unicode_properties_1 = __importDefault(require(\"unicode-properties\"));\nfunction computeAsciiMap(mapper) {\n    const charStringMap = [];\n    const charNoEscapeMap = [];\n    for (let i = 0; i < 128; i++) {\n        let noEscape = 0;\n        const result = mapper(i);\n        if (result === String.fromCharCode(i)) {\n            noEscape = 1;\n        }\n        charStringMap.push(result);\n        charNoEscapeMap.push(noEscape);\n    }\n    return { charStringMap, charNoEscapeMap };\n}\nfunction precomputedCodePointPredicate(p) {\n    const asciiResults = [];\n    for (let cp = 0; cp < 128; cp++) {\n        asciiResults.push(p(cp));\n    }\n    return function (cp) {\n        return cp < 128 ? asciiResults[cp] : p(cp);\n    };\n}\n// FIXME: This is a copy of code in src/Data/String/Util.js\nfunction utf16ConcatMap(mapper) {\n    const { charStringMap, charNoEscapeMap } = computeAsciiMap(mapper);\n    return function stringConcatMap_inner(s) {\n        let cs = null;\n        let start = 0;\n        let i = 0;\n        while (i < s.length) {\n            const cc = s.charCodeAt(i);\n            if (charNoEscapeMap[cc] !== 1) {\n                if (cs === null)\n                    cs = [];\n                cs.push(s.substring(start, i));\n                const str = charStringMap[cc];\n                if (str === undefined) {\n                    cs.push(mapper(s.charCodeAt(i)));\n                }\n                else {\n                    cs.push(str);\n                }\n                start = i + 1;\n            }\n            i++;\n        }\n        if (cs === null)\n            return s;\n        cs.push(s.substring(start, i));\n        return cs.join(\"\");\n    };\n}\nexports.utf16ConcatMap = utf16ConcatMap;\nfunction isHighSurrogate(cc) {\n    return cc >= 0xd800 && cc <= 0xdbff;\n}\nfunction isLowSurrogate(cc) {\n    return cc >= 0xdc00 && cc <= 0xdfff;\n}\nfunction utf32ConcatMap(mapper) {\n    const { charStringMap, charNoEscapeMap } = computeAsciiMap(mapper);\n    return function stringConcatMap_inner(s) {\n        let cs = null;\n        let start = 0;\n        let i = 0;\n        while (i < s.length) {\n            let cc = s.charCodeAt(i);\n            if (charNoEscapeMap[cc] !== 1) {\n                if (cs === null)\n                    cs = [];\n                cs.push(s.substring(start, i));\n                if (isHighSurrogate(cc)) {\n                    const highSurrogate = cc;\n                    i++;\n                    const lowSurrogate = s.charCodeAt(i);\n                    (0, Messages_1.messageAssert)(isLowSurrogate(lowSurrogate), \"MiscUnicodeHighSurrogateWithoutLowSurrogate\", {});\n                    const highBits = highSurrogate - 0xd800;\n                    const lowBits = lowSurrogate - 0xdc00;\n                    cc = 0x10000 + lowBits + (highBits << 10);\n                }\n                const str = charStringMap[cc];\n                if (str === undefined) {\n                    cs.push(mapper(cc));\n                }\n                else {\n                    cs.push(str);\n                }\n                start = i + 1;\n            }\n            i++;\n        }\n        if (cs === null)\n            return s;\n        cs.push(s.substring(start, i));\n        return cs.join(\"\");\n    };\n}\nexports.utf32ConcatMap = utf32ConcatMap;\nfunction utf16LegalizeCharacters(isLegal) {\n    return utf16ConcatMap(u => (isLegal(u) ? String.fromCharCode(u) : \"\"));\n}\nexports.utf16LegalizeCharacters = utf16LegalizeCharacters;\nfunction legalizeCharacters(isLegal) {\n    return utf32ConcatMap(u => (u <= 0xffff && isLegal(u) ? String.fromCharCode(u) : \"\"));\n}\nexports.legalizeCharacters = legalizeCharacters;\nfunction repeatString(s, n) {\n    (0, Support_1.assert)(n >= 0, \"Cannot repeat a string a negative number of times\");\n    if (n === 0)\n        return \"\";\n    // From https://github.com/lodash/lodash\n    // Leverage the exponentiation by squaring algorithm for a faster repeat.\n    // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n    let result = \"\";\n    do {\n        if (n % 2 !== 0) {\n            result += s;\n        }\n        n = Math.floor(n / 2);\n        if (n > 0) {\n            s += s;\n        }\n    } while (n > 0);\n    return result;\n}\nexports.repeatString = repeatString;\nfunction intToHex(i, width) {\n    let str = i.toString(16);\n    if (str.length >= width)\n        return str;\n    return repeatString(\"0\", width - str.length) + str;\n}\nexports.intToHex = intToHex;\nfunction standardUnicodeHexEscape(codePoint) {\n    if (codePoint <= 0xffff) {\n        return \"\\\\u\" + intToHex(codePoint, 4);\n    }\n    else {\n        return \"\\\\U\" + intToHex(codePoint, 8);\n    }\n}\nexports.standardUnicodeHexEscape = standardUnicodeHexEscape;\nfunction escapeNonPrintableMapper(printablePredicate, escaper) {\n    function mapper(u) {\n        switch (u) {\n            case 0x5c:\n                return \"\\\\\\\\\";\n            case 0x22:\n                return '\\\\\"';\n            case 0x0a:\n                return \"\\\\n\";\n            case 0x09:\n                return \"\\\\t\";\n            default:\n                if (printablePredicate(u)) {\n                    return String.fromCharCode(u);\n                }\n                return escaper(u);\n        }\n    }\n    return mapper;\n}\nexports.escapeNonPrintableMapper = escapeNonPrintableMapper;\nexports.utf16StringEscape = utf16ConcatMap(escapeNonPrintableMapper(isPrintable, standardUnicodeHexEscape));\nexports.stringEscape = utf32ConcatMap(escapeNonPrintableMapper(isPrintable, standardUnicodeHexEscape));\nfunction isPrintable(codePoint) {\n    if (codePoint > 0xffff)\n        return false;\n    const category = unicode_properties_1.default.getCategory(codePoint);\n    return ([\n        \"Mc\",\n        \"No\",\n        \"Sk\",\n        \"Me\",\n        \"Nd\",\n        \"Po\",\n        \"Lt\",\n        \"Pc\",\n        \"Sm\",\n        \"Zs\",\n        \"Lu\",\n        \"Pd\",\n        \"So\",\n        \"Pe\",\n        \"Pf\",\n        \"Ps\",\n        \"Sc\",\n        \"Ll\",\n        \"Lm\",\n        \"Pi\",\n        \"Nl\",\n        \"Mn\",\n        \"Lo\"\n    ].indexOf(category) >= 0);\n}\nexports.isPrintable = isPrintable;\nfunction isAscii(codePoint) {\n    return codePoint < 128;\n}\nexports.isAscii = isAscii;\nfunction isLetter(codePoint) {\n    const category = unicode_properties_1.default.getCategory(codePoint);\n    // FIXME: Include Letter, modifier (Lm)?\n    return [\"Lu\", \"Ll\", \"Lt\", \"Lo\"].indexOf(category) >= 0;\n}\nexports.isLetter = isLetter;\nfunction isDigit(codePoint) {\n    const category = unicode_properties_1.default.getCategory(codePoint);\n    return [\"Nd\"].indexOf(category) >= 0;\n}\nexports.isDigit = isDigit;\nfunction isNumeric(codePoint) {\n    const category = unicode_properties_1.default.getCategory(codePoint);\n    return [\"No\", \"Nd\", \"Nl\"].indexOf(category) >= 0;\n}\nexports.isNumeric = isNumeric;\nfunction isLetterOrDigit(codePoint) {\n    return isLetter(codePoint) || isDigit(codePoint);\n}\nexports.isLetterOrDigit = isLetterOrDigit;\nfunction isLetterOrUnderscore(codePoint) {\n    return isLetter(codePoint) || codePoint === 0x5f;\n}\nexports.isLetterOrUnderscore = isLetterOrUnderscore;\nfunction isLetterOrUnderscoreOrDigit(codePoint) {\n    return isLetterOrUnderscore(codePoint) || isDigit(codePoint);\n}\nexports.isLetterOrUnderscoreOrDigit = isLetterOrUnderscoreOrDigit;\nfunction isWordCharacter(codePoint) {\n    return isLetter(codePoint) || isDigit(codePoint);\n}\nexports.isWordCharacter = isWordCharacter;\nfunction trimEnd(str) {\n    const l = str.length;\n    let firstWS = l;\n    for (let i = l - 1; i >= 0; i--) {\n        if (!unicode_properties_1.default.isWhiteSpace(str.charCodeAt(i)))\n            break;\n        firstWS = i;\n    }\n    if (firstWS === l)\n        return str;\n    return str.slice(0, firstWS);\n}\nexports.trimEnd = trimEnd;\nfunction modifyFirstChar(f, s) {\n    if (s === \"\")\n        return s;\n    return f(s[0]) + s.slice(1);\n}\nfunction capitalize(str) {\n    return modifyFirstChar(c => c.toUpperCase(), str);\n}\nexports.capitalize = capitalize;\nfunction decapitalize(str) {\n    return modifyFirstChar(c => c.toLowerCase(), str);\n}\nexports.decapitalize = decapitalize;\nconst wordSeparatorRegex = /[-_. ]+/;\nfunction pascalCase(str) {\n    const words = str.split(wordSeparatorRegex).map(capitalize);\n    return words.join(\"\");\n}\nexports.pascalCase = pascalCase;\nfunction camelCase(str) {\n    return decapitalize(pascalCase(str));\n}\nexports.camelCase = camelCase;\nfunction snakeCase(str) {\n    const words = splitIntoWords(str).map(({ word }) => word.toLowerCase());\n    return words.join(\"_\");\n}\nexports.snakeCase = snakeCase;\nfunction startWithLetter(isAllowedStart, // FIXME: technically, this operates on UTF16 units\nupper, str) {\n    const modify = upper ? capitalize : decapitalize;\n    if (str === \"\")\n        return modify(\"empty\");\n    if (isAllowedStart(str.charCodeAt(0)))\n        return modify(str);\n    return modify(\"the\" + str);\n}\nexports.startWithLetter = startWithLetter;\nconst knownAcronyms = new Set(Acronyms_1.acronyms);\nconst fastIsWordCharacter = precomputedCodePointPredicate(isWordCharacter);\nconst fastIsNonWordCharacter = precomputedCodePointPredicate(cp => !isWordCharacter(cp));\nconst fastIsLowerCase = precomputedCodePointPredicate(cp => unicode_properties_1.default.isLowerCase(cp));\nexports.fastIsUpperCase = precomputedCodePointPredicate(cp => unicode_properties_1.default.isUpperCase(cp));\nconst fastNonLetter = precomputedCodePointPredicate(cp => !unicode_properties_1.default.isLowerCase(cp) && !unicode_properties_1.default.isUpperCase(cp));\nconst fastIsDigit = precomputedCodePointPredicate(isDigit);\nfunction splitIntoWords(s) {\n    // [start, end, allUpper]\n    const intervals = [];\n    let intervalStart = undefined;\n    const len = s.length;\n    let i = 0;\n    let lastLowerCaseIndex = undefined;\n    function atEnd() {\n        return i >= len;\n    }\n    function currentCodePoint() {\n        return (0, Support_1.defined)(s.codePointAt(i));\n    }\n    function skipWhile(p) {\n        while (!atEnd()) {\n            const cp = currentCodePoint();\n            if (!p(cp))\n                break;\n            if (fastIsLowerCase(cp))\n                lastLowerCaseIndex = i;\n            i++;\n        }\n    }\n    function skipNonWord() {\n        skipWhile(fastIsNonWordCharacter);\n    }\n    function skipLowerCase() {\n        skipWhile(fastIsLowerCase);\n    }\n    function skipUpperCase() {\n        skipWhile(exports.fastIsUpperCase);\n    }\n    function skipNonLetter() {\n        skipWhile(fastNonLetter);\n    }\n    function skipDigits() {\n        skipWhile(fastIsDigit);\n    }\n    function startInterval() {\n        (0, Support_1.assert)(intervalStart === undefined, \"Interval started before last one was committed\");\n        intervalStart = i;\n    }\n    function commitInterval() {\n        if (intervalStart === undefined) {\n            return (0, Support_1.panic)(\"Tried to commit interval without starting one\");\n        }\n        (0, Support_1.assert)(i > intervalStart, \"Interval must be non-empty\");\n        // FIXME: This is a hack to avoid splitting up surrogates.  We shouldn't\n        // look at surrogates individually in the first place.  When we\n        // encounter a high surrogate we have to combine it with the low\n        // surrogate and then do the logic on the code point.  Right now we're\n        // only operating on UTF16 char codes, which is wrong.\n        if (!atEnd() && isLowSurrogate(currentCodePoint())) {\n            i += 1;\n        }\n        const allUpper = lastLowerCaseIndex === undefined || lastLowerCaseIndex < intervalStart;\n        intervals.push([intervalStart, i, allUpper]);\n        intervalStart = undefined;\n    }\n    function intervalLength() {\n        if (intervalStart === undefined) {\n            return (0, Support_1.panic)(\"Tried to get interval length without starting one\");\n        }\n        return i - intervalStart;\n    }\n    for (;;) {\n        skipNonWord();\n        if (atEnd())\n            break;\n        startInterval();\n        if (fastIsLowerCase(currentCodePoint())) {\n            skipLowerCase();\n            skipDigits();\n            commitInterval();\n        }\n        else if ((0, exports.fastIsUpperCase)(currentCodePoint())) {\n            skipUpperCase();\n            if (atEnd()) {\n                commitInterval();\n            }\n            else if (intervalLength() === 1) {\n                skipLowerCase();\n                skipDigits();\n                commitInterval();\n            }\n            else if (isDigit(currentCodePoint())) {\n                skipDigits();\n                commitInterval();\n            }\n            else {\n                if (fastIsWordCharacter(currentCodePoint())) {\n                    i -= 1;\n                }\n                commitInterval();\n            }\n        }\n        else {\n            skipNonLetter();\n            commitInterval();\n        }\n    }\n    const words = [];\n    for (const [start, end, allUpper] of intervals) {\n        const word = s.slice(start, end);\n        const isAcronym = (lastLowerCaseIndex !== undefined && allUpper) || knownAcronyms.has(word.toLowerCase());\n        words.push({ word, isAcronym });\n    }\n    return words;\n}\nexports.splitIntoWords = splitIntoWords;\nfunction firstUpperWordStyle(s) {\n    (0, Support_1.assert)(s.length > 0, \"Cannot style an empty string\");\n    return s[0].toUpperCase() + s.slice(1).toLowerCase();\n}\nexports.firstUpperWordStyle = firstUpperWordStyle;\nfunction allUpperWordStyle(s) {\n    return s.toUpperCase();\n}\nexports.allUpperWordStyle = allUpperWordStyle;\nfunction originalWord(s) {\n    return s;\n}\nexports.originalWord = originalWord;\nfunction allLowerWordStyle(s) {\n    return s.toLowerCase();\n}\nexports.allLowerWordStyle = allLowerWordStyle;\nfunction styleWord(style, word) {\n    (0, Support_1.assert)(word.length > 0, \"Tried to style an empty word\");\n    const result = style(word);\n    (0, Support_1.assert)(result.length > 0, \"Word style must not make word empty\");\n    return result;\n}\nfunction combineWords(words, removeInvalidCharacters, firstWordStyle, restWordStyle, firstWordAcronymStyle, restAcronymStyle, separator, isStartCharacter) {\n    const legalizedWords = [];\n    for (const w of words) {\n        const word = removeInvalidCharacters(w.word);\n        if (word.length === 0)\n            continue;\n        legalizedWords.push({ word, isAcronym: w.isAcronym });\n    }\n    if (legalizedWords.length === 0) {\n        const validEmpty = removeInvalidCharacters(\"empty\");\n        (0, Support_1.assert)(validEmpty.length > 0, 'Word \"empty\" is invalid in target language');\n        legalizedWords.push({ word: validEmpty, isAcronym: false });\n    }\n    const styledWords = [];\n    const first = legalizedWords[0];\n    const firstStyle = first.isAcronym ? firstWordAcronymStyle : firstWordStyle;\n    const styledFirstWord = styleWord(firstStyle, first.word);\n    let restWords;\n    if (!isStartCharacter((0, Support_1.defined)(styledFirstWord.codePointAt(0)))) {\n        const validThe = removeInvalidCharacters(\"the\");\n        (0, Support_1.assert)(validThe.length > 0, 'Word \"the\" is invalid in the target language');\n        const styledThe = styleWord(firstWordStyle, validThe);\n        (0, Support_1.assert)(isStartCharacter((0, Support_1.defined)(styledThe.codePointAt(0))), 'The first character of styling \"the\" is not a start character');\n        styledWords.push(styledThe);\n        restWords = legalizedWords;\n    }\n    else {\n        styledWords.push(styledFirstWord);\n        restWords = legalizedWords.slice(1);\n    }\n    for (const w of restWords) {\n        const style = w.isAcronym ? restAcronymStyle : restWordStyle;\n        styledWords.push(styleWord(style, w.word));\n    }\n    return styledWords.join(separator);\n}\nexports.combineWords = combineWords;\nfunction addPrefixIfNecessary(prefix, name) {\n    // Take care not to doubly-prefix type names\n    return name.startsWith(prefix) ? name : prefix + name;\n}\nexports.addPrefixIfNecessary = addPrefixIfNecessary;\nfunction makeNameStyle(namingStyle, legalizeName, prefix) {\n    let separator;\n    let firstWordStyle;\n    let restWordStyle;\n    let firstWordAcronymStyle;\n    let restAcronymStyle;\n    if (namingStyle === \"pascal\" ||\n        namingStyle === \"camel\" ||\n        namingStyle === \"pascal-upper-acronyms\" ||\n        namingStyle === \"camel-upper-acronyms\") {\n        separator = \"\";\n        if (namingStyle === \"pascal-upper-acronyms\" || namingStyle === \"camel-upper-acronyms\") {\n            restWordStyle = firstUpperWordStyle;\n            restAcronymStyle = allUpperWordStyle;\n        }\n        else {\n            restWordStyle = restAcronymStyle = firstUpperWordStyle;\n        }\n    }\n    else {\n        separator = \"_\";\n    }\n    switch (namingStyle) {\n        case \"pascal\":\n        case \"pascal-upper-acronyms\":\n            firstWordStyle = firstWordAcronymStyle = firstUpperWordStyle;\n            break;\n        case \"camel\":\n        case \"camel-upper-acronyms\":\n            firstWordStyle = firstWordAcronymStyle = allLowerWordStyle;\n            break;\n        case \"underscore\":\n            firstWordStyle = restWordStyle = firstWordAcronymStyle = restAcronymStyle = allLowerWordStyle;\n            break;\n        case \"upper-underscore\":\n            firstWordStyle = restWordStyle = firstWordAcronymStyle = restAcronymStyle = allUpperWordStyle;\n            break;\n        default:\n            return (0, Support_1.assertNever)(namingStyle);\n    }\n    return (original) => {\n        const words = splitIntoWords(original);\n        const styledName = combineWords(words, legalizeName, firstWordStyle, restWordStyle, firstWordAcronymStyle, restAcronymStyle, separator, isLetterOrUnderscore);\n        if (prefix !== undefined) {\n            return addPrefixIfNecessary(prefix, styledName);\n        }\n        else {\n            return styledName;\n        }\n    };\n}\nexports.makeNameStyle = makeNameStyle;\n","\"use strict\";\n// Mersenne Twister from https://gist.github.com/banksean/300494\n/*\nA C-program for MT19937, with initialization improved 2002/1/26.\nCoded by Takuji Nishimura and Makoto Matsumoto.\nBefore using, initialize the state by using init_genrand(seed)\nor init_by_array(init_key, key_length).\nCopyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n3. The names of its contributors may not be used to endorse or promote\nproducts derived from this software without specific prior written\npermission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nAny feedback is very welcome.\nhttp://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\nemail: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Chance = void 0;\nclass MersenneTwister {\n    constructor(seed) {\n        if (seed === undefined) {\n            // kept random number same size as time used previously to ensure no unexpected results downstream\n            seed = Math.floor(Math.random() * Math.pow(10, 13));\n        }\n        /* Period parameters */\n        this.N = 624;\n        this.M = 397;\n        this.MATRIX_A = 0x9908b0df; /* constant vector a */\n        this.UPPER_MASK = 0x80000000; /* most significant w-r bits */\n        this.LOWER_MASK = 0x7fffffff; /* least significant r bits */\n        this.mt = new Array(this.N); /* the array for the state vector */\n        this.mti = this.N + 1; /* mti==N + 1 means mt[N] is not initialized */\n        this.init_genrand(seed);\n    }\n    /* initializes mt[N] with a seed */\n    init_genrand(s) {\n        this.mt[0] = s >>> 0;\n        for (this.mti = 1; this.mti < this.N; this.mti++) {\n            s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);\n            this.mt[this.mti] =\n                ((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253 + this.mti;\n            /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n            /* In the previous versions, MSBs of the seed affect   */\n            /* only MSBs of the array mt[].                        */\n            /* 2002/01/09 modified by Makoto Matsumoto             */\n            this.mt[this.mti] >>>= 0;\n            /* for >32 bit machines */\n        }\n    }\n    /* generates a random number on [0,0xffffffff]-interval */\n    genrand_int32() {\n        let y;\n        let mag01 = new Array(0x0, this.MATRIX_A);\n        /* mag01[x] = x * MATRIX_A  for x=0,1 */\n        if (this.mti >= this.N) {\n            /* generate N words at one time */\n            let kk;\n            if (this.mti === this.N + 1) {\n                /* if init_genrand() has not been called, */\n                this.init_genrand(5489); /* a default initial seed is used */\n            }\n            for (kk = 0; kk < this.N - this.M; kk++) {\n                y = (this.mt[kk] & this.UPPER_MASK) | (this.mt[kk + 1] & this.LOWER_MASK);\n                this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\n            }\n            for (; kk < this.N - 1; kk++) {\n                y = (this.mt[kk] & this.UPPER_MASK) | (this.mt[kk + 1] & this.LOWER_MASK);\n                this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n            }\n            y = (this.mt[this.N - 1] & this.UPPER_MASK) | (this.mt[0] & this.LOWER_MASK);\n            this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];\n            this.mti = 0;\n        }\n        y = this.mt[this.mti++];\n        /* Tempering */\n        y ^= y >>> 11;\n        y ^= (y << 7) & 0x9d2c5680;\n        y ^= (y << 15) & 0xefc60000;\n        y ^= y >>> 18;\n        return y >>> 0;\n    }\n    /* generates a random number on [0,1)-real-interval */\n    random() {\n        return this.genrand_int32() * (1.0 / 4294967296.0);\n        /* divided by 2^32 */\n    }\n}\n// https://github.com/chancejs/chancejs\nclass Chance {\n    constructor(seed) {\n        this.seed = seed;\n        // If no generator function was provided, use our MT\n        this.mt = new MersenneTwister(this.seed);\n    }\n    random() {\n        return this.mt.random();\n    }\n    /**\n     *  Return a random integer\n     *\n     *  NOTE the max and min are INCLUDED in the range. So:\n     *  chance.integer({min: 1, max: 3});\n     *  would return either 1, 2, or 3.\n     *\n     *  @param {Object} [options={}] can specify a min and/or max\n     *  @returns {Number} a single random integer number\n     *  @throws {RangeError} min cannot be greater than max\n     */\n    integer(options) {\n        return Math.floor(this.random() * (options.max - options.min + 1) + options.min);\n    }\n    /**\n     *  Return a random natural\n     *\n     *  NOTE the max and min are INCLUDED in the range. So:\n     *  chance.natural({min: 1, max: 3});\n     *  would return either 1, 2, or 3.\n     *\n     *  @param {Object} [options={}] can specify a min and/or maxm or a numerals count.\n     *  @returns {Number} a single random integer number\n     *  @throws {RangeError} min cannot be greater than max\n     */\n    natural(options) {\n        return this.integer({ min: 0, max: options.max });\n    }\n    pick(arr) {\n        if (arr.length === 0) {\n            throw new RangeError(\"Chance: Cannot pick() from an empty array\");\n        }\n        return arr[this.natural({ max: arr.length - 1 })];\n    }\n    animal() {\n        // if user does not put in any animal type, will return a random animal regardless\n        const animalTypeArray = [\"desert\", \"forest\", \"ocean\", \"zoo\", \"farm\", \"pet\", \"grassland\"];\n        return this.pick(animals[this.pick(animalTypeArray)]);\n    }\n    city() {\n        return this.pick(cities);\n    }\n}\nexports.Chance = Chance;\nconst animals = {\n    // list of ocean animals comes from https://owlcation.com/stem/list-of-ocean-animals\n    ocean: [\n        \"Acantharea\",\n        \"Anemone\",\n        \"Angelfish King\",\n        \"Ahi Tuna\",\n        \"Albacore\",\n        \"American Oyster\",\n        \"Anchovy\",\n        \"Armored Snail\",\n        \"Arctic Char\",\n        \"Atlantic Bluefin Tuna\",\n        \"Atlantic Cod\",\n        \"Atlantic Goliath Grouper\",\n        \"Atlantic Trumpetfish\",\n        \"Atlantic Wolffish\",\n        \"Baleen Whale\",\n        \"Banded Butterflyfish\",\n        \"Banded Coral Shrimp\",\n        \"Banded Sea Krait\",\n        \"Barnacle\",\n        \"Barndoor Skate\",\n        \"Barracuda\",\n        \"Basking Shark\",\n        \"Bass\",\n        \"Beluga Whale\",\n        \"Bluebanded Goby\",\n        \"Bluehead Wrasse\",\n        \"Bluefish\",\n        \"Bluestreak Cleaner-Wrasse\",\n        \"Blue Marlin\",\n        \"Blue Shark\",\n        \"Blue Spiny Lobster\",\n        \"Blue Tang\",\n        \"Blue Whale\",\n        \"Broadclub Cuttlefish\",\n        \"Bull Shark\",\n        \"Chambered Nautilus\",\n        \"Chilean Basket Star\",\n        \"Chilean Jack Mackerel\",\n        \"Chinook Salmon\",\n        \"Christmas Tree Worm\",\n        \"Clam\",\n        \"Clown Anemonefish\",\n        \"Clown Triggerfish\",\n        \"Cod\",\n        \"Coelacanth\",\n        \"Cockscomb Cup Coral\",\n        \"Common Fangtooth\",\n        \"Conch\",\n        \"Cookiecutter Shark\",\n        \"Copepod\",\n        \"Coral\",\n        \"Corydoras\",\n        \"Cownose Ray\",\n        \"Crab\",\n        \"Crown-of-Thorns Starfish\",\n        \"Cushion Star\",\n        \"Cuttlefish\",\n        \"California Sea Otters\",\n        \"Dolphin\",\n        \"Dolphinfish\",\n        \"Dory\",\n        \"Devil Fish\",\n        \"Dugong\",\n        \"Dumbo Octopus\",\n        \"Dungeness Crab\",\n        \"Eccentric Sand Dollar\",\n        \"Edible Sea Cucumber\",\n        \"Eel\",\n        \"Elephant Seal\",\n        \"Elkhorn Coral\",\n        \"Emperor Shrimp\",\n        \"Estuarine Crocodile\",\n        \"Fathead Sculpin\",\n        \"Fiddler Crab\",\n        \"Fin Whale\",\n        \"Flameback\",\n        \"Flamingo Tongue Snail\",\n        \"Flashlight Fish\",\n        \"Flatback Turtle\",\n        \"Flatfish\",\n        \"Flying Fish\",\n        \"Flounder\",\n        \"Fluke\",\n        \"French Angelfish\",\n        \"Frilled Shark\",\n        \"Fugu (also called Pufferfish)\",\n        \"Gar\",\n        \"Geoduck\",\n        \"Giant Barrel Sponge\",\n        \"Giant Caribbean Sea Anemone\",\n        \"Giant Clam\",\n        \"Giant Isopod\",\n        \"Giant Kingfish\",\n        \"Giant Oarfish\",\n        \"Giant Pacific Octopus\",\n        \"Giant Pyrosome\",\n        \"Giant Sea Star\",\n        \"Giant Squid\",\n        \"Glowing Sucker Octopus\",\n        \"Giant Tube Worm\",\n        \"Goblin Shark\",\n        \"Goosefish\",\n        \"Great White Shark\",\n        \"Greenland Shark\",\n        \"Grey Atlantic Seal\",\n        \"Grouper\",\n        \"Grunion\",\n        \"Guineafowl Puffer\",\n        \"Haddock\",\n        \"Hake\",\n        \"Halibut\",\n        \"Hammerhead Shark\",\n        \"Hapuka\",\n        \"Harbor Porpoise\",\n        \"Harbor Seal\",\n        \"Hatchetfish\",\n        \"Hawaiian Monk Seal\",\n        \"Hawksbill Turtle\",\n        \"Hector's Dolphin\",\n        \"Hermit Crab\",\n        \"Herring\",\n        \"Hoki\",\n        \"Horn Shark\",\n        \"Horseshoe Crab\",\n        \"Humpback Anglerfish\",\n        \"Humpback Whale\",\n        \"Icefish\",\n        \"Imperator Angelfish\",\n        \"Irukandji Jellyfish\",\n        \"Isopod\",\n        \"Ivory Bush Coral\",\n        \"Japanese Spider Crab\",\n        \"Jellyfish\",\n        \"John Dory\",\n        \"Juan Fernandez Fur Seal\",\n        \"Killer Whale\",\n        \"Kiwa Hirsuta\",\n        \"Krill\",\n        \"Lagoon Triggerfish\",\n        \"Lamprey\",\n        \"Leafy Seadragon\",\n        \"Leopard Seal\",\n        \"Limpet\",\n        \"Ling\",\n        \"Lionfish\",\n        \"Lions Mane Jellyfish\",\n        \"Lobe Coral\",\n        \"Lobster\",\n        \"Loggerhead Turtle\",\n        \"Longnose Sawshark\",\n        \"Longsnout Seahorse\",\n        \"Lophelia Coral\",\n        \"Marrus Orthocanna\",\n        \"Manatee\",\n        \"Manta Ray\",\n        \"Marlin\",\n        \"Megamouth Shark\",\n        \"Mexican Lookdown\",\n        \"Mimic Octopus\",\n        \"Moon Jelly\",\n        \"Mollusk\",\n        \"Monkfish\",\n        \"Moray Eel\",\n        \"Mullet\",\n        \"Mussel\",\n        \"Megaladon\",\n        \"Napoleon Wrasse\",\n        \"Nassau Grouper\",\n        \"Narwhal\",\n        \"Nautilus\",\n        \"Needlefish\",\n        \"Northern Seahorse\",\n        \"North Atlantic Right Whale\",\n        \"Northern Red Snapper\",\n        \"Norway Lobster\",\n        \"Nudibranch\",\n        \"Nurse Shark\",\n        \"Oarfish\",\n        \"Ocean Sunfish\",\n        \"Oceanic Whitetip Shark\",\n        \"Octopus\",\n        \"Olive Sea Snake\",\n        \"Orange Roughy\",\n        \"Ostracod\",\n        \"Otter\",\n        \"Oyster\",\n        \"Pacific Angelshark\",\n        \"Pacific Blackdragon\",\n        \"Pacific Halibut\",\n        \"Pacific Sardine\",\n        \"Pacific Sea Nettle Jellyfish\",\n        \"Pacific White Sided Dolphin\",\n        \"Pantropical Spotted Dolphin\",\n        \"Patagonian Toothfish\",\n        \"Peacock Mantis Shrimp\",\n        \"Pelagic Thresher Shark\",\n        \"Penguin\",\n        \"Peruvian Anchoveta\",\n        \"Pilchard\",\n        \"Pink Salmon\",\n        \"Pinniped\",\n        \"Plankton\",\n        \"Porpoise\",\n        \"Polar Bear\",\n        \"Portuguese Man o' War\",\n        \"Pycnogonid Sea Spider\",\n        \"Quahog\",\n        \"Queen Angelfish\",\n        \"Queen Conch\",\n        \"Queen Parrotfish\",\n        \"Queensland Grouper\",\n        \"Ragfish\",\n        \"Ratfish\",\n        \"Rattail Fish\",\n        \"Ray\",\n        \"Red Drum\",\n        \"Red King Crab\",\n        \"Ringed Seal\",\n        \"Risso's Dolphin\",\n        \"Ross Seals\",\n        \"Sablefish\",\n        \"Salmon\",\n        \"Sand Dollar\",\n        \"Sandbar Shark\",\n        \"Sawfish\",\n        \"Sarcastic Fringehead\",\n        \"Scalloped Hammerhead Shark\",\n        \"Seahorse\",\n        \"Sea Cucumber\",\n        \"Sea Lion\",\n        \"Sea Urchin\",\n        \"Seal\",\n        \"Shark\",\n        \"Shortfin Mako Shark\",\n        \"Shovelnose Guitarfish\",\n        \"Shrimp\",\n        \"Silverside Fish\",\n        \"Skipjack Tuna\",\n        \"Slender Snipe Eel\",\n        \"Smalltooth Sawfish\",\n        \"Smelts\",\n        \"Sockeye Salmon\",\n        \"Southern Stingray\",\n        \"Sponge\",\n        \"Spotted Porcupinefish\",\n        \"Spotted Dolphin\",\n        \"Spotted Eagle Ray\",\n        \"Spotted Moray\",\n        \"Squid\",\n        \"Squidworm\",\n        \"Starfish\",\n        \"Stickleback\",\n        \"Stonefish\",\n        \"Stoplight Loosejaw\",\n        \"Sturgeon\",\n        \"Swordfish\",\n        \"Tan Bristlemouth\",\n        \"Tasseled Wobbegong\",\n        \"Terrible Claw Lobster\",\n        \"Threespot Damselfish\",\n        \"Tiger Prawn\",\n        \"Tiger Shark\",\n        \"Tilefish\",\n        \"Toadfish\",\n        \"Tropical Two-Wing Flyfish\",\n        \"Tuna\",\n        \"Umbrella Squid\",\n        \"Velvet Crab\",\n        \"Venus Flytrap Sea Anemone\",\n        \"Vigtorniella Worm\",\n        \"Viperfish\",\n        \"Vampire Squid\",\n        \"Vaquita\",\n        \"Wahoo\",\n        \"Walrus\",\n        \"West Indian Manatee\",\n        \"Whale\",\n        \"Whale Shark\",\n        \"Whiptail Gulper\",\n        \"White-Beaked Dolphin\",\n        \"White-Ring Garden Eel\",\n        \"White Shrimp\",\n        \"Wobbegong\",\n        \"Wrasse\",\n        \"Wreckfish\",\n        \"Xiphosura\",\n        \"Yellowtail Damselfish\",\n        \"Yelloweye Rockfish\",\n        \"Yellow Cup Black Coral\",\n        \"Yellow Tube Sponge\",\n        \"Yellowfin Tuna\",\n        \"Zebrashark\",\n        \"Zooplankton\"\n    ],\n    // list of desert, grassland, and forest animals comes from http://www.skyenimals.com/\n    desert: [\n        \"Aardwolf\",\n        \"Addax\",\n        \"African Wild Ass\",\n        \"Ant\",\n        \"Antelope\",\n        \"Armadillo\",\n        \"Baboon\",\n        \"Badger\",\n        \"Bat\",\n        \"Bearded Dragon\",\n        \"Beetle\",\n        \"Bird\",\n        \"Black-footed Cat\",\n        \"Boa\",\n        \"Brown Bear\",\n        \"Bustard\",\n        \"Butterfly\",\n        \"Camel\",\n        \"Caracal\",\n        \"Caracara\",\n        \"Caterpillar\",\n        \"Centipede\",\n        \"Cheetah\",\n        \"Chipmunk\",\n        \"Chuckwalla\",\n        \"Climbing Mouse\",\n        \"Coati\",\n        \"Cobra\",\n        \"Cotton Rat\",\n        \"Cougar\",\n        \"Courser\",\n        \"Crane Fly\",\n        \"Crow\",\n        \"Dassie Rat\",\n        \"Dove\",\n        \"Dunnart\",\n        \"Eagle\",\n        \"Echidna\",\n        \"Elephant\",\n        \"Emu\",\n        \"Falcon\",\n        \"Fly\",\n        \"Fox\",\n        \"Frogmouth\",\n        \"Gecko\",\n        \"Geoffroy's Cat\",\n        \"Gerbil\",\n        \"Grasshopper\",\n        \"Guanaco\",\n        \"Gundi\",\n        \"Hamster\",\n        \"Hawk\",\n        \"Hedgehog\",\n        \"Hyena\",\n        \"Hyrax\",\n        \"Jackal\",\n        \"Kangaroo\",\n        \"Kangaroo Rat\",\n        \"Kestrel\",\n        \"Kowari\",\n        \"Kultarr\",\n        \"Leopard\",\n        \"Lion\",\n        \"Macaw\",\n        \"Meerkat\",\n        \"Mouse\",\n        \"Oryx\",\n        \"Ostrich\",\n        \"Owl\",\n        \"Pronghorn\",\n        \"Python\",\n        \"Rabbit\",\n        \"Raccoon\",\n        \"Rattlesnake\",\n        \"Rhinoceros\",\n        \"Sand Cat\",\n        \"Spectacled Bear\",\n        \"Spiny Mouse\",\n        \"Starling\",\n        \"Stick Bug\",\n        \"Tarantula\",\n        \"Tit\",\n        \"Toad\",\n        \"Tortoise\",\n        \"Tyrant Flycatcher\",\n        \"Viper\",\n        \"Vulture\",\n        \"Waxwing\",\n        \"Xerus\",\n        \"Zebra\"\n    ],\n    grassland: [\n        \"Aardvark\",\n        \"Aardwolf\",\n        \"Accentor\",\n        \"African Buffalo\",\n        \"African Wild Dog\",\n        \"Alpaca\",\n        \"Anaconda\",\n        \"Ant\",\n        \"Anteater\",\n        \"Antelope\",\n        \"Armadillo\",\n        \"Baboon\",\n        \"Badger\",\n        \"Bandicoot\",\n        \"Barbet\",\n        \"Bat\",\n        \"Bee\",\n        \"Bee-eater\",\n        \"Beetle\",\n        \"Bird\",\n        \"Bison\",\n        \"Black-footed Cat\",\n        \"Black-footed Ferret\",\n        \"Bluebird\",\n        \"Boa\",\n        \"Bowerbird\",\n        \"Brown Bear\",\n        \"Bush Dog\",\n        \"Bushshrike\",\n        \"Bustard\",\n        \"Butterfly\",\n        \"Buzzard\",\n        \"Caracal\",\n        \"Caracara\",\n        \"Cardinal\",\n        \"Caterpillar\",\n        \"Cheetah\",\n        \"Chipmunk\",\n        \"Civet\",\n        \"Climbing Mouse\",\n        \"Clouded Leopard\",\n        \"Coati\",\n        \"Cobra\",\n        \"Cockatoo\",\n        \"Cockroach\",\n        \"Common Genet\",\n        \"Cotton Rat\",\n        \"Cougar\",\n        \"Courser\",\n        \"Coyote\",\n        \"Crane\",\n        \"Crane Fly\",\n        \"Cricket\",\n        \"Crow\",\n        \"Culpeo\",\n        \"Death Adder\",\n        \"Deer\",\n        \"Deer Mouse\",\n        \"Dingo\",\n        \"Dinosaur\",\n        \"Dove\",\n        \"Drongo\",\n        \"Duck\",\n        \"Duiker\",\n        \"Dunnart\",\n        \"Eagle\",\n        \"Echidna\",\n        \"Elephant\",\n        \"Elk\",\n        \"Emu\",\n        \"Falcon\",\n        \"Finch\",\n        \"Flea\",\n        \"Fly\",\n        \"Flying Frog\",\n        \"Fox\",\n        \"Frog\",\n        \"Frogmouth\",\n        \"Garter Snake\",\n        \"Gazelle\",\n        \"Gecko\",\n        \"Geoffroy's Cat\",\n        \"Gerbil\",\n        \"Giant Tortoise\",\n        \"Giraffe\",\n        \"Grasshopper\",\n        \"Grison\",\n        \"Groundhog\",\n        \"Grouse\",\n        \"Guanaco\",\n        \"Guinea Pig\",\n        \"Hamster\",\n        \"Harrier\",\n        \"Hartebeest\",\n        \"Hawk\",\n        \"Hedgehog\",\n        \"Helmetshrike\",\n        \"Hippopotamus\",\n        \"Hornbill\",\n        \"Hyena\",\n        \"Hyrax\",\n        \"Impala\",\n        \"Jackal\",\n        \"Jaguar\",\n        \"Jaguarundi\",\n        \"Kangaroo\",\n        \"Kangaroo Rat\",\n        \"Kestrel\",\n        \"Kultarr\",\n        \"Ladybug\",\n        \"Leopard\",\n        \"Lion\",\n        \"Macaw\",\n        \"Meerkat\",\n        \"Mouse\",\n        \"Newt\",\n        \"Oryx\",\n        \"Ostrich\",\n        \"Owl\",\n        \"Pangolin\",\n        \"Pheasant\",\n        \"Prairie Dog\",\n        \"Pronghorn\",\n        \"Przewalski's Horse\",\n        \"Python\",\n        \"Quoll\",\n        \"Rabbit\",\n        \"Raven\",\n        \"Rhinoceros\",\n        \"Shelduck\",\n        \"Sloth Bear\",\n        \"Spectacled Bear\",\n        \"Squirrel\",\n        \"Starling\",\n        \"Stick Bug\",\n        \"Tamandua\",\n        \"Tasmanian Devil\",\n        \"Thornbill\",\n        \"Thrush\",\n        \"Toad\",\n        \"Tortoise\"\n    ],\n    forest: [\n        \"Agouti\",\n        \"Anaconda\",\n        \"Anoa\",\n        \"Ant\",\n        \"Anteater\",\n        \"Antelope\",\n        \"Armadillo\",\n        \"Asian Black Bear\",\n        \"Aye-aye\",\n        \"Babirusa\",\n        \"Baboon\",\n        \"Badger\",\n        \"Bandicoot\",\n        \"Banteng\",\n        \"Barbet\",\n        \"Basilisk\",\n        \"Bat\",\n        \"Bearded Dragon\",\n        \"Bee\",\n        \"Bee-eater\",\n        \"Beetle\",\n        \"Bettong\",\n        \"Binturong\",\n        \"Bird-of-paradise\",\n        \"Bongo\",\n        \"Bowerbird\",\n        \"Bulbul\",\n        \"Bush Dog\",\n        \"Bushbaby\",\n        \"Bushshrike\",\n        \"Butterfly\",\n        \"Buzzard\",\n        \"Caecilian\",\n        \"Cardinal\",\n        \"Cassowary\",\n        \"Caterpillar\",\n        \"Centipede\",\n        \"Chameleon\",\n        \"Chimpanzee\",\n        \"Cicada\",\n        \"Civet\",\n        \"Clouded Leopard\",\n        \"Coati\",\n        \"Cobra\",\n        \"Cockatoo\",\n        \"Cockroach\",\n        \"Colugo\",\n        \"Cotinga\",\n        \"Cotton Rat\",\n        \"Cougar\",\n        \"Crane Fly\",\n        \"Cricket\",\n        \"Crocodile\",\n        \"Crow\",\n        \"Cuckoo\",\n        \"Cuscus\",\n        \"Death Adder\",\n        \"Deer\",\n        \"Dhole\",\n        \"Dingo\",\n        \"Dinosaur\",\n        \"Drongo\",\n        \"Duck\",\n        \"Duiker\",\n        \"Eagle\",\n        \"Echidna\",\n        \"Elephant\",\n        \"Finch\",\n        \"Flat-headed Cat\",\n        \"Flea\",\n        \"Flowerpecker\",\n        \"Fly\",\n        \"Flying Frog\",\n        \"Fossa\",\n        \"Frog\",\n        \"Frogmouth\",\n        \"Gaur\",\n        \"Gecko\",\n        \"Gorilla\",\n        \"Grison\",\n        \"Hawaiian Honeycreeper\",\n        \"Hawk\",\n        \"Hedgehog\",\n        \"Helmetshrike\",\n        \"Hornbill\",\n        \"Hyrax\",\n        \"Iguana\",\n        \"Jackal\",\n        \"Jaguar\",\n        \"Jaguarundi\",\n        \"Kestrel\",\n        \"Ladybug\",\n        \"Lemur\",\n        \"Leopard\",\n        \"Lion\",\n        \"Macaw\",\n        \"Mandrill\",\n        \"Margay\",\n        \"Monkey\",\n        \"Mouse\",\n        \"Mouse Deer\",\n        \"Newt\",\n        \"Okapi\",\n        \"Old World Flycatcher\",\n        \"Orangutan\",\n        \"Owl\",\n        \"Pangolin\",\n        \"Peafowl\",\n        \"Pheasant\",\n        \"Possum\",\n        \"Python\",\n        \"Quokka\",\n        \"Rabbit\",\n        \"Raccoon\",\n        \"Red Panda\",\n        \"Red River Hog\",\n        \"Rhinoceros\",\n        \"Sloth Bear\",\n        \"Spectacled Bear\",\n        \"Squirrel\",\n        \"Starling\",\n        \"Stick Bug\",\n        \"Sun Bear\",\n        \"Tamandua\",\n        \"Tamarin\",\n        \"Tapir\",\n        \"Tarantula\",\n        \"Thrush\",\n        \"Tiger\",\n        \"Tit\",\n        \"Toad\",\n        \"Tortoise\",\n        \"Toucan\",\n        \"Trogon\",\n        \"Trumpeter\",\n        \"Turaco\",\n        \"Turtle\",\n        \"Tyrant Flycatcher\",\n        \"Viper\",\n        \"Vulture\",\n        \"Wallaby\",\n        \"Warbler\",\n        \"Wasp\",\n        \"Waxwing\",\n        \"Weaver\",\n        \"Weaver-finch\",\n        \"Whistler\",\n        \"White-eye\",\n        \"Whydah\",\n        \"Woodswallow\",\n        \"Worm\",\n        \"Wren\",\n        \"Xenops\",\n        \"Yellowjacket\",\n        \"Accentor\",\n        \"African Buffalo\",\n        \"American Black Bear\",\n        \"Anole\",\n        \"Bird\",\n        \"Bison\",\n        \"Boa\",\n        \"Brown Bear\",\n        \"Chipmunk\",\n        \"Common Genet\",\n        \"Copperhead\",\n        \"Coyote\",\n        \"Deer Mouse\",\n        \"Dormouse\",\n        \"Elk\",\n        \"Emu\",\n        \"Fisher\",\n        \"Fox\",\n        \"Garter Snake\",\n        \"Giant Panda\",\n        \"Giant Tortoise\",\n        \"Groundhog\",\n        \"Grouse\",\n        \"Guanaco\",\n        \"Himalayan Tahr\",\n        \"Kangaroo\",\n        \"Koala\",\n        \"Numbat\",\n        \"Quoll\",\n        \"Raccoon dog\",\n        \"Tasmanian Devil\",\n        \"Thornbill\",\n        \"Turkey\",\n        \"Vole\",\n        \"Weasel\",\n        \"Wildcat\",\n        \"Wolf\",\n        \"Wombat\",\n        \"Woodchuck\",\n        \"Woodpecker\"\n    ],\n    // list of farm animals comes from https://www.buzzle.com/articles/farm-animals-list.html\n    farm: [\n        \"Alpaca\",\n        \"Buffalo\",\n        \"Banteng\",\n        \"Cow\",\n        \"Cat\",\n        \"Chicken\",\n        \"Carp\",\n        \"Camel\",\n        \"Donkey\",\n        \"Dog\",\n        \"Duck\",\n        \"Emu\",\n        \"Goat\",\n        \"Gayal\",\n        \"Guinea\",\n        \"Goose\",\n        \"Horse\",\n        \"Honey\",\n        \"Llama\",\n        \"Pig\",\n        \"Pigeon\",\n        \"Rhea\",\n        \"Rabbit\",\n        \"Sheep\",\n        \"Silkworm\",\n        \"Turkey\",\n        \"Yak\",\n        \"Zebu\"\n    ],\n    // list of pet animals comes from https://www.dogbreedinfo.com/pets/pet.htm\n    pet: [\n        \"Bearded Dragon\",\n        \"Birds\",\n        \"Burro\",\n        \"Cats\",\n        \"Chameleons\",\n        \"Chickens\",\n        \"Chinchillas\",\n        \"Chinese Water Dragon\",\n        \"Cows\",\n        \"Dogs\",\n        \"Donkey\",\n        \"Ducks\",\n        \"Ferrets\",\n        \"Fish\",\n        \"Geckos\",\n        \"Geese\",\n        \"Gerbils\",\n        \"Goats\",\n        \"Guinea Fowl\",\n        \"Guinea Pigs\",\n        \"Hamsters\",\n        \"Hedgehogs\",\n        \"Horses\",\n        \"Iguanas\",\n        \"Llamas\",\n        \"Lizards\",\n        \"Mice\",\n        \"Mule\",\n        \"Peafowl\",\n        \"Pigs and Hogs\",\n        \"Pigeons\",\n        \"Ponies\",\n        \"Pot Bellied Pig\",\n        \"Rabbits\",\n        \"Rats\",\n        \"Sheep\",\n        \"Skinks\",\n        \"Snakes\",\n        \"Stick Insects\",\n        \"Sugar Gliders\",\n        \"Tarantula\",\n        \"Turkeys\",\n        \"Turtles\"\n    ],\n    // list of zoo animals comes from https://bronxzoo.com/animals\n    zoo: [\n        \"Aardvark\",\n        \"African Wild Dog\",\n        \"Aldabra Tortoise\",\n        \"American Alligator\",\n        \"American Bison\",\n        \"Amur Tiger\",\n        \"Anaconda\",\n        \"Andean Condor\",\n        \"Asian Elephant\",\n        \"Baby Doll Sheep\",\n        \"Bald Eagle\",\n        \"Barred Owl\",\n        \"Blue Iguana\",\n        \"Boer Goat\",\n        \"California Sea Lion\",\n        \"Caribbean Flamingo\",\n        \"Chinchilla\",\n        \"Collared Lemur\",\n        \"Coquerel's Sifaka\",\n        \"Cuban Amazon Parrot\",\n        \"Ebony Langur\",\n        \"Fennec Fox\",\n        \"Fossa\",\n        \"Gelada\",\n        \"Giant Anteater\",\n        \"Giraffe\",\n        \"Gorilla\",\n        \"Grizzly Bear\",\n        \"Henkel's Leaf-tailed Gecko\",\n        \"Indian Gharial\",\n        \"Indian Rhinoceros\",\n        \"King Cobra\",\n        \"King Vulture\",\n        \"Komodo Dragon\",\n        \"Linne's Two-toed Sloth\",\n        \"Lion\",\n        \"Little Penguin\",\n        \"Madagascar Tree Boa\",\n        \"Magellanic Penguin\",\n        \"Malayan Tapir\",\n        \"Malayan Tiger\",\n        \"Matschies Tree Kangaroo\",\n        \"Mini Donkey\",\n        \"Monarch Butterfly\",\n        \"Nile crocodile\",\n        \"North American Porcupine\",\n        \"Nubian Ibex\",\n        \"Okapi\",\n        \"Poison Dart Frog\",\n        \"Polar Bear\",\n        \"Pygmy Marmoset\",\n        \"Radiated Tortoise\",\n        \"Red Panda\",\n        \"Red Ruffed Lemur\",\n        \"Ring-tailed Lemur\",\n        \"Ring-tailed Mongoose\",\n        \"Rock Hyrax\",\n        \"Small Clawed Asian Otter\",\n        \"Snow Leopard\",\n        \"Snowy Owl\",\n        \"Southern White-faced Owl\",\n        \"Southern White Rhinocerous\",\n        \"Squirrel Monkey\",\n        \"Tufted Puffin\",\n        \"White Cheeked Gibbon\",\n        \"White-throated Bee Eater\",\n        \"Zebra\"\n    ]\n};\n// Source: https://en.wikipedia.org/wiki/List_of_population_centers_by_latitude\nconst cities = [\n    \"Alert\",\n    \"Nord\",\n    \"Eureka\",\n    \"Ny-Ålesund\",\n    \"Longyearbyen\",\n    \"Qaanaaq\",\n    \"Grise Fiord\",\n    \"Dikson\",\n    \"Upernavik\",\n    \"Tiksi\",\n    \"Belushya Guba\",\n    \"Barrow\",\n    \"Honningsvåg\",\n    \"Hammerfest\",\n    \"Deadhorse\",\n    \"Nuorgam\",\n    \"Vadsø\",\n    \"Alta\",\n    \"Utsjoki\",\n    \"Kirkenes\",\n    \"Tromsø\",\n    \"Tuktoyaktuk\",\n    \"Norilsk\",\n    \"Murmansk\",\n    \"Harstad\",\n    \"Narvik\",\n    \"Inuvik\",\n    \"Kiruna\",\n    \"Verkhoyansk\",\n    \"Bodø\",\n    \"Gällivare\",\n    \"Kemijärvi\",\n    \"Rovaniemi\",\n    \"Ísafjörður\",\n    \"Kuusamo\",\n    \"Tornio\",\n    \"Boden\",\n    \"Haparanda\",\n    \"Kemi\",\n    \"Akureyri\",\n    \"Luleå\",\n    \"Pudasjärvi\",\n    \"Piteå\",\n    \"Oulu\",\n    \"Fairbanks\",\n    \"Skellefteå\",\n    \"Anadyr\",\n    \"Arkhangelsk\",\n    \"Nome\",\n    \"Nuuk (Godthåb)\",\n    \"Reykjavík\",\n    \"Umeå\",\n    \"Iqaluit\",\n    \"Stjørdal\",\n    \"Trondheim\",\n    \"Örnsköldsvik\",\n    \"Östersund\",\n    \"Vaasa\",\n    \"Kuopio\",\n    \"Yellowknife\",\n    \"Sundsvall\",\n    \"Jyväskylä\",\n    \"Yakutsk\",\n    \"Tórshavn\",\n    \"Petrozavodsk\",\n    \"Tampere\",\n    \"Anchorage\",\n    \"Lillehammer\",\n    \"Lahti\",\n    \"Qaqortoq\",\n    \"Whitehorse\",\n    \"Turku\",\n    \"Bergen\",\n    \"Vantaa\",\n    \"Lerwick\",\n    \"Espoo\",\n    \"Helsinki\",\n    \"Oslo\",\n    \"Saint Petersburg\",\n    \"Uppsala\",\n    \"Fritz Creek\",\n    \"Magadan\",\n    \"Tallinn\",\n    \"Stockholm\",\n    \"Sarpsborg\",\n    \"Örebro\",\n    \"Vologda\",\n    \"Norrköping\",\n    \"Linköping\",\n    \"Tartu\",\n    \"Juneau\",\n    \"Arendal\",\n    \"Kristiansand\",\n    \"Perm\",\n    \"Valga\",\n    \"Gothenburg\",\n    \"Visby\",\n    \"Yaroslavl\",\n    \"Inverness\",\n    \"Aberdeen\",\n    \"Sitka\",\n    \"Riga\",\n    \"Izhevsk\",\n    \"Yekaterinburg\",\n    \"Fort McMurray\",\n    \"Dundee\",\n    \"Nizhny Novgorod\",\n    \"Stirling\",\n    \"Bratsk\",\n    \"Aarhus\",\n    \"Krasnoyarsk\",\n    \"Edinburgh\",\n    \"Glasgow\",\n    \"Kazan\",\n    \"Moscow\",\n    \"Copenhagen\",\n    \"Malmö\",\n    \"Esbjerg\",\n    \"Odense\",\n    \"Grande Prairie\",\n    \"Chelyabinsk\",\n    \"Novosibirsk\",\n    \"Derry\",\n    \"Omsk\",\n    \"Newcastle upon Tyne\",\n    \"Sunderland\",\n    \"Petropavl\",\n    \"Flensburg\",\n    \"Ufa\",\n    \"Kaliningrad\",\n    \"Vilnius\",\n    \"Belfast\",\n    \"Middlesbrough\",\n    \"Gdynia\",\n    \"Gdańsk\",\n    \"Kiel\",\n    \"Douglas\",\n    \"Rostock\",\n    \"Lancaster\",\n    \"York\",\n    \"Prince George\",\n    \"Minsk\",\n    \"Bradford\",\n    \"Leeds\",\n    \"Hamburg\",\n    \"Edmonton\",\n    \"Tolyatti\",\n    \"Manchester\",\n    \"Liverpool\",\n    \"Sheffield\",\n    \"Dublin\",\n    \"Groningen\",\n    \"Samara\",\n    \"Bremen\",\n    \"Petropavlovsk-Kamchatsky\",\n    \"Nottingham\",\n    \"Derby\",\n    \"Leicester\",\n    \"Norwich\",\n    \"Peterborough\",\n    \"Berlin\",\n    \"Birmingham\",\n    \"Gomel\",\n    \"Coventry\",\n    \"Poznań\",\n    \"Haarlem\",\n    \"Amsterdam\",\n    \"Hannover\",\n    \"Irkutsk\",\n    \"Warsaw\",\n    \"Enschede\",\n    \"Cambridge\",\n    \"Leiden\",\n    \"Saskatoon\",\n    \"Utrecht\",\n    \"The Hague\",\n    \"Münster\",\n    \"Rotterdam\",\n    \"Cork\",\n    \"Adak\",\n    \"Gloucester\",\n    \"Oxford\",\n    \"Voronezh\",\n    \"Swansea\",\n    \"Saratov\",\n    \"Dortmund\",\n    \"London\",\n    \"Cardiff\",\n    \"Greenwich\",\n    \"Bristol\",\n    \"Bath\",\n    \"Leipzig\",\n    \"Düsseldorf\",\n    \"Antwerp\",\n    \"Astana\",\n    \"Winchester\",\n    \"Calgary\",\n    \"Ghent\",\n    \"Dresden\",\n    \"Erfurt\",\n    \"Calais\",\n    \"Cologne\",\n    \"Southampton\",\n    \"Maastricht\",\n    \"Brussels\",\n    \"Brighton and Hove\",\n    \"Portsmouth\",\n    \"Exeter\",\n    \"Kamloops\",\n    \"Lille\",\n    \"Regina\",\n    \"Kiev\",\n    \"Charleroi\",\n    \"Plymouth\",\n    \"Frankfurt am Main\",\n    \"Prague\",\n    \"Kraków\",\n    \"Kharkiv\",\n    \"Winnipeg\",\n    \"Kelowna\",\n    \"Lviv\",\n    \"Luxembourg\",\n    \"Le Havre\",\n    \"Nuremberg\",\n    \"Rouen\",\n    \"Vancouver\",\n    \"Paris\",\n    \"Stuttgart\",\n    \"Bellingham\",\n    \"Volgograd\",\n    \"Strasbourg\",\n    \"Dnipro\",\n    \"Victoria\",\n    \"Saguenay\",\n    \"Brest\",\n    \"Thunder Bay\",\n    \"Linz\",\n    \"Vienna\",\n    \"Bratislava\",\n    \"Munich\",\n    \"Donetsk\",\n    \"Ulaanbaatar\",\n    \"Orléans\",\n    \"Salzburg\",\n    \"Seattle\",\n    \"St. John's\",\n    \"Basel\",\n    \"Budapest\",\n    \"Qiqihar\",\n    \"Zürich\",\n    \"Innsbruck\",\n    \"Rostov-on-Don\",\n    \"Nantes\",\n    \"Vaduz\",\n    \"Atyrau\",\n    \"Graz\",\n    \"Chişinău\",\n    \"Bern\",\n    \"Tiraspol\",\n    \"Quebec City\",\n    \"Bismarck\",\n    \"Duluth\",\n    \"Saint-Pierre\",\n    \"Cluj-Napoca\",\n    \"Moscow\",\n    \"Helena\",\n    \"Sault Ste. Marie\",\n    \"Lausanne\",\n    \"Sudbury\",\n    \"Odessa\",\n    \"North Bay\",\n    \"Charlottetown\",\n    \"Geneva\",\n    \"Moncton\",\n    \"Ljubljana\",\n    \"Fredericton\",\n    \"Zagreb\",\n    \"Lyon\",\n    \"Harbin\",\n    \"New Glasgow\",\n    \"Portland\",\n    \"Montreal\",\n    \"Milan\",\n    \"Venice\",\n    \"Ottawa\",\n    \"Wakkanai\",\n    \"Saint John\",\n    \"Novi Sad\",\n    \"Turin\",\n    \"Krasnodar\",\n    \"Minneapolis\",\n    \"Simferopol\",\n    \"Halifax\",\n    \"Bordeaux\",\n    \"Belgrade\",\n    \"Šabac\",\n    \"Drobeta Turnu Severin\",\n    \"Bologna\",\n    \"Bucharest\",\n    \"Ravenna\",\n    \"Genoa\",\n    \"Pierre\",\n    \"Craiova\",\n    \"Augusta\",\n    \"Montpelier\",\n    \"Bath\",\n    \"San Marino\",\n    \"Changchun\",\n    \"Sarajevo\",\n    \"Yarmouth\",\n    \"Ürümqi\",\n    \"Florence\",\n    \"Asahikawa\",\n    \"Monaco\",\n    \"Nice\",\n    \"Toronto\",\n    \"Boise\",\n    \"Toulouse\",\n    \"Sochi\",\n    \"Cannes\",\n    \"Gijón\",\n    \"Sioux Falls\",\n    \"Split\",\n    \"Oviedo\",\n    \"Nemuro\",\n    \"San Sebastián\",\n    \"Marseille\",\n    \"Almaty\",\n    \"Bilbao\",\n    \"Concord\",\n    \"Rochester\",\n    \"Vladivostok\",\n    \"Sapporo\",\n    \"Milwaukee\",\n    \"Sukhumi\",\n    \"Kushiro\",\n    \"London\",\n    \"Follonica\",\n    \"Obihiro\",\n    \"Buffalo\",\n    \"Santiago de Compostela\",\n    \"Bishkek\",\n    \"Vitoria-Gasteiz\",\n    \"Sofia\",\n    \"Pristina\",\n    \"Andorra la Vella\",\n    \"Nukus\",\n    \"Podgorica\",\n    \"Boston\",\n    \"Detroit\",\n    \"Windsor\",\n    \"Vigo\",\n    \"Tskhinvali\",\n    \"Avezzano\",\n    \"Skopje\",\n    \"Colchester\",\n    \"Rome\",\n    \"Vatican City\",\n    \"Chicago\",\n    \"Providence\",\n    \"Shenyang\",\n    \"Chongjin\",\n    \"Hartford\",\n    \"Hakodate\",\n    \"Tbilisi\",\n    \"Valladolid\",\n    \"Zaragoza\",\n    \"Des Moines\",\n    \"Braga\",\n    \"Cleveland\",\n    \"Barcelona\",\n    \"Tirana\",\n    \"Tashkent\",\n    \"Porto\",\n    \"Cheyenne\",\n    \"Bari\",\n    \"Fort Wayne\",\n    \"Istanbul\",\n    \"Trabzon\",\n    \"Namangan\",\n    \"Naples\",\n    \"Aomori\",\n    \"Lincoln\",\n    \"Eureka\",\n    \"Salt Lake City\",\n    \"Jersey City\",\n    \"New York City\",\n    \"Thessaloniki\",\n    \"Lleida\",\n    \"Pittsburgh\",\n    \"Baku\",\n    \"Madrid\",\n    \"Trenton\",\n    \"Bursa\",\n    \"Yerevan\",\n    \"Boulder\",\n    \"Columbus\",\n    \"Ankara\",\n    \"Philadelphia\",\n    \"Beijing\",\n    \"Stepanakert\",\n    \"Forked River\",\n    \"Eskisehir\",\n    \"Indianapolis\",\n    \"Denver\",\n    \"Akita\",\n    \"Morioka\",\n    \"Palma\",\n    \"Reno\",\n    \"Flores Island\",\n    \"Valencia\",\n    \"Baltimore\",\n    \"Cagliari\",\n    \"Dover\",\n    \"Wonsan\",\n    \"Tianjin\",\n    \"Cincinnati\",\n    \"Kansas City\",\n    \"Pyongyang\",\n    \"Ibiza\",\n    \"Dalian\",\n    \"Washington\",\n    \"Lisbon\",\n    \"St. Louis\",\n    \"Horta\",\n    \"Sacramento\",\n    \"Dushanbe\",\n    \"Angra do Heroísmo\",\n    \"Halkida\",\n    \"İzmir\",\n    \"Charleston\",\n    \"Alicante\",\n    \"Sendai\",\n    \"Louisville\",\n    \"Yamagata\",\n    \"Messina\",\n    \"Palermo\",\n    \"Tabriz\",\n    \"Shijiazhuang\",\n    \"Trapani\",\n    \"Athena\",\n    \"Kaesong\",\n    \"Ashgabat\",\n    \"Niigata\",\n    \"Taiyuan\",\n    \"Konya\",\n    \"Ponta Delgada\",\n    \"Oakland\",\n    \"San Francisco\",\n    \"Fukushima\",\n    \"Wichita\",\n    \"Seoul\",\n    \"San Jose\",\n    \"Catania\",\n    \"Incheon\",\n    \"Sevilla\",\n    \"Mugla\",\n    \"Springfield\",\n    \"Gaziantep\",\n    \"Adana\",\n    \"Virginia Beach\",\n    \"Almería\",\n    \"Tunis\",\n    \"Mersin\",\n    \"Algiers\",\n    \"Málaga\",\n    \"Toyama\",\n    \"Jinan\",\n    \"Nagano\",\n    \"Xining\",\n    \"Handan\",\n    \"Kanazawa\",\n    \"Utsunomiya\",\n    \"Maebashi\",\n    \"Mito\",\n    \"Mosul\",\n    \"Mashhad\",\n    \"Arbil\",\n    \"Las Vegas\",\n    \"Nashville\",\n    \"Gibraltar\",\n    \"Tulsa\",\n    \"Fukui\",\n    \"Qingdao\",\n    \"Lanzhou\",\n    \"Knoxville\",\n    \"Valletta\",\n    \"Birkirkara\",\n    \"Los Alamos\",\n    \"Daegu\",\n    \"Raleigh\",\n    \"Tangier\",\n    \"Tehran\",\n    \"Tokyo\",\n    \"Santa Fe\",\n    \"Kōfu\",\n    \"Chiba\",\n    \"Latakia\",\n    \"Kawasaki\",\n    \"Tottori\",\n    \"Oklahoma City\",\n    \"Matsue\",\n    \"Kirkuk\",\n    \"Yokohama\",\n    \"Gifu\",\n    \"Tiaret\",\n    \"Heraklion\",\n    \"Melilla\",\n    \"Charlotte\",\n    \"Nagoya\",\n    \"Busan\",\n    \"Nicosia\",\n    \"Memphis\",\n    \"Albuquerque\",\n    \"Ōtsu\",\n    \"Kyoto\",\n    \"Shizuoka\",\n    \"Zhengzhou\",\n    \"Little Rock\",\n    \"Sfax\",\n    \"Tsu\",\n    \"Osaka\",\n    \"Kōbe\",\n    \"Nara\",\n    \"Okayama\",\n    \"Kabul\",\n    \"Santa Barbara\",\n    \"Hiroshima\",\n    \"Takamatsu\",\n    \"Xi'an\",\n    \"Wakayama\",\n    \"Wilmington\",\n    \"Yamaguchi\",\n    \"Arak\",\n    \"Srinagar\",\n    \"Tokushima\",\n    \"Los Angeles\",\n    \"Rabat\",\n    \"Peshawar\",\n    \"Columbia\",\n    \"Riverside\",\n    \"Beirut\",\n    \"Matsuyama\",\n    \"Atlanta\",\n    \"Islamabad\",\n    \"Birmingham\",\n    \"Rawalpindi\",\n    \"Fukuoka\",\n    \"Kōchi\",\n    \"Casablanca\",\n    \"Damascus\",\n    \"Phoenix\",\n    \"Lubbock\",\n    \"Baghdad\",\n    \"Saga\",\n    \"Ōita\",\n    \"Tripoli\",\n    \"Charleston\",\n    \"Dallas\",\n    \"Nagasaki\",\n    \"Kumamoto\",\n    \"San Diego\",\n    \"Mexicali\",\n    \"Funchal\",\n    \"El Centro\",\n    \"Isfahan\",\n    \"Karbala\",\n    \"Tijuana\",\n    \"Shreveport\",\n    \"Jackson\",\n    \"Hamilton\",\n    \"Tucson\",\n    \"Benghazi\",\n    \"Tel Aviv\",\n    \"Nanjing\",\n    \"Najaf\",\n    \"Amman\",\n    \"Miyazaki\",\n    \"Ramallah\",\n    \"Ensenada\",\n    \"El Paso\",\n    \"Jerusalem\",\n    \"Ciudad Juárez\",\n    \"Amritsar\",\n    \"Marrakech\",\n    \"Kandahar\",\n    \"Kagoshima\",\n    \"Lahore\",\n    \"Gaza\",\n    \"Faisalabad\",\n    \"Port Said\",\n    \"Alexandria\",\n    \"Shanghai\",\n    \"Shimla\",\n    \"Ludhiana\",\n    \"Chandigarh\",\n    \"Mobile\",\n    \"Chengdu\",\n    \"Wuhan\",\n    \"Basra\",\n    \"Agadir\",\n    \"Jacksonville\",\n    \"Austin\",\n    \"Hangzhou\",\n    \"Multan\",\n    \"Cairo\",\n    \"New Orleans\",\n    \"Suez\",\n    \"Houston\",\n    \"Lhasa\",\n    \"Chongqing\",\n    \"Eilat\",\n    \"San Antonio\",\n    \"Kuwait City\",\n    \"Shigatse\",\n    \"Hermosillo\",\n    \"Chihuahua\",\n    \"New Delhi\",\n    \"Santa Cruz de Tenerife\",\n    \"Orlando\",\n    \"Las Palmas de Gran Canaria\",\n    \"Tampa\",\n    \"Corpus Christi\",\n    \"Maspalomas\",\n    \"Kathmandu\",\n    \"Dibrugarh\",\n    \"Thimphu\",\n    \"Gangtok\",\n    \"Agra\",\n    \"El Aaiún\",\n    \"Sabha\",\n    \"Jaipur\",\n    \"Lucknow\",\n    \"Siliguri\",\n    \"Tezpur\",\n    \"Kanpur\",\n    \"Dammam\",\n    \"Naha\",\n    \"Manama\",\n    \"Guwahati\",\n    \"Brownsville\",\n    \"Miami\",\n    \"Luxor\",\n    \"Monterrey\",\n    \"Patna\",\n    \"Shillong\",\n    \"Torreón\",\n    \"Kulpahar\",\n    \"Doha\",\n    \"Dubai\",\n    \"Hyderabad\",\n    \"Nassau\",\n    \"Kunming\",\n    \"Taipei\",\n    \"Karachi\",\n    \"Culiacán\",\n    \"Riyadh\",\n    \"Key West\",\n    \"Medina\",\n    \"Abu Dhabi\",\n    \"Al Ain\",\n    \"Taichung\",\n    \"Durango\",\n    \"Agartala\",\n    \"Dhaka\",\n    \"Muscat\",\n    \"Havana\",\n    \"Guangzhou\",\n    \"Ahmedabad\",\n    \"Dongguan\",\n    \"Tainan\",\n    \"Cabo San Lucas\",\n    \"Nanning\",\n    \"Kaohsiung\",\n    \"Kolkata (Calcutta)\",\n    \"Shenzhen\",\n    \"Chittagong\",\n    \"Hong Kong\",\n    \"Tampico\",\n    \"San Luis Potosí\",\n    \"Aguascalientes\",\n    \"Jeddah\",\n    \"Cockburn Town\",\n    \"Mecca\",\n    \"Honolulu\",\n    \"Chhattisgarh\",\n    \"Cancún\",\n    \"Surat\",\n    \"Nagpur\",\n    \"León\",\n    \"Hanoi\",\n    \"Mérida\",\n    \"Hai Phong\",\n    \"Zapopan\",\n    \"Puerto Vallarta\",\n    \"Guadalajara\",\n    \"Querétaro\",\n    \"Haikou\",\n    \"Santiago de Cuba\",\n    \"Chiang Rai\",\n    \"Naypyidaw\",\n    \"Hilo\",\n    \"George Town\",\n    \"Veracruz\",\n    \"Puebla\",\n    \"Mumbai\",\n    \"Chiang Mai\",\n    \"Port-au-Prince\",\n    \"Pune\",\n    \"Santo Domingo\",\n    \"San Juan\",\n    \"Road Town\",\n    \"Charlotte Amalie\",\n    \"The Valley\",\n    \"Nouakchott\",\n    \"Kingston\",\n    \"Vientiane\",\n    \"Visakhapatnam\",\n    \"Belize City\",\n    \"Udon Thani\",\n    \"Hyderabad\",\n    \"Basseterre\",\n    \"Belmopan\",\n    \"St. John's\",\n    \"Salalah\",\n    \"Acapulco\",\n    \"Yangon\",\n    \"Timbuktu\",\n    \"Huế\",\n    \"Khon Kaen\",\n    \"Da Nang\",\n    \"Basse-Terre\",\n    \"Omdurman\",\n    \"Khartoum\",\n    \"Sana'a\",\n    \"Asmara\",\n    \"Roseau\",\n    \"Saipan\",\n    \"Son My\",\n    \"Nakhon Ratchasima\",\n    \"Praia\",\n    \"Tapachula\",\n    \"Quetzaltenango\",\n    \"Thiès\",\n    \"Dakar\",\n    \"Quezon City\",\n    \"Guatemala City\",\n    \"Fort-de-France\",\n    \"Manila\",\n    \"Makati\",\n    \"Ayutthaya\",\n    \"Tegucigalpa\",\n    \"Castries\",\n    \"Bangkok\",\n    \"San Salvador\",\n    \"Niamey\",\n    \"Dededo\",\n    \"Hagåtña\",\n    \"Banjul\",\n    \"Serekunda\",\n    \"Siem Reap\",\n    \"Brikama\",\n    \"Kingstown\",\n    \"Bridgetown\",\n    \"Chennai (Madras)\",\n    \"Bangalore\",\n    \"Pattaya\",\n    \"Koulikoro\",\n    \"Bamako\",\n    \"Chinandega\",\n    \"Oranjestad\",\n    \"Ouagadougou\",\n    \"Managua\",\n    \"Willemstad\",\n    \"N'Djamena\",\n    \"St. George's\",\n    \"Kano\",\n    \"Bissau\",\n    \"Port Blair\",\n    \"Djibouti\",\n    \"Phnom Penh\",\n    \"Bobo-Dioulasso\",\n    \"Barranquilla\",\n    \"Ho Chi Minh City\",\n    \"Iloilo City\",\n    \"Port of Spain\",\n    \"Maracaibo\",\n    \"Liberia\",\n    \"Caracas\",\n    \"Chaguanas\",\n    \"Cartagena\",\n    \"San Fernando\",\n    \"Cebu City\",\n    \"Maracay\",\n    \"Valencia\",\n    \"Alajuela\",\n    \"Limón\",\n    \"Jaffna\",\n    \"Hargeisa\",\n    \"Puntarenas\",\n    \"Kochi\",\n    \"San José\",\n    \"Tagbilaran\",\n    \"Conakry\",\n    \"Tamale\",\n    \"Surat Thani\",\n    \"Abuja\",\n    \"Addis Ababa\",\n    \"Panama City\",\n    \"Mérida\",\n    \"Moundou\",\n    \"Trivandrum\",\n    \"Freetown\",\n    \"Ciudad Bolívar\",\n    \"Cúcuta\",\n    \"Phuket\",\n    \"San Cristóbal\",\n    \"Nzérékoré\",\n    \"Batticaloa\",\n    \"Melekeok\",\n    \"Weno\",\n    \"Ibadan\",\n    \"Koror\",\n    \"Kandy\",\n    \"Majuro\",\n    \"Davao City\",\n    \"Hat Yai\",\n    \"Colombo\",\n    \"Palikir\",\n    \"Sri Jayawardenapura-Kotte\",\n    \"Zamboanga City\",\n    \"Yamoussoukro\",\n    \"Georgetown\",\n    \"Kumasi\",\n    \"Porto-Novo\",\n    \"Lagos\",\n    \"Enugu\",\n    \"Cotonou\",\n    \"Benin City\",\n    \"Monrovia\",\n    \"Medellín\",\n    \"Lomé\",\n    \"Kota Bharu\",\n    \"Alor Setar\",\n    \"Kota Kinabalu\",\n    \"Paramaribo\",\n    \"Puerto Ayacucho\",\n    \"Accra\",\n    \"Banda Aceh\",\n    \"George Town\",\n    \"Abidjan\",\n    \"Cayenne\",\n    \"Sekondi-Takoradi\",\n    \"Bandar Seri Begawan\",\n    \"Juba\",\n    \"Port Harcourt\",\n    \"Ipoh\",\n    \"Bogotá\",\n    \"Miri\",\n    \"Bangui\",\n    \"Malé\",\n    \"Douala\",\n    \"Yaoundé\",\n    \"Malabo\",\n    \"Medan\",\n    \"Santiago de Cali\",\n    \"Kuala Lumpur\",\n    \"Boa Vista\",\n    \"Malacca Town\",\n    \"Mogadishu\",\n    \"Kuching\",\n    \"Johor Bahru\",\n    \"South Tarawa\",\n    \"Singapore\",\n    \"Pekanbaru\",\n    \"Libreville\",\n    \"São Tomé\",\n    \"Kampala\",\n    \"Entebbe\",\n    \"Mbandaka\",\n    \"Macapá\",\n    \"Pontianak\",\n    \"Quito\",\n    \"Kismayo\",\n    \"Yaren District\",\n    \"Padang\",\n    \"Balikpapan\",\n    \"Nairobi\",\n    \"Belém\",\n    \"Kigali\",\n    \"Guayaquil\",\n    \"Mwanza\",\n    \"São Luís\",\n    \"Jayapura\",\n    \"Palembang\",\n    \"Manaus\",\n    \"Bujumbura\",\n    \"Sobral\",\n    \"Ambon\",\n    \"Fortaleza\",\n    \"Iquitos\",\n    \"Fernando de Noronha\",\n    \"Mombasa\",\n    \"Brazzaville\",\n    \"Kinshasa\",\n    \"Victoria\",\n    \"Teresina\",\n    \"Makassar\",\n    \"Imperatriz\",\n    \"Natal\",\n    \"Zanzibar City\",\n    \"Dodoma\",\n    \"Jakarta\",\n    \"Bogor\",\n    \"Dar es Salaam\",\n    \"Bandung\",\n    \"Semarang\",\n    \"João Pessoa\",\n    \"Juazeiro do Norte\",\n    \"Campina Grande\",\n    \"Surabaya\",\n    \"Yogyakarta\",\n    \"Malang\",\n    \"Recife\",\n    \"Trujillo\",\n    \"Caruaru\",\n    \"Funafuti\",\n    \"Dili\",\n    \"Denpasar\",\n    \"Porto Velho\",\n    \"Luanda\",\n    \"Garanhuns\",\n    \"Nukulaelae\",\n    \"Petrolina\",\n    \"Honiara\",\n    \"Port Moresby\",\n    \"Maceió\",\n    \"Rio Branco\",\n    \"Aracaju\",\n    \"Palmas\",\n    \"Lubumbashi\",\n    \"Moroni\",\n    \"Sinop\",\n    \"Lima\",\n    \"Darwin\",\n    \"Huambo\",\n    \"Mamoudzou\",\n    \"Ndola\",\n    \"Salvador\",\n    \"Ayacucho\",\n    \"Mata-Utu\",\n    \"Cusco\",\n    \"Apia\",\n    \"Lilongwe\",\n    \"Pago Pago\",\n    \"Ilhéus\",\n    \"Lusaka\",\n    \"Cuiabá\",\n    \"Blantyre\",\n    \"Brasília\",\n    \"Jamestown\",\n    \"Arequipa\",\n    \"Labasa\",\n    \"Rabi Island\",\n    \"La Paz\",\n    \"Goiânia\",\n    \"Cairns\",\n    \"Papeete\",\n    \"Port Vila\",\n    \"Santa Cruz de la Sierra\",\n    \"Livingstone\",\n    \"Harare\",\n    \"Suva\",\n    \"Arica\",\n    \"Governador Valadares\",\n    \"Uberlândia\",\n    \"Antananarivo\",\n    \"Mutare\",\n    \"Sucre\",\n    \"Alofi\",\n    \"Townsville\",\n    \"Gweru\",\n    \"Belo Horizonte\",\n    \"Port Louis\",\n    \"Bulawayo\",\n    \"Iquique\",\n    \"Port Hedland\",\n    \"Vitória\",\n    \"Campo Grande\",\n    \"São José do Rio Preto\",\n    \"Saint-Denis\",\n    \"Nukuʻalofa\",\n    \"Francistown\",\n    \"Ribeirão Preto\",\n    \"Avarua\",\n    \"Juiz de Fora\",\n    \"Poços de Caldas\",\n    \"Araraquara\",\n    \"Nouméa\",\n    \"Bauru\",\n    \"Calama\",\n    \"Windhoek\",\n    \"Assis\",\n    \"Campinas\",\n    \"Rio de Janeiro\",\n    \"São José dos Campos\",\n    \"Rockhampton\",\n    \"São Paulo\",\n    \"Antofagasta\",\n    \"Polokwane\",\n    \"Gaborone\",\n    \"Salta\",\n    \"Adamstown\",\n    \"Asunción\",\n    \"Curitiba\",\n    \"Nelspruit\",\n    \"Ciudad del Este\",\n    \"Pretoria\",\n    \"Mafikeng\",\n    \"Maputo\",\n    \"Johannesburg\",\n    \"Mbabane\",\n    \"Lobamba\",\n    \"Manzini\",\n    \"San Miguel de Tucumán\",\n    \"Hanga Roa\",\n    \"Copiapó\",\n    \"Brisbane\",\n    \"Corrientes\",\n    \"Florianópolis\",\n    \"Gold Coast\",\n    \"Kimberley\",\n    \"Kingston\",\n    \"Bloemfontein\",\n    \"Maseru\",\n    \"Pietermaritzburg\",\n    \"Durban\",\n    \"La Serena\",\n    \"Córdoba\",\n    \"Santa Fe\",\n    \"Pelotas\",\n    \"Perth\",\n    \"San Juan\",\n    \"Mandurah\",\n    \"Bhisho\",\n    \"Mendoza\",\n    \"Newcastle\",\n    \"Rosario\",\n    \"Viña del Mar\",\n    \"Valparaíso\",\n    \"Santiago\",\n    \"Chuí\",\n    \"Sydney\",\n    \"Cape Town\",\n    \"Port Elizabeth\",\n    \"Wollongong\",\n    \"Buenos Aires\",\n    \"Montevideo\",\n    \"Adelaide\",\n    \"Canberra\",\n    \"Concepción\",\n    \"Auckland\",\n    \"Edinburgh of the Seven Seas\",\n    \"Hamilton\",\n    \"Melbourne\",\n    \"Mar del Plata\",\n    \"Geelong\",\n    \"Bahía Blanca\",\n    \"Temuco\",\n    \"Neuquén\",\n    \"Hastings\",\n    \"Valdivia\",\n    \"San Carlos de Bariloche\",\n    \"Nelson\",\n    \"Wellington\",\n    \"Puerto Montt\",\n    \"Launceston, Tasmania\",\n    \"Hobart\",\n    \"Trelew\",\n    \"Christchurch\",\n    \"Waitangi\",\n    \"Puerto Aisén\",\n    \"Coihaique\",\n    \"Comodoro Rivadavia\",\n    \"Dunedin\",\n    \"Invercargill\",\n    \"Río Gallegos\",\n    \"Stanley\",\n    \"Punta Arenas\",\n    \"Grytviken\",\n    \"Ushuaia\",\n    \"Puerto Williams\",\n    \"Puerto Toro\",\n    \"Villa Las Estrellas\",\n    \"Esperanza\",\n    \"Rothera\",\n    \"Concordia\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeNamesTypeAttributes = exports.singularizeTypeNames = exports.modifyTypeNames = exports.namesTypeAttributeKind = exports.TooManyTypeNames = exports.RegularTypeNames = exports.TypeNames = exports.tooManyNamesThreshold = exports.initTypeNames = void 0;\nconst pluralize = __importStar(require(\"pluralize\"));\nconst collection_utils_1 = require(\"collection-utils\");\nconst Support_1 = require(\"../support/Support\");\nconst TypeAttributes_1 = require(\"./TypeAttributes\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Chance_1 = require(\"../support/Chance\");\nlet chance;\nlet usedRandomNames;\nfunction initTypeNames() {\n    chance = new Chance_1.Chance(31415);\n    usedRandomNames = new Set();\n}\nexports.initTypeNames = initTypeNames;\ninitTypeNames();\nfunction makeRandomName() {\n    for (;;) {\n        const name = `${chance.city()} ${chance.animal()}`;\n        if (usedRandomNames.has(name))\n            continue;\n        usedRandomNames.add(name);\n        return name;\n    }\n}\n// FIXME: In the case of overlapping prefixes and suffixes we will\n// produce a name that includes the overlap twice.  For example, for\n// the names \"aaa\" and \"aaaa\" we have the common prefix \"aaa\" and the\n// common suffix \"aaa\", so we will produce the combined name \"aaaaaa\".\nfunction combineNames(names) {\n    let originalFirst = (0, collection_utils_1.iterableFirst)(names);\n    if (originalFirst === undefined) {\n        return (0, Support_1.panic)(\"Named type has no names\");\n    }\n    if (names.size === 1) {\n        return originalFirst;\n    }\n    const namesSet = (0, collection_utils_1.setMap)(names, s => (0, Strings_1.splitIntoWords)(s)\n        .map(w => w.word.toLowerCase())\n        .join(\"_\"));\n    const first = (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(namesSet));\n    if (namesSet.size === 1) {\n        return first;\n    }\n    let prefixLength = first.length;\n    let suffixLength = first.length;\n    for (const n of (0, collection_utils_1.iterableSkip)(namesSet, 1)) {\n        prefixLength = Math.min(prefixLength, n.length);\n        for (let i = 0; i < prefixLength; i++) {\n            if (first[i] !== n[i]) {\n                prefixLength = i;\n                break;\n            }\n        }\n        suffixLength = Math.min(suffixLength, n.length);\n        for (let i = 0; i < suffixLength; i++) {\n            if (first[first.length - i - 1] !== n[n.length - i - 1]) {\n                suffixLength = i;\n                break;\n            }\n        }\n    }\n    const prefix = prefixLength > 2 ? first.slice(0, prefixLength) : \"\";\n    const suffix = suffixLength > 2 ? first.slice(first.length - suffixLength) : \"\";\n    const combined = prefix + suffix;\n    if (combined.length > 2) {\n        return combined;\n    }\n    return first;\n}\nexports.tooManyNamesThreshold = 1000;\nclass TypeNames {\n    static makeWithDistance(names, alternativeNames, distance) {\n        if (names.size >= exports.tooManyNamesThreshold) {\n            return new TooManyTypeNames(distance);\n        }\n        if (alternativeNames === undefined || alternativeNames.size > exports.tooManyNamesThreshold) {\n            alternativeNames = undefined;\n        }\n        return new RegularTypeNames(names, alternativeNames, distance);\n    }\n    static make(names, alternativeNames, areInferred) {\n        return TypeNames.makeWithDistance(names, alternativeNames, areInferred ? 1 : 0);\n    }\n    constructor(distance) {\n        this.distance = distance;\n    }\n    get areInferred() {\n        return this.distance > 0;\n    }\n}\nexports.TypeNames = TypeNames;\nclass RegularTypeNames extends TypeNames {\n    constructor(names, _alternativeNames, distance) {\n        super(distance);\n        this.names = names;\n        this._alternativeNames = _alternativeNames;\n    }\n    add(namesArray, startIndex = 0) {\n        let newNames = new Set(this.names);\n        let newDistance = this.distance;\n        let newAlternativeNames = (0, collection_utils_1.definedMap)(this._alternativeNames, s => new Set(s));\n        for (let i = startIndex; i < namesArray.length; i++) {\n            const other = namesArray[i];\n            if (other instanceof RegularTypeNames && other._alternativeNames !== undefined) {\n                if (newAlternativeNames === undefined) {\n                    newAlternativeNames = new Set();\n                }\n                (0, collection_utils_1.setUnionInto)(newAlternativeNames, other._alternativeNames);\n            }\n            if (other.distance > newDistance)\n                continue;\n            if (!(other instanceof RegularTypeNames)) {\n                (0, Support_1.assert)(other instanceof TooManyTypeNames, \"Unknown TypeNames instance\");\n                // The other one is at most our distance, so let it sort it out\n                return other.add(namesArray, i + 1);\n            }\n            if (other.distance < newDistance) {\n                // The other one is closer, so take its names\n                newNames = new Set(other.names);\n                newDistance = other.distance;\n                newAlternativeNames = (0, collection_utils_1.definedMap)(other._alternativeNames, s => new Set(s));\n            }\n            else {\n                // Same distance, merge them\n                (0, Support_1.assert)(other.distance === newDistance, \"This should be the only case left\");\n                (0, collection_utils_1.setUnionInto)(newNames, other.names);\n            }\n        }\n        return TypeNames.makeWithDistance(newNames, newAlternativeNames, newDistance);\n    }\n    clearInferred() {\n        const newNames = this.areInferred ? new Set() : this.names;\n        return TypeNames.makeWithDistance(newNames, new Set(), this.distance);\n    }\n    get combinedName() {\n        return combineNames(this.names);\n    }\n    get proposedNames() {\n        const set = new Set([this.combinedName]);\n        if (this._alternativeNames === undefined) {\n            return set;\n        }\n        (0, collection_utils_1.setUnionInto)(set, this._alternativeNames);\n        return set;\n    }\n    makeInferred() {\n        return TypeNames.makeWithDistance(this.names, this._alternativeNames, this.distance + 1);\n    }\n    singularize() {\n        return TypeNames.makeWithDistance((0, collection_utils_1.setMap)(this.names, pluralize.singular), (0, collection_utils_1.definedMap)(this._alternativeNames, an => (0, collection_utils_1.setMap)(an, pluralize.singular)), this.distance + 1);\n    }\n    toString() {\n        const inferred = this.areInferred ? `distance ${this.distance}` : \"given\";\n        const names = `${inferred} ${Array.from(this.names).join(\",\")}`;\n        if (this._alternativeNames === undefined) {\n            return names;\n        }\n        return `${names} (${Array.from(this._alternativeNames).join(\",\")})`;\n    }\n}\nexports.RegularTypeNames = RegularTypeNames;\nclass TooManyTypeNames extends TypeNames {\n    constructor(distance, name) {\n        super(distance);\n        if (name === undefined) {\n            name = makeRandomName();\n        }\n        this.names = new Set([name]);\n    }\n    get combinedName() {\n        return (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(this.names));\n    }\n    get proposedNames() {\n        return this.names;\n    }\n    add(namesArray, startIndex = 0) {\n        if (!this.areInferred)\n            return this;\n        for (let i = startIndex; i < namesArray.length; i++) {\n            const other = namesArray[i];\n            if (other.distance < this.distance) {\n                return other.add(namesArray, i + 1);\n            }\n        }\n        return this;\n    }\n    clearInferred() {\n        if (!this.areInferred) {\n            return this;\n        }\n        return TypeNames.makeWithDistance(new Set(), new Set(), this.distance);\n    }\n    makeInferred() {\n        return new TooManyTypeNames(this.distance + 1, (0, collection_utils_1.iterableFirst)(this.names));\n    }\n    singularize() {\n        return this;\n    }\n    toString() {\n        return `too many ${this.combinedName}`;\n    }\n}\nexports.TooManyTypeNames = TooManyTypeNames;\nclass TypeNamesTypeAttributeKind extends TypeAttributes_1.TypeAttributeKind {\n    constructor() {\n        super(\"names\");\n    }\n    combine(namesArray) {\n        (0, Support_1.assert)(namesArray.length > 0, \"Can't combine zero type names\");\n        return namesArray[0].add(namesArray, 1);\n    }\n    makeInferred(tn) {\n        return tn.makeInferred();\n    }\n    increaseDistance(tn) {\n        return tn.makeInferred();\n    }\n    stringify(tn) {\n        return tn.toString();\n    }\n}\nexports.namesTypeAttributeKind = new TypeNamesTypeAttributeKind();\nfunction modifyTypeNames(attributes, modifier) {\n    return exports.namesTypeAttributeKind.modifyInAttributes(attributes, modifier);\n}\nexports.modifyTypeNames = modifyTypeNames;\nfunction singularizeTypeNames(attributes) {\n    return modifyTypeNames(attributes, maybeNames => {\n        if (maybeNames === undefined)\n            return undefined;\n        return maybeNames.singularize();\n    });\n}\nexports.singularizeTypeNames = singularizeTypeNames;\nfunction makeNamesTypeAttributes(nameOrNames, areNamesInferred) {\n    let typeNames;\n    if (typeof nameOrNames === \"string\") {\n        typeNames = TypeNames.make(new Set([nameOrNames]), new Set(), (0, Support_1.defined)(areNamesInferred));\n    }\n    else {\n        typeNames = nameOrNames;\n    }\n    return exports.namesTypeAttributeKind.makeAttributes(typeNames);\n}\nexports.makeNamesTypeAttributes = makeNamesTypeAttributes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeBuilder = exports.getNoStringTypeMapping = exports.stringTypeMappingGet = exports.provenanceTypeAttributeKind = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Type_1 = require(\"./Type\");\nconst TypeGraph_1 = require(\"./TypeGraph\");\nconst TypeAttributes_1 = require(\"./attributes/TypeAttributes\");\nconst Support_1 = require(\"./support/Support\");\nconst StringTypes_1 = require(\"./attributes/StringTypes\");\n// FIXME: Don't infer provenance.  All original types should be present in\n// non-inferred form in the final graph.\nclass ProvenanceTypeAttributeKind extends TypeAttributes_1.TypeAttributeKind {\n    constructor() {\n        super(\"provenance\");\n    }\n    appliesToTypeKind(_kind) {\n        return true;\n    }\n    combine(arr) {\n        return (0, collection_utils_1.setUnionManyInto)(new Set(), arr);\n    }\n    makeInferred(p) {\n        return p;\n    }\n    stringify(p) {\n        return Array.from(p)\n            .sort()\n            .map(i => i.toString())\n            .join(\",\");\n    }\n}\nexports.provenanceTypeAttributeKind = new ProvenanceTypeAttributeKind();\nfunction stringTypeMappingGet(stm, kind) {\n    const mapped = stm.get(kind);\n    if (mapped === undefined)\n        return \"string\";\n    return mapped;\n}\nexports.stringTypeMappingGet = stringTypeMappingGet;\nlet noStringTypeMapping;\nfunction getNoStringTypeMapping() {\n    if (noStringTypeMapping === undefined) {\n        noStringTypeMapping = new Map(Array.from(Type_1.transformedStringTypeKinds).map(k => [k, k]));\n    }\n    return noStringTypeMapping;\n}\nexports.getNoStringTypeMapping = getNoStringTypeMapping;\nclass TypeBuilder {\n    constructor(typeGraphSerial, _stringTypeMapping, canonicalOrder, _allPropertiesOptional, _addProvenanceAttributes, inheritsProvenanceAttributes) {\n        this._stringTypeMapping = _stringTypeMapping;\n        this.canonicalOrder = canonicalOrder;\n        this._allPropertiesOptional = _allPropertiesOptional;\n        this._addProvenanceAttributes = _addProvenanceAttributes;\n        this.topLevels = new Map();\n        this.types = [];\n        this.typeAttributes = [];\n        this._addedForwardingIntersection = false;\n        this._typeForIdentity = new collection_utils_1.EqualityMap();\n        (0, Support_1.assert)(!_addProvenanceAttributes || !inheritsProvenanceAttributes, \"We can't both inherit as well as add provenance\");\n        this.typeGraph = new TypeGraph_1.TypeGraph(this, typeGraphSerial, _addProvenanceAttributes || inheritsProvenanceAttributes);\n    }\n    addTopLevel(name, tref) {\n        // assert(t.typeGraph === this.typeGraph, \"Adding top-level to wrong type graph\");\n        (0, Support_1.assert)(!this.topLevels.has(name), \"Trying to add top-level with existing name\");\n        (0, Support_1.assert)(this.types[(0, TypeGraph_1.typeRefIndex)(tref)] !== undefined, \"Trying to add a top-level type that doesn't exist (yet?)\");\n        this.topLevels.set(name, tref);\n    }\n    reserveTypeRef() {\n        const index = this.types.length;\n        // console.log(`reserving ${index}`);\n        this.types.push(undefined);\n        const tref = (0, TypeGraph_1.makeTypeRef)(this.typeGraph, index);\n        const attributes = this._addProvenanceAttributes\n            ? exports.provenanceTypeAttributeKind.makeAttributes(new Set([index]))\n            : TypeAttributes_1.emptyTypeAttributes;\n        this.typeAttributes.push(attributes);\n        return tref;\n    }\n    assertTypeRefGraph(tref) {\n        if (tref === undefined)\n            return;\n        (0, TypeGraph_1.assertTypeRefGraph)(tref, this.typeGraph);\n    }\n    assertTypeRefSetGraph(trefs) {\n        if (trefs === undefined)\n            return;\n        trefs.forEach(tref => this.assertTypeRefGraph(tref));\n    }\n    filterTypeAttributes(t, attributes) {\n        const filtered = (0, collection_utils_1.mapFilter)(attributes, (_, k) => k.appliesToTypeKind(t.kind));\n        if (attributes.size !== filtered.size) {\n            this.setLostTypeAttributes();\n        }\n        return filtered;\n    }\n    commitType(tref, t) {\n        this.assertTypeRefGraph(tref);\n        const index = (0, TypeGraph_1.typeRefIndex)(tref);\n        // const name = names !== undefined ? ` ${names.combinedName}` : \"\";\n        // console.log(`committing ${t.kind}${name} to ${index}`);\n        (0, Support_1.assert)(this.types[index] === undefined, \"A type index was committed twice\");\n        this.types[index] = t;\n        this.typeAttributes[index] = this.filterTypeAttributes(t, this.typeAttributes[index]);\n    }\n    addType(forwardingRef, creator, attributes) {\n        if (forwardingRef !== undefined) {\n            this.assertTypeRefGraph(forwardingRef);\n            (0, Support_1.assert)(this.types[(0, TypeGraph_1.typeRefIndex)(forwardingRef)] === undefined);\n        }\n        const tref = forwardingRef !== undefined ? forwardingRef : this.reserveTypeRef();\n        if (attributes !== undefined) {\n            const index = (0, TypeGraph_1.typeRefIndex)(tref);\n            this.typeAttributes[index] = (0, TypeAttributes_1.combineTypeAttributes)(\"union\", this.typeAttributes[index], attributes);\n        }\n        const t = creator(tref);\n        this.commitType(tref, t);\n        return tref;\n    }\n    typeAtIndex(index) {\n        const maybeType = this.types[index];\n        if (maybeType === undefined) {\n            return (0, Support_1.panic)(\"Trying to deref an undefined type in a type builder\");\n        }\n        return maybeType;\n    }\n    atIndex(index) {\n        const t = this.typeAtIndex(index);\n        const attribtues = this.typeAttributes[index];\n        return [t, attribtues];\n    }\n    addAttributes(tref, attributes) {\n        this.assertTypeRefGraph(tref);\n        const index = (0, TypeGraph_1.typeRefIndex)(tref);\n        const existingAttributes = this.typeAttributes[index];\n        (0, Support_1.assert)((0, collection_utils_1.iterableEvery)(attributes, ([k, v]) => {\n            if (!k.inIdentity)\n                return true;\n            const existing = existingAttributes.get(k);\n            if (existing === undefined)\n                return false;\n            return (0, collection_utils_1.areEqual)(existing, v);\n        }), \"Can't add different identity type attributes to an existing type\");\n        const maybeType = this.types[index];\n        if (maybeType !== undefined) {\n            attributes = this.filterTypeAttributes(maybeType, attributes);\n        }\n        const nonIdentityAttributes = (0, collection_utils_1.mapFilter)(attributes, (_, k) => !k.inIdentity);\n        this.typeAttributes[index] = (0, TypeAttributes_1.combineTypeAttributes)(\"union\", existingAttributes, nonIdentityAttributes);\n    }\n    finish() {\n        this.typeGraph.freeze(this.topLevels, this.types.map(Support_1.defined), this.typeAttributes);\n        return this.typeGraph;\n    }\n    addForwardingIntersection(forwardingRef, tref) {\n        this.assertTypeRefGraph(tref);\n        this._addedForwardingIntersection = true;\n        return this.addType(forwardingRef, tr => new Type_1.IntersectionType(tr, this.typeGraph, new Set([tref])), undefined);\n    }\n    forwardIfNecessary(forwardingRef, tref) {\n        if (tref === undefined)\n            return undefined;\n        if (forwardingRef === undefined)\n            return tref;\n        return this.addForwardingIntersection(forwardingRef, tref);\n    }\n    get didAddForwardingIntersection() {\n        return this._addedForwardingIntersection;\n    }\n    registerTypeForIdentity(identity, tref) {\n        if (identity === undefined)\n            return;\n        this._typeForIdentity.set(identity, tref);\n    }\n    makeIdentity(maker) {\n        return maker();\n    }\n    getOrAddType(identityMaker, creator, attributes, forwardingRef) {\n        const identity = this.makeIdentity(identityMaker);\n        let maybeTypeRef;\n        if (identity === undefined) {\n            maybeTypeRef = undefined;\n        }\n        else {\n            maybeTypeRef = this._typeForIdentity.get(identity);\n        }\n        if (maybeTypeRef !== undefined) {\n            const result = this.forwardIfNecessary(forwardingRef, maybeTypeRef);\n            if (attributes !== undefined) {\n                // We only add the attributes that are not in the identity, since\n                // we found the type based on its identity, i.e. all the identity\n                // attributes must be in there already, and we have a check that\n                // asserts that no identity attributes are added later.\n                this.addAttributes(result, (0, collection_utils_1.mapFilter)(attributes, (_, k) => !k.inIdentity));\n            }\n            return result;\n        }\n        const tref = this.addType(forwardingRef, creator, attributes);\n        this.registerTypeForIdentity(identity, tref);\n        return tref;\n    }\n    registerType(t) {\n        this.registerTypeForIdentity(t.identity, t.typeRef);\n    }\n    getPrimitiveType(kind, maybeAttributes, forwardingRef) {\n        const attributes = (0, collection_utils_1.withDefault)(maybeAttributes, TypeAttributes_1.emptyTypeAttributes);\n        // FIXME: Why do date/time types need a StringTypes attribute?\n        // FIXME: Remove this from here and put it into flattenStrings\n        let stringTypes = kind === \"string\" ? undefined : StringTypes_1.StringTypes.unrestricted;\n        if ((0, Type_1.isPrimitiveStringTypeKind)(kind) && kind !== \"string\") {\n            kind = stringTypeMappingGet(this._stringTypeMapping, kind);\n        }\n        if (kind === \"string\") {\n            return this.getStringType(attributes, stringTypes, forwardingRef);\n        }\n        return this.getOrAddType(() => (0, Type_1.primitiveTypeIdentity)(kind, attributes), tr => new Type_1.PrimitiveType(tr, this.typeGraph, kind), attributes, forwardingRef);\n    }\n    getStringType(attributes, stringTypes, forwardingRef) {\n        const existingStringTypes = (0, collection_utils_1.mapFind)(attributes, (_, k) => k === StringTypes_1.stringTypesTypeAttributeKind);\n        (0, Support_1.assert)((stringTypes === undefined) !== (existingStringTypes === undefined), \"Must instantiate string type with one enum case attribute\");\n        if (existingStringTypes === undefined) {\n            attributes = (0, TypeAttributes_1.combineTypeAttributes)(\"union\", attributes, StringTypes_1.stringTypesTypeAttributeKind.makeAttributes((0, Support_1.defined)(stringTypes)));\n        }\n        return this.getOrAddType(() => (0, Type_1.primitiveTypeIdentity)(\"string\", attributes), tr => new Type_1.PrimitiveType(tr, this.typeGraph, \"string\"), attributes, forwardingRef);\n    }\n    getEnumType(attributes, cases, forwardingRef) {\n        return this.getOrAddType(() => (0, Type_1.enumTypeIdentity)(attributes, cases), tr => new Type_1.EnumType(tr, this.typeGraph, cases), attributes, forwardingRef);\n    }\n    makeClassProperty(tref, isOptional) {\n        return new Type_1.ClassProperty(tref, this.typeGraph, isOptional);\n    }\n    getUniqueObjectType(attributes, properties, additionalProperties, forwardingRef) {\n        this.assertTypeRefGraph(additionalProperties);\n        properties = (0, collection_utils_1.definedMap)(properties, p => this.modifyPropertiesIfNecessary(p));\n        return this.addType(forwardingRef, tref => new Type_1.ObjectType(tref, this.typeGraph, \"object\", true, properties, additionalProperties), attributes);\n    }\n    getUniqueMapType(forwardingRef) {\n        return this.addType(forwardingRef, tr => new Type_1.MapType(tr, this.typeGraph, undefined), undefined);\n    }\n    getMapType(attributes, values, forwardingRef) {\n        this.assertTypeRefGraph(values);\n        return this.getOrAddType(() => (0, Type_1.mapTypeIdentify)(attributes, values), tr => new Type_1.MapType(tr, this.typeGraph, values), attributes, forwardingRef);\n    }\n    setObjectProperties(ref, properties, additionalProperties) {\n        this.assertTypeRefGraph(additionalProperties);\n        const type = (0, TypeGraph_1.derefTypeRef)(ref, this.typeGraph);\n        if (!(type instanceof Type_1.ObjectType)) {\n            return (0, Support_1.panic)(\"Tried to set properties of non-object type\");\n        }\n        type.setProperties(this.modifyPropertiesIfNecessary(properties), additionalProperties);\n        this.registerType(type);\n    }\n    getUniqueArrayType(forwardingRef) {\n        return this.addType(forwardingRef, tr => new Type_1.ArrayType(tr, this.typeGraph, undefined), undefined);\n    }\n    getArrayType(attributes, items, forwardingRef) {\n        this.assertTypeRefGraph(items);\n        return this.getOrAddType(() => (0, Type_1.arrayTypeIdentity)(attributes, items), tr => new Type_1.ArrayType(tr, this.typeGraph, items), attributes, forwardingRef);\n    }\n    setArrayItems(ref, items) {\n        this.assertTypeRefGraph(items);\n        const type = (0, TypeGraph_1.derefTypeRef)(ref, this.typeGraph);\n        if (!(type instanceof Type_1.ArrayType)) {\n            return (0, Support_1.panic)(\"Tried to set items of non-array type\");\n        }\n        type.setItems(items);\n        this.registerType(type);\n    }\n    modifyPropertiesIfNecessary(properties) {\n        properties.forEach(p => this.assertTypeRefGraph(p.typeRef));\n        if (this.canonicalOrder) {\n            properties = (0, collection_utils_1.mapSortByKey)(properties);\n        }\n        if (this._allPropertiesOptional) {\n            properties = (0, collection_utils_1.mapMap)(properties, cp => this.makeClassProperty(cp.typeRef, true));\n        }\n        return properties;\n    }\n    getClassType(attributes, properties, forwardingRef) {\n        properties = this.modifyPropertiesIfNecessary(properties);\n        return this.getOrAddType(() => (0, Type_1.classTypeIdentity)(attributes, properties), tr => new Type_1.ClassType(tr, this.typeGraph, false, properties), attributes, forwardingRef);\n    }\n    // FIXME: Maybe just distinguish between this and `getClassType`\n    // via a flag?  That would make `ClassType.map` simpler.\n    getUniqueClassType(attributes, isFixed, properties, forwardingRef) {\n        properties = (0, collection_utils_1.definedMap)(properties, p => this.modifyPropertiesIfNecessary(p));\n        return this.addType(forwardingRef, tref => new Type_1.ClassType(tref, this.typeGraph, isFixed, properties), attributes);\n    }\n    getUnionType(attributes, members, forwardingRef) {\n        this.assertTypeRefSetGraph(members);\n        return this.getOrAddType(() => (0, Type_1.unionTypeIdentity)(attributes, members), tr => new Type_1.UnionType(tr, this.typeGraph, members), attributes, forwardingRef);\n    }\n    // FIXME: why do we sometimes call this with defined members???\n    getUniqueUnionType(attributes, members, forwardingRef) {\n        this.assertTypeRefSetGraph(members);\n        return this.addType(forwardingRef, tref => new Type_1.UnionType(tref, this.typeGraph, members), attributes);\n    }\n    getIntersectionType(attributes, members, forwardingRef) {\n        this.assertTypeRefSetGraph(members);\n        return this.getOrAddType(() => (0, Type_1.intersectionTypeIdentity)(attributes, members), tr => new Type_1.IntersectionType(tr, this.typeGraph, members), attributes, forwardingRef);\n    }\n    // FIXME: why do we sometimes call this with defined members???\n    getUniqueIntersectionType(attributes, members, forwardingRef) {\n        this.assertTypeRefSetGraph(members);\n        return this.addType(forwardingRef, tref => new Type_1.IntersectionType(tref, this.typeGraph, members), attributes);\n    }\n    setSetOperationMembers(ref, members) {\n        this.assertTypeRefSetGraph(members);\n        const type = (0, TypeGraph_1.derefTypeRef)(ref, this.typeGraph);\n        if (!(type instanceof Type_1.UnionType || type instanceof Type_1.IntersectionType)) {\n            return (0, Support_1.panic)(\"Tried to set members of non-set-operation type\");\n        }\n        type.setMembers(members);\n        this.registerType(type);\n    }\n    setLostTypeAttributes() {\n        return;\n    }\n}\nexports.TypeBuilder = TypeBuilder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.inferTransformedStringTypeKindForString = exports.stringTypesTypeAttributeKind = exports.StringTypes = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst TypeAttributes_1 = require(\"./TypeAttributes\");\nconst Support_1 = require(\"../support/Support\");\nconst TypeBuilder_1 = require(\"../TypeBuilder\");\nclass StringTypes {\n    static fromCase(s, count) {\n        const caseMap = {};\n        caseMap[s] = count;\n        return new StringTypes(new Map([[s, count]]), new Set());\n    }\n    static fromCases(cases) {\n        const caseMap = {};\n        for (const s of cases) {\n            caseMap[s] = 1;\n        }\n        return new StringTypes(new Map(cases.map(s => [s, 1])), new Set());\n    }\n    // undefined means no restrictions\n    constructor(cases, transformations) {\n        this.cases = cases;\n        this.transformations = transformations;\n        if (cases === undefined) {\n            (0, Support_1.assert)(transformations.size === 0, \"We can't have an unrestricted string that also allows transformations\");\n        }\n    }\n    get isRestricted() {\n        return this.cases !== undefined;\n    }\n    union(othersArray, startIndex) {\n        if (this.cases === undefined)\n            return this;\n        const cases = new Map(this.cases);\n        const transformations = new Set(this.transformations);\n        for (let i = startIndex; i < othersArray.length; i++) {\n            const other = othersArray[i];\n            if (other.cases === undefined)\n                return other;\n            (0, collection_utils_1.mapMergeWithInto)(cases, (x, y) => x + y, other.cases);\n            (0, collection_utils_1.setUnionInto)(transformations, other.transformations);\n        }\n        return new StringTypes(cases, transformations);\n    }\n    intersect(othersArray, startIndex) {\n        let cases = this.cases;\n        let transformations = this.transformations;\n        for (let i = startIndex; i < othersArray.length; i++) {\n            const other = othersArray[i];\n            if (cases === undefined) {\n                cases = (0, collection_utils_1.definedMap)(other.cases, m => new Map(m));\n            }\n            else if (other.cases !== undefined) {\n                const thisCases = cases;\n                const otherCases = other.cases;\n                const intersects = (0, collection_utils_1.setIntersect)(thisCases.keys(), new Set(otherCases.keys()));\n                const entries = intersects.size > 0 ? intersects.entries() : new Set(thisCases.keys()).entries();\n                cases = (0, collection_utils_1.mapMap)(entries, k => {\n                    var _a;\n                    const thisValue = (0, Support_1.defined)(thisCases.get(k));\n                    const otherValue = (_a = otherCases.get(k)) !== null && _a !== void 0 ? _a : Math.min();\n                    return Math.min(thisValue, otherValue);\n                });\n            }\n            transformations = (0, collection_utils_1.setIntersect)(transformations, other.transformations);\n        }\n        return new StringTypes(cases, transformations);\n    }\n    applyStringTypeMapping(mapping) {\n        if (!this.isRestricted)\n            return this;\n        const kinds = new Set();\n        for (const kind of this.transformations) {\n            const mapped = (0, TypeBuilder_1.stringTypeMappingGet)(mapping, kind);\n            if (mapped === \"string\")\n                return StringTypes.unrestricted;\n            kinds.add(mapped);\n        }\n        return new StringTypes(this.cases, new Set(kinds));\n    }\n    equals(other) {\n        if (!(other instanceof StringTypes))\n            return false;\n        return (0, collection_utils_1.areEqual)(this.cases, other.cases) && (0, collection_utils_1.areEqual)(this.transformations, other.transformations);\n    }\n    hashCode() {\n        let h = (0, collection_utils_1.hashCodeOf)(this.cases);\n        h = (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashCodeOf)(this.transformations));\n        return h;\n    }\n    toString() {\n        const parts = [];\n        const enumCases = this.cases;\n        if (enumCases === undefined) {\n            parts.push(\"unrestricted\");\n        }\n        else {\n            const firstKey = (0, collection_utils_1.iterableFirst)(enumCases.keys());\n            if (firstKey === undefined) {\n                parts.push(\"enum with no cases\");\n            }\n            else {\n                parts.push(`${enumCases.size.toString()} enums: ${firstKey} (${enumCases.get(firstKey)}), ...`);\n            }\n        }\n        return parts.concat(Array.from(this.transformations)).join(\",\");\n    }\n}\nexports.StringTypes = StringTypes;\nStringTypes.unrestricted = new StringTypes(undefined, new Set());\nclass StringTypesTypeAttributeKind extends TypeAttributes_1.TypeAttributeKind {\n    constructor() {\n        super(\"stringTypes\");\n    }\n    get inIdentity() {\n        return true;\n    }\n    requiresUniqueIdentity(st) {\n        return st.cases !== undefined && st.cases.size > 0;\n    }\n    combine(arr) {\n        (0, Support_1.assert)(arr.length > 0);\n        return arr[0].union(arr, 1);\n    }\n    intersect(arr) {\n        (0, Support_1.assert)(arr.length > 0);\n        return arr[0].intersect(arr, 1);\n    }\n    makeInferred(_) {\n        return undefined;\n    }\n    stringify(st) {\n        return st.toString();\n    }\n}\nexports.stringTypesTypeAttributeKind = new StringTypesTypeAttributeKind();\nconst INTEGER_STRING = /^(0|-?[1-9]\\d*)$/;\n// We're restricting numbers to what's representable as 32 bit\n// signed integers, to be on the safe side of most languages.\nconst MIN_INTEGER_STRING = 1 << 31;\nconst MAX_INTEGER_STRING = -(MIN_INTEGER_STRING + 1);\nfunction isIntegerString(s) {\n    if (s.match(INTEGER_STRING) === null) {\n        return false;\n    }\n    const i = parseInt(s, 10);\n    return i >= MIN_INTEGER_STRING && i <= MAX_INTEGER_STRING;\n}\nconst UUID = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\nfunction isUUID(s) {\n    return s.match(UUID) !== null;\n}\n// FIXME: This is obviously not a complete URI regex.  The exclusion of\n// `{}` is a hack to make `github-events.json` work, which contains URLs\n// with those characters which ajv refuses to accept as `uri`.\nconst URI = /^(https?|ftp):\\/\\/[^{}]+$/;\nfunction isURI(s) {\n    return s.match(URI) !== null;\n}\n/**\n * JSON inference calls this function to figure out whether a given string is to be\n * transformed into a higher level type.  Must return undefined if not, otherwise the\n * type kind of the transformed string type.\n *\n * @param s The string for which to determine the transformed string type kind.\n */\nfunction inferTransformedStringTypeKindForString(s, recognizer) {\n    if (s.length === 0 || \"0123456789-abcdefth\".indexOf(s[0]) < 0)\n        return undefined;\n    if (recognizer.isDate(s)) {\n        return \"date\";\n    }\n    else if (recognizer.isTime(s)) {\n        return \"time\";\n    }\n    else if (recognizer.isDateTime(s)) {\n        return \"date-time\";\n    }\n    else if (isIntegerString(s)) {\n        return \"integer-string\";\n    }\n    else if (s === \"false\" || s === \"true\") {\n        return \"bool-string\";\n    }\n    else if (isUUID(s)) {\n        return \"uuid\";\n    }\n    else if (isURI(s)) {\n        return \"uri\";\n    }\n    return undefined;\n}\nexports.inferTransformedStringTypeKindForString = inferTransformedStringTypeKindForString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.matchCompoundType = exports.matchType = exports.matchTypeExhaustive = exports.stringTypesForType = exports.directlyReachableSingleNamedType = exports.directlyReachableTypes = exports.separateNamedTypes = exports.isNamedType = exports.getNullAsOptional = exports.nonNullTypeCases = exports.nullableFromUnion = exports.removeNullFromType = exports.removeNullFromUnion = exports.isAnyOrNull = exports.combineTypeAttributesOfTypes = exports.makeGroupsToFlatten = exports.setOperationMembersRecursively = exports.assertIsClass = exports.assertIsObject = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Support_1 = require(\"./support/Support\");\nconst TypeAttributes_1 = require(\"./attributes/TypeAttributes\");\nconst Type_1 = require(\"./Type\");\nconst StringTypes_1 = require(\"./attributes/StringTypes\");\nfunction assertIsObject(t) {\n    if (t instanceof Type_1.ObjectType) {\n        return t;\n    }\n    return (0, Support_1.panic)(\"Supposed object type is not an object type\");\n}\nexports.assertIsObject = assertIsObject;\nfunction assertIsClass(t) {\n    if (!(t instanceof Type_1.ClassType)) {\n        return (0, Support_1.panic)(\"Supposed class type is not a class type\");\n    }\n    return t;\n}\nexports.assertIsClass = assertIsClass;\nfunction setOperationMembersRecursively(oneOrMany, combinationKind) {\n    const setOperations = Array.isArray(oneOrMany) ? oneOrMany : [oneOrMany];\n    const kind = setOperations[0].kind;\n    const includeAny = kind !== \"intersection\";\n    const processedSetOperations = new Set();\n    const members = new Set();\n    let attributes = TypeAttributes_1.emptyTypeAttributes;\n    function process(t) {\n        if (t.kind === kind) {\n            const so = t;\n            if (processedSetOperations.has(so))\n                return;\n            processedSetOperations.add(so);\n            if (combinationKind !== undefined) {\n                attributes = (0, TypeAttributes_1.combineTypeAttributes)(combinationKind, attributes, t.getAttributes());\n            }\n            for (const m of so.members) {\n                process(m);\n            }\n        }\n        else if (includeAny || t.kind !== \"any\") {\n            members.add(t);\n        }\n        else {\n            if (combinationKind !== undefined) {\n                attributes = (0, TypeAttributes_1.combineTypeAttributes)(combinationKind, attributes, t.getAttributes());\n            }\n        }\n    }\n    for (const so of setOperations) {\n        process(so);\n    }\n    return [members, attributes];\n}\nexports.setOperationMembersRecursively = setOperationMembersRecursively;\nfunction makeGroupsToFlatten(setOperations, include) {\n    const typeGroups = new collection_utils_1.EqualityMap();\n    for (const u of setOperations) {\n        // FIXME: We shouldn't have to make a new set here once we got rid\n        // of immutable.\n        const members = new Set(setOperationMembersRecursively(u, undefined)[0]);\n        if (include !== undefined) {\n            if (!include(members))\n                continue;\n        }\n        let maybeSet = typeGroups.get(members);\n        if (maybeSet === undefined) {\n            maybeSet = new Set();\n            if (members.size === 1) {\n                maybeSet.add((0, Support_1.defined)((0, collection_utils_1.iterableFirst)(members)));\n            }\n        }\n        maybeSet.add(u);\n        typeGroups.set(members, maybeSet);\n    }\n    return Array.from(typeGroups.values()).map(ts => Array.from(ts));\n}\nexports.makeGroupsToFlatten = makeGroupsToFlatten;\nfunction combineTypeAttributesOfTypes(combinationKind, types) {\n    return (0, TypeAttributes_1.combineTypeAttributes)(combinationKind, Array.from(types).map(t => t.getAttributes()));\n}\nexports.combineTypeAttributesOfTypes = combineTypeAttributesOfTypes;\nfunction isAnyOrNull(t) {\n    return t.kind === \"any\" || t.kind === \"null\";\n}\nexports.isAnyOrNull = isAnyOrNull;\n// FIXME: We shouldn't have to sort here.  This is just because we're not getting\n// back the right order from JSON Schema, due to the changes the intersection types\n// introduced.\nfunction removeNullFromUnion(t, sortBy = false) {\n    function sort(s) {\n        if (sortBy === false)\n            return s;\n        if (sortBy === true)\n            return (0, collection_utils_1.setSortBy)(s, m => m.kind);\n        return (0, collection_utils_1.setSortBy)(s, sortBy);\n    }\n    const nullType = t.findMember(\"null\");\n    if (nullType === undefined) {\n        return [null, sort(t.members)];\n    }\n    return [nullType, sort((0, collection_utils_1.setFilter)(t.members, m => m.kind !== \"null\"))];\n}\nexports.removeNullFromUnion = removeNullFromUnion;\nfunction removeNullFromType(t) {\n    if (t.kind === \"null\") {\n        return [t, new Set()];\n    }\n    if (!(t instanceof Type_1.UnionType)) {\n        return [null, new Set([t])];\n    }\n    return removeNullFromUnion(t);\n}\nexports.removeNullFromType = removeNullFromType;\nfunction nullableFromUnion(t) {\n    const [hasNull, nonNulls] = removeNullFromUnion(t);\n    if (hasNull === null)\n        return null;\n    if (nonNulls.size !== 1)\n        return null;\n    return (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(nonNulls));\n}\nexports.nullableFromUnion = nullableFromUnion;\nfunction nonNullTypeCases(t) {\n    return removeNullFromType(t)[1];\n}\nexports.nonNullTypeCases = nonNullTypeCases;\nfunction getNullAsOptional(cp) {\n    const [maybeNull, nonNulls] = removeNullFromType(cp.type);\n    if (cp.isOptional) {\n        return [true, nonNulls];\n    }\n    return [maybeNull !== null, nonNulls];\n}\nexports.getNullAsOptional = getNullAsOptional;\n// FIXME: Give this an appropriate name, considering that we don't distinguish\n// between named and non-named types anymore.\nfunction isNamedType(t) {\n    return [\"class\", \"union\", \"enum\", \"object\"].indexOf(t.kind) >= 0;\n}\nexports.isNamedType = isNamedType;\nfunction separateNamedTypes(types) {\n    const objects = (0, collection_utils_1.setFilter)(types, t => t.kind === \"object\" || t.kind === \"class\");\n    const enums = (0, collection_utils_1.setFilter)(types, t => t instanceof Type_1.EnumType);\n    const unions = (0, collection_utils_1.setFilter)(types, t => t instanceof Type_1.UnionType);\n    return { objects, enums, unions };\n}\nexports.separateNamedTypes = separateNamedTypes;\nfunction directlyReachableTypes(t, setForType) {\n    const set = setForType(t);\n    if (set !== null)\n        return set;\n    return (0, collection_utils_1.setUnion)(...Array.from(t.getNonAttributeChildren()).map(c => directlyReachableTypes(c, setForType)));\n}\nexports.directlyReachableTypes = directlyReachableTypes;\nfunction directlyReachableSingleNamedType(type) {\n    const definedTypes = directlyReachableTypes(type, t => {\n        if ((!(t instanceof Type_1.UnionType) && isNamedType(t)) ||\n            (t instanceof Type_1.UnionType && nullableFromUnion(t) === null)) {\n            return new Set([t]);\n        }\n        return null;\n    });\n    (0, Support_1.assert)(definedTypes.size <= 1, \"Cannot have more than one defined type per top-level\");\n    return (0, collection_utils_1.iterableFirst)(definedTypes);\n}\nexports.directlyReachableSingleNamedType = directlyReachableSingleNamedType;\nfunction stringTypesForType(t) {\n    (0, Support_1.assert)(t.kind === \"string\", \"Only strings can have string types\");\n    const stringTypes = StringTypes_1.stringTypesTypeAttributeKind.tryGetInAttributes(t.getAttributes());\n    if (stringTypes === undefined) {\n        return (0, Support_1.panic)(\"All strings must have a string type attribute\");\n    }\n    return stringTypes;\n}\nexports.stringTypesForType = stringTypesForType;\nfunction matchTypeExhaustive(t, noneType, anyType, nullType, boolType, integerType, doubleType, stringType, arrayType, classType, mapType, objectType, enumType, unionType, transformedStringType) {\n    if (t.isPrimitive()) {\n        if ((0, Type_1.isPrimitiveStringTypeKind)(t.kind)) {\n            if (t.kind === \"string\") {\n                return stringType(t);\n            }\n            return transformedStringType(t);\n        }\n        const kind = t.kind;\n        const f = {\n            none: noneType,\n            any: anyType,\n            null: nullType,\n            bool: boolType,\n            integer: integerType,\n            double: doubleType\n        }[kind];\n        if (f !== undefined)\n            return f(t);\n        return (0, Support_1.assertNever)(f);\n    }\n    else if (t instanceof Type_1.ArrayType)\n        return arrayType(t);\n    else if (t instanceof Type_1.ClassType)\n        return classType(t);\n    else if (t instanceof Type_1.MapType)\n        return mapType(t);\n    else if (t instanceof Type_1.ObjectType)\n        return objectType(t);\n    else if (t instanceof Type_1.EnumType)\n        return enumType(t);\n    else if (t instanceof Type_1.UnionType)\n        return unionType(t);\n    return (0, Support_1.panic)(`Unknown type ${t.kind}`);\n}\nexports.matchTypeExhaustive = matchTypeExhaustive;\nfunction matchType(type, anyType, nullType, boolType, integerType, doubleType, stringType, arrayType, classType, mapType, enumType, unionType, transformedStringType) {\n    function typeNotSupported(t) {\n        return (0, Support_1.panic)(`Unsupported type ${t.kind} in non-exhaustive match`);\n    }\n    /* tslint:disable:strict-boolean-expressions */\n    return matchTypeExhaustive(type, typeNotSupported, anyType, nullType, boolType, integerType, doubleType, stringType, arrayType, classType, mapType, typeNotSupported, enumType, unionType, transformedStringType || typeNotSupported);\n    /* tslint:enable */\n}\nexports.matchType = matchType;\nfunction matchCompoundType(t, arrayType, classType, mapType, objectType, unionType) {\n    function ignore(_) {\n        return;\n    }\n    return matchTypeExhaustive(t, ignore, ignore, ignore, ignore, ignore, ignore, ignore, arrayType, classType, mapType, objectType, ignore, unionType, ignore);\n}\nexports.matchCompoundType = matchCompoundType;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GraphRewriteBuilder = exports.GraphRemapBuilder = exports.BaseGraphRewriteBuilder = exports.TypeReconstituter = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst TypeUtils_1 = require(\"./TypeUtils\");\nconst TypeGraph_1 = require(\"./TypeGraph\");\nconst TypeAttributes_1 = require(\"./attributes/TypeAttributes\");\nconst Support_1 = require(\"./support/Support\");\nconst TypeBuilder_1 = require(\"./TypeBuilder\");\nclass TypeReconstituter {\n    constructor(_typeBuilder, _makeClassUnique, _typeAttributes, _forwardingRef, _register) {\n        this._typeBuilder = _typeBuilder;\n        this._makeClassUnique = _makeClassUnique;\n        this._typeAttributes = _typeAttributes;\n        this._forwardingRef = _forwardingRef;\n        this._register = _register;\n        this._wasUsed = false;\n        this._typeRef = undefined;\n    }\n    builderForNewType() {\n        (0, Support_1.assert)(!this._wasUsed, \"TypeReconstituter used more than once\");\n        this._wasUsed = true;\n        return this._typeBuilder;\n    }\n    builderForSetting() {\n        (0, Support_1.assert)(this._wasUsed && this._typeRef !== undefined, \"Can't set type members before constructing a type\");\n        return this._typeBuilder;\n    }\n    getResult() {\n        if (this._typeRef === undefined) {\n            return (0, Support_1.panic)(\"Type was not reconstituted\");\n        }\n        return this._typeRef;\n    }\n    // FIXME: Do registration automatically.\n    register(tref) {\n        (0, Support_1.assert)(this._typeRef === undefined, \"Cannot register a type twice\");\n        this._typeRef = tref;\n        this._register(tref);\n    }\n    registerAndAddAttributes(tref) {\n        this._typeBuilder.addAttributes(tref, this._typeAttributes);\n        this.register(tref);\n    }\n    lookup(trefs) {\n        (0, Support_1.assert)(!this._wasUsed, \"Cannot lookup constituents after building type\");\n        if ((0, TypeGraph_1.isTypeRef)(trefs)) {\n            return this._typeBuilder.lookupTypeRefs([trefs], undefined, false);\n        }\n        else {\n            const maybeRefs = Array.from(trefs).map(tref => this._typeBuilder.lookupTypeRefs([tref], undefined, false));\n            if (maybeRefs.some(tref => tref === undefined))\n                return undefined;\n            return maybeRefs;\n        }\n    }\n    lookupMap(trefs) {\n        const resultValues = this.lookup(trefs.values());\n        if (resultValues === undefined)\n            return undefined;\n        (0, Support_1.assert)(resultValues.length === trefs.size, \"Didn't get back the correct number of types\");\n        const result = new Map();\n        let i = 0;\n        for (const k of trefs.keys()) {\n            result.set(k, resultValues[i]);\n            i += 1;\n        }\n        return result;\n    }\n    reconstitute(trefs) {\n        (0, Support_1.assert)(this._wasUsed, \"Cannot reconstitute constituents before building type\");\n        if ((0, TypeGraph_1.isTypeRef)(trefs)) {\n            return this._typeBuilder.reconstituteTypeRef(trefs);\n        }\n        else {\n            return Array.from(trefs).map(tref => this._typeBuilder.reconstituteTypeRef(tref));\n        }\n    }\n    reconstituteMap(trefs) {\n        return (0, collection_utils_1.mapMap)(trefs, tref => this._typeBuilder.reconstituteTypeRef(tref));\n    }\n    getPrimitiveType(kind) {\n        this.register(this.builderForNewType().getPrimitiveType(kind, this._typeAttributes, this._forwardingRef));\n    }\n    getEnumType(cases) {\n        this.register(this.builderForNewType().getEnumType(this._typeAttributes, cases, this._forwardingRef));\n    }\n    getUniqueMapType() {\n        this.registerAndAddAttributes(this.builderForNewType().getUniqueMapType(this._forwardingRef));\n    }\n    getMapType(values) {\n        this.register(this.builderForNewType().getMapType(this._typeAttributes, values, this._forwardingRef));\n    }\n    getUniqueArrayType() {\n        this.registerAndAddAttributes(this.builderForNewType().getUniqueArrayType(this._forwardingRef));\n    }\n    getArrayType(items) {\n        this.register(this.builderForNewType().getArrayType(this._typeAttributes, items, this._forwardingRef));\n    }\n    setArrayItems(items) {\n        this.builderForSetting().setArrayItems(this.getResult(), items);\n    }\n    makeClassProperty(tref, isOptional) {\n        return this._typeBuilder.makeClassProperty(tref, isOptional);\n    }\n    getObjectType(properties, additionalProperties) {\n        this.register(this.builderForNewType().getUniqueObjectType(this._typeAttributes, properties, additionalProperties, this._forwardingRef));\n    }\n    getUniqueObjectType(properties, additionalProperties) {\n        this.register(this.builderForNewType().getUniqueObjectType(this._typeAttributes, properties, additionalProperties, this._forwardingRef));\n    }\n    getClassType(properties) {\n        if (this._makeClassUnique) {\n            this.getUniqueClassType(false, properties);\n            return;\n        }\n        this.register(this.builderForNewType().getClassType(this._typeAttributes, properties, this._forwardingRef));\n    }\n    getUniqueClassType(isFixed, properties) {\n        this.register(this.builderForNewType().getUniqueClassType(this._typeAttributes, isFixed, properties, this._forwardingRef));\n    }\n    setObjectProperties(properties, additionalProperties) {\n        this.builderForSetting().setObjectProperties(this.getResult(), properties, additionalProperties);\n    }\n    getUnionType(members) {\n        this.register(this.builderForNewType().getUnionType(this._typeAttributes, members, this._forwardingRef));\n    }\n    getUniqueUnionType() {\n        this.register(this.builderForNewType().getUniqueUnionType(this._typeAttributes, undefined, this._forwardingRef));\n    }\n    getIntersectionType(members) {\n        this.register(this.builderForNewType().getIntersectionType(this._typeAttributes, members, this._forwardingRef));\n    }\n    getUniqueIntersectionType(members) {\n        this.register(this.builderForNewType().getUniqueIntersectionType(this._typeAttributes, members, this._forwardingRef));\n    }\n    setSetOperationMembers(members) {\n        this.builderForSetting().setSetOperationMembers(this.getResult(), members);\n    }\n}\nexports.TypeReconstituter = TypeReconstituter;\nclass BaseGraphRewriteBuilder extends TypeBuilder_1.TypeBuilder {\n    constructor(originalGraph, stringTypeMapping, alphabetizeProperties, graphHasProvenanceAttributes, debugPrint) {\n        super(originalGraph.serial + 1, stringTypeMapping, alphabetizeProperties, false, false, graphHasProvenanceAttributes);\n        this.originalGraph = originalGraph;\n        this.debugPrint = debugPrint;\n        this.reconstitutedTypes = new Map();\n        this._lostTypeAttributes = false;\n        this._printIndent = 0;\n    }\n    withForwardingRef(maybeForwardingRef, typeCreator) {\n        if (maybeForwardingRef !== undefined) {\n            return typeCreator(maybeForwardingRef);\n        }\n        const forwardingRef = this.reserveTypeRef();\n        const actualRef = typeCreator(forwardingRef);\n        (0, Support_1.assert)(actualRef === forwardingRef, \"Type creator didn't return its forwarding ref\");\n        return actualRef;\n    }\n    reconstituteType(t, attributes, forwardingRef) {\n        return this.reconstituteTypeRef(t.typeRef, attributes, forwardingRef);\n    }\n    reconstituteTypeRef(originalRef, attributes, maybeForwardingRef) {\n        const maybeRef = this.lookupTypeRefs([originalRef], maybeForwardingRef);\n        if (maybeRef !== undefined) {\n            if (attributes !== undefined) {\n                this.addAttributes(maybeRef, attributes);\n            }\n            return maybeRef;\n        }\n        return this.forceReconstituteTypeRef(originalRef, attributes, maybeForwardingRef);\n    }\n    reconstituteTypeAttributes(attributes) {\n        return (0, collection_utils_1.mapMap)(attributes, (v, a) => a.reconstitute(this, v));\n    }\n    assertTypeRefsToReconstitute(typeRefs, forwardingRef) {\n        (0, Support_1.assert)(typeRefs.length > 0, \"Must have at least one type to reconstitute\");\n        for (const originalRef of typeRefs) {\n            (0, TypeGraph_1.assertTypeRefGraph)(originalRef, this.originalGraph);\n        }\n        if (forwardingRef !== undefined) {\n            (0, TypeGraph_1.assertTypeRefGraph)(forwardingRef, this.typeGraph);\n        }\n    }\n    changeDebugPrintIndent(delta) {\n        this._printIndent += delta;\n    }\n    get debugPrintIndentation() {\n        return (0, Support_1.indentationString)(this._printIndent);\n    }\n    finish() {\n        for (const [name, t] of this.originalGraph.topLevels) {\n            this.addTopLevel(name, this.reconstituteType(t));\n        }\n        return super.finish();\n    }\n    setLostTypeAttributes() {\n        this._lostTypeAttributes = true;\n    }\n    get lostTypeAttributes() {\n        return this._lostTypeAttributes;\n    }\n}\nexports.BaseGraphRewriteBuilder = BaseGraphRewriteBuilder;\nclass GraphRemapBuilder extends BaseGraphRewriteBuilder {\n    constructor(originalGraph, stringTypeMapping, alphabetizeProperties, graphHasProvenanceAttributes, _map, debugPrintRemapping) {\n        super(originalGraph, stringTypeMapping, alphabetizeProperties, graphHasProvenanceAttributes, debugPrintRemapping);\n        this._map = _map;\n        this._attributeSources = new Map();\n        for (const [source, target] of _map) {\n            let maybeSources = this._attributeSources.get(target);\n            if (maybeSources === undefined) {\n                maybeSources = [target];\n                this._attributeSources.set(target, maybeSources);\n            }\n            maybeSources.push(source);\n        }\n    }\n    makeIdentity(_maker) {\n        return undefined;\n    }\n    getMapTarget(tref) {\n        const maybeType = this._map.get((0, TypeGraph_1.derefTypeRef)(tref, this.originalGraph));\n        if (maybeType === undefined)\n            return tref;\n        (0, Support_1.assert)(this._map.get(maybeType) === undefined, \"We have a type that's remapped to a remapped type\");\n        return maybeType.typeRef;\n    }\n    addForwardingIntersection(_forwardingRef, _tref) {\n        return (0, Support_1.panic)(\"We can't add forwarding intersections when we're removing forwarding intersections\");\n    }\n    lookupTypeRefs(typeRefs, forwardingRef) {\n        (0, Support_1.assert)(forwardingRef === undefined, \"We can't have a forwarding ref when we remap\");\n        this.assertTypeRefsToReconstitute(typeRefs, forwardingRef);\n        const first = this.reconstitutedTypes.get((0, TypeGraph_1.typeRefIndex)(this.getMapTarget(typeRefs[0])));\n        if (first === undefined)\n            return undefined;\n        for (let i = 1; i < typeRefs.length; i++) {\n            const other = this.reconstitutedTypes.get((0, TypeGraph_1.typeRefIndex)(this.getMapTarget(typeRefs[i])));\n            if (first !== other)\n                return undefined;\n        }\n        return first;\n    }\n    forceReconstituteTypeRef(originalRef, attributes, maybeForwardingRef) {\n        originalRef = this.getMapTarget(originalRef);\n        const index = (0, TypeGraph_1.typeRefIndex)(originalRef);\n        (0, Support_1.assert)(this.reconstitutedTypes.get(index) === undefined, \"Type has already been reconstituted\");\n        (0, Support_1.assert)(maybeForwardingRef === undefined, \"We can't have a forwarding ref when we remap\");\n        return this.withForwardingRef(undefined, forwardingRef => {\n            this.reconstitutedTypes.set(index, forwardingRef);\n            if (this.debugPrint) {\n                console.log(`${this.debugPrintIndentation}reconstituting ${index} as ${(0, TypeGraph_1.typeRefIndex)(forwardingRef)}`);\n                this.changeDebugPrintIndent(1);\n            }\n            const [originalType, originalAttributes] = (0, TypeGraph_1.typeAndAttributesForTypeRef)(originalRef, this.originalGraph);\n            const attributeSources = this._attributeSources.get(originalType);\n            if (attributes === undefined) {\n                attributes = TypeAttributes_1.emptyTypeAttributes;\n            }\n            if (attributeSources === undefined) {\n                attributes = (0, TypeAttributes_1.combineTypeAttributes)(\"union\", attributes, this.reconstituteTypeAttributes(originalAttributes));\n            }\n            else {\n                attributes = (0, TypeAttributes_1.combineTypeAttributes)(\"union\", attributes, this.reconstituteTypeAttributes((0, TypeUtils_1.combineTypeAttributesOfTypes)(\"union\", attributeSources)));\n            }\n            const newAttributes = attributes;\n            const reconstituter = new TypeReconstituter(this, this.canonicalOrder, newAttributes, forwardingRef, tref => {\n                (0, Support_1.assert)(tref === forwardingRef, \"Reconstituted type as a different ref\");\n                if (this.debugPrint) {\n                    this.changeDebugPrintIndent(-1);\n                    console.log(`${this.debugPrintIndentation}reconstituted ${index} as ${(0, TypeGraph_1.typeRefIndex)(tref)}`);\n                }\n            });\n            originalType.reconstitute(reconstituter, this.canonicalOrder);\n            return reconstituter.getResult();\n        });\n    }\n}\nexports.GraphRemapBuilder = GraphRemapBuilder;\nclass GraphRewriteBuilder extends BaseGraphRewriteBuilder {\n    constructor(originalGraph, stringTypeMapping, alphabetizeProperties, graphHasProvenanceAttributes, setsToReplace, debugPrintReconstitution, _replacer) {\n        super(originalGraph, stringTypeMapping, alphabetizeProperties, graphHasProvenanceAttributes, debugPrintReconstitution);\n        this._replacer = _replacer;\n        this._reconstitutedUnions = new collection_utils_1.EqualityMap();\n        this._setsToReplaceByMember = new Map();\n        for (const types of setsToReplace) {\n            const set = new Set(types);\n            for (const t of set) {\n                const index = t.index;\n                (0, Support_1.assert)(!this._setsToReplaceByMember.has(index), \"A type is member of more than one set to be replaced\");\n                this._setsToReplaceByMember.set(index, set);\n            }\n        }\n    }\n    registerUnion(typeRefs, reconstituted) {\n        const set = new Set(typeRefs);\n        (0, Support_1.assert)(!this._reconstitutedUnions.has(set), \"Cannot register reconstituted set twice\");\n        this._reconstitutedUnions.set(set, reconstituted);\n    }\n    replaceSet(typesToReplace, maybeForwardingRef) {\n        return this.withForwardingRef(maybeForwardingRef, forwardingRef => {\n            if (this.debugPrint) {\n                console.log(`${this.debugPrintIndentation}replacing set ${Array.from(typesToReplace)\n                    .map(t => t.index.toString())\n                    .join(\",\")} as ${(0, TypeGraph_1.typeRefIndex)(forwardingRef)}`);\n                this.changeDebugPrintIndent(1);\n            }\n            for (const t of typesToReplace) {\n                const originalRef = t.typeRef;\n                const index = (0, TypeGraph_1.typeRefIndex)(originalRef);\n                this.reconstitutedTypes.set(index, forwardingRef);\n                this._setsToReplaceByMember.delete(index);\n            }\n            const result = this._replacer(typesToReplace, this, forwardingRef);\n            (0, Support_1.assert)(result === forwardingRef, \"The forwarding ref got lost when replacing\");\n            if (this.debugPrint) {\n                this.changeDebugPrintIndent(-1);\n                console.log(`${this.debugPrintIndentation}replaced set ${Array.from(typesToReplace)\n                    .map(t => t.index.toString())\n                    .join(\",\")} as ${(0, TypeGraph_1.typeRefIndex)(forwardingRef)}`);\n            }\n            return result;\n        });\n    }\n    forceReconstituteTypeRef(originalRef, attributes, maybeForwardingRef) {\n        const [originalType, originalAttributes] = (0, TypeGraph_1.typeAndAttributesForTypeRef)(originalRef, this.originalGraph);\n        const index = (0, TypeGraph_1.typeRefIndex)(originalRef);\n        if (this.debugPrint) {\n            console.log(`${this.debugPrintIndentation}reconstituting ${index}`);\n            this.changeDebugPrintIndent(1);\n        }\n        if (attributes === undefined) {\n            attributes = this.reconstituteTypeAttributes(originalAttributes);\n        }\n        else {\n            attributes = (0, TypeAttributes_1.combineTypeAttributes)(\"union\", attributes, this.reconstituteTypeAttributes(originalAttributes));\n        }\n        const reconstituter = new TypeReconstituter(this, this.canonicalOrder, attributes, maybeForwardingRef, tref => {\n            if (this.debugPrint) {\n                this.changeDebugPrintIndent(-1);\n                console.log(`${this.debugPrintIndentation}reconstituted ${index} as ${(0, TypeGraph_1.typeRefIndex)(tref)}`);\n            }\n            if (maybeForwardingRef !== undefined) {\n                (0, Support_1.assert)(tref === maybeForwardingRef, \"We didn't pass the forwarding ref\");\n            }\n            const alreadyReconstitutedType = this.reconstitutedTypes.get(index);\n            if (alreadyReconstitutedType === undefined) {\n                this.reconstitutedTypes.set(index, tref);\n            }\n            else {\n                (0, Support_1.assert)(tref === alreadyReconstitutedType, \"We reconstituted a type twice differently\");\n            }\n        });\n        originalType.reconstitute(reconstituter, this.canonicalOrder);\n        return reconstituter.getResult();\n    }\n    /*\n    reconstituteTypeUnmodified(originalType: Type): TypeRef {\n        const reconstituter = new TypeReconstituter(\n            this,\n            this.alphabetizeProperties,\n            emptyTypeAttributes,\n            undefined,\n            () => {}\n        );\n        originalType.reconstitute(reconstituter);\n        return reconstituter.getResult();\n    }\n    */\n    // If the union of these type refs have been, or are supposed to be, reconstituted to\n    // one target type, return it.  Otherwise return undefined.\n    lookupTypeRefs(typeRefs, forwardingRef, replaceSet = true) {\n        this.assertTypeRefsToReconstitute(typeRefs, forwardingRef);\n        // Check whether we have already reconstituted them.  That means ensuring\n        // that they all have the same target type.\n        let maybeRef = this.reconstitutedTypes.get((0, TypeGraph_1.typeRefIndex)(typeRefs[0]));\n        if (maybeRef !== undefined && maybeRef !== forwardingRef) {\n            let allEqual = true;\n            for (let i = 1; i < typeRefs.length; i++) {\n                if (this.reconstitutedTypes.get((0, TypeGraph_1.typeRefIndex)(typeRefs[i])) !== maybeRef) {\n                    allEqual = false;\n                    break;\n                }\n            }\n            if (allEqual) {\n                return this.forwardIfNecessary(forwardingRef, maybeRef);\n            }\n        }\n        // Has this been reconstituted as a set?\n        maybeRef = this._reconstitutedUnions.get(new Set(typeRefs));\n        if (maybeRef !== undefined && maybeRef !== forwardingRef) {\n            return this.forwardIfNecessary(forwardingRef, maybeRef);\n        }\n        // Is this set requested to be replaced?  If not, we're out of options.\n        const maybeSet = this._setsToReplaceByMember.get((0, TypeGraph_1.typeRefIndex)(typeRefs[0]));\n        if (maybeSet === undefined) {\n            return undefined;\n        }\n        for (let i = 1; i < typeRefs.length; i++) {\n            if (this._setsToReplaceByMember.get((0, TypeGraph_1.typeRefIndex)(typeRefs[i])) !== maybeSet) {\n                return undefined;\n            }\n        }\n        // Yes, this set is requested to be replaced, so do it.\n        if (!replaceSet)\n            return undefined;\n        return this.replaceSet(maybeSet, forwardingRef);\n    }\n}\nexports.GraphRewriteBuilder = GraphRewriteBuilder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Graph = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Support_1 = require(\"./support/Support\");\nfunction countComponentGraphNodes(components) {\n    if (components.length === 0)\n        return 0;\n    let largest = -1;\n    let count = 0;\n    for (const c of components) {\n        (0, Support_1.assert)(c.length > 0, \"Empty component not allowed\");\n        for (const v of c) {\n            (0, Support_1.assert)(v >= 0, \"Negative vertex index is invalid\");\n            largest = Math.max(largest, v);\n            count += 1;\n        }\n    }\n    (0, Support_1.assert)(largest + 1 === count, \"Vertex indexes and count don't match up\");\n    return count;\n}\n// https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm\nfunction stronglyConnectedComponents(successors) {\n    let index = 0;\n    const stack = [];\n    const numNodes = successors.length;\n    const indexes = (0, Support_1.repeated)(numNodes, -1);\n    const lowLinks = (0, Support_1.repeated)(numNodes, -1);\n    const onStack = (0, Support_1.repeated)(numNodes, false);\n    const sccs = [];\n    function strongconnect(v) {\n        // Set the depth index for v to the smallest unused index\n        indexes[v] = index;\n        lowLinks[v] = index;\n        index += 1;\n        stack.push(v);\n        onStack[v] = true;\n        // Consider successors of v\n        for (const w of successors[v]) {\n            if (indexes[w] < 0) {\n                // Successor w has not yet been visited; recurse on it\n                strongconnect(w);\n                lowLinks[v] = Math.min(lowLinks[v], lowLinks[w]);\n            }\n            else if (onStack[w]) {\n                // Successor w is in stack and hence in the current SCC\n                // If w is not on stack, then (v, w) is a cross-edge in the DFS tree and must be ignored\n                // Note: The next line may look odd - but is correct.\n                // It says w.index not w.lowlink; that is deliberate and from the original paper\n                lowLinks[v] = Math.min(lowLinks[v], indexes[w]);\n            }\n        }\n        // If v is a root node, pop the stack and generate an SCC\n        if (lowLinks[v] === indexes[v]) {\n            const scc = [];\n            let w;\n            do {\n                w = (0, Support_1.defined)(stack.pop());\n                onStack[w] = false;\n                scc.push(w);\n            } while (w !== v);\n            sccs.push(scc);\n        }\n    }\n    for (let v = 0; v < numNodes; v++) {\n        if (indexes[v] < 0) {\n            strongconnect(v);\n        }\n    }\n    (0, Support_1.assert)(countComponentGraphNodes(sccs) === numNodes, \"We didn't put all the nodes into SCCs\");\n    return sccs;\n}\nfunction buildComponentOfNodeMap(successors, components) {\n    const numComponents = components.length;\n    const numNodes = successors.length;\n    (0, Support_1.assert)(numNodes === countComponentGraphNodes(components), \"Components don't match up with graph\");\n    const componentOfNode = (0, Support_1.repeated)(numNodes, -1);\n    for (let c = 0; c < numComponents; c++) {\n        for (const n of components[c]) {\n            (0, Support_1.assert)(componentOfNode[n] < 0, \"We have a node that's in two components\");\n            componentOfNode[n] = c;\n        }\n    }\n    return componentOfNode;\n}\nfunction buildMetaSuccessors(successors, components) {\n    const numComponents = components.length;\n    const componentOfNode = buildComponentOfNodeMap(successors, components);\n    const componentAdded = (0, Support_1.repeated)(numComponents, false);\n    const metaSuccessors = [];\n    for (let c = 0; c < numComponents; c++) {\n        const succ = [];\n        for (const n of components[c]) {\n            for (const s of successors[n]) {\n                const ms = componentOfNode[s];\n                if (ms === c || componentAdded[ms])\n                    continue;\n                succ.push(ms);\n                componentAdded[ms] = true;\n            }\n        }\n        // reset bookkeeping\n        for (const ms of succ) {\n            (0, Support_1.assert)(componentAdded[ms]);\n            componentAdded[ms] = false;\n        }\n        metaSuccessors.push(succ);\n    }\n    return metaSuccessors;\n}\nfunction invertEdges(successors) {\n    const numNodes = successors.length;\n    const predecessors = (0, Support_1.repeatedCall)(numNodes, () => []);\n    for (let s = 0; s < numNodes; s++) {\n        for (const v of successors[s]) {\n            predecessors[v].push(s);\n        }\n    }\n    return predecessors;\n}\nfunction calculateInDegrees(successors) {\n    const numNodes = successors.length;\n    const inDegrees = (0, Support_1.repeated)(numNodes, 0);\n    for (const s of successors) {\n        for (const v of s) {\n            inDegrees[v] += 1;\n        }\n    }\n    return inDegrees;\n}\nfunction findRoots(successors) {\n    const numNodes = successors.length;\n    const inDegrees = calculateInDegrees(successors);\n    const roots = [];\n    for (let v = 0; v < numNodes; v++) {\n        if (inDegrees[v] === 0) {\n            roots.push(v);\n        }\n    }\n    return roots;\n}\nclass Graph {\n    constructor(nodes, invertDirection, edges) {\n        this._nodes = Array.from(nodes);\n        this._indexByNode = new Map(this._nodes.map((n, i) => [n, i]));\n        let edgesArray;\n        if (Array.isArray(edges)) {\n            edgesArray = edges;\n        }\n        else {\n            edgesArray = this._nodes.map(n => Array.from(edges(n)).map(s => (0, Support_1.defined)(this._indexByNode.get(s))));\n        }\n        if (invertDirection) {\n            edgesArray = invertEdges(edgesArray);\n        }\n        this._successors = edgesArray;\n    }\n    get size() {\n        return this._nodes.length;\n    }\n    get nodes() {\n        return this._nodes;\n    }\n    findRoots() {\n        const roots = findRoots(this._successors);\n        return new Set(roots.map(n => this._nodes[n]));\n    }\n    // The subgraph starting at `root` must be acyclic.\n    dfsTraversal(root, preOrder, process) {\n        const visited = (0, Support_1.repeated)(this.size, false);\n        const visit = (v) => {\n            if (visited[v])\n                return;\n            visited[v] = true;\n            if (preOrder) {\n                process(this._nodes[v]);\n            }\n            for (const w of this._successors[v]) {\n                visit(w);\n            }\n            if (!preOrder) {\n                process(this._nodes[v]);\n            }\n        };\n        visit((0, Support_1.defined)(this._indexByNode.get(root)));\n    }\n    stronglyConnectedComponents() {\n        const components = stronglyConnectedComponents(this._successors);\n        const componentSuccessors = buildMetaSuccessors(this._successors, components);\n        return new Graph(components.map(ns => (0, collection_utils_1.setMap)(ns, n => this._nodes[n])), false, componentSuccessors);\n    }\n    makeDot(includeNode, nodeLabel) {\n        const lines = [];\n        lines.push(\"digraph G {\");\n        lines.push(\"    ordering = out;\");\n        lines.push(\"\");\n        for (let i = 0; i < this.size; i++) {\n            const n = this._nodes[i];\n            if (!includeNode(n))\n                continue;\n            lines.push(`    node${i} [label=\"${nodeLabel(n)}\"];`);\n        }\n        for (let i = 0; i < this.size; i++) {\n            if (!includeNode(this._nodes[i]))\n                continue;\n            for (const j of this._successors[i]) {\n                if (!includeNode(this._nodes[j]))\n                    continue;\n                lines.push(`    node${i} -> node${j};`);\n            }\n        }\n        lines.push(\"}\");\n        lines.push(\"\");\n        return lines.join(\"\\n\");\n    }\n}\nexports.Graph = Graph;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeIndirectionIntersections = exports.optionalToNullable = exports.noneToAny = exports.TypeGraph = exports.TypeAttributeStoreView = exports.TypeAttributeStore = exports.typeAndAttributesForTypeRef = exports.attributesForTypeRef = exports.derefTypeRef = exports.assertTypeRefGraph = exports.typeRefIndex = exports.makeTypeRef = exports.isTypeRef = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Type_1 = require(\"./Type\");\nconst TypeUtils_1 = require(\"./TypeUtils\");\nconst Support_1 = require(\"./support/Support\");\nconst TypeBuilder_1 = require(\"./TypeBuilder\");\nconst GraphRewriting_1 = require(\"./GraphRewriting\");\nconst TypeNames_1 = require(\"./attributes/TypeNames\");\nconst Graph_1 = require(\"./Graph\");\nconst TypeAttributes_1 = require(\"./attributes/TypeAttributes\");\nconst Messages_1 = require(\"./Messages\");\nconst indexBits = 26;\nconst indexMask = (1 << indexBits) - 1;\nconst serialBits = 31 - indexBits;\nconst serialMask = (1 << serialBits) - 1;\nfunction isTypeRef(x) {\n    return typeof x === \"number\";\n}\nexports.isTypeRef = isTypeRef;\nfunction makeTypeRef(graph, index) {\n    (0, Support_1.assert)(index <= indexMask, \"Too many types in graph\");\n    return ((graph.serial & serialMask) << indexBits) | index;\n}\nexports.makeTypeRef = makeTypeRef;\nfunction typeRefIndex(tref) {\n    return tref & indexMask;\n}\nexports.typeRefIndex = typeRefIndex;\nfunction assertTypeRefGraph(tref, graph) {\n    (0, Support_1.assert)(((tref >> indexBits) & serialMask) === (graph.serial & serialMask), \"Mixing the wrong type reference and graph\");\n}\nexports.assertTypeRefGraph = assertTypeRefGraph;\nfunction getGraph(graphOrBuilder) {\n    if (graphOrBuilder instanceof TypeGraph)\n        return graphOrBuilder;\n    return graphOrBuilder.originalGraph;\n}\nfunction derefTypeRef(tref, graphOrBuilder) {\n    const graph = getGraph(graphOrBuilder);\n    assertTypeRefGraph(tref, graph);\n    return graph.typeAtIndex(typeRefIndex(tref));\n}\nexports.derefTypeRef = derefTypeRef;\nfunction attributesForTypeRef(tref, graphOrBuilder) {\n    const graph = getGraph(graphOrBuilder);\n    assertTypeRefGraph(tref, graph);\n    return graph.atIndex(typeRefIndex(tref))[1];\n}\nexports.attributesForTypeRef = attributesForTypeRef;\nfunction typeAndAttributesForTypeRef(tref, graphOrBuilder) {\n    const graph = getGraph(graphOrBuilder);\n    assertTypeRefGraph(tref, graph);\n    return graph.atIndex(typeRefIndex(tref));\n}\nexports.typeAndAttributesForTypeRef = typeAndAttributesForTypeRef;\nclass TypeAttributeStore {\n    constructor(_typeGraph, _values) {\n        this._typeGraph = _typeGraph;\n        this._values = _values;\n        this._topLevelValues = new Map();\n    }\n    getTypeIndex(t) {\n        const tref = t.typeRef;\n        assertTypeRefGraph(tref, this._typeGraph);\n        return typeRefIndex(tref);\n    }\n    attributesForType(t) {\n        const index = this.getTypeIndex(t);\n        const maybeAttributes = this._values[index];\n        if (maybeAttributes !== undefined) {\n            return maybeAttributes;\n        }\n        return TypeAttributes_1.emptyTypeAttributes;\n    }\n    attributesForTopLevel(name) {\n        const maybeAttributes = this._topLevelValues.get(name);\n        if (maybeAttributes !== undefined) {\n            return maybeAttributes;\n        }\n        return TypeAttributes_1.emptyTypeAttributes;\n    }\n    setInMap(attributes, kind, value) {\n        // FIXME: This is potentially super slow\n        return new Map(attributes).set(kind, value);\n    }\n    set(kind, t, value) {\n        const index = this.getTypeIndex(t);\n        while (index >= this._values.length) {\n            this._values.push(undefined);\n        }\n        this._values[index] = this.setInMap(this.attributesForType(t), kind, value);\n    }\n    setForTopLevel(kind, topLevelName, value) {\n        this._topLevelValues.set(topLevelName, this.setInMap(this.attributesForTopLevel(topLevelName), kind, value));\n    }\n    tryGetInMap(attributes, kind) {\n        return attributes.get(kind);\n    }\n    tryGet(kind, t) {\n        return this.tryGetInMap(this.attributesForType(t), kind);\n    }\n    tryGetForTopLevel(kind, topLevelName) {\n        return this.tryGetInMap(this.attributesForTopLevel(topLevelName), kind);\n    }\n}\nexports.TypeAttributeStore = TypeAttributeStore;\nclass TypeAttributeStoreView {\n    constructor(_attributeStore, _definition) {\n        this._attributeStore = _attributeStore;\n        this._definition = _definition;\n    }\n    set(t, value) {\n        this._attributeStore.set(this._definition, t, value);\n    }\n    setForTopLevel(name, value) {\n        this._attributeStore.setForTopLevel(this._definition, name, value);\n    }\n    tryGet(t) {\n        return this._attributeStore.tryGet(this._definition, t);\n    }\n    get(t) {\n        return (0, Support_1.defined)(this.tryGet(t));\n    }\n    tryGetForTopLevel(name) {\n        return this._attributeStore.tryGetForTopLevel(this._definition, name);\n    }\n    getForTopLevel(name) {\n        return (0, Support_1.defined)(this.tryGetForTopLevel(name));\n    }\n}\nexports.TypeAttributeStoreView = TypeAttributeStoreView;\nclass TypeGraph {\n    constructor(typeBuilder, serial, _haveProvenanceAttributes) {\n        this.serial = serial;\n        this._haveProvenanceAttributes = _haveProvenanceAttributes;\n        this._attributeStore = undefined;\n        // FIXME: OrderedMap?  We lose the order in PureScript right now, though,\n        // and maybe even earlier in the TypeScript driver.\n        this._topLevels = new Map();\n        this._parents = undefined;\n        this._printOnRewrite = false;\n        this._typeBuilder = typeBuilder;\n    }\n    get isFrozen() {\n        return this._typeBuilder === undefined;\n    }\n    get attributeStore() {\n        return (0, Support_1.defined)(this._attributeStore);\n    }\n    freeze(topLevels, types, typeAttributes) {\n        (0, Support_1.assert)(!this.isFrozen, \"Tried to freeze TypeGraph a second time\");\n        for (const t of types) {\n            assertTypeRefGraph(t.typeRef, this);\n        }\n        this._attributeStore = new TypeAttributeStore(this, typeAttributes);\n        // The order of these three statements matters.  If we set _typeBuilder\n        // to undefined before we deref the TypeRefs, then we need to set _types\n        // before, also, because the deref will call into typeAtIndex, which requires\n        // either a _typeBuilder or a _types.\n        this._types = types;\n        this._typeBuilder = undefined;\n        this._topLevels = (0, collection_utils_1.mapMap)(topLevels, tref => derefTypeRef(tref, this));\n    }\n    get topLevels() {\n        (0, Support_1.assert)(this.isFrozen, \"Cannot get top-levels from a non-frozen graph\");\n        return this._topLevels;\n    }\n    typeAtIndex(index) {\n        if (this._typeBuilder !== undefined) {\n            return this._typeBuilder.typeAtIndex(index);\n        }\n        return (0, Support_1.defined)(this._types)[index];\n    }\n    atIndex(index) {\n        if (this._typeBuilder !== undefined) {\n            return this._typeBuilder.atIndex(index);\n        }\n        const t = this.typeAtIndex(index);\n        return [t, (0, Support_1.defined)(this._attributeStore).attributesForType(t)];\n    }\n    filterTypes(predicate) {\n        const seen = new Set();\n        let types = [];\n        function addFromType(t) {\n            if (seen.has(t))\n                return;\n            seen.add(t);\n            const required = predicate === undefined || predicate(t);\n            if (required) {\n                types.push(t);\n            }\n            for (const c of t.getChildren()) {\n                addFromType(c);\n            }\n        }\n        for (const [, t] of this.topLevels) {\n            addFromType(t);\n        }\n        return new Set(types);\n    }\n    allNamedTypes() {\n        return this.filterTypes(TypeUtils_1.isNamedType);\n    }\n    allNamedTypesSeparated() {\n        const types = this.allNamedTypes();\n        return (0, TypeUtils_1.separateNamedTypes)(types);\n    }\n    allProvenance() {\n        (0, Support_1.assert)(this._haveProvenanceAttributes);\n        const view = new TypeAttributeStoreView(this.attributeStore, TypeBuilder_1.provenanceTypeAttributeKind);\n        const sets = Array.from(this.allTypesUnordered()).map(t => {\n            const maybeSet = view.tryGet(t);\n            if (maybeSet !== undefined)\n                return maybeSet;\n            return new Set();\n        });\n        const result = new Set();\n        (0, collection_utils_1.setUnionManyInto)(result, sets);\n        return result;\n    }\n    setPrintOnRewrite() {\n        this._printOnRewrite = true;\n    }\n    checkLostTypeAttributes(builder, newGraph) {\n        if (!this._haveProvenanceAttributes || builder.lostTypeAttributes)\n            return;\n        const oldProvenance = this.allProvenance();\n        const newProvenance = newGraph.allProvenance();\n        if (oldProvenance.size !== newProvenance.size) {\n            const difference = (0, collection_utils_1.setSubtract)(oldProvenance, newProvenance);\n            const indexes = Array.from(difference);\n            return (0, Messages_1.messageError)(\"IRTypeAttributesNotPropagated\", { count: difference.size, indexes });\n        }\n    }\n    printRewrite(title) {\n        if (!this._printOnRewrite)\n            return;\n        console.log(`\\n# ${title}`);\n    }\n    // Each array in `replacementGroups` is a bunch of types to be replaced by a\n    // single new type.  `replacer` is a function that takes a group and a\n    // TypeBuilder, and builds a new type with that builder that replaces the group.\n    // That particular TypeBuilder will have to take as inputs types in the old\n    // graph, but return types in the new graph.  Recursive types must be handled\n    // carefully.\n    rewrite(title, stringTypeMapping, alphabetizeProperties, replacementGroups, debugPrintReconstitution, replacer, force = false) {\n        this.printRewrite(title);\n        if (!force && replacementGroups.length === 0)\n            return this;\n        const builder = new GraphRewriting_1.GraphRewriteBuilder(this, stringTypeMapping, alphabetizeProperties, this._haveProvenanceAttributes, replacementGroups, debugPrintReconstitution, replacer);\n        const newGraph = builder.finish();\n        this.checkLostTypeAttributes(builder, newGraph);\n        if (this._printOnRewrite) {\n            newGraph.setPrintOnRewrite();\n            newGraph.printGraph();\n        }\n        if (!builder.didAddForwardingIntersection)\n            return newGraph;\n        return removeIndirectionIntersections(newGraph, stringTypeMapping, debugPrintReconstitution);\n    }\n    remap(title, stringTypeMapping, alphabetizeProperties, map, debugPrintRemapping, force = false) {\n        this.printRewrite(title);\n        if (!force && map.size === 0)\n            return this;\n        const builder = new GraphRewriting_1.GraphRemapBuilder(this, stringTypeMapping, alphabetizeProperties, this._haveProvenanceAttributes, map, debugPrintRemapping);\n        const newGraph = builder.finish();\n        this.checkLostTypeAttributes(builder, newGraph);\n        if (this._printOnRewrite) {\n            newGraph.setPrintOnRewrite();\n            newGraph.printGraph();\n        }\n        (0, Support_1.assert)(!builder.didAddForwardingIntersection);\n        return newGraph;\n    }\n    garbageCollect(alphabetizeProperties, debugPrintReconstitution) {\n        const newGraph = this.remap(\"GC\", (0, TypeBuilder_1.getNoStringTypeMapping)(), alphabetizeProperties, new Map(), debugPrintReconstitution, true);\n        return newGraph;\n    }\n    rewriteFixedPoint(alphabetizeProperties, debugPrintReconstitution) {\n        let graph = this;\n        for (;;) {\n            const newGraph = this.rewrite(\"fixed-point\", (0, TypeBuilder_1.getNoStringTypeMapping)(), alphabetizeProperties, [], debugPrintReconstitution, Support_1.mustNotHappen, true);\n            if (graph.allTypesUnordered().size === newGraph.allTypesUnordered().size) {\n                return graph;\n            }\n            graph = newGraph;\n        }\n    }\n    allTypesUnordered() {\n        (0, Support_1.assert)(this.isFrozen, \"Tried to get all graph types before it was frozen\");\n        return new Set((0, Support_1.defined)(this._types));\n    }\n    makeGraph(invertDirection, childrenOfType) {\n        return new Graph_1.Graph((0, Support_1.defined)(this._types), invertDirection, childrenOfType);\n    }\n    getParentsOfType(t) {\n        assertTypeRefGraph(t.typeRef, this);\n        if (this._parents === undefined) {\n            const parents = (0, Support_1.defined)(this._types).map(_ => new Set());\n            for (const p of this.allTypesUnordered()) {\n                for (const c of p.getChildren()) {\n                    const index = c.index;\n                    parents[index] = parents[index].add(p);\n                }\n            }\n            this._parents = parents;\n        }\n        return this._parents[t.index];\n    }\n    printGraph() {\n        const types = (0, Support_1.defined)(this._types);\n        for (let i = 0; i < types.length; i++) {\n            const t = types[i];\n            const parts = [];\n            parts.push(`${t.debugPrintKind}${t.hasNames ? ` ${t.getCombinedName()}` : \"\"}`);\n            const children = t.getChildren();\n            if (children.size > 0) {\n                parts.push(`children ${Array.from(children)\n                    .map(c => c.index)\n                    .join(\",\")}`);\n            }\n            for (const [kind, value] of t.getAttributes()) {\n                const maybeString = kind.stringify(value);\n                if (maybeString !== undefined) {\n                    parts.push(maybeString);\n                }\n            }\n            console.log(`${i}: ${parts.join(\" | \")}`);\n        }\n    }\n}\nexports.TypeGraph = TypeGraph;\nfunction noneToAny(graph, stringTypeMapping, debugPrintReconstitution) {\n    const noneTypes = (0, collection_utils_1.setFilter)(graph.allTypesUnordered(), t => t.kind === \"none\");\n    if (noneTypes.size === 0) {\n        return graph;\n    }\n    (0, Support_1.assert)(noneTypes.size === 1, \"Cannot have more than one none type\");\n    return graph.rewrite(\"none to any\", stringTypeMapping, false, [Array.from(noneTypes)], debugPrintReconstitution, (types, builder, forwardingRef) => {\n        const attributes = (0, TypeUtils_1.combineTypeAttributesOfTypes)(\"union\", types);\n        const tref = builder.getPrimitiveType(\"any\", attributes, forwardingRef);\n        return tref;\n    });\n}\nexports.noneToAny = noneToAny;\nfunction optionalToNullable(graph, stringTypeMapping, debugPrintReconstitution) {\n    function rewriteClass(c, builder, forwardingRef) {\n        const properties = (0, collection_utils_1.mapMap)(c.getProperties(), (p, name) => {\n            const t = p.type;\n            let ref;\n            if (!p.isOptional || t.isNullable) {\n                ref = builder.reconstituteType(t);\n            }\n            else {\n                const nullType = builder.getPrimitiveType(\"null\");\n                let members;\n                if (t instanceof Type_1.UnionType) {\n                    members = (0, collection_utils_1.setMap)(t.members, m => builder.reconstituteType(m)).add(nullType);\n                }\n                else {\n                    members = new Set([builder.reconstituteType(t), nullType]);\n                }\n                const attributes = TypeNames_1.namesTypeAttributeKind.setDefaultInAttributes(t.getAttributes(), () => TypeNames_1.TypeNames.make(new Set([name]), new Set(), true));\n                ref = builder.getUnionType(attributes, members);\n            }\n            return builder.makeClassProperty(ref, p.isOptional);\n        });\n        if (c.isFixed) {\n            return builder.getUniqueClassType(c.getAttributes(), true, properties, forwardingRef);\n        }\n        else {\n            return builder.getClassType(c.getAttributes(), properties, forwardingRef);\n        }\n    }\n    const classesWithOptional = (0, collection_utils_1.setFilter)(graph.allTypesUnordered(), t => t instanceof Type_1.ClassType && (0, collection_utils_1.mapSome)(t.getProperties(), p => p.isOptional));\n    const replacementGroups = Array.from(classesWithOptional).map(c => [c]);\n    if (classesWithOptional.size === 0) {\n        return graph;\n    }\n    return graph.rewrite(\"optional to nullable\", stringTypeMapping, false, replacementGroups, debugPrintReconstitution, (setOfClass, builder, forwardingRef) => {\n        (0, Support_1.assert)(setOfClass.size === 1);\n        const c = (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(setOfClass));\n        return rewriteClass(c, builder, forwardingRef);\n    });\n}\nexports.optionalToNullable = optionalToNullable;\nfunction removeIndirectionIntersections(graph, stringTypeMapping, debugPrintRemapping) {\n    const map = [];\n    for (const t of graph.allTypesUnordered()) {\n        if (!(t instanceof Type_1.IntersectionType))\n            continue;\n        const seen = new Set([t]);\n        let current = t;\n        while (current.members.size === 1) {\n            const member = (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(current.members));\n            if (!(member instanceof Type_1.IntersectionType)) {\n                map.push([t, member]);\n                break;\n            }\n            if (seen.has(member)) {\n                // FIXME: Technically, this is an any type.\n                return (0, Support_1.panic)(\"There's a cycle of intersection types\");\n            }\n            seen.add(member);\n            current = member;\n        }\n    }\n    return graph.remap(\"remove indirection intersections\", stringTypeMapping, false, new Map(map), debugPrintRemapping);\n}\nexports.removeIndirectionIntersections = removeIndirectionIntersections;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uriSchemaAttributesProducer = exports.uriInferenceAttributesProducer = exports.uriTypeAttributeKind = void 0;\nconst urijs_1 = __importDefault(require(\"urijs\"));\nconst TypeAttributes_1 = require(\"./TypeAttributes\");\nconst collection_utils_1 = require(\"collection-utils\");\nconst Support_1 = require(\"../support/Support\");\nconst protocolsSchemaProperty = \"qt-uri-protocols\";\nconst extensionsSchemaProperty = \"qt-uri-extensions\";\nclass URITypeAttributeKind extends TypeAttributes_1.TypeAttributeKind {\n    constructor() {\n        super(\"uriAttributes\");\n    }\n    get inIdentity() {\n        return true;\n    }\n    combine(attrs) {\n        const protocolSets = attrs.map(a => a[0]);\n        const extensionSets = attrs.map(a => a[1]);\n        return [(0, collection_utils_1.setUnionManyInto)(new Set(), protocolSets), (0, collection_utils_1.setUnionManyInto)(new Set(), extensionSets)];\n    }\n    makeInferred(_) {\n        return undefined;\n    }\n    addToSchema(schema, t, attrs) {\n        if (t.kind !== \"string\" && t.kind !== \"uri\")\n            return;\n        const [protocols, extensions] = attrs;\n        if (protocols.size > 0) {\n            schema[protocolsSchemaProperty] = Array.from(protocols).sort();\n        }\n        if (extensions.size > 0) {\n            schema[extensionsSchemaProperty] = Array.from(extensions).sort();\n        }\n    }\n}\nexports.uriTypeAttributeKind = new URITypeAttributeKind();\nconst extensionRegex = /^.+(\\.[^./\\\\]+)$/;\nfunction pathExtension(path) {\n    const matches = path.match(extensionRegex);\n    if (matches === null)\n        return undefined;\n    return matches[1];\n}\nfunction uriInferenceAttributesProducer(s) {\n    try {\n        const uri = (0, urijs_1.default)(s);\n        const extension = pathExtension(uri.path());\n        const extensions = extension === undefined ? [] : [extension.toLowerCase()];\n        return exports.uriTypeAttributeKind.makeAttributes([new Set([uri.protocol().toLowerCase()]), new Set(extensions)]);\n    }\n    catch (_a) {\n        return TypeAttributes_1.emptyTypeAttributes;\n    }\n}\nexports.uriInferenceAttributesProducer = uriInferenceAttributesProducer;\nfunction uriSchemaAttributesProducer(schema, _ref, types) {\n    if (!(typeof schema === \"object\"))\n        return undefined;\n    if (!types.has(\"string\"))\n        return undefined;\n    let protocols;\n    const maybeProtocols = schema[protocolsSchemaProperty];\n    if (maybeProtocols !== undefined) {\n        protocols = new Set((0, Support_1.checkArray)(maybeProtocols, Support_1.checkString));\n    }\n    else {\n        protocols = new Set();\n    }\n    let extensions;\n    const maybeExtensions = schema[extensionsSchemaProperty];\n    if (maybeExtensions !== undefined) {\n        extensions = new Set((0, Support_1.checkArray)(maybeExtensions, Support_1.checkString));\n    }\n    else {\n        extensions = new Set();\n    }\n    if (protocols.size === 0 && extensions.size === 0)\n        return undefined;\n    return { forString: exports.uriTypeAttributeKind.makeAttributes([protocols, extensions]) };\n}\nexports.uriSchemaAttributesProducer = uriSchemaAttributesProducer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnionType = exports.IntersectionType = exports.SetOperationType = exports.intersectionTypeIdentity = exports.unionTypeIdentity = exports.setOperationTypeIdentity = exports.setOperationCasesEqual = exports.EnumType = exports.enumTypeIdentity = exports.MapType = exports.ClassType = exports.ObjectType = exports.mapTypeIdentify = exports.classTypeIdentity = exports.ClassProperty = exports.GenericClassProperty = exports.ArrayType = exports.arrayTypeIdentity = exports.PrimitiveType = exports.primitiveTypeIdentity = exports.Type = exports.TypeIdentity = exports.isPrimitiveTypeKind = exports.isNumberTypeKind = exports.targetTypeKindForTransformedStringTypeKind = exports.isPrimitiveStringTypeKind = exports.transformedStringTypeKinds = exports.transformedStringTypeTargetTypeKindsMap = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Support_1 = require(\"./support/Support\");\nconst TypeNames_1 = require(\"./attributes/TypeNames\");\nconst Messages_1 = require(\"./Messages\");\nconst TypeGraph_1 = require(\"./TypeGraph\");\nconst URIAttributes_1 = require(\"./attributes/URIAttributes\");\n/**\n * All the transformed string type kinds and the JSON Schema formats and\n * primitive type kinds they map to.  Not all transformed string types map to\n * primitive types.  Date-time types, for example, stand on their own, but\n * stringified integers map to integers.\n */\nconst transformedStringTypeTargetTypeKinds = {\n    date: { jsonSchema: \"date\", primitive: undefined },\n    time: { jsonSchema: \"time\", primitive: undefined },\n    \"date-time\": { jsonSchema: \"date-time\", primitive: undefined },\n    uuid: { jsonSchema: \"uuid\", primitive: undefined },\n    uri: { jsonSchema: \"uri\", primitive: undefined, attributesProducer: URIAttributes_1.uriInferenceAttributesProducer },\n    \"integer-string\": { jsonSchema: \"integer\", primitive: \"integer\" },\n    \"bool-string\": { jsonSchema: \"boolean\", primitive: \"bool\" }\n};\nexports.transformedStringTypeTargetTypeKindsMap = (0, collection_utils_1.mapFromObject)(transformedStringTypeTargetTypeKinds);\nexports.transformedStringTypeKinds = new Set(Object.getOwnPropertyNames(transformedStringTypeTargetTypeKinds));\nfunction isPrimitiveStringTypeKind(kind) {\n    return kind === \"string\" || (0, collection_utils_1.hasOwnProperty)(transformedStringTypeTargetTypeKinds, kind);\n}\nexports.isPrimitiveStringTypeKind = isPrimitiveStringTypeKind;\nfunction targetTypeKindForTransformedStringTypeKind(kind) {\n    const target = exports.transformedStringTypeTargetTypeKindsMap.get(kind);\n    if (target === undefined)\n        return undefined;\n    return target.primitive;\n}\nexports.targetTypeKindForTransformedStringTypeKind = targetTypeKindForTransformedStringTypeKind;\nfunction isNumberTypeKind(kind) {\n    return kind === \"integer\" || kind === \"double\";\n}\nexports.isNumberTypeKind = isNumberTypeKind;\nfunction isPrimitiveTypeKind(kind) {\n    if (isPrimitiveStringTypeKind(kind))\n        return true;\n    if (isNumberTypeKind(kind))\n        return true;\n    return kind === \"none\" || kind === \"any\" || kind === \"null\" || kind === \"bool\";\n}\nexports.isPrimitiveTypeKind = isPrimitiveTypeKind;\nfunction triviallyStructurallyCompatible(x, y) {\n    if (x.index === y.index)\n        return true;\n    if (x.kind === \"none\" || y.kind === \"none\")\n        return true;\n    return false;\n}\nclass TypeIdentity {\n    constructor(_kind, _components) {\n        this._kind = _kind;\n        this._components = _components;\n        let h = collection_utils_1.hashCodeInit;\n        h = (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashCodeOf)(this._kind));\n        for (const c of _components) {\n            h = (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashCodeOf)(c));\n        }\n        this._hashCode = h;\n    }\n    equals(other) {\n        if (!(other instanceof TypeIdentity))\n            return false;\n        if (this._kind !== other._kind)\n            return false;\n        const n = this._components.length;\n        (0, Support_1.assert)(n === other._components.length, \"Components of a type kind's identity must have the same length\");\n        for (let i = 0; i < n; i++) {\n            if (!(0, collection_utils_1.areEqual)(this._components[i], other._components[i]))\n                return false;\n        }\n        return true;\n    }\n    hashCode() {\n        return this._hashCode;\n    }\n}\nexports.TypeIdentity = TypeIdentity;\nclass Type {\n    constructor(typeRef, graph) {\n        this.typeRef = typeRef;\n        this.graph = graph;\n    }\n    get index() {\n        return (0, TypeGraph_1.typeRefIndex)(this.typeRef);\n    }\n    getChildren() {\n        let result = this.getNonAttributeChildren();\n        for (const [k, v] of this.getAttributes()) {\n            if (k.children === undefined)\n                continue;\n            (0, collection_utils_1.setUnionInto)(result, k.children(v));\n        }\n        return result;\n    }\n    getAttributes() {\n        return (0, TypeGraph_1.attributesForTypeRef)(this.typeRef, this.graph);\n    }\n    get hasNames() {\n        return TypeNames_1.namesTypeAttributeKind.tryGetInAttributes(this.getAttributes()) !== undefined;\n    }\n    getNames() {\n        return (0, Support_1.defined)(TypeNames_1.namesTypeAttributeKind.tryGetInAttributes(this.getAttributes()));\n    }\n    getCombinedName() {\n        return this.getNames().combinedName;\n    }\n    get debugPrintKind() {\n        return this.kind;\n    }\n    equals(other) {\n        if (!(other instanceof Type))\n            return false;\n        return this.typeRef === other.typeRef;\n    }\n    hashCode() {\n        return (0, collection_utils_1.hashCodeOf)(this.typeRef);\n    }\n    structurallyCompatible(other, conflateNumbers = false) {\n        function kindsCompatible(kind1, kind2) {\n            if (kind1 === kind2)\n                return true;\n            if (!conflateNumbers)\n                return false;\n            if (kind1 === \"integer\")\n                return kind2 === \"double\";\n            if (kind1 === \"double\")\n                return kind2 === \"integer\";\n            return false;\n        }\n        if (triviallyStructurallyCompatible(this, other))\n            return true;\n        if (!kindsCompatible(this.kind, other.kind))\n            return false;\n        const workList = [[this, other]];\n        // This contains a set of pairs which are the type pairs\n        // we have already determined to be equal.  We can't just\n        // do comparison recursively because types can have cycles.\n        const done = [];\n        let failed;\n        const queue = (x, y) => {\n            if (triviallyStructurallyCompatible(x, y))\n                return true;\n            if (!kindsCompatible(x.kind, y.kind)) {\n                failed = true;\n                return false;\n            }\n            workList.push([x, y]);\n            return true;\n        };\n        while (workList.length > 0) {\n            let [a, b] = (0, Support_1.defined)(workList.pop());\n            if (a.index > b.index) {\n                [a, b] = [b, a];\n            }\n            if (!a.isPrimitive()) {\n                let ai = a.index;\n                let bi = b.index;\n                let found = false;\n                for (const [dai, dbi] of done) {\n                    if (dai === ai && dbi === bi) {\n                        found = true;\n                        break;\n                    }\n                }\n                if (found)\n                    continue;\n                done.push([ai, bi]);\n            }\n            failed = false;\n            if (!a.structuralEqualityStep(b, conflateNumbers, queue))\n                return false;\n            if (failed)\n                return false;\n        }\n        return true;\n    }\n    getParentTypes() {\n        return this.graph.getParentsOfType(this);\n    }\n    getAncestorsNotInSet(set) {\n        const workList = [this];\n        const processed = new Set();\n        const ancestors = new Set();\n        for (;;) {\n            const t = workList.pop();\n            if (t === undefined)\n                break;\n            const parents = t.getParentTypes();\n            console.log(`${parents.size} parents`);\n            for (const p of parents) {\n                if (processed.has(p))\n                    continue;\n                processed.add(p);\n                if (set.has(p.typeRef)) {\n                    console.log(`adding ${p.kind}`);\n                    workList.push(p);\n                }\n                else {\n                    console.log(`found ${p.kind}`);\n                    ancestors.add(p);\n                }\n            }\n        }\n        return ancestors;\n    }\n}\nexports.Type = Type;\nfunction hasUniqueIdentityAttributes(attributes) {\n    return (0, collection_utils_1.mapSome)(attributes, (v, ta) => ta.requiresUniqueIdentity(v));\n}\nfunction identityAttributes(attributes) {\n    return (0, collection_utils_1.mapFilter)(attributes, (_, kind) => kind.inIdentity);\n}\nfunction primitiveTypeIdentity(kind, attributes) {\n    if (hasUniqueIdentityAttributes(attributes))\n        return undefined;\n    return new TypeIdentity(kind, [identityAttributes(attributes)]);\n}\nexports.primitiveTypeIdentity = primitiveTypeIdentity;\nclass PrimitiveType extends Type {\n    constructor(typeRef, graph, kind) {\n        super(typeRef, graph);\n        this.kind = kind;\n    }\n    get isNullable() {\n        return this.kind === \"null\" || this.kind === \"any\" || this.kind === \"none\";\n    }\n    isPrimitive() {\n        return true;\n    }\n    getNonAttributeChildren() {\n        return new Set();\n    }\n    get identity() {\n        return primitiveTypeIdentity(this.kind, this.getAttributes());\n    }\n    reconstitute(builder) {\n        builder.getPrimitiveType(this.kind);\n    }\n    structuralEqualityStep(_other, _conflateNumbers, _queue) {\n        return true;\n    }\n}\nexports.PrimitiveType = PrimitiveType;\nfunction arrayTypeIdentity(attributes, itemsRef) {\n    if (hasUniqueIdentityAttributes(attributes))\n        return undefined;\n    return new TypeIdentity(\"array\", [identityAttributes(attributes), itemsRef]);\n}\nexports.arrayTypeIdentity = arrayTypeIdentity;\nclass ArrayType extends Type {\n    constructor(typeRef, graph, _itemsRef) {\n        super(typeRef, graph);\n        this._itemsRef = _itemsRef;\n        this.kind = \"array\";\n    }\n    setItems(itemsRef) {\n        if (this._itemsRef !== undefined) {\n            return (0, Support_1.panic)(\"Can only set array items once\");\n        }\n        this._itemsRef = itemsRef;\n    }\n    getItemsRef() {\n        if (this._itemsRef === undefined) {\n            return (0, Support_1.panic)(\"Array items accessed before they were set\");\n        }\n        return this._itemsRef;\n    }\n    get items() {\n        return (0, TypeGraph_1.derefTypeRef)(this.getItemsRef(), this.graph);\n    }\n    getNonAttributeChildren() {\n        return new Set([this.items]);\n    }\n    get isNullable() {\n        return false;\n    }\n    isPrimitive() {\n        return false;\n    }\n    get identity() {\n        return arrayTypeIdentity(this.getAttributes(), this.getItemsRef());\n    }\n    reconstitute(builder) {\n        const itemsRef = this.getItemsRef();\n        const maybeItems = builder.lookup(itemsRef);\n        if (maybeItems === undefined) {\n            builder.getUniqueArrayType();\n            builder.setArrayItems(builder.reconstitute(this.getItemsRef()));\n        }\n        else {\n            builder.getArrayType(maybeItems);\n        }\n    }\n    structuralEqualityStep(other, _conflateNumbers, queue) {\n        return queue(this.items, other.items);\n    }\n}\nexports.ArrayType = ArrayType;\nclass GenericClassProperty {\n    constructor(typeData, isOptional) {\n        this.typeData = typeData;\n        this.isOptional = isOptional;\n    }\n    equals(other) {\n        if (!(other instanceof GenericClassProperty)) {\n            return false;\n        }\n        return (0, collection_utils_1.areEqual)(this.typeData, other.typeData) && this.isOptional === other.isOptional;\n    }\n    hashCode() {\n        return (0, collection_utils_1.hashCodeOf)(this.typeData) + (this.isOptional ? 17 : 23);\n    }\n}\nexports.GenericClassProperty = GenericClassProperty;\nclass ClassProperty extends GenericClassProperty {\n    constructor(typeRef, graph, isOptional) {\n        super(typeRef, isOptional);\n        this.graph = graph;\n    }\n    get typeRef() {\n        return this.typeData;\n    }\n    get type() {\n        return (0, TypeGraph_1.derefTypeRef)(this.typeRef, this.graph);\n    }\n}\nexports.ClassProperty = ClassProperty;\nfunction objectTypeIdentify(kind, attributes, properties, additionalPropertiesRef) {\n    if (hasUniqueIdentityAttributes(attributes))\n        return undefined;\n    return new TypeIdentity(kind, [identityAttributes(attributes), properties, additionalPropertiesRef]);\n}\nfunction classTypeIdentity(attributes, properties) {\n    return objectTypeIdentify(\"class\", attributes, properties, undefined);\n}\nexports.classTypeIdentity = classTypeIdentity;\nfunction mapTypeIdentify(attributes, additionalPropertiesRef) {\n    return objectTypeIdentify(\"map\", attributes, new Map(), additionalPropertiesRef);\n}\nexports.mapTypeIdentify = mapTypeIdentify;\nclass ObjectType extends Type {\n    constructor(typeRef, graph, kind, isFixed, _properties, _additionalPropertiesRef) {\n        super(typeRef, graph);\n        this.kind = kind;\n        this.isFixed = isFixed;\n        this._properties = _properties;\n        this._additionalPropertiesRef = _additionalPropertiesRef;\n        if (kind === \"map\") {\n            if (_properties !== undefined) {\n                (0, Support_1.assert)(_properties.size === 0);\n            }\n            (0, Support_1.assert)(!isFixed);\n        }\n        else if (kind === \"class\") {\n            (0, Support_1.assert)(_additionalPropertiesRef === undefined);\n        }\n        else {\n            (0, Support_1.assert)(isFixed);\n        }\n    }\n    setProperties(properties, additionalPropertiesRef) {\n        (0, Support_1.assert)(this._properties === undefined, \"Tried to set object properties twice\");\n        if (this instanceof MapType) {\n            (0, Support_1.assert)(properties.size === 0, \"Cannot set properties on map type\");\n        }\n        if (this instanceof ClassType) {\n            (0, Support_1.assert)(additionalPropertiesRef === undefined, \"Cannot set additional properties of class type\");\n        }\n        this._properties = properties;\n        this._additionalPropertiesRef = additionalPropertiesRef;\n    }\n    getProperties() {\n        return (0, Support_1.defined)(this._properties);\n    }\n    getSortedProperties() {\n        return (0, collection_utils_1.mapSortByKey)(this.getProperties());\n    }\n    getAdditionalPropertiesRef() {\n        (0, Support_1.assert)(this._properties !== undefined, \"Properties are not set yet\");\n        return this._additionalPropertiesRef;\n    }\n    getAdditionalProperties() {\n        const tref = this.getAdditionalPropertiesRef();\n        if (tref === undefined)\n            return undefined;\n        return (0, TypeGraph_1.derefTypeRef)(tref, this.graph);\n    }\n    getNonAttributeChildren() {\n        const types = (0, collection_utils_1.mapSortToArray)(this.getProperties(), (_, k) => k).map(([_, p]) => p.type);\n        const additionalProperties = this.getAdditionalProperties();\n        if (additionalProperties !== undefined) {\n            types.push(additionalProperties);\n        }\n        return new Set(types);\n    }\n    get isNullable() {\n        return false;\n    }\n    isPrimitive() {\n        return false;\n    }\n    get identity() {\n        if (this.isFixed)\n            return undefined;\n        return objectTypeIdentify(this.kind, this.getAttributes(), this.getProperties(), this.getAdditionalPropertiesRef());\n    }\n    reconstitute(builder, canonicalOrder) {\n        const sortedProperties = this.getSortedProperties();\n        const propertiesInNewOrder = canonicalOrder ? sortedProperties : this.getProperties();\n        const maybePropertyTypes = builder.lookupMap((0, collection_utils_1.mapMap)(sortedProperties, cp => cp.typeRef));\n        const maybeAdditionalProperties = (0, collection_utils_1.definedMap)(this._additionalPropertiesRef, r => builder.lookup(r));\n        if (maybePropertyTypes !== undefined &&\n            (maybeAdditionalProperties !== undefined || this._additionalPropertiesRef === undefined)) {\n            const properties = (0, collection_utils_1.mapMap)(propertiesInNewOrder, (cp, n) => builder.makeClassProperty((0, Support_1.defined)(maybePropertyTypes.get(n)), cp.isOptional));\n            switch (this.kind) {\n                case \"object\":\n                    (0, Support_1.assert)(this.isFixed);\n                    builder.getObjectType(properties, maybeAdditionalProperties);\n                    break;\n                case \"map\":\n                    builder.getMapType((0, Support_1.defined)(maybeAdditionalProperties));\n                    break;\n                case \"class\":\n                    if (this.isFixed) {\n                        builder.getUniqueClassType(true, properties);\n                    }\n                    else {\n                        builder.getClassType(properties);\n                    }\n                    break;\n                default:\n                    return (0, Support_1.panic)(`Invalid object type kind ${this.kind}`);\n            }\n        }\n        else {\n            switch (this.kind) {\n                case \"object\":\n                    (0, Support_1.assert)(this.isFixed);\n                    builder.getUniqueObjectType(undefined, undefined);\n                    break;\n                case \"map\":\n                    builder.getUniqueMapType();\n                    break;\n                case \"class\":\n                    builder.getUniqueClassType(this.isFixed, undefined);\n                    break;\n                default:\n                    return (0, Support_1.panic)(`Invalid object type kind ${this.kind}`);\n            }\n            const reconstitutedTypes = (0, collection_utils_1.mapMap)(sortedProperties, cp => builder.reconstitute(cp.typeRef));\n            const properties = (0, collection_utils_1.mapMap)(propertiesInNewOrder, (cp, n) => builder.makeClassProperty((0, Support_1.defined)(reconstitutedTypes.get(n)), cp.isOptional));\n            const additionalProperties = (0, collection_utils_1.definedMap)(this._additionalPropertiesRef, r => builder.reconstitute(r));\n            builder.setObjectProperties(properties, additionalProperties);\n        }\n    }\n    structuralEqualityStep(other, _conflateNumbers, queue) {\n        const pa = this.getProperties();\n        const pb = other.getProperties();\n        if (pa.size !== pb.size)\n            return false;\n        let failed = false;\n        for (const [name, cpa] of pa) {\n            const cpb = pb.get(name);\n            if (cpb === undefined || cpa.isOptional !== cpb.isOptional || !queue(cpa.type, cpb.type)) {\n                failed = true;\n                return false;\n            }\n        }\n        if (failed)\n            return false;\n        const thisAdditionalProperties = this.getAdditionalProperties();\n        const otherAdditionalProperties = other.getAdditionalProperties();\n        if ((thisAdditionalProperties === undefined) !== (otherAdditionalProperties === undefined))\n            return false;\n        if (thisAdditionalProperties === undefined || otherAdditionalProperties === undefined)\n            return true;\n        return queue(thisAdditionalProperties, otherAdditionalProperties);\n    }\n}\nexports.ObjectType = ObjectType;\nclass ClassType extends ObjectType {\n    constructor(typeRef, graph, isFixed, properties) {\n        super(typeRef, graph, \"class\", isFixed, properties, undefined);\n    }\n}\nexports.ClassType = ClassType;\nclass MapType extends ObjectType {\n    constructor(typeRef, graph, valuesRef) {\n        super(typeRef, graph, \"map\", false, (0, collection_utils_1.definedMap)(valuesRef, () => new Map()), valuesRef);\n    }\n    // FIXME: Remove and use `getAdditionalProperties()` instead.\n    get values() {\n        return (0, Support_1.defined)(this.getAdditionalProperties());\n    }\n}\nexports.MapType = MapType;\nfunction enumTypeIdentity(attributes, cases) {\n    if (hasUniqueIdentityAttributes(attributes))\n        return undefined;\n    return new TypeIdentity(\"enum\", [identityAttributes(attributes), cases]);\n}\nexports.enumTypeIdentity = enumTypeIdentity;\nclass EnumType extends Type {\n    constructor(typeRef, graph, cases) {\n        super(typeRef, graph);\n        this.cases = cases;\n        this.kind = \"enum\";\n    }\n    get isNullable() {\n        return false;\n    }\n    isPrimitive() {\n        return false;\n    }\n    get identity() {\n        return enumTypeIdentity(this.getAttributes(), this.cases);\n    }\n    getNonAttributeChildren() {\n        return new Set();\n    }\n    reconstitute(builder) {\n        builder.getEnumType(this.cases);\n    }\n    structuralEqualityStep(other, _conflateNumbers, _queue) {\n        return (0, collection_utils_1.areEqual)(this.cases, other.cases);\n    }\n}\nexports.EnumType = EnumType;\nfunction setOperationCasesEqual(typesA, typesB, conflateNumbers, membersEqual) {\n    const ma = (0, collection_utils_1.toReadonlySet)(typesA);\n    const mb = (0, collection_utils_1.toReadonlySet)(typesB);\n    if (ma.size !== mb.size)\n        return false;\n    return (0, collection_utils_1.iterableEvery)(ma, ta => {\n        const tb = (0, collection_utils_1.iterableFind)(mb, t => t.kind === ta.kind);\n        if (tb !== undefined) {\n            if (membersEqual(ta, tb))\n                return true;\n        }\n        if (conflateNumbers) {\n            if (ta.kind === \"integer\" && (0, collection_utils_1.iterableSome)(mb, t => t.kind === \"double\"))\n                return true;\n            if (ta.kind === \"double\" && (0, collection_utils_1.iterableSome)(mb, t => t.kind === \"integer\"))\n                return true;\n        }\n        return false;\n    });\n}\nexports.setOperationCasesEqual = setOperationCasesEqual;\nfunction setOperationTypeIdentity(kind, attributes, memberRefs) {\n    if (hasUniqueIdentityAttributes(attributes))\n        return undefined;\n    return new TypeIdentity(kind, [identityAttributes(attributes), memberRefs]);\n}\nexports.setOperationTypeIdentity = setOperationTypeIdentity;\nfunction unionTypeIdentity(attributes, memberRefs) {\n    return setOperationTypeIdentity(\"union\", attributes, memberRefs);\n}\nexports.unionTypeIdentity = unionTypeIdentity;\nfunction intersectionTypeIdentity(attributes, memberRefs) {\n    return setOperationTypeIdentity(\"intersection\", attributes, memberRefs);\n}\nexports.intersectionTypeIdentity = intersectionTypeIdentity;\nclass SetOperationType extends Type {\n    constructor(typeRef, graph, kind, _memberRefs) {\n        super(typeRef, graph);\n        this.kind = kind;\n        this._memberRefs = _memberRefs;\n    }\n    setMembers(memberRefs) {\n        if (this._memberRefs !== undefined) {\n            return (0, Support_1.panic)(\"Can only set map members once\");\n        }\n        this._memberRefs = memberRefs;\n    }\n    getMemberRefs() {\n        if (this._memberRefs === undefined) {\n            return (0, Support_1.panic)(\"Map members accessed before they were set\");\n        }\n        return this._memberRefs;\n    }\n    get members() {\n        return (0, collection_utils_1.setMap)(this.getMemberRefs(), tref => (0, TypeGraph_1.derefTypeRef)(tref, this.graph));\n    }\n    get sortedMembers() {\n        return this.getNonAttributeChildren();\n    }\n    getNonAttributeChildren() {\n        // FIXME: We're assuming no two members of the same kind.\n        return (0, collection_utils_1.setSortBy)(this.members, t => t.kind);\n    }\n    isPrimitive() {\n        return false;\n    }\n    get identity() {\n        return setOperationTypeIdentity(this.kind, this.getAttributes(), this.getMemberRefs());\n    }\n    reconstituteSetOperation(builder, canonicalOrder, getType) {\n        const sortedMemberRefs = (0, collection_utils_1.mapMap)(this.sortedMembers.entries(), t => t.typeRef);\n        const membersInOrder = canonicalOrder ? this.sortedMembers : this.members;\n        const maybeMembers = builder.lookupMap(sortedMemberRefs);\n        if (maybeMembers === undefined) {\n            getType(undefined);\n            const reconstituted = builder.reconstituteMap(sortedMemberRefs);\n            builder.setSetOperationMembers((0, collection_utils_1.setMap)(membersInOrder, t => (0, Support_1.defined)(reconstituted.get(t))));\n        }\n        else {\n            getType((0, collection_utils_1.setMap)(membersInOrder, t => (0, Support_1.defined)(maybeMembers.get(t))));\n        }\n    }\n    structuralEqualityStep(other, conflateNumbers, queue) {\n        return setOperationCasesEqual(this.members, other.members, conflateNumbers, queue);\n    }\n}\nexports.SetOperationType = SetOperationType;\nclass IntersectionType extends SetOperationType {\n    constructor(typeRef, graph, memberRefs) {\n        super(typeRef, graph, \"intersection\", memberRefs);\n    }\n    get isNullable() {\n        return (0, Support_1.panic)(\"isNullable not implemented for IntersectionType\");\n    }\n    reconstitute(builder, canonicalOrder) {\n        this.reconstituteSetOperation(builder, canonicalOrder, members => {\n            if (members === undefined) {\n                builder.getUniqueIntersectionType();\n            }\n            else {\n                builder.getIntersectionType(members);\n            }\n        });\n    }\n}\nexports.IntersectionType = IntersectionType;\nclass UnionType extends SetOperationType {\n    constructor(typeRef, graph, memberRefs) {\n        super(typeRef, graph, \"union\", memberRefs);\n        if (memberRefs !== undefined) {\n            (0, Messages_1.messageAssert)(memberRefs.size > 0, \"IRNoEmptyUnions\", {});\n        }\n    }\n    setMembers(memberRefs) {\n        (0, Messages_1.messageAssert)(memberRefs.size > 0, \"IRNoEmptyUnions\", {});\n        super.setMembers(memberRefs);\n    }\n    get stringTypeMembers() {\n        return (0, collection_utils_1.setFilter)(this.members, t => isPrimitiveStringTypeKind(t.kind) || t.kind === \"enum\");\n    }\n    findMember(kind) {\n        return (0, collection_utils_1.iterableFind)(this.members, t => t.kind === kind);\n    }\n    get isNullable() {\n        return this.findMember(\"null\") !== undefined;\n    }\n    get isCanonical() {\n        const members = this.members;\n        if (members.size <= 1)\n            return false;\n        const kinds = (0, collection_utils_1.setMap)(members, t => t.kind);\n        if (kinds.size < members.size)\n            return false;\n        if (kinds.has(\"union\") || kinds.has(\"intersection\"))\n            return false;\n        if (kinds.has(\"none\") || kinds.has(\"any\"))\n            return false;\n        if (kinds.has(\"string\") && kinds.has(\"enum\"))\n            return false;\n        let numObjectTypes = 0;\n        if (kinds.has(\"class\"))\n            numObjectTypes += 1;\n        if (kinds.has(\"map\"))\n            numObjectTypes += 1;\n        if (kinds.has(\"object\"))\n            numObjectTypes += 1;\n        if (numObjectTypes > 1)\n            return false;\n        return true;\n    }\n    reconstitute(builder, canonicalOrder) {\n        this.reconstituteSetOperation(builder, canonicalOrder, members => {\n            if (members === undefined) {\n                builder.getUniqueUnionType();\n            }\n            else {\n                builder.getUnionType(members);\n            }\n        });\n    }\n}\nexports.UnionType = UnionType;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assignNames = exports.keywordNamespace = exports.DependencyName = exports.AssociatedName = exports.SimpleName = exports.FixedName = exports.Name = exports.funPrefixNamer = exports.Namer = exports.Namespace = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Support_1 = require(\"./support/Support\");\nclass Namespace {\n    constructor(_name, parent, forbiddenNamespaces, additionalForbidden) {\n        this._children = new Set();\n        this._members = new Set();\n        this.forbiddenNamespaces = new Set(forbiddenNamespaces);\n        this.additionalForbidden = new Set(additionalForbidden);\n        if (parent !== undefined) {\n            parent.addChild(this);\n        }\n    }\n    addChild(child) {\n        this._children.add(child);\n    }\n    get children() {\n        return this._children;\n    }\n    get members() {\n        return this._members;\n    }\n    get forbiddenNameds() {\n        // FIXME: cache\n        return (0, collection_utils_1.setUnion)(this.additionalForbidden, ...Array.from(this.forbiddenNamespaces).map(ns => ns.members));\n    }\n    add(named) {\n        this._members.add(named);\n        return named;\n    }\n}\nexports.Namespace = Namespace;\n// `Namer`s are invoked to figure out what names to assign non-fixed `Name`s,\n// and in particular to resolve conflicts.  Those arise under two circumstances,\n// which can also combine:\n//\n// 1. A proposed name is the same as an already assigned name that's forbidden\n//    for the name to be assigned.\n// 2. There is more than one `Name` about to be assigned a name that all have\n//    the same proposed name.\n//\n// The namer is invoked with the set of all assigned, forbidden names,\n// the requested name, and the `Name`s to assign names to.\n//\n// `Namer` is a class so that we can compare namers and put them into immutable\n// collections.\nclass Namer {\n    constructor(name, nameStyle, prefixes) {\n        this.name = name;\n        this.nameStyle = nameStyle;\n        this._prefixes = new Set(prefixes);\n    }\n    // The namesIterable comes directly out of the context and will\n    // be modified if we assign\n    assignNames(names, forbiddenNamesIterable, namesToAssignIterable) {\n        const forbiddenNames = new Set(forbiddenNamesIterable);\n        const namesToAssign = Array.from(namesToAssignIterable);\n        (0, Support_1.assert)(namesToAssign.length > 0, \"Number of names can't be less than 1\");\n        const allAssignedNames = new Map();\n        let namesToPrefix = [];\n        for (const name of namesToAssign) {\n            const proposedNames = name.proposeUnstyledNames(names);\n            const namingFunction = name.namingFunction;\n            // Find the first proposed name that isn't proposed by\n            // any of the other names and that isn't already forbidden.\n            const maybeUniqueName = (0, collection_utils_1.iterableFind)(proposedNames, proposed => !forbiddenNames.has(namingFunction.nameStyle(proposed)) &&\n                namesToAssign.every(n => n === name || !n.proposeUnstyledNames(names).has(proposed)));\n            if (maybeUniqueName !== undefined) {\n                const styledName = namingFunction.nameStyle(maybeUniqueName);\n                const assigned = name.nameAssignments(forbiddenNames, styledName);\n                if (assigned !== null) {\n                    (0, collection_utils_1.mapMergeInto)(allAssignedNames, assigned);\n                    (0, collection_utils_1.setUnionInto)(forbiddenNames, assigned.values());\n                    continue;\n                }\n            }\n            // There's no unique name, or it couldn't be assigned, so\n            // we need to prefix-name this one.\n            namesToPrefix.push(name);\n        }\n        let prefixes = this._prefixes.values();\n        let suffixNumber = 1;\n        for (const name of namesToPrefix) {\n            const originalName = (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(name.proposeUnstyledNames(names)));\n            for (;;) {\n                let nameToTry;\n                const { done, value: prefix } = prefixes.next();\n                if (!done) {\n                    nameToTry = `${prefix}_${originalName}`;\n                }\n                else {\n                    nameToTry = `${originalName}_${suffixNumber.toString()}`;\n                    suffixNumber++;\n                }\n                const styledName = name.namingFunction.nameStyle(nameToTry);\n                const assigned = name.nameAssignments(forbiddenNames, styledName);\n                if (assigned === null)\n                    continue;\n                (0, collection_utils_1.mapMergeInto)(allAssignedNames, assigned);\n                (0, collection_utils_1.setUnionInto)(forbiddenNames, assigned.values());\n                break;\n            }\n        }\n        return allAssignedNames;\n    }\n}\nexports.Namer = Namer;\nconst funPrefixes = [\n    \"Purple\",\n    \"Fluffy\",\n    \"Tentacled\",\n    \"Sticky\",\n    \"Indigo\",\n    \"Indecent\",\n    \"Hilarious\",\n    \"Ambitious\",\n    \"Cunning\",\n    \"Magenta\",\n    \"Frisky\",\n    \"Mischievous\",\n    \"Braggadocious\"\n];\nfunction funPrefixNamer(name, nameStyle) {\n    return new Namer(name, nameStyle, funPrefixes);\n}\nexports.funPrefixNamer = funPrefixNamer;\n// FIXME: I think the type hierarchy is somewhat wrong here.  `FixedName`\n// should be a `Name`, but the non-fixed names should probably have their\n// own common superclass.  Most methods of `Name` make sense only either\n// for `FixedName` or the non-fixed names.\nclass Name {\n    // If a Named is fixed, the namingFunction is undefined.\n    constructor(_namingFunction, order) {\n        this._namingFunction = _namingFunction;\n        this.order = order;\n        this._associates = new Set();\n    }\n    addAssociate(associate) {\n        this._associates.add(associate);\n    }\n    isFixed() {\n        return this instanceof FixedName;\n    }\n    get namingFunction() {\n        return (0, Support_1.defined)(this._namingFunction);\n    }\n    firstProposedName(names) {\n        return (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(this.proposeUnstyledNames(names)));\n    }\n    nameAssignments(forbiddenNames, assignedName) {\n        if (forbiddenNames.has(assignedName))\n            return null;\n        const assignments = new Map([[this, assignedName]]);\n        for (const an of this._associates) {\n            const associatedAssignedName = an.getName(assignedName);\n            if (forbiddenNames.has(associatedAssignedName)) {\n                return null;\n            }\n            assignments.set(an, associatedAssignedName);\n        }\n        return assignments;\n    }\n}\nexports.Name = Name;\n// FIXME: FixedNameds should optionally be user-configurable\nclass FixedName extends Name {\n    constructor(_fixedName) {\n        super(undefined, 0);\n        this._fixedName = _fixedName;\n    }\n    get dependencies() {\n        return [];\n    }\n    addAssociate(_) {\n        return (0, Support_1.panic)(\"Cannot add associates to fixed names\");\n    }\n    get fixedName() {\n        return this._fixedName;\n    }\n    proposeUnstyledNames(_) {\n        return (0, Support_1.panic)(\"Only fixedName should be called on FixedName.\");\n    }\n}\nexports.FixedName = FixedName;\nclass SimpleName extends Name {\n    constructor(unstyledNames, namingFunction, order) {\n        super(namingFunction, order);\n        this._unstyledNames = new Set(unstyledNames);\n    }\n    get dependencies() {\n        return [];\n    }\n    proposeUnstyledNames(_) {\n        return this._unstyledNames;\n    }\n}\nexports.SimpleName = SimpleName;\nclass AssociatedName extends Name {\n    constructor(_sponsor, order, getName) {\n        super(undefined, order);\n        this._sponsor = _sponsor;\n        this.getName = getName;\n    }\n    get dependencies() {\n        return [this._sponsor];\n    }\n    proposeUnstyledNames(_) {\n        return (0, Support_1.panic)(\"AssociatedName must be assigned via its sponsor\");\n    }\n}\nexports.AssociatedName = AssociatedName;\nclass DependencyName extends Name {\n    constructor(namingFunction, order, _proposeUnstyledName) {\n        super(namingFunction, order);\n        this._proposeUnstyledName = _proposeUnstyledName;\n        const dependencies = [];\n        _proposeUnstyledName(n => {\n            dependencies.push(n);\n            return \"0xDEADBEEF\";\n        });\n        this._dependencies = new Set(dependencies);\n    }\n    get dependencies() {\n        return Array.from(this._dependencies);\n    }\n    proposeUnstyledNames(names) {\n        return new Set([\n            this._proposeUnstyledName(n => {\n                (0, Support_1.assert)(this._dependencies.has(n), \"DependencyName proposer is not pure\");\n                return (0, Support_1.defined)(names.get(n));\n            })\n        ]);\n    }\n}\nexports.DependencyName = DependencyName;\nfunction keywordNamespace(name, keywords) {\n    const ns = new Namespace(name, undefined, [], []);\n    for (const kw of keywords) {\n        ns.add(new FixedName(kw));\n    }\n    return ns;\n}\nexports.keywordNamespace = keywordNamespace;\nfunction allNamespacesRecursively(namespaces) {\n    return (0, collection_utils_1.setUnion)(namespaces, ...Array.from((0, collection_utils_1.setMap)(namespaces, ns => allNamespacesRecursively(ns.children))));\n}\nclass NamingContext {\n    constructor(rootNamespaces) {\n        this._names = new Map();\n        this._namedsForName = new Map();\n        this.isReadyToBeNamed = (named) => {\n            if (this._names.has(named))\n                return false;\n            return named.dependencies.every((n) => this._names.has(n));\n        };\n        this.isConflicting = (namedNamespace, proposed) => {\n            const namedsForProposed = this._namedsForName.get(proposed);\n            // If the name is not assigned at all, there is no conflict.\n            if (namedsForProposed === undefined)\n                return false;\n            // The name is assigned, but it might still not be forbidden.\n            for (const n of namedsForProposed) {\n                if (namedNamespace.members.has(n) || namedNamespace.forbiddenNameds.has(n)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.assign = (named, namedNamespace, name) => {\n            (0, Support_1.assert)(!this.names.has(named), `Name \"${name}\" assigned twice`);\n            (0, Support_1.assert)(!this.isConflicting(namedNamespace, name), `Assigned name \"${name}\" conflicts`);\n            this._names.set(named, name);\n            let namedsForName = this._namedsForName.get(name);\n            if (namedsForName === undefined) {\n                namedsForName = new Set();\n                this._namedsForName.set(name, namedsForName);\n            }\n            namedsForName.add(named);\n        };\n        this.namespaces = allNamespacesRecursively(rootNamespaces);\n    }\n    get names() {\n        return this._names;\n    }\n    areForbiddensFullyNamed(namespace) {\n        return (0, collection_utils_1.iterableEvery)(namespace.forbiddenNameds, n => this._names.has(n));\n    }\n}\n// Naming algorithm\nfunction assignNames(rootNamespaces) {\n    const ctx = new NamingContext(rootNamespaces);\n    // Assign all fixed names.\n    for (const ns of ctx.namespaces) {\n        for (const n of ns.members) {\n            if (!n.isFixed())\n                continue;\n            ctx.assign(n, ns, n.fixedName);\n        }\n    }\n    for (;;) {\n        // 1. Find a namespace whose forbiddens are all fully named, and which has\n        //    at least one unnamed Named that has all its dependencies satisfied.\n        //    If no such namespace exists we're either done, or there's an unallowed\n        //    cycle.\n        const unfinishedNamespaces = (0, collection_utils_1.setFilter)(ctx.namespaces, ns => ctx.areForbiddensFullyNamed(ns));\n        const readyNamespace = (0, collection_utils_1.iterableFind)(unfinishedNamespaces, ns => (0, collection_utils_1.iterableSome)(ns.members, ctx.isReadyToBeNamed));\n        if (readyNamespace === undefined) {\n            // FIXME: Check for cycles?\n            return ctx.names;\n        }\n        const allForbiddenNames = (0, collection_utils_1.setUnion)(readyNamespace.members, readyNamespace.forbiddenNameds);\n        let forbiddenNames = (0, collection_utils_1.setFilterMap)(allForbiddenNames, n => ctx.names.get(n));\n        // 2. From low order to high order, sort those names into sets where all\n        //    members of a set propose the same name and have the same naming\n        //    function.\n        for (;;) {\n            const allReadyNames = (0, collection_utils_1.setFilter)(readyNamespace.members, ctx.isReadyToBeNamed);\n            const minOrderName = (0, collection_utils_1.iterableMinBy)(allReadyNames, n => n.order);\n            if (minOrderName === undefined)\n                break;\n            const minOrder = minOrderName.order;\n            const readyNames = (0, collection_utils_1.setFilter)(allReadyNames, n => n.order === minOrder);\n            // It would be nice if we had tuples, then we wouldn't have to do this in\n            // two steps.\n            const byNamingFunction = (0, collection_utils_1.setGroupBy)(readyNames, n => n.namingFunction);\n            for (const [namer, namedsForNamingFunction] of byNamingFunction) {\n                const byProposed = (0, collection_utils_1.setGroupBy)(namedsForNamingFunction, n => n.namingFunction.nameStyle(n.firstProposedName(ctx.names)));\n                for (const [, nameds] of byProposed) {\n                    // 3. Use each set's naming function to name its members.\n                    const names = namer.assignNames(ctx.names, forbiddenNames, nameds);\n                    for (const [name, assigned] of names) {\n                        ctx.assign(name, readyNamespace, assigned);\n                    }\n                    (0, collection_utils_1.setUnionInto)(forbiddenNames, names.values());\n                }\n            }\n        }\n    }\n}\nexports.assignNames = assignNames;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parenIfNeeded = exports.multiWord = exports.singleWord = exports.serializeRenderResult = exports.modifySource = exports.maybeAnnotated = exports.annotated = exports.sourcelikeToSource = exports.newline = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Naming_1 = require(\"./Naming\");\nconst Support_1 = require(\"./support/Support\");\nconst Strings_1 = require(\"./support/Strings\");\nfunction newline() {\n    // We're returning a new object instead of using a singleton\n    // here because `Renderer` will modify `indentationChange`.\n    return { kind: \"newline\", indentationChange: 0 };\n}\nexports.newline = newline;\nfunction sourcelikeToSource(sl) {\n    if (sl instanceof Array) {\n        return {\n            kind: \"sequence\",\n            sequence: sl.map(sourcelikeToSource)\n        };\n    }\n    if (typeof sl === \"string\") {\n        const lines = sl.split(\"\\n\");\n        if (lines.length === 1) {\n            return { kind: \"text\", text: sl };\n        }\n        return {\n            kind: \"sequence\",\n            sequence: (0, collection_utils_1.arrayIntercalate)(newline(), lines.map((l) => ({ kind: \"text\", text: l })))\n        };\n    }\n    if (sl instanceof Naming_1.Name) {\n        return { kind: \"name\", named: sl };\n    }\n    return sl;\n}\nexports.sourcelikeToSource = sourcelikeToSource;\nfunction annotated(annotation, sl) {\n    return {\n        kind: \"annotated\",\n        annotation,\n        source: sourcelikeToSource(sl)\n    };\n}\nexports.annotated = annotated;\nfunction maybeAnnotated(doAnnotate, annotation, sl) {\n    if (!doAnnotate) {\n        return sl;\n    }\n    return annotated(annotation, sl);\n}\nexports.maybeAnnotated = maybeAnnotated;\nfunction modifySource(modifier, sl) {\n    return {\n        kind: \"modified\",\n        modifier,\n        source: sourcelikeToSource(sl)\n    };\n}\nexports.modifySource = modifySource;\nfunction sourceLineLength(source, names) {\n    switch (source.kind) {\n        case \"text\":\n            return source.text.length;\n        case \"newline\":\n            return (0, Support_1.panic)(\"Newline must not occur within a line.\");\n        case \"sequence\":\n            return source.sequence\n                .map((s) => sourceLineLength(s, names))\n                .reduce((a, b) => a + b, 0);\n        case \"table\":\n            return (0, Support_1.panic)(\"Table must not occur within a  line.\");\n        case \"annotated\":\n            return sourceLineLength(source.source, names);\n        case \"name\":\n            return (0, Support_1.defined)(names.get(source.named)).length;\n        case \"modified\":\n            return serializeRenderResult(source, names, \"\").lines.join(\"\\n\").length;\n        default:\n            return (0, Support_1.assertNever)(source);\n    }\n}\nfunction serializeRenderResult(rootSource, names, indentation) {\n    let indent = 0;\n    let indentNeeded = 0;\n    const lines = [];\n    let currentLine = [];\n    const annotations = [];\n    function indentIfNeeded() {\n        if (indentNeeded === 0)\n            return;\n        currentLine.push((0, Strings_1.repeatString)(indentation, indentNeeded));\n        indentNeeded = 0;\n    }\n    function flattenCurrentLine() {\n        const str = currentLine.join(\"\");\n        currentLine = [str];\n        return str;\n    }\n    function currentLocation() {\n        return { line: lines.length, column: flattenCurrentLine().length };\n    }\n    function finishLine() {\n        lines.push(flattenCurrentLine());\n        currentLine = [];\n    }\n    function serializeToStringArray(source) {\n        switch (source.kind) {\n            case \"text\":\n                indentIfNeeded();\n                currentLine.push(source.text);\n                break;\n            case \"newline\":\n                finishLine();\n                indent += source.indentationChange;\n                indentNeeded = indent;\n                break;\n            case \"sequence\":\n                for (const s of source.sequence) {\n                    serializeToStringArray(s);\n                }\n                break;\n            case \"table\":\n                const t = source.table;\n                const numRows = t.length;\n                if (numRows === 0)\n                    break;\n                const widths = t.map(l => l.map(s => sourceLineLength(s, names)));\n                const numColumns = (0, Support_1.defined)((0, collection_utils_1.iterableMax)(t.map(l => l.length)));\n                if (numColumns === 0)\n                    break;\n                const columnWidths = [];\n                for (let i = 0; i < numColumns; i++) {\n                    columnWidths.push((0, Support_1.defined)((0, collection_utils_1.iterableMax)(widths.map(l => (0, collection_utils_1.withDefault)(l[i], 0)))));\n                }\n                for (let y = 0; y < numRows; y++) {\n                    indentIfNeeded();\n                    const row = (0, Support_1.defined)(t[y]);\n                    const rowWidths = (0, Support_1.defined)(widths[y]);\n                    for (let x = 0; x < numColumns; x++) {\n                        const colWidth = columnWidths[x];\n                        const src = (0, collection_utils_1.withDefault)(row[x], { kind: \"text\", text: \"\" });\n                        const srcWidth = (0, collection_utils_1.withDefault)(rowWidths[x], 0);\n                        serializeToStringArray(src);\n                        if (x < numColumns - 1 && srcWidth < colWidth) {\n                            currentLine.push((0, Strings_1.repeatString)(\" \", colWidth - srcWidth));\n                        }\n                    }\n                    if (y < numRows - 1) {\n                        finishLine();\n                        indentNeeded = indent;\n                    }\n                }\n                break;\n            case \"annotated\":\n                const start = currentLocation();\n                serializeToStringArray(source.source);\n                const end = currentLocation();\n                annotations.push({ annotation: source.annotation, span: { start, end } });\n                break;\n            case \"name\":\n                (0, Support_1.assert)(names.has(source.named), \"No name for Named\");\n                indentIfNeeded();\n                currentLine.push((0, Support_1.defined)(names.get(source.named)));\n                break;\n            case \"modified\":\n                indentIfNeeded();\n                const serialized = serializeRenderResult(source.source, names, indentation).lines;\n                (0, Support_1.assert)(serialized.length === 1, \"Cannot modify more than one line.\");\n                currentLine.push(source.modifier(serialized[0]));\n                break;\n            default:\n                return (0, Support_1.assertNever)(source);\n        }\n    }\n    serializeToStringArray(rootSource);\n    finishLine();\n    return { lines, annotations: annotations };\n}\nexports.serializeRenderResult = serializeRenderResult;\nfunction singleWord(...source) {\n    return { source, needsParens: false };\n}\nexports.singleWord = singleWord;\nfunction multiWord(separator, ...words) {\n    (0, Support_1.assert)(words.length > 0, \"Zero words is not multiple\");\n    if (words.length === 1) {\n        return singleWord(words[0]);\n    }\n    const items = [];\n    for (let i = 0; i < words.length; i++) {\n        if (i > 0)\n            items.push(separator);\n        items.push(words[i]);\n    }\n    return { source: items, needsParens: true };\n}\nexports.multiWord = multiWord;\nfunction parenIfNeeded({ source, needsParens }) {\n    if (needsParens) {\n        return [\"(\", source, \")\"];\n    }\n    return source;\n}\nexports.parenIfNeeded = parenIfNeeded;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nullTypeIssueAnnotation = exports.anyTypeIssueAnnotation = exports.IssueAnnotationData = exports.AnnotationData = void 0;\nclass AnnotationData {\n}\nexports.AnnotationData = AnnotationData;\nclass IssueAnnotationData extends AnnotationData {\n    constructor(message) {\n        super();\n        this.message = message;\n    }\n}\nexports.IssueAnnotationData = IssueAnnotationData;\nexports.anyTypeIssueAnnotation = new IssueAnnotationData(\"quicktype cannot infer this type because there is no data about it in the input.\");\nexports.nullTypeIssueAnnotation = new IssueAnnotationData(\"The only value for this in the input is null, which means you probably need a more complete input sample.\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Renderer = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Naming_1 = require(\"./Naming\");\nconst Source_1 = require(\"./Source\");\nconst Annotation_1 = require(\"./Annotation\");\nconst Support_1 = require(\"./support/Support\");\nfunction getBlankLineConfig(cfg) {\n    if (Array.isArray(cfg)) {\n        return { position: cfg[0], count: cfg[1] };\n    }\n    return { position: cfg, count: 1 };\n}\nfunction lineIndentation(line) {\n    const len = line.length;\n    let indent = 0;\n    for (let i = 0; i < len; i++) {\n        const c = line.charAt(i);\n        if (c === \" \") {\n            indent += 1;\n        }\n        else if (c === \"\\t\") {\n            indent = (indent / 4 + 1) * 4;\n        }\n        else {\n            return { indent, text: line.substring(i) };\n        }\n    }\n    return { indent: 0, text: null };\n}\nclass EmitContext {\n    constructor() {\n        this._currentEmitTarget = this._emitted = [];\n        this._numBlankLinesNeeded = 0;\n        this._preventBlankLine = true; // no blank lines at start of file\n    }\n    get isEmpty() {\n        return this._emitted.length === 0;\n    }\n    get isNested() {\n        return this._emitted !== this._currentEmitTarget;\n    }\n    get source() {\n        return this._emitted;\n    }\n    pushItem(item) {\n        this._currentEmitTarget.push(item);\n        this._preventBlankLine = false;\n    }\n    emitNewline() {\n        const nl = (0, Source_1.newline)();\n        this.pushItem(nl);\n        this._lastNewline = nl;\n    }\n    emitItem(item) {\n        if (!this.isEmpty) {\n            for (let i = 0; i < this._numBlankLinesNeeded; i++) {\n                this.emitNewline();\n            }\n        }\n        this._numBlankLinesNeeded = 0;\n        this.pushItem(item);\n    }\n    containsItem(item) {\n        const existingItem = this._currentEmitTarget.find((value) => item === value);\n        return existingItem !== undefined;\n    }\n    ensureBlankLine(numBlankLines) {\n        if (this._preventBlankLine)\n            return;\n        this._numBlankLinesNeeded = Math.max(this._numBlankLinesNeeded, numBlankLines);\n    }\n    preventBlankLine() {\n        this._numBlankLinesNeeded = 0;\n        this._preventBlankLine = true;\n    }\n    changeIndent(offset) {\n        if (this._lastNewline === undefined) {\n            return (0, Support_1.panic)(\"Cannot change indent for the first line\");\n        }\n        this._lastNewline.indentationChange += offset;\n    }\n}\nclass Renderer {\n    constructor(targetLanguage, renderContext) {\n        this.targetLanguage = targetLanguage;\n        this.emitTable = (tableArray) => {\n            if (tableArray.length === 0)\n                return;\n            const table = tableArray.map(r => r.map(sl => (0, Source_1.sourcelikeToSource)(sl)));\n            this._emitContext.emitItem({ kind: \"table\", table });\n            this._emitContext.emitNewline();\n        };\n        this.typeGraph = renderContext.typeGraph;\n        this.leadingComments = renderContext.leadingComments;\n        this._finishedFiles = new Map();\n        this._finishedEmitContexts = new Map();\n        this._emitContext = new EmitContext();\n    }\n    ensureBlankLine(numBlankLines = 1) {\n        this._emitContext.ensureBlankLine(numBlankLines);\n    }\n    preventBlankLine() {\n        this._emitContext.preventBlankLine();\n    }\n    emitItem(item) {\n        this._emitContext.emitItem(item);\n    }\n    emitItemOnce(item) {\n        if (this._emitContext.containsItem(item)) {\n            return false;\n        }\n        this.emitItem(item);\n        return true;\n    }\n    emitLineOnce(...lineParts) {\n        let lineEmitted = true;\n        if (lineParts.length === 1) {\n            lineEmitted = this.emitItemOnce(lineParts[0]);\n        }\n        else if (lineParts.length > 1) {\n            lineEmitted = this.emitItemOnce(lineParts);\n        }\n        if (lineEmitted) {\n            this._emitContext.emitNewline();\n        }\n    }\n    emitLine(...lineParts) {\n        if (lineParts.length === 1) {\n            this._emitContext.emitItem(lineParts[0]);\n        }\n        else if (lineParts.length > 1) {\n            this._emitContext.emitItem(lineParts);\n        }\n        this._emitContext.emitNewline();\n    }\n    emitMultiline(linesString) {\n        const lines = linesString.split(\"\\n\");\n        const numLines = lines.length;\n        if (numLines === 0)\n            return;\n        this.emitLine(lines[0]);\n        let currentIndent = 0;\n        for (let i = 1; i < numLines; i++) {\n            const line = lines[i];\n            const { indent, text } = lineIndentation(line);\n            (0, Support_1.assert)(indent % 4 === 0, \"Indentation is not a multiple of 4.\");\n            if (text !== null) {\n                const newIndent = indent / 4;\n                this.changeIndent(newIndent - currentIndent);\n                currentIndent = newIndent;\n                this.emitLine(text);\n            }\n            else {\n                this._emitContext.emitNewline();\n            }\n        }\n        if (currentIndent !== 0) {\n            this.changeIndent(-currentIndent);\n        }\n    }\n    gatherSource(emitter) {\n        const oldEmitContext = this._emitContext;\n        this._emitContext = new EmitContext();\n        emitter();\n        (0, Support_1.assert)(!this._emitContext.isNested, \"emit context not restored correctly\");\n        const source = this._emitContext.source;\n        this._emitContext = oldEmitContext;\n        return source;\n    }\n    emitGatheredSource(items) {\n        for (const item of items) {\n            this._emitContext.emitItem(item);\n        }\n    }\n    emitAnnotated(annotation, emitter) {\n        const lines = this.gatherSource(emitter);\n        const source = (0, Source_1.sourcelikeToSource)(lines);\n        this._emitContext.emitItem((0, Source_1.annotated)(annotation, source));\n    }\n    emitIssue(message, emitter) {\n        this.emitAnnotated(new Annotation_1.IssueAnnotationData(message), emitter);\n    }\n    changeIndent(offset) {\n        this._emitContext.changeIndent(offset);\n    }\n    iterableForEach(iterable, emitter) {\n        const items = Array.from(iterable);\n        let onFirst = true;\n        for (const [i, v] of (0, collection_utils_1.iterableEnumerate)(items)) {\n            const position = items.length === 1 ? \"only\" : onFirst ? \"first\" : i === items.length - 1 ? \"last\" : \"middle\";\n            emitter(v, position);\n            onFirst = false;\n        }\n    }\n    forEach(iterable, interposedBlankLines, leadingBlankLines, emitter) {\n        let didEmit = false;\n        this.iterableForEach(iterable, ([k, v], position) => {\n            if (position === \"only\" || position === \"first\") {\n                this.ensureBlankLine(leadingBlankLines);\n            }\n            else {\n                this.ensureBlankLine(interposedBlankLines);\n            }\n            emitter(v, k, position);\n            didEmit = true;\n        });\n        return didEmit;\n    }\n    forEachWithBlankLines(iterable, blankLineConfig, emitter) {\n        const { position, count } = getBlankLineConfig(blankLineConfig);\n        const interposing = [\"interposing\", \"leading-and-interposing\"].indexOf(position) >= 0;\n        const leading = [\"leading\", \"leading-and-interposing\"].indexOf(position) >= 0;\n        return this.forEach(iterable, interposing ? count : 0, leading ? count : 0, emitter);\n    }\n    indent(fn) {\n        this.changeIndent(1);\n        fn();\n        this.changeIndent(-1);\n    }\n    assignNames() {\n        return (0, Naming_1.assignNames)(this.setUpNaming());\n    }\n    initializeEmitContextForFilename(filename) {\n        if (this._finishedEmitContexts.has(filename.toLowerCase())) {\n            const existingEmitContext = this._finishedEmitContexts.get(filename.toLowerCase());\n            if (existingEmitContext !== undefined) {\n                this._emitContext = existingEmitContext;\n            }\n        }\n    }\n    finishFile(filename) {\n        if (this._finishedFiles.has(filename)) {\n            console.log(`[WARNING] Tried to emit file ${filename} more than once. If performing multi-file output this warning can be safely ignored.`);\n        }\n        const source = (0, Source_1.sourcelikeToSource)(this._emitContext.source);\n        this._finishedFiles.set(filename, source);\n        // [Michael Fey (@MrRooni), 2019-5-9] We save the current EmitContext for possible reuse later. We put it into the map with a lowercased version of the key so we can do a case-insensitive lookup later. The reason we lowercase it is because some schema (looking at you keyword-unions.schema) define objects of the same name with different casing. BOOL vs. bool, for example.\n        this._finishedEmitContexts.set(filename.toLowerCase(), this._emitContext);\n        this._emitContext = new EmitContext();\n    }\n    render(givenOutputFilename) {\n        this._names = this.assignNames();\n        this.emitSource(givenOutputFilename);\n        if (!this._emitContext.isEmpty) {\n            this.finishFile(givenOutputFilename);\n        }\n        return { sources: this._finishedFiles, names: this._names };\n    }\n    get names() {\n        if (this._names === undefined) {\n            return (0, Support_1.panic)(\"Names accessed before they were assigned\");\n        }\n        return this._names;\n    }\n}\nexports.Renderer = Renderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.declarationsForGraph = exports.cycleBreakerTypesForGraph = exports.DeclarationIR = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Support_1 = require(\"./support/Support\");\nconst Graph_1 = require(\"./Graph\");\nconst Messages_1 = require(\"./Messages\");\nclass DeclarationIR {\n    constructor(declarations, forwardedTypes) {\n        this.forwardedTypes = forwardedTypes;\n        this.declarations = Array.from(declarations);\n    }\n}\nexports.DeclarationIR = DeclarationIR;\nfunction findBreaker(t, path, canBreak) {\n    const index = path.indexOf(t);\n    if (index < 0)\n        return undefined;\n    if (canBreak === undefined) {\n        return path[index];\n    }\n    const potentialBreakers = path.slice(0, index + 1).reverse();\n    const maybeBreaker = potentialBreakers.find(canBreak);\n    if (maybeBreaker === undefined) {\n        return (0, Support_1.panic)(\"Found a cycle that cannot be broken\");\n    }\n    return maybeBreaker;\n}\nfunction cycleBreakerTypesForGraph(graph, isImplicitCycleBreaker, canBreakCycles) {\n    const visitedTypes = new Set();\n    const cycleBreakerTypes = new Set();\n    const queue = Array.from(graph.topLevels.values());\n    function visit(t, path) {\n        if (visitedTypes.has(t))\n            return;\n        if (isImplicitCycleBreaker(t)) {\n            for (const c of t.getChildren()) {\n                queue.push(c);\n            }\n        }\n        else {\n            const maybeBreaker = findBreaker(t, path, canBreakCycles);\n            if (maybeBreaker !== undefined) {\n                cycleBreakerTypes.add(maybeBreaker);\n                return;\n            }\n            for (const c of t.getChildren()) {\n                path.unshift(t);\n                visit(c, path);\n                path.shift();\n            }\n        }\n        visitedTypes.add(t);\n    }\n    for (;;) {\n        const maybeType = queue.pop();\n        if (maybeType === undefined)\n            break;\n        const path = [];\n        visit(maybeType, path);\n        (0, Support_1.assert)(path.length === 0);\n    }\n    return cycleBreakerTypes;\n}\nexports.cycleBreakerTypesForGraph = cycleBreakerTypesForGraph;\nfunction declarationsForGraph(typeGraph, canBeForwardDeclared, childrenOfType, needsDeclaration) {\n    /*\n    function nodeTitle(t: Type): string {\n        const indexAndKind = `${t.typeRef.index} ${t.kind}`;\n        if (t.hasNames) {\n            return `${indexAndKind} ${t.getCombinedName()}`;\n        } else {\n            return indexAndKind;\n        }\n    }\n    function componentName(c: Iterable<Type>): string {\n        return Array.from(c).map(nodeTitle).join(\", \");\n    }\n    */\n    const topDown = canBeForwardDeclared === undefined;\n    const declarations = [];\n    const forwardedTypes = new Set();\n    const visitedComponents = new Set();\n    function processGraph(graph, _writeComponents) {\n        const componentsGraph = graph.stronglyConnectedComponents();\n        function visitComponent(component) {\n            if (visitedComponents.has(component))\n                return;\n            visitedComponents.add(component);\n            // console.log(`visiting component ${componentName(component)}`);\n            const declarationNeeded = (0, collection_utils_1.setFilter)(component, needsDeclaration);\n            // 1. Only one node in the cycle needs a declaration, in which\n            // case it's the breaker, and no forward declaration is necessary.\n            if (declarationNeeded.size === 1) {\n                declarations.push({ kind: \"define\", type: (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(declarationNeeded)) });\n                return;\n            }\n            // 2. No node in the cycle needs a declaration, but it's also\n            // the only node, so we don't actually need a declaration at all.\n            if (declarationNeeded.size === 0 && component.size === 1) {\n                return;\n            }\n            // 3. No node in the cycle needs a declaration, but there's more.\n            // than one node total.  We have to pick a node to make a\n            // declaration, so we can pick any one. This is not a forward\n            // declaration, either.\n            if (declarationNeeded.size === 0) {\n                declarations.push({ kind: \"define\", type: (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(component)) });\n                return;\n            }\n            // 4. More than one node needs a declaration, and we don't need\n            // forward declarations.  Just declare all of them and be done\n            // with it.\n            if (canBeForwardDeclared === undefined) {\n                for (const t of declarationNeeded) {\n                    declarations.push({ kind: \"define\", type: t });\n                }\n                return;\n            }\n            // 5. More than one node needs a declaration, and we have\n            // to make forward declarations.  We do the simple thing and first\n            // forward-declare all forward-declarable types in the SCC.  If\n            // there are none, we're stuck.  If there are, we take them out of\n            // the component and try the whole thing again recursively.  Then\n            // we declare the types we previously forward-declared.\n            const forwardDeclarable = (0, collection_utils_1.setFilter)(component, canBeForwardDeclared);\n            if (forwardDeclarable.size === 0) {\n                return (0, Messages_1.messageError)(\"IRNoForwardDeclarableTypeInCycle\", {});\n            }\n            for (const t of forwardDeclarable) {\n                declarations.push({ kind: \"forward\", type: t });\n            }\n            (0, collection_utils_1.setUnionInto)(forwardedTypes, forwardDeclarable);\n            const rest = (0, collection_utils_1.setSubtract)(component, forwardDeclarable);\n            const restGraph = new Graph_1.Graph(rest, true, t => (0, collection_utils_1.setIntersect)(childrenOfType(t), rest));\n            processGraph(restGraph, false);\n            for (const t of forwardDeclarable) {\n                declarations.push({ kind: \"define\", type: t });\n            }\n            return;\n        }\n        /*\n        if (_writeComponents) {\n            componentsGraph.nodes.forEach(types => {\n                console.log(\n                    `scc: ${types\n                        .filter(t => t instanceof ClassType)\n                        .map(t => t.getCombinedName())\n                        .join(\", \")}`\n                );\n            });\n        }\n        */\n        const rootsUnordered = componentsGraph.findRoots();\n        const roots = rootsUnordered;\n        for (const component of roots) {\n            componentsGraph.dfsTraversal(component, topDown, visitComponent);\n        }\n    }\n    const fullGraph = typeGraph.makeGraph(false, childrenOfType);\n    // fs.writeFileSync(\"graph.dot\", fullGraph.makeDot(t => !(t instanceof PrimitiveType), nodeTitle));\n    processGraph(fullGraph, true);\n    return new DeclarationIR(declarations, forwardedTypes);\n}\nexports.declarationsForGraph = declarationsForGraph;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JSONSchemaStore = void 0;\nconst Support_1 = require(\"../support/Support\");\nclass JSONSchemaStore {\n    constructor() {\n        this._schemas = new Map();\n    }\n    add(address, schema) {\n        (0, Support_1.assert)(!this._schemas.has(address), \"Cannot set a schema for an address twice\");\n        this._schemas.set(address, schema);\n    }\n    get(address, debugPrint) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let schema = this._schemas.get(address);\n            if (schema !== undefined) {\n                return schema;\n            }\n            if (debugPrint) {\n                console.log(`trying to fetch ${address}`);\n            }\n            try {\n                schema = yield this.fetch(address);\n            }\n            catch (_a) { }\n            if (schema === undefined) {\n                if (debugPrint) {\n                    console.log(`couldn't fetch ${address}`);\n                }\n                return undefined;\n            }\n            if (debugPrint) {\n                console.log(`successully fetched ${address}`);\n            }\n            this.add(address, schema);\n            return schema;\n        });\n    }\n}\nexports.JSONSchemaStore = JSONSchemaStore;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.accessorNamesAttributeProducer = exports.makeAccessorNames = exports.unionMemberName = exports.makeUnionMemberNamesAttribute = exports.unionMemberNamesTypeAttributeKind = exports.makeUnionIdentifierAttribute = exports.unionIdentifierTypeAttributeKind = exports.getAccessorName = exports.enumCaseNames = exports.objectPropertyNames = exports.lookupKey = exports.accessorNamesTypeAttributeKind = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst TypeAttributes_1 = require(\"./TypeAttributes\");\nconst Support_1 = require(\"../support/Support\");\nconst Messages_1 = require(\"../Messages\");\nclass AccessorNamesTypeAttributeKind extends TypeAttributes_1.TypeAttributeKind {\n    constructor() {\n        super(\"accessorNames\");\n    }\n    makeInferred(_) {\n        return undefined;\n    }\n}\nexports.accessorNamesTypeAttributeKind = new AccessorNamesTypeAttributeKind();\n// Returns [name, isFixed].\nfunction getFromEntry(entry, language) {\n    if (typeof entry === \"string\")\n        return [entry, false];\n    const maybeForLanguage = entry.get(language);\n    if (maybeForLanguage !== undefined)\n        return [maybeForLanguage, true];\n    const maybeWildcard = entry.get(\"*\");\n    if (maybeWildcard !== undefined)\n        return [maybeWildcard, false];\n    return undefined;\n}\nfunction lookupKey(accessors, key, language) {\n    const entry = accessors.get(key);\n    if (entry === undefined)\n        return undefined;\n    return getFromEntry(entry, language);\n}\nexports.lookupKey = lookupKey;\nfunction objectPropertyNames(o, language) {\n    const accessors = exports.accessorNamesTypeAttributeKind.tryGetInAttributes(o.getAttributes());\n    const map = o.getProperties();\n    if (accessors === undefined)\n        return (0, collection_utils_1.mapMap)(map, _ => undefined);\n    return (0, collection_utils_1.mapMap)(map, (_cp, n) => lookupKey(accessors, n, language));\n}\nexports.objectPropertyNames = objectPropertyNames;\nfunction enumCaseNames(e, language) {\n    const accessors = exports.accessorNamesTypeAttributeKind.tryGetInAttributes(e.getAttributes());\n    if (accessors === undefined)\n        return (0, collection_utils_1.mapMap)(e.cases.entries(), _ => undefined);\n    return (0, collection_utils_1.mapMap)(e.cases.entries(), c => lookupKey(accessors, c, language));\n}\nexports.enumCaseNames = enumCaseNames;\nfunction getAccessorName(names, original) {\n    const maybeName = names.get(original);\n    if (maybeName === undefined)\n        return [undefined, false];\n    return maybeName;\n}\nexports.getAccessorName = getAccessorName;\n// Union members can be recombined and reordered, and unions are combined as well, so\n// we can't just store an array of accessor entries in a union, one array entry for each\n// union member.  Instead, we give each union in the origin type graph a union identifier,\n// and each union member type gets a map from union identifiers to accessor entries.\n// That way, no matter how the types are recombined, if we find a union member, we can look\n// up its union's identifier(s), and then look up the member's accessor entries for that\n// identifier.  Of course we might find more than one, potentially conflicting.\nclass UnionIdentifierTypeAttributeKind extends TypeAttributes_1.TypeAttributeKind {\n    constructor() {\n        super(\"unionIdentifier\");\n    }\n    combine(arr) {\n        return (0, collection_utils_1.setUnionManyInto)(new Set(), arr);\n    }\n    makeInferred(_) {\n        return new Set();\n    }\n}\nexports.unionIdentifierTypeAttributeKind = new UnionIdentifierTypeAttributeKind();\nlet nextUnionIdentifier = 0;\nfunction makeUnionIdentifierAttribute() {\n    const attributes = exports.unionIdentifierTypeAttributeKind.makeAttributes(new Set([nextUnionIdentifier]));\n    nextUnionIdentifier += 1;\n    return attributes;\n}\nexports.makeUnionIdentifierAttribute = makeUnionIdentifierAttribute;\nclass UnionMemberNamesTypeAttributeKind extends TypeAttributes_1.TypeAttributeKind {\n    constructor() {\n        super(\"unionMemberNames\");\n    }\n    combine(arr) {\n        const result = new Map();\n        for (const m of arr) {\n            (0, collection_utils_1.mapMergeInto)(result, m);\n        }\n        return result;\n    }\n}\nexports.unionMemberNamesTypeAttributeKind = new UnionMemberNamesTypeAttributeKind();\nfunction makeUnionMemberNamesAttribute(unionAttributes, entry) {\n    const identifiers = (0, Support_1.defined)(exports.unionIdentifierTypeAttributeKind.tryGetInAttributes(unionAttributes));\n    const map = (0, collection_utils_1.mapFromIterable)(identifiers, _ => entry);\n    return exports.unionMemberNamesTypeAttributeKind.makeAttributes(map);\n}\nexports.makeUnionMemberNamesAttribute = makeUnionMemberNamesAttribute;\nfunction unionMemberName(u, member, language) {\n    const identifiers = exports.unionIdentifierTypeAttributeKind.tryGetInAttributes(u.getAttributes());\n    if (identifiers === undefined)\n        return [undefined, false];\n    const memberNames = exports.unionMemberNamesTypeAttributeKind.tryGetInAttributes(member.getAttributes());\n    if (memberNames === undefined)\n        return [undefined, false];\n    const names = new Set();\n    const fixedNames = new Set();\n    for (const i of identifiers) {\n        const maybeEntry = memberNames.get(i);\n        if (maybeEntry === undefined)\n            continue;\n        const maybeName = getFromEntry(maybeEntry, language);\n        if (maybeName === undefined)\n            continue;\n        const [name, isNameFixed] = maybeName;\n        if (isNameFixed) {\n            fixedNames.add(name);\n        }\n        else {\n            names.add(name);\n        }\n    }\n    let size;\n    let isFixed;\n    let first = (0, collection_utils_1.iterableFirst)(fixedNames);\n    if (first !== undefined) {\n        size = fixedNames.size;\n        isFixed = true;\n    }\n    else {\n        first = (0, collection_utils_1.iterableFirst)(names);\n        if (first === undefined)\n            return [undefined, false];\n        size = names.size;\n        isFixed = false;\n    }\n    (0, Messages_1.messageAssert)(size === 1, \"SchemaMoreThanOneUnionMemberName\", { names: Array.from(names) });\n    return [first, isFixed];\n}\nexports.unionMemberName = unionMemberName;\nfunction isAccessorEntry(x) {\n    if (typeof x === \"string\") {\n        return true;\n    }\n    return (0, Support_1.isStringMap)(x, (v) => typeof v === \"string\");\n}\nfunction makeAccessorEntry(ae) {\n    if (typeof ae === \"string\")\n        return ae;\n    return (0, collection_utils_1.mapFromObject)(ae);\n}\nfunction makeAccessorNames(x) {\n    // FIXME: Do proper error reporting\n    const stringMap = (0, Support_1.checkStringMap)(x, isAccessorEntry);\n    return (0, collection_utils_1.mapMap)((0, collection_utils_1.mapFromObject)(stringMap), makeAccessorEntry);\n}\nexports.makeAccessorNames = makeAccessorNames;\nfunction accessorNamesAttributeProducer(schema, canonicalRef, _types, cases) {\n    if (typeof schema !== \"object\")\n        return undefined;\n    const maybeAccessors = schema[\"qt-accessors\"];\n    if (maybeAccessors === undefined)\n        return undefined;\n    if (cases === undefined) {\n        return { forType: exports.accessorNamesTypeAttributeKind.makeAttributes(makeAccessorNames(maybeAccessors)) };\n    }\n    else {\n        const identifierAttribute = makeUnionIdentifierAttribute();\n        const accessors = (0, Support_1.checkArray)(maybeAccessors, isAccessorEntry);\n        (0, Messages_1.messageAssert)(cases.length === accessors.length, \"SchemaWrongAccessorEntryArrayLength\", {\n            operation: \"oneOf\",\n            ref: canonicalRef.push(\"oneOf\")\n        });\n        const caseAttributes = accessors.map(accessor => makeUnionMemberNamesAttribute(identifierAttribute, makeAccessorEntry(accessor)));\n        return { forUnion: identifierAttribute, forCases: caseAttributes };\n    }\n}\nexports.accessorNamesAttributeProducer = accessorNamesAttributeProducer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.enumValuesAttributeProducer = exports.enumCaseValues = exports.enumValuesTypeAttributeKind = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst AccessorNames_1 = require(\"./AccessorNames\");\nconst TypeAttributes_1 = require(\"./TypeAttributes\");\nclass EnumValuesTypeAttributeKind extends TypeAttributes_1.TypeAttributeKind {\n    constructor() {\n        super(\"enumValues\");\n    }\n    makeInferred(_) {\n        return undefined;\n    }\n}\nexports.enumValuesTypeAttributeKind = new EnumValuesTypeAttributeKind();\nfunction enumCaseValues(e, language) {\n    const enumValues = exports.enumValuesTypeAttributeKind.tryGetInAttributes(e.getAttributes());\n    if (enumValues === undefined)\n        return (0, collection_utils_1.mapMap)(e.cases.entries(), _ => undefined);\n    return (0, collection_utils_1.mapMap)(e.cases.entries(), c => (0, AccessorNames_1.lookupKey)(enumValues, c, language));\n}\nexports.enumCaseValues = enumCaseValues;\nfunction enumValuesAttributeProducer(schema, _canonicalRef, _types) {\n    if (typeof schema !== \"object\")\n        return undefined;\n    const maybeEnumValues = schema[\"qt-enum-values\"];\n    if (maybeEnumValues === undefined)\n        return undefined;\n    return { forType: exports.enumValuesTypeAttributeKind.makeAttributes((0, AccessorNames_1.makeAccessorNames)(maybeEnumValues)) };\n}\nexports.enumValuesAttributeProducer = enumValuesAttributeProducer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.patternForType = exports.patternAttributeProducer = exports.patternTypeAttributeKind = exports.PatternTypeAttributeKind = exports.minMaxLengthForType = exports.minMaxValueForType = exports.minMaxLengthAttributeProducer = exports.minMaxAttributeProducer = exports.minMaxLengthTypeAttributeKind = exports.minMaxTypeAttributeKind = exports.MinMaxConstraintTypeAttributeKind = void 0;\nconst TypeAttributes_1 = require(\"./TypeAttributes\");\nconst Support_1 = require(\"../support/Support\");\nconst Messages_1 = require(\"../Messages\");\nfunction checkMinMaxConstraint(minmax) {\n    const [min, max] = minmax;\n    if (typeof min === \"number\" && typeof max === \"number\" && min > max) {\n        return (0, Messages_1.messageError)(\"MiscInvalidMinMaxConstraint\", { min, max });\n    }\n    if (min === undefined && max === undefined) {\n        return undefined;\n    }\n    return minmax;\n}\nclass MinMaxConstraintTypeAttributeKind extends TypeAttributes_1.TypeAttributeKind {\n    constructor(name, _typeKinds, _minSchemaProperty, _maxSchemaProperty) {\n        super(name);\n        this._typeKinds = _typeKinds;\n        this._minSchemaProperty = _minSchemaProperty;\n        this._maxSchemaProperty = _maxSchemaProperty;\n    }\n    get inIdentity() {\n        return true;\n    }\n    combine(arr) {\n        (0, Support_1.assert)(arr.length > 0);\n        let [min, max] = arr[0];\n        for (let i = 1; i < arr.length; i++) {\n            const [otherMin, otherMax] = arr[i];\n            if (typeof min === \"number\" && typeof otherMin === \"number\") {\n                min = Math.min(min, otherMin);\n            }\n            else {\n                min = undefined;\n            }\n            if (typeof max === \"number\" && typeof otherMax === \"number\") {\n                max = Math.max(max, otherMax);\n            }\n            else {\n                max = undefined;\n            }\n        }\n        return checkMinMaxConstraint([min, max]);\n    }\n    intersect(arr) {\n        (0, Support_1.assert)(arr.length > 0);\n        let [min, max] = arr[0];\n        for (let i = 1; i < arr.length; i++) {\n            const [otherMin, otherMax] = arr[i];\n            if (typeof min === \"number\" && typeof otherMin === \"number\") {\n                min = Math.max(min, otherMin);\n            }\n            else if (min === undefined) {\n                min = otherMin;\n            }\n            if (typeof max === \"number\" && typeof otherMax === \"number\") {\n                max = Math.min(max, otherMax);\n            }\n            else if (max === undefined) {\n                max = otherMax;\n            }\n        }\n        return checkMinMaxConstraint([min, max]);\n    }\n    makeInferred(_) {\n        return undefined;\n    }\n    addToSchema(schema, t, attr) {\n        if (this._typeKinds.has(t.kind))\n            return;\n        const [min, max] = attr;\n        if (min !== undefined) {\n            schema[this._minSchemaProperty] = min;\n        }\n        if (max !== undefined) {\n            schema[this._maxSchemaProperty] = max;\n        }\n    }\n    stringify([min, max]) {\n        return `${min}-${max}`;\n    }\n}\nexports.MinMaxConstraintTypeAttributeKind = MinMaxConstraintTypeAttributeKind;\nexports.minMaxTypeAttributeKind = new MinMaxConstraintTypeAttributeKind(\"minMax\", new Set([\"integer\", \"double\"]), \"minimum\", \"maximum\");\nexports.minMaxLengthTypeAttributeKind = new MinMaxConstraintTypeAttributeKind(\"minMaxLength\", new Set([\"string\"]), \"minLength\", \"maxLength\");\nfunction producer(schema, minProperty, maxProperty) {\n    if (!(typeof schema === \"object\"))\n        return undefined;\n    let min = undefined;\n    let max = undefined;\n    if (typeof schema[minProperty] === \"number\") {\n        min = schema[minProperty];\n    }\n    if (typeof schema[maxProperty] === \"number\") {\n        max = schema[maxProperty];\n    }\n    if (min === undefined && max === undefined)\n        return undefined;\n    return [min, max];\n}\nfunction minMaxAttributeProducer(schema, _ref, types) {\n    if (!types.has(\"number\") && !types.has(\"integer\"))\n        return undefined;\n    const maybeMinMax = producer(schema, \"minimum\", \"maximum\");\n    if (maybeMinMax === undefined)\n        return undefined;\n    return { forNumber: exports.minMaxTypeAttributeKind.makeAttributes(maybeMinMax) };\n}\nexports.minMaxAttributeProducer = minMaxAttributeProducer;\nfunction minMaxLengthAttributeProducer(schema, _ref, types) {\n    if (!types.has(\"string\"))\n        return undefined;\n    const maybeMinMaxLength = producer(schema, \"minLength\", \"maxLength\");\n    if (maybeMinMaxLength === undefined)\n        return undefined;\n    return { forString: exports.minMaxLengthTypeAttributeKind.makeAttributes(maybeMinMaxLength) };\n}\nexports.minMaxLengthAttributeProducer = minMaxLengthAttributeProducer;\nfunction minMaxValueForType(t) {\n    return exports.minMaxTypeAttributeKind.tryGetInAttributes(t.getAttributes());\n}\nexports.minMaxValueForType = minMaxValueForType;\nfunction minMaxLengthForType(t) {\n    return exports.minMaxLengthTypeAttributeKind.tryGetInAttributes(t.getAttributes());\n}\nexports.minMaxLengthForType = minMaxLengthForType;\nclass PatternTypeAttributeKind extends TypeAttributes_1.TypeAttributeKind {\n    constructor() {\n        super(\"pattern\");\n    }\n    get inIdentity() {\n        return true;\n    }\n    combine(arr) {\n        (0, Support_1.assert)(arr.length > 0);\n        return arr.map(p => `(${p})`).join(\"|\");\n    }\n    intersect(_arr) {\n        /** FIXME!!! what is the intersection of regexps? */\n        return undefined;\n    }\n    makeInferred(_) {\n        return undefined;\n    }\n    addToSchema(schema, t, attr) {\n        if (t.kind !== \"string\")\n            return;\n        schema.pattern = attr;\n    }\n}\nexports.PatternTypeAttributeKind = PatternTypeAttributeKind;\nexports.patternTypeAttributeKind = new PatternTypeAttributeKind();\nfunction patternAttributeProducer(schema, _ref, types) {\n    if (!(typeof schema === \"object\"))\n        return undefined;\n    if (!types.has(\"string\"))\n        return undefined;\n    const patt = schema.pattern;\n    if (typeof patt !== \"string\")\n        return undefined;\n    return { forString: exports.patternTypeAttributeKind.makeAttributes(patt) };\n}\nexports.patternAttributeProducer = patternAttributeProducer;\nfunction patternForType(t) {\n    return exports.patternTypeAttributeKind.tryGetInAttributes(t.getAttributes());\n}\nexports.patternForType = patternForType;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JSONSchemaInput = exports.schemaTypeDict = exports.Ref = exports.PathElementKind = void 0;\nconst urijs_1 = __importDefault(require(\"urijs\"));\nconst collection_utils_1 = require(\"collection-utils\");\nconst Type_1 = require(\"../Type\");\nconst Support_1 = require(\"../support/Support\");\nconst TypeNames_1 = require(\"../attributes/TypeNames\");\nconst TypeNames_2 = require(\"../attributes/TypeNames\");\nconst TypeAttributes_1 = require(\"../attributes/TypeAttributes\");\nconst JSONSchemaStore_1 = require(\"./JSONSchemaStore\");\nconst Messages_1 = require(\"../Messages\");\nconst StringTypes_1 = require(\"../attributes/StringTypes\");\n// There's a cyclic import here. Ignoring now because it requires a large refactor.\n// skipcq: JS-E1008\nconst Description_1 = require(\"../attributes/Description\");\nconst AccessorNames_1 = require(\"../attributes/AccessorNames\");\nconst EnumValues_1 = require(\"../attributes/EnumValues\");\nconst Constraints_1 = require(\"../attributes/Constraints\");\nconst Constraints_2 = require(\"../attributes/Constraints\");\nconst Constraints_3 = require(\"../attributes/Constraints\");\nconst URIAttributes_1 = require(\"../attributes/URIAttributes\");\nvar PathElementKind;\n(function (PathElementKind) {\n    PathElementKind[PathElementKind[\"Root\"] = 0] = \"Root\";\n    PathElementKind[PathElementKind[\"KeyOrIndex\"] = 1] = \"KeyOrIndex\";\n    PathElementKind[PathElementKind[\"Type\"] = 2] = \"Type\";\n    PathElementKind[PathElementKind[\"Object\"] = 3] = \"Object\";\n})(PathElementKind = exports.PathElementKind || (exports.PathElementKind = {}));\nfunction keyOrIndex(pe) {\n    if (pe.kind !== PathElementKind.KeyOrIndex)\n        return undefined;\n    return pe.key;\n}\nfunction pathElementEquals(a, b) {\n    if (a.kind !== b.kind)\n        return false;\n    switch (a.kind) {\n        case PathElementKind.Type:\n            return a.index === b.index;\n        case PathElementKind.KeyOrIndex:\n            return a.key === b.key;\n        default:\n            return true;\n    }\n}\nfunction withRef(refOrLoc, props) {\n    const ref = typeof refOrLoc === \"function\" ? refOrLoc() : refOrLoc instanceof Ref ? refOrLoc : refOrLoc.canonicalRef;\n    return Object.assign({ ref }, props === undefined ? {} : props);\n}\nfunction checkJSONSchemaObject(x, refOrLoc) {\n    if (Array.isArray(x)) {\n        return (0, Messages_1.messageError)(\"SchemaArrayIsInvalidSchema\", withRef(refOrLoc));\n    }\n    if (x === null) {\n        return (0, Messages_1.messageError)(\"SchemaNullIsInvalidSchema\", withRef(refOrLoc));\n    }\n    if (typeof x !== \"object\") {\n        return (0, Messages_1.messageError)(\"SchemaInvalidJSONSchemaType\", withRef(refOrLoc, { type: typeof x }));\n    }\n    return x;\n}\nfunction checkJSONSchema(x, refOrLoc) {\n    if (typeof x === \"boolean\")\n        return x;\n    return checkJSONSchemaObject(x, refOrLoc);\n}\nconst numberRegexp = new RegExp(\"^[0-9]+$\");\nfunction normalizeURI(uri) {\n    // FIXME: This is overly complicated and a bit shady.  The problem is\n    // that `normalize` will URL-escape, with the result that if we want to\n    // open the URL as a file, escaped character will thwart us.  I think the\n    // JSONSchemaStore should take a URI, not a string, and if it reads from\n    // a file it can decode by itself.\n    if (typeof uri === \"string\") {\n        uri = new urijs_1.default(uri);\n    }\n    return new urijs_1.default(urijs_1.default.decode(uri.clone().normalize().toString()));\n}\nclass Ref {\n    static root(address) {\n        const uri = (0, collection_utils_1.definedMap)(address, a => new urijs_1.default(a));\n        return new Ref(uri, []);\n    }\n    static parsePath(path) {\n        const elements = [];\n        if (path.startsWith(\"/\")) {\n            elements.push({ kind: PathElementKind.Root });\n            path = path.slice(1);\n        }\n        if (path !== \"\") {\n            const parts = path.split(\"/\");\n            for (let i = 0; i < parts.length; i++) {\n                elements.push({ kind: PathElementKind.KeyOrIndex, key: parts[i] });\n            }\n        }\n        return elements;\n    }\n    static parseURI(uri, destroyURI = false) {\n        if (!destroyURI) {\n            uri = uri.clone();\n        }\n        let path = uri.fragment();\n        uri.fragment(\"\");\n        if ((uri.host() !== \"\" || uri.filename() !== \"\") && path === \"\") {\n            path = \"/\";\n        }\n        const elements = Ref.parsePath(path);\n        return new Ref(uri, elements);\n    }\n    static parse(ref) {\n        return Ref.parseURI(new urijs_1.default(ref), true);\n    }\n    constructor(addressURI, path) {\n        this.path = path;\n        if (addressURI !== undefined) {\n            (0, Support_1.assert)(addressURI.fragment() === \"\", `Ref URI with fragment is not allowed: ${addressURI.toString()}`);\n            this.addressURI = normalizeURI(addressURI);\n        }\n        else {\n            this.addressURI = undefined;\n        }\n    }\n    get hasAddress() {\n        return this.addressURI !== undefined;\n    }\n    get address() {\n        return (0, Support_1.defined)(this.addressURI).toString();\n    }\n    get isRoot() {\n        return this.path.length === 1 && this.path[0].kind === PathElementKind.Root;\n    }\n    pushElement(pe) {\n        const newPath = Array.from(this.path);\n        newPath.push(pe);\n        return new Ref(this.addressURI, newPath);\n    }\n    push(...keys) {\n        let ref = this;\n        for (const key of keys) {\n            ref = ref.pushElement({ kind: PathElementKind.KeyOrIndex, key });\n        }\n        return ref;\n    }\n    pushObject() {\n        return this.pushElement({ kind: PathElementKind.Object });\n    }\n    pushType(index) {\n        return this.pushElement({ kind: PathElementKind.Type, index });\n    }\n    resolveAgainst(base) {\n        let addressURI = this.addressURI;\n        if (base !== undefined && base.addressURI !== undefined) {\n            addressURI = addressURI === undefined ? base.addressURI : addressURI.absoluteTo(base.addressURI);\n        }\n        return new Ref(addressURI, this.path);\n    }\n    get name() {\n        const path = Array.from(this.path);\n        for (;;) {\n            const e = path.pop();\n            if (e === undefined || e.kind === PathElementKind.Root) {\n                let name = this.addressURI !== undefined ? this.addressURI.filename() : \"\";\n                const suffix = this.addressURI !== undefined ? this.addressURI.suffix() : \"\";\n                if (name.length > suffix.length + 1) {\n                    name = name.slice(0, name.length - suffix.length - 1);\n                }\n                if (name === \"\") {\n                    return \"Something\";\n                }\n                return name;\n            }\n            switch (e.kind) {\n                case PathElementKind.KeyOrIndex:\n                    if (numberRegexp.test(e.key)) {\n                        return e.key;\n                    }\n                    break;\n                case PathElementKind.Type:\n                case PathElementKind.Object:\n                    return (0, Support_1.panic)(\"We shouldn't try to get the name of Type or Object refs\");\n                default:\n                    return (0, Support_1.assertNever)(e);\n            }\n        }\n    }\n    get definitionName() {\n        const pe = (0, collection_utils_1.arrayGetFromEnd)(this.path, 2);\n        if (pe === undefined)\n            return undefined;\n        if (keyOrIndex(pe) === \"definitions\")\n            return keyOrIndex((0, Support_1.defined)((0, collection_utils_1.arrayLast)(this.path)));\n        return undefined;\n    }\n    toString() {\n        function elementToString(e) {\n            switch (e.kind) {\n                case PathElementKind.Root:\n                    return \"\";\n                case PathElementKind.Type:\n                    return `type/${e.index.toString()}`;\n                case PathElementKind.Object:\n                    return \"object\";\n                case PathElementKind.KeyOrIndex:\n                    return e.key;\n                default:\n                    return (0, Support_1.assertNever)(e);\n            }\n        }\n        const address = this.addressURI === undefined ? \"\" : this.addressURI.toString();\n        return address + \"#\" + this.path.map(elementToString).join(\"/\");\n    }\n    lookup(local, path, root) {\n        const refMaker = () => new Ref(this.addressURI, path);\n        const first = path[0];\n        if (first === undefined) {\n            return checkJSONSchema(local, refMaker);\n        }\n        const rest = path.slice(1);\n        switch (first.kind) {\n            case PathElementKind.Root:\n                return this.lookup(root, rest, root);\n            case PathElementKind.KeyOrIndex:\n                const key = first.key;\n                if (Array.isArray(local)) {\n                    if (!/^\\d+$/.test(key)) {\n                        return (0, Messages_1.messageError)(\"SchemaCannotIndexArrayWithNonNumber\", withRef(refMaker, { actual: key }));\n                    }\n                    const index = parseInt(first.key, 10);\n                    if (index >= local.length) {\n                        return (0, Messages_1.messageError)(\"SchemaIndexNotInArray\", withRef(refMaker, { index }));\n                    }\n                    return this.lookup(local[index], rest, root);\n                }\n                else {\n                    if (!(0, collection_utils_1.hasOwnProperty)(local, key)) {\n                        return (0, Messages_1.messageError)(\"SchemaKeyNotInObject\", withRef(refMaker, { key }));\n                    }\n                    return this.lookup(checkJSONSchemaObject(local, refMaker)[first.key], rest, root);\n                }\n            case PathElementKind.Type:\n                return (0, Support_1.panic)('Cannot look up path that indexes \"type\"');\n            case PathElementKind.Object:\n                return (0, Support_1.panic)('Cannot look up path that indexes \"object\"');\n            default:\n                return (0, Support_1.assertNever)(first);\n        }\n    }\n    lookupRef(root) {\n        return this.lookup(root, this.path, root);\n    }\n    equals(other) {\n        if (!(other instanceof Ref))\n            return false;\n        if (this.addressURI !== undefined && other.addressURI !== undefined) {\n            if (!this.addressURI.equals(other.addressURI))\n                return false;\n        }\n        else {\n            if ((this.addressURI === undefined) !== (other.addressURI === undefined))\n                return false;\n        }\n        const l = this.path.length;\n        if (l !== other.path.length)\n            return false;\n        for (let i = 0; i < l; i++) {\n            if (!pathElementEquals(this.path[i], other.path[i]))\n                return false;\n        }\n        return true;\n    }\n    hashCode() {\n        let acc = (0, collection_utils_1.hashCodeOf)((0, collection_utils_1.definedMap)(this.addressURI, u => u.toString()));\n        for (const pe of this.path) {\n            acc = (0, collection_utils_1.addHashCode)(acc, pe.kind);\n            switch (pe.kind) {\n                case PathElementKind.Type:\n                    acc = (0, collection_utils_1.addHashCode)(acc, pe.index);\n                    break;\n                case PathElementKind.KeyOrIndex:\n                    acc = (0, collection_utils_1.addHashCode)(acc, (0, collection_utils_1.hashString)(pe.key));\n                    break;\n                default:\n                    break;\n            }\n        }\n        return acc;\n    }\n}\nexports.Ref = Ref;\nclass Location {\n    constructor(canonicalRef, virtualRef, haveID = false) {\n        this.haveID = haveID;\n        this.canonicalRef = canonicalRef;\n        this.virtualRef = virtualRef !== undefined ? virtualRef : canonicalRef;\n    }\n    updateWithID(id) {\n        if (typeof id !== \"string\")\n            return this;\n        const parsed = Ref.parse(id);\n        const virtual = this.haveID ? parsed.resolveAgainst(this.virtualRef) : parsed;\n        if (!this.haveID) {\n            (0, Messages_1.messageAssert)(virtual.hasAddress, \"SchemaIDMustHaveAddress\", withRef(this, { id }));\n        }\n        return new Location(this.canonicalRef, virtual, true);\n    }\n    push(...keys) {\n        return new Location(this.canonicalRef.push(...keys), this.virtualRef.push(...keys), this.haveID);\n    }\n    pushObject() {\n        return new Location(this.canonicalRef.pushObject(), this.virtualRef.pushObject(), this.haveID);\n    }\n    pushType(index) {\n        return new Location(this.canonicalRef.pushType(index), this.virtualRef.pushType(index), this.haveID);\n    }\n    toString() {\n        return `${this.virtualRef.toString()} (${this.canonicalRef.toString()})`;\n    }\n}\nclass Canonizer {\n    constructor(_ctx) {\n        this._ctx = _ctx;\n        this._map = new collection_utils_1.EqualityMap();\n        this._schemaAddressesAdded = new Set();\n    }\n    addIDs(schema, loc) {\n        if (schema === null)\n            return;\n        if (Array.isArray(schema)) {\n            for (let i = 0; i < schema.length; i++) {\n                this.addIDs(schema[i], loc.push(i.toString()));\n            }\n            return;\n        }\n        if (typeof schema !== \"object\") {\n            return;\n        }\n        const locWithoutID = loc;\n        const maybeID = schema[\"$id\"];\n        if (typeof maybeID === \"string\") {\n            loc = loc.updateWithID(maybeID);\n        }\n        if (loc.haveID) {\n            if (this._ctx.debugPrintSchemaResolving) {\n                console.log(`adding mapping ${loc.toString()}`);\n            }\n            this._map.set(loc.virtualRef, locWithoutID);\n        }\n        for (const property of Object.getOwnPropertyNames(schema)) {\n            this.addIDs(schema[property], loc.push(property));\n        }\n    }\n    addSchema(schema, address) {\n        if (this._schemaAddressesAdded.has(address))\n            return false;\n        this.addIDs(schema, new Location(Ref.root(address), Ref.root(undefined)));\n        this._schemaAddressesAdded.add(address);\n        return true;\n    }\n    // Returns: Canonical ref\n    canonize(base, ref) {\n        const virtual = ref.resolveAgainst(base.virtualRef);\n        const loc = this._map.get(virtual);\n        if (loc !== undefined) {\n            return loc;\n        }\n        const canonicalRef = virtual.addressURI === undefined ? new Ref(base.canonicalRef.addressURI, virtual.path) : virtual;\n        return new Location(canonicalRef, new Ref(undefined, virtual.path));\n    }\n}\nfunction checkTypeList(typeOrTypes, loc) {\n    let set;\n    if (typeof typeOrTypes === \"string\") {\n        set = new Set([typeOrTypes]);\n    }\n    else if (Array.isArray(typeOrTypes)) {\n        const arr = [];\n        for (const t of typeOrTypes) {\n            if (typeof t !== \"string\") {\n                return (0, Messages_1.messageError)(\"SchemaTypeElementMustBeString\", withRef(loc, { element: t }));\n            }\n            arr.push(t);\n        }\n        set = new Set(arr);\n    }\n    else {\n        return (0, Messages_1.messageError)(\"SchemaTypeMustBeStringOrStringArray\", withRef(loc, { actual: typeOrTypes }));\n    }\n    (0, Messages_1.messageAssert)(set.size > 0, \"SchemaNoTypeSpecified\", withRef(loc));\n    const validTypes = [\"null\", \"boolean\", \"object\", \"array\", \"number\", \"string\", \"integer\"];\n    const maybeInvalid = (0, collection_utils_1.iterableFind)(set, s => validTypes.indexOf(s) < 0);\n    if (maybeInvalid !== undefined) {\n        return (0, Messages_1.messageError)(\"SchemaInvalidType\", withRef(loc, { type: maybeInvalid }));\n    }\n    return set;\n}\nfunction checkRequiredArray(arr, loc) {\n    if (!Array.isArray(arr)) {\n        return (0, Messages_1.messageError)(\"SchemaRequiredMustBeStringOrStringArray\", withRef(loc, { actual: arr }));\n    }\n    for (const e of arr) {\n        if (typeof e !== \"string\") {\n            return (0, Messages_1.messageError)(\"SchemaRequiredElementMustBeString\", withRef(loc, { element: e }));\n        }\n    }\n    return arr;\n}\nexports.schemaTypeDict = {\n    null: true,\n    boolean: true,\n    string: true,\n    integer: true,\n    number: true,\n    array: true,\n    object: true\n};\nconst schemaTypes = Object.getOwnPropertyNames(exports.schemaTypeDict);\nfunction typeKindForJSONSchemaFormat(format) {\n    const target = (0, collection_utils_1.iterableFind)(Type_1.transformedStringTypeTargetTypeKindsMap, ([_, { jsonSchema }]) => jsonSchema === format);\n    if (target === undefined)\n        return undefined;\n    return target[0];\n}\nfunction schemaFetchError(base, address) {\n    if (base === undefined) {\n        return (0, Messages_1.messageError)(\"SchemaFetchErrorTopLevel\", { address });\n    }\n    else {\n        return (0, Messages_1.messageError)(\"SchemaFetchError\", { address, base: base.canonicalRef });\n    }\n}\nclass Resolver {\n    constructor(_ctx, _store, _canonizer) {\n        this._ctx = _ctx;\n        this._store = _store;\n        this._canonizer = _canonizer;\n    }\n    tryResolveVirtualRef(fetchBase, lookupBase, virtualRef) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let didAdd = false;\n            // If we are resolving into a schema file that we haven't seen yet then\n            // we don't know its $id mapping yet, which means we don't know where we\n            // will end up.  What we do if we encounter a new schema is add all its\n            // IDs first, and then try to canonize again.\n            for (;;) {\n                const loc = this._canonizer.canonize(fetchBase, virtualRef);\n                const canonical = loc.canonicalRef;\n                (0, Support_1.assert)(canonical.hasAddress, \"Canonical ref can't be resolved without an address\");\n                const address = canonical.address;\n                let schema = canonical.addressURI === undefined\n                    ? undefined\n                    : yield this._store.get(address, this._ctx.debugPrintSchemaResolving);\n                if (schema === undefined) {\n                    return [undefined, loc];\n                }\n                if (this._canonizer.addSchema(schema, address)) {\n                    (0, Support_1.assert)(!didAdd, \"We can't add a schema twice\");\n                    didAdd = true;\n                }\n                else {\n                    let lookupLoc = this._canonizer.canonize(lookupBase, virtualRef);\n                    if (fetchBase !== undefined) {\n                        lookupLoc = new Location(new Ref(loc.canonicalRef.addressURI, lookupLoc.canonicalRef.path), lookupLoc.virtualRef, lookupLoc.haveID);\n                    }\n                    return [lookupLoc.canonicalRef.lookupRef(schema), lookupLoc];\n                }\n            }\n        });\n    }\n    resolveVirtualRef(base, virtualRef) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._ctx.debugPrintSchemaResolving) {\n                console.log(`resolving ${virtualRef.toString()} relative to ${base.toString()}`);\n            }\n            // Try with the virtual base first.  If that doesn't work, use the\n            // canonical ref's address with the virtual base's path.\n            let result = yield this.tryResolveVirtualRef(base, base, virtualRef);\n            let schema = result[0];\n            if (schema !== undefined) {\n                if (this._ctx.debugPrintSchemaResolving) {\n                    console.log(`resolved to ${result[1].toString()}`);\n                }\n                return [schema, result[1]];\n            }\n            const altBase = new Location(base.canonicalRef, new Ref(base.canonicalRef.addressURI, base.virtualRef.path), base.haveID);\n            result = yield this.tryResolveVirtualRef(altBase, base, virtualRef);\n            schema = result[0];\n            if (schema !== undefined) {\n                if (this._ctx.debugPrintSchemaResolving) {\n                    console.log(`resolved to ${result[1].toString()}`);\n                }\n                return [schema, result[1]];\n            }\n            return schemaFetchError(base, virtualRef.address);\n        });\n    }\n    resolveTopLevelRef(ref) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.resolveVirtualRef(new Location(new Ref(ref.addressURI, [])), new Ref(undefined, ref.path));\n        });\n    }\n}\nfunction addTypesInSchema(resolver, typeBuilder, references, attributeProducers) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let typeForCanonicalRef = new collection_utils_1.EqualityMap();\n        function setTypeForLocation(loc, t) {\n            const maybeRef = typeForCanonicalRef.get(loc.canonicalRef);\n            if (maybeRef !== undefined) {\n                (0, Support_1.assert)(maybeRef === t, \"Trying to set path again to different type\");\n            }\n            typeForCanonicalRef.set(loc.canonicalRef, t);\n        }\n        function makeObject(loc, attributes, properties, requiredArray, additionalProperties, sortKey = (k) => k.toLowerCase()) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const required = new Set(requiredArray);\n                const propertiesMap = (0, collection_utils_1.mapSortBy)((0, collection_utils_1.mapFromObject)(properties), (_, k) => sortKey(k));\n                const props = yield (0, collection_utils_1.mapMapSync)(propertiesMap, (propSchema, propName) => __awaiter(this, void 0, void 0, function* () {\n                    const propLoc = loc.push(\"properties\", propName);\n                    const t = yield toType(checkJSONSchema(propSchema, propLoc.canonicalRef), propLoc, (0, TypeNames_2.makeNamesTypeAttributes)(propName, true));\n                    const isOptional = !required.has(propName);\n                    return typeBuilder.makeClassProperty(t, isOptional);\n                }));\n                let additionalPropertiesType;\n                if (additionalProperties === undefined || additionalProperties === true) {\n                    additionalPropertiesType = typeBuilder.getPrimitiveType(\"any\");\n                }\n                else if (additionalProperties === false) {\n                    additionalPropertiesType = undefined;\n                }\n                else {\n                    const additionalLoc = loc.push(\"additionalProperties\");\n                    additionalPropertiesType = yield toType(checkJSONSchema(additionalProperties, additionalLoc.canonicalRef), additionalLoc, (0, TypeNames_2.singularizeTypeNames)(attributes));\n                }\n                const additionalRequired = (0, collection_utils_1.setSubtract)(required, props.keys());\n                if (additionalRequired.size > 0) {\n                    const t = additionalPropertiesType;\n                    if (t === undefined) {\n                        return (0, Messages_1.messageError)(\"SchemaAdditionalTypesForbidRequired\", withRef(loc));\n                    }\n                    const additionalProps = (0, collection_utils_1.mapFromIterable)(additionalRequired, _name => typeBuilder.makeClassProperty(t, false));\n                    (0, collection_utils_1.mapMergeInto)(props, additionalProps);\n                }\n                return typeBuilder.getUniqueObjectType(attributes, props, additionalPropertiesType);\n            });\n        }\n        function convertToType(schema, loc, typeAttributes) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const enumArray = Array.isArray(schema.enum) ? schema.enum : undefined;\n                const isConst = schema.const !== undefined;\n                const typeSet = (0, collection_utils_1.definedMap)(schema.type, t => checkTypeList(t, loc));\n                function isTypeIncluded(name) {\n                    var _a;\n                    if (typeSet !== undefined && !typeSet.has(name)) {\n                        return false;\n                    }\n                    if (enumArray !== undefined) {\n                        let predicate;\n                        switch (name) {\n                            case \"null\":\n                                predicate = (x) => x === null;\n                                break;\n                            case \"integer\":\n                                predicate = (x) => typeof x === \"number\" && x === Math.floor(x);\n                                break;\n                            default:\n                                predicate = (x) => typeof x === name;\n                                break;\n                        }\n                        return enumArray.find(predicate) !== undefined;\n                    }\n                    if (isConst) {\n                        return name === ((_a = schema.type) !== null && _a !== void 0 ? _a : typeof schema.const);\n                    }\n                    return true;\n                }\n                const includedTypes = (0, collection_utils_1.setFilter)(schemaTypes, isTypeIncluded);\n                let producedAttributesForNoCases = undefined;\n                function forEachProducedAttribute(cases, f) {\n                    let attributes;\n                    if (cases === undefined && producedAttributesForNoCases !== undefined) {\n                        attributes = producedAttributesForNoCases;\n                    }\n                    else {\n                        attributes = [];\n                        for (const producer of attributeProducers) {\n                            const newAttributes = producer(schema, loc.canonicalRef, includedTypes, cases);\n                            if (newAttributes === undefined)\n                                continue;\n                            attributes.push(newAttributes);\n                        }\n                        if (cases === undefined) {\n                            producedAttributesForNoCases = attributes;\n                        }\n                    }\n                    for (const a of attributes) {\n                        f(a);\n                    }\n                }\n                function combineProducedAttributes(f) {\n                    let result = TypeAttributes_1.emptyTypeAttributes;\n                    forEachProducedAttribute(undefined, attr => {\n                        const maybeAttributes = f(attr);\n                        if (maybeAttributes === undefined)\n                            return;\n                        result = (0, TypeAttributes_1.combineTypeAttributes)(\"union\", result, maybeAttributes);\n                    });\n                    return result;\n                }\n                function makeAttributes(attributes) {\n                    if (schema.oneOf === undefined) {\n                        attributes = (0, TypeAttributes_1.combineTypeAttributes)(\"union\", attributes, combineProducedAttributes(({ forType, forUnion, forCases }) => {\n                            (0, Support_1.assert)(forUnion === undefined && forCases === undefined, \"We can't have attributes for unions and cases if we don't have a union\");\n                            return forType;\n                        }));\n                    }\n                    return (0, TypeNames_2.modifyTypeNames)(attributes, maybeTypeNames => {\n                        const typeNames = (0, Support_1.defined)(maybeTypeNames);\n                        if (!typeNames.areInferred) {\n                            return typeNames;\n                        }\n                        let title = schema.title;\n                        if (typeof title !== \"string\") {\n                            title = loc.canonicalRef.definitionName;\n                        }\n                        if (typeof title === \"string\") {\n                            return TypeNames_1.TypeNames.make(new Set([title]), new Set(), schema.$ref !== undefined);\n                        }\n                        else {\n                            return typeNames.makeInferred();\n                        }\n                    });\n                }\n                typeAttributes = makeAttributes(typeAttributes);\n                const inferredAttributes = (0, TypeAttributes_1.makeTypeAttributesInferred)(typeAttributes);\n                function makeStringType(attributes) {\n                    const kind = typeKindForJSONSchemaFormat(schema.format);\n                    if (kind === undefined) {\n                        return typeBuilder.getStringType(attributes, StringTypes_1.StringTypes.unrestricted);\n                    }\n                    else {\n                        return typeBuilder.getPrimitiveType(kind, attributes);\n                    }\n                }\n                function makeArrayType() {\n                    return __awaiter(this, void 0, void 0, function* () {\n                        const singularAttributes = (0, TypeNames_2.singularizeTypeNames)(typeAttributes);\n                        const items = schema.items;\n                        let itemType;\n                        if (Array.isArray(items)) {\n                            const itemsLoc = loc.push(\"items\");\n                            const itemTypes = yield (0, collection_utils_1.arrayMapSync)(items, (item, i) => __awaiter(this, void 0, void 0, function* () {\n                                const itemLoc = itemsLoc.push(i.toString());\n                                return yield toType(checkJSONSchema(item, itemLoc.canonicalRef), itemLoc, singularAttributes);\n                            }));\n                            itemType = typeBuilder.getUnionType(TypeAttributes_1.emptyTypeAttributes, new Set(itemTypes));\n                        }\n                        else if (typeof items === \"object\") {\n                            const itemsLoc = loc.push(\"items\");\n                            itemType = yield toType(checkJSONSchema(items, itemsLoc.canonicalRef), itemsLoc, singularAttributes);\n                        }\n                        else if (items !== undefined && items !== true) {\n                            return (0, Messages_1.messageError)(\"SchemaArrayItemsMustBeStringOrArray\", withRef(loc, { actual: items }));\n                        }\n                        else {\n                            itemType = typeBuilder.getPrimitiveType(\"any\");\n                        }\n                        typeBuilder.addAttributes(itemType, singularAttributes);\n                        return typeBuilder.getArrayType(TypeAttributes_1.emptyTypeAttributes, itemType);\n                    });\n                }\n                function makeObjectType() {\n                    return __awaiter(this, void 0, void 0, function* () {\n                        let required;\n                        if (schema.required === undefined || typeof schema.required === \"boolean\") {\n                            required = [];\n                        }\n                        else {\n                            required = Array.from(checkRequiredArray(schema.required, loc));\n                        }\n                        let properties;\n                        if (schema.properties === undefined) {\n                            properties = {};\n                        }\n                        else {\n                            properties = checkJSONSchemaObject(schema.properties, loc.canonicalRef);\n                        }\n                        // In Schema Draft 3, `required` is `true` on a property that's required.\n                        for (const p of Object.getOwnPropertyNames(properties)) {\n                            if (properties[p].required === true && required.indexOf(p) < 0) {\n                                required.push(p);\n                            }\n                        }\n                        let additionalProperties = schema.additionalProperties;\n                        // This is an incorrect hack to fix an issue with a Go->Schema generator:\n                        // https://github.com/quicktype/quicktype/issues/976\n                        if (additionalProperties === undefined &&\n                            typeof schema.patternProperties === \"object\" &&\n                            (0, collection_utils_1.hasOwnProperty)(schema.patternProperties, \".*\")) {\n                            additionalProperties = schema.patternProperties[\".*\"];\n                        }\n                        const objectAttributes = (0, TypeAttributes_1.combineTypeAttributes)(\"union\", inferredAttributes, combineProducedAttributes(({ forObject }) => forObject));\n                        const order = schema.quicktypePropertyOrder ? schema.quicktypePropertyOrder : [];\n                        const orderKey = (propertyName) => {\n                            // use the index of the order array\n                            const index = order.indexOf(propertyName);\n                            // if no index then use the property name\n                            return index !== -1 ? index : propertyName.toLowerCase();\n                        };\n                        return yield makeObject(loc, objectAttributes, properties, required, additionalProperties, orderKey);\n                    });\n                }\n                function makeTypesFromCases(cases, kind) {\n                    return __awaiter(this, void 0, void 0, function* () {\n                        const kindLoc = loc.push(kind);\n                        if (!Array.isArray(cases)) {\n                            return (0, Messages_1.messageError)(\"SchemaSetOperationCasesIsNotArray\", withRef(kindLoc, { operation: kind, cases }));\n                        }\n                        // FIXME: This cast shouldn't be necessary, but TypeScript forces our hand.\n                        return yield (0, collection_utils_1.arrayMapSync)(cases, (t, index) => __awaiter(this, void 0, void 0, function* () {\n                            const caseLoc = kindLoc.push(index.toString());\n                            return yield toType(checkJSONSchema(t, caseLoc.canonicalRef), caseLoc, (0, TypeAttributes_1.makeTypeAttributesInferred)(typeAttributes));\n                        }));\n                    });\n                }\n                const intersectionType = typeBuilder.getUniqueIntersectionType(typeAttributes, undefined);\n                setTypeForLocation(loc, intersectionType);\n                function convertOneOrAnyOf(cases, kind) {\n                    return __awaiter(this, void 0, void 0, function* () {\n                        const typeRefs = yield makeTypesFromCases(cases, kind);\n                        let unionAttributes = (0, TypeAttributes_1.makeTypeAttributesInferred)(typeAttributes);\n                        if (kind === \"oneOf\") {\n                            forEachProducedAttribute(cases, ({ forType, forUnion, forCases }) => {\n                                if (forType !== undefined) {\n                                    typeBuilder.addAttributes(intersectionType, forType);\n                                }\n                                if (forUnion !== undefined) {\n                                    unionAttributes = (0, TypeAttributes_1.combineTypeAttributes)(\"union\", unionAttributes, forUnion);\n                                }\n                                if (forCases !== undefined) {\n                                    (0, Support_1.assert)(forCases.length === typeRefs.length, \"Number of case attributes doesn't match number of cases\");\n                                    for (let i = 0; i < typeRefs.length; i++) {\n                                        typeBuilder.addAttributes(typeRefs[i], forCases[i]);\n                                    }\n                                }\n                            });\n                        }\n                        const unionType = typeBuilder.getUniqueUnionType(unionAttributes, undefined);\n                        typeBuilder.setSetOperationMembers(unionType, new Set(typeRefs));\n                        return unionType;\n                    });\n                }\n                const includeObject = enumArray === undefined && !isConst && (typeSet === undefined || typeSet.has(\"object\"));\n                const includeArray = enumArray === undefined && !isConst && (typeSet === undefined || typeSet.has(\"array\"));\n                const needStringEnum = includedTypes.has(\"string\") &&\n                    enumArray !== undefined &&\n                    enumArray.find((x) => typeof x === \"string\") !== undefined;\n                const needUnion = typeSet !== undefined ||\n                    schema.properties !== undefined ||\n                    schema.additionalProperties !== undefined ||\n                    schema.items !== undefined ||\n                    schema.required !== undefined ||\n                    enumArray !== undefined ||\n                    isConst;\n                const types = [];\n                if (needUnion) {\n                    const unionTypes = [];\n                    const numberAttributes = combineProducedAttributes(({ forNumber }) => forNumber);\n                    for (const [name, kind] of [\n                        [\"null\", \"null\"],\n                        [\"number\", \"double\"],\n                        [\"integer\", \"integer\"],\n                        [\"boolean\", \"bool\"]\n                    ]) {\n                        if (!includedTypes.has(name))\n                            continue;\n                        const attributes = (0, Type_1.isNumberTypeKind)(kind) ? numberAttributes : undefined;\n                        unionTypes.push(typeBuilder.getPrimitiveType(kind, attributes));\n                    }\n                    const stringAttributes = (0, TypeAttributes_1.combineTypeAttributes)(\"union\", inferredAttributes, combineProducedAttributes(({ forString }) => forString));\n                    if (needStringEnum || isConst) {\n                        const cases = isConst\n                            ? [schema.const]\n                            : enumArray.filter(x => typeof x === \"string\");\n                        unionTypes.push(typeBuilder.getStringType(stringAttributes, StringTypes_1.StringTypes.fromCases(cases)));\n                    }\n                    else if (includedTypes.has(\"string\")) {\n                        unionTypes.push(makeStringType(stringAttributes));\n                    }\n                    if (includeArray) {\n                        unionTypes.push(yield makeArrayType());\n                    }\n                    if (includeObject) {\n                        unionTypes.push(yield makeObjectType());\n                    }\n                    types.push(typeBuilder.getUniqueUnionType(inferredAttributes, new Set(unionTypes)));\n                }\n                if (schema.$ref !== undefined) {\n                    if (typeof schema.$ref !== \"string\") {\n                        return (0, Messages_1.messageError)(\"SchemaRefMustBeString\", withRef(loc, { actual: typeof schema.$ref }));\n                    }\n                    const virtualRef = Ref.parse(schema.$ref);\n                    const [target, newLoc] = yield resolver.resolveVirtualRef(loc, virtualRef);\n                    const attributes = (0, TypeNames_2.modifyTypeNames)(typeAttributes, tn => {\n                        if (!(0, Support_1.defined)(tn).areInferred)\n                            return tn;\n                        return TypeNames_1.TypeNames.make(new Set([newLoc.canonicalRef.name]), new Set(), true);\n                    });\n                    types.push(yield toType(target, newLoc, attributes));\n                }\n                if (schema.allOf !== undefined) {\n                    types.push(...(yield makeTypesFromCases(schema.allOf, \"allOf\")));\n                }\n                if (schema.oneOf !== undefined) {\n                    types.push(yield convertOneOrAnyOf(schema.oneOf, \"oneOf\"));\n                }\n                if (schema.anyOf !== undefined) {\n                    types.push(yield convertOneOrAnyOf(schema.anyOf, \"anyOf\"));\n                }\n                typeBuilder.setSetOperationMembers(intersectionType, new Set(types));\n                return intersectionType;\n            });\n        }\n        function toType(schema, loc, typeAttributes) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const maybeType = typeForCanonicalRef.get(loc.canonicalRef);\n                if (maybeType !== undefined) {\n                    return maybeType;\n                }\n                let result;\n                if (typeof schema === \"boolean\") {\n                    // FIXME: Empty union.  We'd have to check that it's supported everywhere,\n                    // in particular in union flattening.\n                    (0, Messages_1.messageAssert)(schema === true, \"SchemaFalseNotSupported\", withRef(loc));\n                    result = typeBuilder.getPrimitiveType(\"any\");\n                }\n                else {\n                    loc = loc.updateWithID(schema[\"$id\"]);\n                    result = yield convertToType(schema, loc, typeAttributes);\n                }\n                setTypeForLocation(loc, result);\n                return result;\n            });\n        }\n        for (const [topLevelName, topLevelRef] of references) {\n            const [target, loc] = yield resolver.resolveTopLevelRef(topLevelRef);\n            const t = yield toType(target, loc, (0, TypeNames_2.makeNamesTypeAttributes)(topLevelName, false));\n            typeBuilder.addTopLevel(topLevelName, t);\n        }\n    });\n}\nfunction removeExtension(fn) {\n    const lower = fn.toLowerCase();\n    const extensions = [\".json\", \".schema\"];\n    for (const ext of extensions) {\n        if (lower.endsWith(ext)) {\n            const base = fn.slice(0, fn.length - ext.length);\n            if (base.length > 0) {\n                return base;\n            }\n        }\n    }\n    return fn;\n}\nfunction nameFromURI(uri) {\n    const fragment = uri.fragment();\n    if (fragment !== \"\") {\n        const components = fragment.split(\"/\");\n        const len = components.length;\n        if (components[len - 1] !== \"\") {\n            return removeExtension(components[len - 1]);\n        }\n        if (len > 1 && components[len - 2] !== \"\") {\n            return removeExtension(components[len - 2]);\n        }\n    }\n    const filename = uri.filename();\n    if (filename !== \"\") {\n        return removeExtension(filename);\n    }\n    return (0, Messages_1.messageError)(\"DriverCannotInferNameForSchema\", { uri: uri.toString() });\n}\nfunction refsInSchemaForURI(resolver, uri, defaultName) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const fragment = uri.fragment();\n        let propertiesAreTypes = fragment.endsWith(\"/\");\n        if (propertiesAreTypes) {\n            uri = uri.clone().fragment(fragment.slice(0, -1));\n        }\n        const ref = Ref.parseURI(uri);\n        if (ref.isRoot) {\n            propertiesAreTypes = false;\n        }\n        const schema = (yield resolver.resolveTopLevelRef(ref))[0];\n        if (propertiesAreTypes) {\n            if (typeof schema !== \"object\") {\n                return (0, Messages_1.messageError)(\"SchemaCannotGetTypesFromBoolean\", { ref: ref.toString() });\n            }\n            return (0, collection_utils_1.mapMap)((0, collection_utils_1.mapFromObject)(schema), (_, name) => ref.push(name));\n        }\n        else {\n            let name;\n            if (typeof schema === \"object\" && typeof schema.title === \"string\") {\n                name = schema.title;\n            }\n            else {\n                const maybeName = nameFromURI(uri);\n                name = maybeName !== undefined ? maybeName : defaultName;\n            }\n            return [name, ref];\n        }\n    });\n}\nclass InputJSONSchemaStore extends JSONSchemaStore_1.JSONSchemaStore {\n    constructor(_inputs, _delegate) {\n        super();\n        this._inputs = _inputs;\n        this._delegate = _delegate;\n    }\n    fetch(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const maybeInput = this._inputs.get(address);\n            if (maybeInput !== undefined) {\n                return checkJSONSchema((0, Support_1.parseJSON)(maybeInput, \"JSON Schema\", address), () => Ref.root(address));\n            }\n            if (this._delegate === undefined) {\n                return (0, Support_1.panic)(`Schema URI ${address} requested, but no store given`);\n            }\n            return yield this._delegate.fetch(address);\n        });\n    }\n}\nclass JSONSchemaInput {\n    constructor(_schemaStore, additionalAttributeProducers = [], _additionalSchemaAddresses = []) {\n        this._schemaStore = _schemaStore;\n        this._additionalSchemaAddresses = _additionalSchemaAddresses;\n        this.kind = \"schema\";\n        this.needSchemaProcessing = true;\n        this._schemaInputs = new Map();\n        this._schemaSources = [];\n        this._topLevels = new Map();\n        this._needIR = false;\n        this._attributeProducers = [\n            Description_1.descriptionAttributeProducer,\n            AccessorNames_1.accessorNamesAttributeProducer,\n            EnumValues_1.enumValuesAttributeProducer,\n            URIAttributes_1.uriSchemaAttributesProducer,\n            Constraints_1.minMaxAttributeProducer,\n            Constraints_2.minMaxLengthAttributeProducer,\n            Constraints_3.patternAttributeProducer\n        ].concat(additionalAttributeProducers);\n    }\n    get needIR() {\n        return this._needIR;\n    }\n    addTopLevel(name, ref) {\n        this._topLevels.set(name, ref);\n    }\n    addTypes(ctx, typeBuilder) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._schemaSources.length === 0)\n                return;\n            let maybeSchemaStore = this._schemaStore;\n            if (this._schemaInputs.size === 0) {\n                if (maybeSchemaStore === undefined) {\n                    return (0, Support_1.panic)(\"Must have a schema store to process JSON Schema\");\n                }\n            }\n            else {\n                maybeSchemaStore = this._schemaStore = new InputJSONSchemaStore(this._schemaInputs, maybeSchemaStore);\n            }\n            const schemaStore = maybeSchemaStore;\n            const canonizer = new Canonizer(ctx);\n            for (const address of this._additionalSchemaAddresses) {\n                const schema = yield schemaStore.get(address, ctx.debugPrintSchemaResolving);\n                if (schema === undefined) {\n                    return (0, Messages_1.messageError)(\"SchemaFetchErrorAdditional\", { address });\n                }\n                canonizer.addSchema(schema, address);\n            }\n            const resolver = new Resolver(ctx, (0, Support_1.defined)(this._schemaStore), canonizer);\n            for (const [normalizedURI, source] of this._schemaSources) {\n                const givenName = source.name;\n                const refs = yield refsInSchemaForURI(resolver, normalizedURI, givenName);\n                if (Array.isArray(refs)) {\n                    let name;\n                    if (this._schemaSources.length === 1 && givenName !== undefined) {\n                        name = givenName;\n                    }\n                    else {\n                        name = refs[0];\n                    }\n                    this.addTopLevel(name, refs[1]);\n                }\n                else {\n                    for (const [refName, ref] of refs) {\n                        this.addTopLevel(refName, ref);\n                    }\n                }\n            }\n            yield addTypesInSchema(resolver, typeBuilder, this._topLevels, this._attributeProducers);\n        });\n    }\n    addTypesSync() {\n        return (0, Support_1.panic)(\"addTypesSync not supported in JSONSchemaInput\");\n    }\n    addSource(schemaSource) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.addSourceSync(schemaSource);\n        });\n    }\n    addSourceSync(schemaSource) {\n        const { name, uris, schema, isConverted } = schemaSource;\n        if (isConverted !== true) {\n            this._needIR = true;\n        }\n        let normalizedURIs;\n        if (uris === undefined) {\n            normalizedURIs = [new urijs_1.default(name)];\n        }\n        else {\n            normalizedURIs = uris.map(uri => {\n                const normalizedURI = normalizeURI(uri);\n                if (normalizedURI.clone().hash(\"\").toString() === \"\") {\n                    normalizedURI.path(name);\n                }\n                return normalizedURI;\n            });\n        }\n        if (schema === undefined) {\n            (0, Support_1.assert)(uris !== undefined, \"URIs must be given if schema source is not specified\");\n        }\n        else {\n            for (let i = 0; i < normalizedURIs.length; i++) {\n                const normalizedURI = normalizedURIs[i];\n                const uri = normalizedURI.clone().hash(\"\");\n                const path = uri.path();\n                let suffix = 0;\n                do {\n                    if (suffix > 0) {\n                        uri.path(`${path}-${suffix}`);\n                    }\n                    suffix++;\n                } while (this._schemaInputs.has(uri.toString()));\n                this._schemaInputs.set(uri.toString(), schema);\n                normalizedURIs[i] = uri.hash(normalizedURI.hash());\n            }\n        }\n        // FIXME: Why do we need both _schemaSources and _schemaInputs?\n        for (const normalizedURI of normalizedURIs) {\n            this._schemaSources.push([normalizedURI, schemaSource]);\n        }\n    }\n    singleStringSchemaSource() {\n        if (!this._schemaSources.every(([_, { schema }]) => typeof schema === \"string\")) {\n            return undefined;\n        }\n        const set = new Set(this._schemaSources.map(([_, { schema }]) => schema));\n        if (set.size === 1) {\n            return (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(set));\n        }\n        return undefined;\n    }\n}\nexports.JSONSchemaInput = JSONSchemaInput;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.descriptionAttributeProducer = exports.propertyDescriptionsTypeAttributeKind = exports.descriptionTypeAttributeKind = exports.addDescriptionToSchema = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\n// There's a cyclic import here. Ignoring now because it requires a large refactor.\n// skipcq: JS-E1008\nconst TypeAttributes_1 = require(\"./TypeAttributes\");\n// FIXME: This is a circular import\nconst JSONSchemaInput_1 = require(\"../input/JSONSchemaInput\");\nfunction addDescriptionToSchema(schema, description) {\n    if (description === undefined)\n        return;\n    schema.description = Array.from(description).join(\"\\n\");\n}\nexports.addDescriptionToSchema = addDescriptionToSchema;\nclass DescriptionTypeAttributeKind extends TypeAttributes_1.TypeAttributeKind {\n    constructor() {\n        super(\"description\");\n    }\n    combine(attrs) {\n        return (0, collection_utils_1.setUnionManyInto)(new Set(), attrs);\n    }\n    makeInferred(_) {\n        return undefined;\n    }\n    addToSchema(schema, _t, attrs) {\n        addDescriptionToSchema(schema, attrs);\n    }\n    stringify(descriptions) {\n        let result = (0, collection_utils_1.iterableFirst)(descriptions);\n        if (result === undefined)\n            return undefined;\n        if (result.length > 5 + 3) {\n            result = `${result.slice(0, 5)}...`;\n        }\n        if (descriptions.size > 1) {\n            result = `${result}, ...`;\n        }\n        return result;\n    }\n}\nexports.descriptionTypeAttributeKind = new DescriptionTypeAttributeKind();\nclass PropertyDescriptionsTypeAttributeKind extends TypeAttributes_1.TypeAttributeKind {\n    constructor() {\n        super(\"propertyDescriptions\");\n    }\n    combine(attrs) {\n        // FIXME: Implement this with mutable sets\n        const result = new Map();\n        for (const attr of attrs) {\n            (0, collection_utils_1.mapMergeWithInto)(result, (sa, sb) => (0, collection_utils_1.setUnion)(sa, sb), attr);\n        }\n        return result;\n    }\n    makeInferred(_) {\n        return undefined;\n    }\n    stringify(propertyDescriptions) {\n        if (propertyDescriptions.size === 0)\n            return undefined;\n        return `prop descs: ${propertyDescriptions.size}`;\n    }\n}\nexports.propertyDescriptionsTypeAttributeKind = new PropertyDescriptionsTypeAttributeKind();\nfunction isPropertiesKey(el) {\n    return el.kind === JSONSchemaInput_1.PathElementKind.KeyOrIndex && el.key === \"properties\";\n}\nfunction descriptionAttributeProducer(schema, ref, types) {\n    if (!(typeof schema === \"object\"))\n        return undefined;\n    let description = TypeAttributes_1.emptyTypeAttributes;\n    let propertyDescription = TypeAttributes_1.emptyTypeAttributes;\n    const pathLength = ref.path.length;\n    if (types.has(\"object\") ||\n        (0, collection_utils_1.setSubtract)(types, [\"null\"]).size > 1 ||\n        schema.enum !== undefined ||\n        pathLength < 2 ||\n        !isPropertiesKey(ref.path[pathLength - 2])) {\n        const maybeDescription = schema.description;\n        if (typeof maybeDescription === \"string\") {\n            description = exports.descriptionTypeAttributeKind.makeAttributes(new Set([maybeDescription]));\n        }\n    }\n    if (types.has(\"object\") && typeof schema.properties === \"object\") {\n        const propertyDescriptions = (0, collection_utils_1.mapFilterMap)((0, collection_utils_1.mapFromObject)(schema.properties), propSchema => {\n            if (typeof propSchema === \"object\") {\n                const desc = propSchema.description;\n                if (typeof desc === \"string\") {\n                    return new Set([desc]);\n                }\n            }\n            return undefined;\n        });\n        if (propertyDescriptions.size > 0) {\n            propertyDescription = exports.propertyDescriptionsTypeAttributeKind.makeAttributes(propertyDescriptions);\n        }\n    }\n    return { forType: description, forObject: propertyDescription };\n}\nexports.descriptionAttributeProducer = descriptionAttributeProducer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.followTargetType = exports.transformationForType = exports.transformationTypeAttributeKind = exports.Transformation = exports.MinMaxValueTransformer = exports.MinMaxLengthCheckTransformer = exports.StringifyTransformer = exports.ParseStringTransformer = exports.StringProducerTransformer = exports.UnionInstantiationTransformer = exports.StringMatchTransformer = exports.UnionMemberMatchTransformer = exports.DecodingChoiceTransformer = exports.ChoiceTransformer = exports.ArrayEncodingTransformer = exports.ArrayDecodingTransformer = exports.EncodingTransformer = exports.DecodingTransformer = exports.MatchTransformer = exports.ProducerTransformer = exports.Transformer = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Type_1 = require(\"./Type\");\nconst TypeAttributes_1 = require(\"./attributes/TypeAttributes\");\nconst Support_1 = require(\"./support/Support\");\nconst TypeGraph_1 = require(\"./TypeGraph\");\nfunction debugStringForType(t) {\n    const target = followTargetType(t);\n    if (t === target) {\n        return t.kind;\n    }\n    return `${t.kind} (${target.kind})`;\n}\nfunction getNumberOfNodes(xfer) {\n    return (0, collection_utils_1.definedMapWithDefault)(xfer, 0, x => x.getNumberOfNodes());\n}\nclass Transformer {\n    constructor(kind, graph, sourceTypeRef) {\n        this.kind = kind;\n        this.graph = graph;\n        this.sourceTypeRef = sourceTypeRef;\n    }\n    get sourceType() {\n        return (0, TypeGraph_1.derefTypeRef)(this.sourceTypeRef, this.graph);\n    }\n    /** This must return a newly constructed set. */\n    getChildren() {\n        return new Set([this.sourceType]);\n    }\n    getNumberOfNodes() {\n        return 1;\n    }\n    equals(other) {\n        if (!(other instanceof Transformer))\n            return false;\n        return this.sourceTypeRef === other.sourceTypeRef;\n    }\n    hashCode() {\n        return (0, collection_utils_1.hashCodeOf)(this.sourceTypeRef);\n    }\n    debugDescription() {\n        return `${debugStringForType(this.sourceType)} -> ${this.kind}`;\n    }\n    debugPrintContinuations(_indent) {\n        return;\n    }\n    debugPrint(indent) {\n        console.log((0, Support_1.indentationString)(indent) + this.debugDescription());\n        this.debugPrintContinuations(indent + 1);\n    }\n}\nexports.Transformer = Transformer;\nclass ProducerTransformer extends Transformer {\n    constructor(kind, graph, sourceTypeRef, consumer) {\n        super(kind, graph, sourceTypeRef);\n        this.consumer = consumer;\n    }\n    getChildren() {\n        const children = super.getChildren();\n        if (this.consumer === undefined)\n            return children;\n        return (0, collection_utils_1.setUnionInto)(children, this.consumer.getChildren());\n    }\n    getNumberOfNodes() {\n        return super.getNumberOfNodes() + getNumberOfNodes(this.consumer);\n    }\n    equals(other) {\n        if (!super.equals(other))\n            return false;\n        if (!(other instanceof ProducerTransformer))\n            return false;\n        return (0, collection_utils_1.areEqual)(this.consumer, other.consumer);\n    }\n    hashCode() {\n        const h = super.hashCode();\n        return (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashCodeOf)(this.consumer));\n    }\n    debugPrintContinuations(indent) {\n        if (this.consumer === undefined)\n            return;\n        this.consumer.debugPrint(indent);\n    }\n}\nexports.ProducerTransformer = ProducerTransformer;\nclass MatchTransformer extends Transformer {\n    constructor(kind, graph, sourceTypeRef, transformer) {\n        super(kind, graph, sourceTypeRef);\n        this.transformer = transformer;\n    }\n    getChildren() {\n        return (0, collection_utils_1.setUnionInto)(super.getChildren(), this.transformer.getChildren());\n    }\n    getNumberOfNodes() {\n        return super.getNumberOfNodes() + this.transformer.getNumberOfNodes();\n    }\n    equals(other) {\n        if (!super.equals(other))\n            return false;\n        if (!(other instanceof MatchTransformer))\n            return false;\n        return this.transformer.equals(other.transformer);\n    }\n    hashCode() {\n        const h = super.hashCode();\n        return (0, collection_utils_1.addHashCode)(h, this.transformer.hashCode());\n    }\n    debugPrintContinuations(indent) {\n        this.transformer.debugPrint(indent);\n    }\n}\nexports.MatchTransformer = MatchTransformer;\nclass DecodingTransformer extends ProducerTransformer {\n    constructor(graph, sourceTypeRef, consumer) {\n        super(\"decode\", graph, sourceTypeRef, consumer);\n    }\n    get canFail() {\n        return false;\n    }\n    reverse(targetTypeRef, continuationTransformer) {\n        if (continuationTransformer !== undefined) {\n            return (0, Support_1.panic)(\"Reversing a decoding transformer cannot have a continuation\");\n        }\n        if (this.consumer === undefined) {\n            return new EncodingTransformer(this.graph, targetTypeRef);\n        }\n        else {\n            return this.consumer.reverse(targetTypeRef, new EncodingTransformer(this.graph, this.consumer.sourceTypeRef));\n        }\n    }\n    reconstitute(builder) {\n        return new DecodingTransformer(builder.typeGraph, builder.reconstituteTypeRef(this.sourceTypeRef), (0, collection_utils_1.definedMap)(this.consumer, xfer => xfer.reconstitute(builder)));\n    }\n    equals(other) {\n        if (!super.equals(other))\n            return false;\n        return other instanceof DecodingTransformer;\n    }\n}\nexports.DecodingTransformer = DecodingTransformer;\nclass EncodingTransformer extends Transformer {\n    constructor(graph, sourceTypeRef) {\n        super(\"encode\", graph, sourceTypeRef);\n    }\n    get canFail() {\n        return false;\n    }\n    reverse(_targetTypeRef, _continuationTransformer) {\n        return (0, Support_1.panic)(\"Can't reverse encoding transformer\");\n    }\n    reconstitute(builder) {\n        return new EncodingTransformer(builder.typeGraph, builder.reconstituteTypeRef(this.sourceTypeRef));\n    }\n    equals(other) {\n        if (!super.equals(other))\n            return false;\n        if (!(other instanceof EncodingTransformer))\n            return false;\n        return true;\n    }\n}\nexports.EncodingTransformer = EncodingTransformer;\nclass ArrayDecodingTransformer extends ProducerTransformer {\n    constructor(graph, sourceTypeRef, consumer, _itemTargetTypeRef, itemTransformer) {\n        super(\"decode-array\", graph, sourceTypeRef, consumer);\n        this._itemTargetTypeRef = _itemTargetTypeRef;\n        this.itemTransformer = itemTransformer;\n    }\n    getChildren() {\n        const children = super.getChildren();\n        children.add(this.itemTargetType);\n        return (0, collection_utils_1.setUnionInto)(children, this.itemTransformer.getChildren());\n    }\n    getNumberOfNodes() {\n        return super.getNumberOfNodes() + this.itemTransformer.getNumberOfNodes();\n    }\n    get canFail() {\n        return false;\n    }\n    get itemTargetType() {\n        return (0, TypeGraph_1.derefTypeRef)(this._itemTargetTypeRef, this.graph);\n    }\n    reverse(targetTypeRef, continuationTransformer) {\n        if (continuationTransformer !== undefined) {\n            return (0, Support_1.panic)(\"Reversing a decoding transformer cannot have a continuation\");\n        }\n        const itemTransformer = this.itemTransformer.reverse(this._itemTargetTypeRef, undefined);\n        if (this.consumer === undefined) {\n            return new ArrayEncodingTransformer(this.graph, targetTypeRef, this.itemTransformer.sourceTypeRef, itemTransformer);\n        }\n        else {\n            return this.consumer.reverse(targetTypeRef, new ArrayEncodingTransformer(this.graph, this.consumer.sourceTypeRef, this.itemTransformer.sourceTypeRef, itemTransformer));\n        }\n    }\n    reconstitute(builder) {\n        return new ArrayDecodingTransformer(builder.typeGraph, builder.reconstituteTypeRef(this.sourceTypeRef), (0, collection_utils_1.definedMap)(this.consumer, xfer => xfer.reconstitute(builder)), builder.reconstituteTypeRef(this._itemTargetTypeRef), this.itemTransformer.reconstitute(builder));\n    }\n    hashCode() {\n        let h = super.hashCode();\n        h = (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashCodeOf)(this._itemTargetTypeRef));\n        h = (0, collection_utils_1.addHashCode)(h, this.itemTransformer.hashCode());\n        return h;\n    }\n    equals(other) {\n        if (!super.equals(other))\n            return false;\n        if (!(other instanceof ArrayDecodingTransformer))\n            return false;\n        if (!(0, collection_utils_1.areEqual)(this._itemTargetTypeRef, other._itemTargetTypeRef))\n            return false;\n        return this.itemTransformer.equals(other.itemTransformer);\n    }\n    debugPrintContinuations(indent) {\n        this.itemTransformer.debugPrint(indent);\n        super.debugPrintContinuations(indent);\n    }\n}\nexports.ArrayDecodingTransformer = ArrayDecodingTransformer;\nclass ArrayEncodingTransformer extends Transformer {\n    constructor(graph, sourceTypeRef, _itemTargetTypeRef, itemTransformer) {\n        super(\"encode-array\", graph, sourceTypeRef);\n        this._itemTargetTypeRef = _itemTargetTypeRef;\n        this.itemTransformer = itemTransformer;\n    }\n    getChildren() {\n        const children = super.getChildren();\n        children.add(this.itemTargetType);\n        return (0, collection_utils_1.setUnionInto)(children, this.itemTransformer.getChildren());\n    }\n    getNumberOfNodes() {\n        return super.getNumberOfNodes() + this.itemTransformer.getNumberOfNodes();\n    }\n    get canFail() {\n        return false;\n    }\n    get itemTargetType() {\n        return (0, TypeGraph_1.derefTypeRef)(this._itemTargetTypeRef, this.graph);\n    }\n    reverse(_targetTypeRef, _continuationTransformer) {\n        return (0, Support_1.panic)(\"Can't reverse array encoding transformer\");\n    }\n    reconstitute(builder) {\n        return new ArrayEncodingTransformer(builder.typeGraph, builder.reconstituteTypeRef(this.sourceTypeRef), builder.reconstituteTypeRef(this._itemTargetTypeRef), this.itemTransformer.reconstitute(builder));\n    }\n    hashCode() {\n        let h = super.hashCode();\n        h = (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashCodeOf)(this._itemTargetTypeRef));\n        return (0, collection_utils_1.addHashCode)(h, this.itemTransformer.hashCode());\n    }\n    equals(other) {\n        if (!super.equals(other))\n            return false;\n        if (!(other instanceof ArrayEncodingTransformer))\n            return false;\n        if (!(0, collection_utils_1.areEqual)(this._itemTargetTypeRef, other._itemTargetTypeRef))\n            return false;\n        return this.itemTransformer.equals(other.itemTransformer);\n    }\n    debugPrintContinuations(indent) {\n        this.itemTransformer.debugPrint(indent);\n        super.debugPrintContinuations(indent);\n    }\n}\nexports.ArrayEncodingTransformer = ArrayEncodingTransformer;\nclass ChoiceTransformer extends Transformer {\n    constructor(graph, sourceTypeRef, transformers) {\n        super(\"choice\", graph, sourceTypeRef);\n        this.transformers = transformers;\n        (0, Support_1.assert)(transformers.length > 0, \"Choice must have at least one transformer\");\n    }\n    getChildren() {\n        let children = super.getChildren();\n        for (const xfer of this.transformers) {\n            (0, collection_utils_1.setUnionInto)(children, xfer.getChildren());\n        }\n        return children;\n    }\n    getNumberOfNodes() {\n        let n = 0;\n        for (const xfer of this.transformers) {\n            n += xfer.getNumberOfNodes();\n        }\n        return super.getNumberOfNodes() + n;\n    }\n    get canFail() {\n        return this.transformers.some(xfer => xfer.canFail);\n    }\n    reverse(targetTypeRef, continuationTransformer) {\n        const transformers = this.transformers.map(xfer => xfer.reverse(targetTypeRef, continuationTransformer));\n        if (transformers.every(xfer => xfer instanceof UnionMemberMatchTransformer)) {\n            const memberMatchers = transformers;\n            const first = memberMatchers[0];\n            if (memberMatchers.every(xfer => first.memberType.equals(xfer.memberType))) {\n                const subTransformers = memberMatchers.map(xfer => xfer.transformer);\n                return new UnionMemberMatchTransformer(this.graph, targetTypeRef, new ChoiceTransformer(this.graph, subTransformers[0].sourceTypeRef, subTransformers), first.memberTypeRef);\n            }\n        }\n        return new ChoiceTransformer(this.graph, targetTypeRef, transformers);\n    }\n    reconstitute(builder) {\n        return new ChoiceTransformer(builder.typeGraph, builder.reconstituteTypeRef(this.sourceTypeRef), this.transformers.map(xfer => xfer.reconstitute(builder)));\n    }\n    equals(other) {\n        if (!super.equals(other))\n            return false;\n        if (!(other instanceof ChoiceTransformer))\n            return false;\n        return (0, collection_utils_1.areEqual)(this.transformers, other.transformers);\n    }\n    hashCode() {\n        const h = super.hashCode();\n        return (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashCodeOf)(this.transformers));\n    }\n    debugPrintContinuations(indent) {\n        for (const xfer of this.transformers) {\n            xfer.debugPrint(indent);\n        }\n    }\n}\nexports.ChoiceTransformer = ChoiceTransformer;\nclass DecodingChoiceTransformer extends Transformer {\n    constructor(graph, sourceTypeRef, nullTransformer, integerTransformer, doubleTransformer, boolTransformer, stringTransformer, arrayTransformer, objectTransformer) {\n        super(\"decoding-choice\", graph, sourceTypeRef);\n        this.nullTransformer = nullTransformer;\n        this.integerTransformer = integerTransformer;\n        this.doubleTransformer = doubleTransformer;\n        this.boolTransformer = boolTransformer;\n        this.stringTransformer = stringTransformer;\n        this.arrayTransformer = arrayTransformer;\n        this.objectTransformer = objectTransformer;\n    }\n    get transformers() {\n        const transformers = [];\n        function add(xfer) {\n            if (xfer === undefined)\n                return;\n            transformers.push(xfer);\n        }\n        add(this.nullTransformer);\n        add(this.integerTransformer);\n        add(this.doubleTransformer);\n        add(this.boolTransformer);\n        add(this.stringTransformer);\n        add(this.arrayTransformer);\n        add(this.objectTransformer);\n        return transformers;\n    }\n    getChildren() {\n        let children = super.getChildren();\n        for (const xfer of this.transformers) {\n            (0, collection_utils_1.setUnionInto)(children, xfer.getChildren());\n        }\n        return children;\n    }\n    getNumberOfNodes() {\n        let n = super.getNumberOfNodes();\n        for (const xfer of this.transformers) {\n            n += getNumberOfNodes(xfer);\n        }\n        return n;\n    }\n    get canFail() {\n        return false;\n    }\n    reverse(targetTypeRef, continuationTransformer) {\n        (0, Support_1.assert)(continuationTransformer === undefined, \"Reversing a decoding transformer can't have a target transformer\");\n        let transformers = new Map();\n        let memberMatchTransformers = new Map();\n        function addCase(reversed) {\n            if (reversed instanceof UnionMemberMatchTransformer) {\n                const memberType = reversed.memberType;\n                let arr = memberMatchTransformers.get(memberType);\n                if (arr === undefined) {\n                    arr = [];\n                    memberMatchTransformers.set(memberType, arr);\n                }\n                arr.push(reversed);\n            }\n            else {\n                const kind = reversed.sourceType.kind;\n                let arr = transformers.get(kind);\n                if (arr === undefined) {\n                    arr = [];\n                    transformers.set(kind, arr);\n                }\n                arr.push(reversed);\n            }\n        }\n        function reverseAndAdd(transformer) {\n            const reversed = transformer.reverse(targetTypeRef, undefined);\n            let cases = [];\n            // Flatten nested ChoiceTransformers\n            if (reversed instanceof ChoiceTransformer) {\n                cases = reversed.transformers;\n            }\n            else {\n                cases = [reversed];\n            }\n            for (const xfer of cases) {\n                addCase(xfer);\n            }\n        }\n        // FIXME: Actually, keep all the failing transformers and put them first, then\n        // finally do the simplest non-failing one.  Actually actually, maybe not, since\n        // we're reversing to encode?  What's a case where this would be useful?\n        // If there are non-failing transformers, we ignore the ones that can fail and\n        // just pick the \"simplest\" non-failing one, being the one with the least number\n        // of nodes.\n        function filter(xfers) {\n            (0, Support_1.assert)(xfers.length > 0, \"Must have at least one transformer\");\n            const nonfailing = xfers.filter(xfer => {\n                // For member match transformers we're deciding between\n                // multiple that match against the same member, so the fact\n                // that the match can fail is not important, since if it fails\n                // it will fail for all candidates.  The question is whether\n                // its continuation can fail.\n                if (xfer instanceof UnionMemberMatchTransformer) {\n                    return !xfer.transformer.canFail;\n                }\n                else {\n                    return !xfer.canFail;\n                }\n            });\n            if (nonfailing.length === 0)\n                return xfers;\n            const smallest = (0, collection_utils_1.arraySortByInto)(nonfailing.map(x => [x.getNumberOfNodes(), x]), ([c, _]) => c)[0][1];\n            return [smallest];\n        }\n        this.transformers.forEach(reverseAndAdd);\n        const allTransformers = Array.from(transformers.values()).concat(Array.from(memberMatchTransformers.values()));\n        const resultingTransformers = [].concat(...allTransformers.map(filter));\n        // No choice needed if there's only one\n        if (resultingTransformers.length === 1) {\n            return resultingTransformers[0];\n        }\n        return new ChoiceTransformer(this.graph, targetTypeRef, resultingTransformers);\n    }\n    reconstitute(builder) {\n        function reconstitute(xf) {\n            if (xf === undefined)\n                return undefined;\n            return xf.reconstitute(builder);\n        }\n        return new DecodingChoiceTransformer(builder.typeGraph, builder.reconstituteTypeRef(this.sourceTypeRef), reconstitute(this.nullTransformer), reconstitute(this.integerTransformer), reconstitute(this.doubleTransformer), reconstitute(this.boolTransformer), reconstitute(this.stringTransformer), reconstitute(this.arrayTransformer), reconstitute(this.objectTransformer));\n    }\n    equals(other) {\n        if (!super.equals(other))\n            return false;\n        if (!(other instanceof DecodingChoiceTransformer))\n            return false;\n        if (!(0, collection_utils_1.areEqual)(this.nullTransformer, other.nullTransformer))\n            return false;\n        if (!(0, collection_utils_1.areEqual)(this.integerTransformer, other.integerTransformer))\n            return false;\n        if (!(0, collection_utils_1.areEqual)(this.doubleTransformer, other.doubleTransformer))\n            return false;\n        if (!(0, collection_utils_1.areEqual)(this.boolTransformer, other.boolTransformer))\n            return false;\n        if (!(0, collection_utils_1.areEqual)(this.stringTransformer, other.stringTransformer))\n            return false;\n        if (!(0, collection_utils_1.areEqual)(this.arrayTransformer, other.arrayTransformer))\n            return false;\n        if (!(0, collection_utils_1.areEqual)(this.objectTransformer, other.objectTransformer))\n            return false;\n        return true;\n    }\n    hashCode() {\n        let h = super.hashCode();\n        h = (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashCodeOf)(this.nullTransformer));\n        h = (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashCodeOf)(this.integerTransformer));\n        h = (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashCodeOf)(this.doubleTransformer));\n        h = (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashCodeOf)(this.boolTransformer));\n        h = (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashCodeOf)(this.stringTransformer));\n        h = (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashCodeOf)(this.arrayTransformer));\n        h = (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashCodeOf)(this.objectTransformer));\n        return h;\n    }\n    debugPrintContinuations(indent) {\n        for (const xfer of this.transformers) {\n            xfer.debugPrint(indent);\n        }\n    }\n}\nexports.DecodingChoiceTransformer = DecodingChoiceTransformer;\nclass UnionMemberMatchTransformer extends MatchTransformer {\n    constructor(graph, sourceTypeRef, transformer, memberTypeRef) {\n        super(\"union-member-match\", graph, sourceTypeRef, transformer);\n        this.memberTypeRef = memberTypeRef;\n    }\n    get sourceType() {\n        const t = (0, TypeGraph_1.derefTypeRef)(this.sourceTypeRef, this.graph);\n        if (!(t instanceof Type_1.UnionType)) {\n            return (0, Support_1.panic)(\"The source of a union member match transformer must be a union type\");\n        }\n        return t;\n    }\n    get canFail() {\n        return true;\n    }\n    get memberType() {\n        return (0, TypeGraph_1.derefTypeRef)(this.memberTypeRef, this.graph);\n    }\n    getChildren() {\n        return super.getChildren().add(this.memberType);\n    }\n    reverse(_targetTypeRef, _continuationTransformer) {\n        return (0, Support_1.panic)(\"Can't reverse union member match transformer\");\n    }\n    reconstitute(builder) {\n        return new UnionMemberMatchTransformer(builder.typeGraph, builder.reconstituteTypeRef(this.sourceTypeRef), this.transformer.reconstitute(builder), builder.reconstituteTypeRef(this.memberTypeRef));\n    }\n    equals(other) {\n        if (!super.equals(other))\n            return false;\n        if (!(other instanceof UnionMemberMatchTransformer))\n            return false;\n        return this.memberTypeRef === other.memberTypeRef;\n    }\n    hashCode() {\n        const h = super.hashCode();\n        return (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashCodeOf)(this.memberTypeRef));\n    }\n    debugDescription() {\n        return `${super.debugDescription()} - member: ${debugStringForType(this.memberType)}`;\n    }\n}\nexports.UnionMemberMatchTransformer = UnionMemberMatchTransformer;\n/**\n * This matches strings and enum cases.\n */\nclass StringMatchTransformer extends MatchTransformer {\n    constructor(graph, sourceTypeRef, transformer, stringCase) {\n        super(\"string-match\", graph, sourceTypeRef, transformer);\n        this.stringCase = stringCase;\n    }\n    get sourceType() {\n        const t = (0, TypeGraph_1.derefTypeRef)(this.sourceTypeRef, this.graph);\n        if (!(t instanceof Type_1.EnumType) && !(t instanceof Type_1.PrimitiveType && t.kind === \"string\")) {\n            return (0, Support_1.panic)(\"The source of a string match transformer must be an enum or string type\");\n        }\n        return t;\n    }\n    get canFail() {\n        return true;\n    }\n    reverse(targetTypeRef, continuationTransformer) {\n        return this.transformer.reverse(targetTypeRef, new StringProducerTransformer(this.graph, this.transformer.sourceTypeRef, continuationTransformer, this.stringCase));\n    }\n    reconstitute(builder) {\n        return new StringMatchTransformer(builder.typeGraph, builder.reconstituteTypeRef(this.sourceTypeRef), this.transformer.reconstitute(builder), this.stringCase);\n    }\n    equals(other) {\n        if (!super.equals(other))\n            return false;\n        if (!(other instanceof StringMatchTransformer))\n            return false;\n        return this.stringCase !== other.stringCase;\n    }\n    hashCode() {\n        const h = super.hashCode();\n        return (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashString)(this.stringCase));\n    }\n    debugDescription() {\n        return `${super.debugDescription()} - case: ${this.stringCase}`;\n    }\n}\nexports.StringMatchTransformer = StringMatchTransformer;\nclass UnionInstantiationTransformer extends Transformer {\n    constructor(graph, sourceTypeRef) {\n        super(\"union-instantiation\", graph, sourceTypeRef);\n    }\n    get canFail() {\n        return false;\n    }\n    reverse(targetTypeRef, continuationTransformer) {\n        if (continuationTransformer === undefined) {\n            return (0, Support_1.panic)(\"Union instantiation transformer reverse must have a continuation\");\n        }\n        return new UnionMemberMatchTransformer(this.graph, targetTypeRef, continuationTransformer, this.sourceTypeRef);\n    }\n    reconstitute(builder) {\n        return new UnionInstantiationTransformer(builder.typeGraph, builder.reconstituteTypeRef(this.sourceTypeRef));\n    }\n    equals(other) {\n        if (!super.equals(other))\n            return false;\n        return other instanceof UnionInstantiationTransformer;\n    }\n}\nexports.UnionInstantiationTransformer = UnionInstantiationTransformer;\n/**\n * Produces a string or an enum case.\n */\nclass StringProducerTransformer extends ProducerTransformer {\n    constructor(graph, sourceTypeRef, consumer, result) {\n        super(\"string-producer\", graph, sourceTypeRef, consumer);\n        this.result = result;\n    }\n    get canFail() {\n        return false;\n    }\n    reverse(targetTypeRef, continuationTransformer) {\n        if (continuationTransformer === undefined) {\n            return (0, Support_1.panic)(\"Reversing a string producer transformer must have a continuation\");\n        }\n        if (this.consumer === undefined) {\n            return new StringMatchTransformer(this.graph, targetTypeRef, continuationTransformer, this.result);\n        }\n        else {\n            return this.consumer.reverse(targetTypeRef, new StringMatchTransformer(this.graph, this.consumer.sourceTypeRef, continuationTransformer, this.result));\n        }\n    }\n    reconstitute(builder) {\n        return new StringProducerTransformer(builder.typeGraph, builder.reconstituteTypeRef(this.sourceTypeRef), (0, collection_utils_1.definedMap)(this.consumer, xfer => xfer.reconstitute(builder)), this.result);\n    }\n    equals(other) {\n        if (!super.equals(other))\n            return false;\n        if (!(other instanceof StringProducerTransformer))\n            return false;\n        return this.result === other.result;\n    }\n    hashCode() {\n        const h = super.hashCode();\n        return (0, collection_utils_1.addHashCode)(h, (0, collection_utils_1.hashCodeOf)(this.consumer));\n    }\n    debugDescription() {\n        return `${super.debugDescription()} - result: ${this.result}`;\n    }\n}\nexports.StringProducerTransformer = StringProducerTransformer;\nclass ParseStringTransformer extends ProducerTransformer {\n    constructor(graph, sourceTypeRef, consumer) {\n        super(\"parse-string\", graph, sourceTypeRef, consumer);\n    }\n    get canFail() {\n        return true;\n    }\n    reverse(targetTypeRef, continuationTransformer) {\n        if (this.consumer === undefined) {\n            return new StringifyTransformer(this.graph, targetTypeRef, continuationTransformer);\n        }\n        else {\n            return this.consumer.reverse(targetTypeRef, new StringifyTransformer(this.graph, this.consumer.sourceTypeRef, continuationTransformer));\n        }\n    }\n    reconstitute(builder) {\n        return new ParseStringTransformer(builder.typeGraph, builder.reconstituteTypeRef(this.sourceTypeRef), (0, collection_utils_1.definedMap)(this.consumer, xfer => xfer.reconstitute(builder)));\n    }\n    equals(other) {\n        if (!super.equals(other))\n            return false;\n        return other instanceof ParseStringTransformer;\n    }\n}\nexports.ParseStringTransformer = ParseStringTransformer;\nclass StringifyTransformer extends ProducerTransformer {\n    constructor(graph, sourceTypeRef, consumer) {\n        super(\"stringify\", graph, sourceTypeRef, consumer);\n    }\n    get canFail() {\n        return false;\n    }\n    reverse(targetTypeRef, continuationTransformer) {\n        if (this.consumer === undefined) {\n            return new ParseStringTransformer(this.graph, targetTypeRef, continuationTransformer);\n        }\n        else {\n            return this.consumer.reverse(targetTypeRef, new ParseStringTransformer(this.graph, this.consumer.sourceTypeRef, continuationTransformer));\n        }\n    }\n    reconstitute(builder) {\n        return new StringifyTransformer(builder.typeGraph, builder.reconstituteTypeRef(this.sourceTypeRef), (0, collection_utils_1.definedMap)(this.consumer, xfer => xfer.reconstitute(builder)));\n    }\n    equals(other) {\n        if (!super.equals(other))\n            return false;\n        return other instanceof StringifyTransformer;\n    }\n}\nexports.StringifyTransformer = StringifyTransformer;\nclass MinMaxLengthCheckTransformer extends ProducerTransformer {\n    constructor(graph, sourceTypeRef, consumer, minLength, maxLength) {\n        super(\"min-max-length-check\", graph, sourceTypeRef, consumer);\n        this.minLength = minLength;\n        this.maxLength = maxLength;\n    }\n    get canFail() {\n        return true;\n    }\n    reverse(targetTypeRef, continuationTransformer) {\n        if (this.consumer === undefined) {\n            return new MinMaxLengthCheckTransformer(this.graph, targetTypeRef, continuationTransformer, this.minLength, this.maxLength);\n        }\n        else {\n            return this.consumer.reverse(targetTypeRef, new MinMaxLengthCheckTransformer(this.graph, this.consumer.sourceTypeRef, continuationTransformer, this.minLength, this.maxLength));\n        }\n    }\n    reconstitute(builder) {\n        return new MinMaxLengthCheckTransformer(builder.typeGraph, builder.reconstituteTypeRef(this.sourceTypeRef), (0, collection_utils_1.definedMap)(this.consumer, xfer => xfer.reconstitute(builder)), this.minLength, this.maxLength);\n    }\n    equals(other) {\n        if (!super.equals(other))\n            return false;\n        return (other instanceof MinMaxLengthCheckTransformer &&\n            this.minLength === other.minLength &&\n            this.maxLength === other.maxLength);\n    }\n}\nexports.MinMaxLengthCheckTransformer = MinMaxLengthCheckTransformer;\nclass MinMaxValueTransformer extends ProducerTransformer {\n    constructor(graph, sourceTypeRef, consumer, minimum, maximum) {\n        super(\"min-max-value-check\", graph, sourceTypeRef, consumer);\n        this.minimum = minimum;\n        this.maximum = maximum;\n    }\n    get canFail() {\n        return true;\n    }\n    reverse(targetTypeRef, continuationTransformer) {\n        if (this.consumer === undefined) {\n            return new MinMaxValueTransformer(this.graph, targetTypeRef, continuationTransformer, this.minimum, this.maximum);\n        }\n        else {\n            return this.consumer.reverse(targetTypeRef, new MinMaxValueTransformer(this.graph, this.consumer.sourceTypeRef, continuationTransformer, this.minimum, this.maximum));\n        }\n    }\n    reconstitute(builder) {\n        return new MinMaxValueTransformer(builder.typeGraph, builder.reconstituteTypeRef(this.sourceTypeRef), (0, collection_utils_1.definedMap)(this.consumer, xfer => xfer.reconstitute(builder)), this.minimum, this.maximum);\n    }\n    equals(other) {\n        if (!super.equals(other))\n            return false;\n        return (other instanceof MinMaxValueTransformer && this.minimum === other.minimum && this.maximum === other.maximum);\n    }\n}\nexports.MinMaxValueTransformer = MinMaxValueTransformer;\nclass Transformation {\n    constructor(_graph, _targetTypeRef, transformer) {\n        this._graph = _graph;\n        this._targetTypeRef = _targetTypeRef;\n        this.transformer = transformer;\n    }\n    get sourceType() {\n        return this.transformer.sourceType;\n    }\n    get targetType() {\n        return (0, TypeGraph_1.derefTypeRef)(this._targetTypeRef, this._graph);\n    }\n    get reverse() {\n        return new Transformation(this._graph, this.transformer.sourceTypeRef, this.transformer.reverse(this._targetTypeRef, undefined));\n    }\n    getChildren() {\n        return this.transformer.getChildren().add(this.targetType);\n    }\n    reconstitute(builder) {\n        return new Transformation(builder.typeGraph, builder.reconstituteTypeRef(this._targetTypeRef), this.transformer.reconstitute(builder));\n    }\n    equals(other) {\n        if (!(other instanceof Transformation))\n            return false;\n        return this._targetTypeRef === other._targetTypeRef && this.transformer.equals(other.transformer);\n    }\n    hashCode() {\n        let h = (0, collection_utils_1.hashCodeOf)(this._targetTypeRef);\n        h = (0, collection_utils_1.addHashCode)(h, this.transformer.hashCode());\n        return h;\n    }\n    debugPrint() {\n        this.transformer.debugPrint(0);\n        console.log(`-> ${debugStringForType(this.targetType)}`);\n    }\n}\nexports.Transformation = Transformation;\nclass TransformationTypeAttributeKind extends TypeAttributes_1.TypeAttributeKind {\n    constructor() {\n        super(\"transformation\");\n    }\n    appliesToTypeKind(_kind) {\n        return true;\n    }\n    get inIdentity() {\n        return true;\n    }\n    children(xf) {\n        return xf.getChildren();\n    }\n    reconstitute(builder, xf) {\n        return xf.reconstitute(builder);\n    }\n    stringify(_) {\n        return \"transformation\";\n    }\n}\nexports.transformationTypeAttributeKind = new TransformationTypeAttributeKind();\nfunction transformationForType(t) {\n    return exports.transformationTypeAttributeKind.tryGetInAttributes(t.getAttributes());\n}\nexports.transformationForType = transformationForType;\nfunction followTargetType(t) {\n    for (;;) {\n        const xf = transformationForType(t);\n        if (xf === undefined)\n            return t;\n        t = xf.targetType;\n    }\n}\nexports.followTargetType = followTargetType;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isStringComment = void 0;\nconst isStringComment = (comment) => {\n    return typeof comment === \"string\";\n};\nexports.isStringComment = isStringComment;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConvenienceRenderer = exports.inferredNameOrder = exports.topLevelNameOrder = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Type_1 = require(\"./Type\");\nconst TypeUtils_1 = require(\"./TypeUtils\");\nconst Naming_1 = require(\"./Naming\");\nconst Renderer_1 = require(\"./Renderer\");\nconst Support_1 = require(\"./support/Support\");\nconst Strings_1 = require(\"./support/Strings\");\nconst Source_1 = require(\"./Source\");\nconst DeclarationIR_1 = require(\"./DeclarationIR\");\nconst TypeGraph_1 = require(\"./TypeGraph\");\nconst TypeAttributes_1 = require(\"./attributes/TypeAttributes\");\nconst Description_1 = require(\"./attributes/Description\");\nconst AccessorNames_1 = require(\"./attributes/AccessorNames\");\nconst Transformers_1 = require(\"./Transformers\");\nconst Comments_1 = require(\"./support/Comments\");\nconst wordWrap = require(\"wordwrap\")(90);\nexports.topLevelNameOrder = 1;\nconst givenNameOrder = 10;\nexports.inferredNameOrder = 30;\nconst classPropertyNameOrder = 20;\nconst assignedClassPropertyNameOrder = 10;\nconst enumCaseNameOrder = 20;\nconst assignedEnumCaseNameOrder = 10;\nconst unionMemberNameOrder = 40;\nfunction splitDescription(descriptions) {\n    if (descriptions === undefined)\n        return undefined;\n    const description = Array.from(descriptions).join(\"\\n\\n\").trim();\n    if (description === \"\")\n        return undefined;\n    return wordWrap(description)\n        .split(\"\\n\")\n        .map(l => l.trim());\n}\nconst assignedNameAttributeKind = new TypeAttributes_1.TypeAttributeKind(\"assignedName\");\nconst assignedPropertyNamesAttributeKind = new TypeAttributes_1.TypeAttributeKind(\"assignedPropertyNames\");\nconst assignedMemberNamesAttributeKind = new TypeAttributes_1.TypeAttributeKind(\"assignedMemberNames\");\nconst assignedCaseNamesAttributeKind = new TypeAttributes_1.TypeAttributeKind(\"assignedCaseNames\");\nclass ConvenienceRenderer extends Renderer_1.Renderer {\n    constructor(targetLanguage, renderContext) {\n        super(targetLanguage, renderContext);\n        this._alphabetizeProperties = false;\n    }\n    get topLevels() {\n        return this.typeGraph.topLevels;\n    }\n    /**\n     * Return an array of strings which are not allowed as names in the global\n     * namespace.  Since names of generated types are in the global namespace,\n     * this will include anything built into the language or default libraries\n     * that can conflict with that, such as reserved keywords or common type\n     * names.\n     */\n    forbiddenNamesForGlobalNamespace() {\n        return [];\n    }\n    /**\n     * Returns which names are forbidden for the property names of an object\n     * type.  `names` can contain strings as well as `Name`s.  In some\n     * languages, the class name can't be used as the name for a property, for\n     * example, in which case `_className` would have to be return in `names`.\n     * If `includeGlobalForbidden` is set, then all names that are forbidden\n     * in the global namespace will also be forbidden for the properties.\n     * Note: That doesn't mean that the names in the global namespace will be\n     * forbidden, too!\n     */\n    forbiddenForObjectProperties(_o, _className) {\n        return { names: [], includeGlobalForbidden: false };\n    }\n    forbiddenForUnionMembers(_u, _unionName) {\n        return { names: [], includeGlobalForbidden: false };\n    }\n    forbiddenForEnumCases(_e, _enumName) {\n        return { names: [], includeGlobalForbidden: false };\n    }\n    makeTopLevelDependencyNames(_t, _topLevelName) {\n        return [];\n    }\n    makeNamedTypeDependencyNames(_t, _name) {\n        return [];\n    }\n    makeNameForTransformation(_xf, _typeName) {\n        return undefined;\n    }\n    namedTypeToNameForTopLevel(type) {\n        if ((0, TypeUtils_1.isNamedType)(type)) {\n            return type;\n        }\n        return undefined;\n    }\n    get unionMembersInGlobalNamespace() {\n        return false;\n    }\n    get enumCasesInGlobalNamespace() {\n        return false;\n    }\n    get needsTypeDeclarationBeforeUse() {\n        return false;\n    }\n    canBeForwardDeclared(_t) {\n        return (0, Support_1.panic)(\"If needsTypeDeclarationBeforeUse returns true, canBeForwardDeclared must be implemented\");\n    }\n    unionNeedsName(u) {\n        return (0, TypeUtils_1.nullableFromUnion)(u) === null;\n    }\n    get globalNamespace() {\n        return (0, Support_1.defined)(this._globalNamespace);\n    }\n    get nameStoreView() {\n        return (0, Support_1.defined)(this._nameStoreView);\n    }\n    descriptionForType(t) {\n        let description = this.typeGraph.attributeStore.tryGet(Description_1.descriptionTypeAttributeKind, t);\n        return splitDescription(description);\n    }\n    descriptionForClassProperty(o, name) {\n        const descriptions = this.typeGraph.attributeStore.tryGet(Description_1.propertyDescriptionsTypeAttributeKind, o);\n        if (descriptions === undefined)\n            return undefined;\n        return splitDescription(descriptions.get(name));\n    }\n    setUpNaming() {\n        this._nameStoreView = new TypeGraph_1.TypeAttributeStoreView(this.typeGraph.attributeStore, assignedNameAttributeKind);\n        this._propertyNamesStoreView = new TypeGraph_1.TypeAttributeStoreView(this.typeGraph.attributeStore, assignedPropertyNamesAttributeKind);\n        this._memberNamesStoreView = new TypeGraph_1.TypeAttributeStoreView(this.typeGraph.attributeStore, assignedMemberNamesAttributeKind);\n        this._caseNamesStoreView = new TypeGraph_1.TypeAttributeStoreView(this.typeGraph.attributeStore, assignedCaseNamesAttributeKind);\n        this._namesForTransformations = new Map();\n        this._namedTypeNamer = this.makeNamedTypeNamer();\n        this._unionMemberNamer = this.makeUnionMemberNamer();\n        this._enumCaseNamer = this.makeEnumCaseNamer();\n        this._globalForbiddenNamespace = (0, Naming_1.keywordNamespace)(\"forbidden\", this.forbiddenNamesForGlobalNamespace());\n        this._otherForbiddenNamespaces = new Map();\n        this._globalNamespace = new Naming_1.Namespace(\"global\", undefined, [this._globalForbiddenNamespace], []);\n        const { objects, enums, unions } = this.typeGraph.allNamedTypesSeparated();\n        const namedUnions = (0, collection_utils_1.setFilter)(unions, u => this.unionNeedsName(u));\n        for (const [name, t] of this.topLevels) {\n            this.nameStoreView.setForTopLevel(name, this.addNameForTopLevel(t, name));\n        }\n        for (const o of objects) {\n            const name = this.addNameForNamedType(o);\n            this.addPropertyNames(o, name);\n        }\n        for (const e of enums) {\n            const name = this.addNameForNamedType(e);\n            this.addEnumCaseNames(e, name);\n        }\n        for (const u of namedUnions) {\n            const name = this.addNameForNamedType(u);\n            this.addUnionMemberNames(u, name);\n        }\n        for (const t of this.typeGraph.allTypesUnordered()) {\n            this.addNameForTransformation(t);\n        }\n        return (0, collection_utils_1.setUnion)([this._globalForbiddenNamespace, this._globalNamespace], this._otherForbiddenNamespaces.values());\n    }\n    addDependenciesForNamedType(type, named) {\n        const dependencyNames = this.makeNamedTypeDependencyNames(type, named);\n        for (const dn of dependencyNames) {\n            this.globalNamespace.add(dn);\n        }\n    }\n    makeNameForTopLevel(_t, givenName, _maybeNamedType) {\n        return new Naming_1.SimpleName([givenName], (0, Support_1.defined)(this._namedTypeNamer), exports.topLevelNameOrder);\n    }\n    addNameForTopLevel(type, givenName) {\n        const maybeNamedType = this.namedTypeToNameForTopLevel(type);\n        const name = this.makeNameForTopLevel(type, givenName, maybeNamedType);\n        this.globalNamespace.add(name);\n        const dependencyNames = this.makeTopLevelDependencyNames(type, name);\n        for (const dn of dependencyNames) {\n            this.globalNamespace.add(dn);\n        }\n        if (maybeNamedType !== undefined) {\n            this.addDependenciesForNamedType(maybeNamedType, name);\n            this.nameStoreView.set(maybeNamedType, name);\n        }\n        return name;\n    }\n    makeNameForType(t, namer, givenOrder, inferredOrder) {\n        const names = t.getNames();\n        const order = names.areInferred ? inferredOrder : givenOrder;\n        return new Naming_1.SimpleName(names.proposedNames, namer, order);\n    }\n    makeNameForNamedType(t) {\n        return this.makeNameForType(t, (0, Support_1.defined)(this._namedTypeNamer), givenNameOrder, exports.inferredNameOrder);\n    }\n    addNameForNamedType(type) {\n        const existing = this.nameStoreView.tryGet(type);\n        if (existing !== undefined)\n            return existing;\n        const name = this.globalNamespace.add(this.makeNameForNamedType(type));\n        this.addDependenciesForNamedType(type, name);\n        this.nameStoreView.set(type, name);\n        return name;\n    }\n    get typesWithNamedTransformations() {\n        return (0, Support_1.defined)(this._namesForTransformations);\n    }\n    nameForTransformation(t) {\n        const xf = (0, Transformers_1.transformationForType)(t);\n        if (xf === undefined)\n            return undefined;\n        const name = (0, Support_1.defined)(this._namesForTransformations).get(t);\n        if (name === undefined) {\n            return (0, Support_1.panic)(\"No name for transformation\");\n        }\n        return name;\n    }\n    addNameForTransformation(t) {\n        const xf = (0, Transformers_1.transformationForType)(t);\n        if (xf === undefined)\n            return;\n        (0, Support_1.assert)((0, Support_1.defined)(this._namesForTransformations).get(t) === undefined, \"Tried to give two names to the same transformation\");\n        const name = this.makeNameForTransformation(xf, this.nameStoreView.tryGet(xf.targetType));\n        if (name === undefined)\n            return;\n        this.globalNamespace.add(name);\n        (0, Support_1.defined)(this._namesForTransformations).set(t, name);\n    }\n    processForbiddenWordsInfo(info, namespaceName) {\n        const forbiddenNames = [];\n        const forbiddenStrings = [];\n        for (const nameOrString of info.names) {\n            if (typeof nameOrString === \"string\") {\n                forbiddenStrings.push(nameOrString);\n            }\n            else {\n                forbiddenNames.push(nameOrString);\n            }\n        }\n        let namespace = (0, Support_1.defined)(this._otherForbiddenNamespaces).get(namespaceName);\n        if (forbiddenStrings.length > 0 && namespace === undefined) {\n            namespace = (0, Naming_1.keywordNamespace)(namespaceName, forbiddenStrings);\n            this._otherForbiddenNamespaces = (0, Support_1.defined)(this._otherForbiddenNamespaces).set(namespaceName, namespace);\n        }\n        let forbiddenNamespaces = new Set();\n        if (info.includeGlobalForbidden) {\n            forbiddenNamespaces = forbiddenNamespaces.add((0, Support_1.defined)(this._globalForbiddenNamespace));\n        }\n        if (namespace !== undefined) {\n            forbiddenNamespaces = forbiddenNamespaces.add(namespace);\n        }\n        return { forbiddenNames: new Set(forbiddenNames), forbiddenNamespaces };\n    }\n    makeNameForProperty(o, _className, p, jsonName, assignedName) {\n        const namer = this.namerForObjectProperty(o, p);\n        if (namer === null)\n            return undefined;\n        // FIXME: This alternative should really depend on what the\n        // actual name of the class ends up being.  We can do this\n        // with a DependencyName.\n        // Also, we currently don't have any languages where properties\n        // are global, so collisions here could only occur where two\n        // properties of the same class have the same name, in which case\n        // the alternative would also be the same, i.e. useless.  But\n        // maybe we'll need global properties for some weird language at\n        // some point.\n        const alternative = `${o.getCombinedName()}_${jsonName}`;\n        const order = assignedName === undefined ? classPropertyNameOrder : assignedClassPropertyNameOrder;\n        const names = assignedName === undefined ? [jsonName, alternative] : [assignedName];\n        return new Naming_1.SimpleName(names, namer, order);\n    }\n    makePropertyDependencyNames(_o, _className, _p, _jsonName, _name) {\n        return [];\n    }\n    addPropertyNames(o, className) {\n        const { forbiddenNames, forbiddenNamespaces } = this.processForbiddenWordsInfo(this.forbiddenForObjectProperties(o, className), \"forbidden-for-properties\");\n        let ns;\n        const accessorNames = (0, AccessorNames_1.objectPropertyNames)(o, this.targetLanguage.name);\n        const names = (0, collection_utils_1.mapFilterMap)(o.getSortedProperties(), (p, jsonName) => {\n            const [assignedName, isFixed] = (0, AccessorNames_1.getAccessorName)(accessorNames, jsonName);\n            let name;\n            if (isFixed) {\n                name = new Naming_1.FixedName((0, Support_1.defined)(assignedName));\n            }\n            else {\n                name = this.makeNameForProperty(o, className, p, jsonName, assignedName);\n            }\n            if (name === undefined)\n                return undefined;\n            if (ns === undefined) {\n                ns = new Naming_1.Namespace(o.getCombinedName(), this.globalNamespace, forbiddenNamespaces, forbiddenNames);\n            }\n            ns.add(name);\n            for (const depName of this.makePropertyDependencyNames(o, className, p, jsonName, name)) {\n                ns.add(depName);\n            }\n            return name;\n        });\n        (0, Support_1.defined)(this._propertyNamesStoreView).set(o, names);\n    }\n    makeNameForUnionMember(u, unionName, t) {\n        const [assignedName, isFixed] = (0, AccessorNames_1.unionMemberName)(u, t, this.targetLanguage.name);\n        if (isFixed) {\n            return new Naming_1.FixedName((0, Support_1.defined)(assignedName));\n        }\n        return new Naming_1.DependencyName((0, Support_1.nonNull)(this._unionMemberNamer), unionMemberNameOrder, lookup => {\n            if (assignedName !== undefined)\n                return assignedName;\n            return this.proposeUnionMemberName(u, unionName, t, lookup);\n        });\n    }\n    addUnionMemberNames(u, unionName) {\n        const memberNamer = this._unionMemberNamer;\n        if (memberNamer === null)\n            return;\n        const { forbiddenNames, forbiddenNamespaces } = this.processForbiddenWordsInfo(this.forbiddenForUnionMembers(u, unionName), \"forbidden-for-union-members\");\n        let ns;\n        if (this.unionMembersInGlobalNamespace) {\n            ns = this.globalNamespace;\n        }\n        else {\n            ns = new Naming_1.Namespace(u.getCombinedName(), this.globalNamespace, forbiddenNamespaces, forbiddenNames);\n        }\n        let names = new Map();\n        for (const t of u.members) {\n            const name = this.makeNameForUnionMember(u, unionName, (0, Transformers_1.followTargetType)(t));\n            names.set(t, ns.add(name));\n        }\n        (0, Support_1.defined)(this._memberNamesStoreView).set(u, names);\n    }\n    makeNameForEnumCase(e, _enumName, caseName, assignedName) {\n        // FIXME: See the FIXME in `makeNameForProperty`.  We do have global\n        // enum cases, though (in Go), so this is actually useful already.\n        const alternative = `${e.getCombinedName()}_${caseName}`;\n        const order = assignedName === undefined ? enumCaseNameOrder : assignedEnumCaseNameOrder;\n        const names = assignedName === undefined ? [caseName, alternative] : [assignedName];\n        return new Naming_1.SimpleName(names, (0, Support_1.nonNull)(this._enumCaseNamer), order);\n    }\n    // FIXME: this is very similar to addPropertyNameds and addUnionMemberNames\n    addEnumCaseNames(e, enumName) {\n        if (this._enumCaseNamer === null)\n            return;\n        const { forbiddenNames, forbiddenNamespaces } = this.processForbiddenWordsInfo(this.forbiddenForEnumCases(e, enumName), \"forbidden-for-enum-cases\");\n        let ns;\n        if (this.enumCasesInGlobalNamespace) {\n            ns = this.globalNamespace;\n        }\n        else {\n            ns = new Naming_1.Namespace(e.getCombinedName(), this.globalNamespace, forbiddenNamespaces, forbiddenNames);\n        }\n        let names = new Map();\n        const accessorNames = (0, AccessorNames_1.enumCaseNames)(e, this.targetLanguage.name);\n        for (const caseName of e.cases) {\n            const [assignedName, isFixed] = (0, AccessorNames_1.getAccessorName)(accessorNames, caseName);\n            let name;\n            if (isFixed) {\n                name = new Naming_1.FixedName((0, Support_1.defined)(assignedName));\n            }\n            else {\n                name = this.makeNameForEnumCase(e, enumName, caseName, assignedName);\n            }\n            names.set(caseName, ns.add(name));\n        }\n        (0, Support_1.defined)(this._caseNamesStoreView).set(e, names);\n    }\n    childrenOfType(t) {\n        const names = this.names;\n        if (t instanceof Type_1.ClassType) {\n            const propertyNameds = (0, Support_1.defined)(this._propertyNamesStoreView).get(t);\n            const filteredMap = (0, collection_utils_1.mapFilterMap)(t.getProperties(), (p, n) => {\n                if (propertyNameds.get(n) === undefined)\n                    return undefined;\n                return p.type;\n            });\n            const sortedMap = (0, collection_utils_1.mapSortBy)(filteredMap, (_, n) => (0, Support_1.defined)(names.get((0, Support_1.defined)(propertyNameds.get(n)))));\n            return new Set(sortedMap.values());\n        }\n        return t.getChildren();\n    }\n    get namedUnions() {\n        return (0, Support_1.defined)(this._namedUnions);\n    }\n    get haveNamedUnions() {\n        return this.namedUnions.size > 0;\n    }\n    get haveNamedTypes() {\n        return (0, Support_1.defined)(this._namedTypes).length > 0;\n    }\n    get haveUnions() {\n        return (0, Support_1.defined)(this._haveUnions);\n    }\n    get haveMaps() {\n        return (0, Support_1.defined)(this._haveMaps);\n    }\n    get haveOptionalProperties() {\n        return (0, Support_1.defined)(this._haveOptionalProperties);\n    }\n    // FIXME: Inconsistently named, though technically correct.  Right now all enums are named,\n    // but this should really be called `namedEnums`.\n    get enums() {\n        return (0, Support_1.defined)(this._namedEnums);\n    }\n    get haveEnums() {\n        return this.enums.size > 0;\n    }\n    proposedUnionMemberNameForTypeKind(_kind) {\n        return null;\n    }\n    proposeUnionMemberName(_u, _unionName, fieldType, lookup) {\n        const simpleName = this.proposedUnionMemberNameForTypeKind(fieldType.kind);\n        if (simpleName !== null) {\n            return simpleName;\n        }\n        const typeNameForUnionMember = (t) => (0, TypeUtils_1.matchTypeExhaustive)(t, _noneType => {\n            return (0, Support_1.panic)(\"none type should have been replaced\");\n        }, _anyType => \"anything\", _nullType => \"null\", _boolType => \"bool\", _integerType => \"integer\", _doubleType => \"double\", _stringType => \"string\", arrayType => typeNameForUnionMember(arrayType.items) + \"_array\", classType => lookup(this.nameForNamedType(classType)), mapType => typeNameForUnionMember(mapType.values) + \"_map\", objectType => {\n            (0, Support_1.assert)(this.targetLanguage.supportsFullObjectType, \"Object type should have been replaced in `replaceObjectType`\");\n            return lookup(this.nameForNamedType(objectType));\n        }, _enumType => \"enum\", _unionType => \"union\", transformedType => transformedType.kind.replace(\"-\", \"_\"));\n        return typeNameForUnionMember(fieldType);\n    }\n    nameForNamedType(t) {\n        return this.nameStoreView.get(t);\n    }\n    isForwardDeclaredType(t) {\n        return (0, Support_1.defined)(this._declarationIR).forwardedTypes.has(t);\n    }\n    isImplicitCycleBreaker(_t) {\n        return (0, Support_1.panic)(\"A renderer that invokes isCycleBreakerType must implement isImplicitCycleBreaker\");\n    }\n    canBreakCycles(_t) {\n        return true;\n    }\n    isCycleBreakerType(t) {\n        if (this._cycleBreakerTypes === undefined) {\n            this._cycleBreakerTypes = (0, DeclarationIR_1.cycleBreakerTypesForGraph)(this.typeGraph, s => this.isImplicitCycleBreaker(s), s => this.canBreakCycles(s));\n        }\n        return this._cycleBreakerTypes.has(t);\n    }\n    forEachTopLevel(blankLocations, f, predicate) {\n        let topLevels;\n        if (predicate !== undefined) {\n            topLevels = (0, collection_utils_1.mapFilter)(this.topLevels, predicate);\n        }\n        else {\n            topLevels = this.topLevels;\n        }\n        return this.forEachWithBlankLines(topLevels, blankLocations, (t, name, pos) => f(t, this.nameStoreView.getForTopLevel(name), pos));\n    }\n    forEachDeclaration(blankLocations, f) {\n        this.forEachWithBlankLines((0, collection_utils_1.iterableEnumerate)((0, Support_1.defined)(this._declarationIR).declarations), blankLocations, (decl, _, pos) => f(decl, pos));\n    }\n    setAlphabetizeProperties(value) {\n        this._alphabetizeProperties = value;\n    }\n    getAlphabetizeProperties() {\n        return this._alphabetizeProperties;\n    }\n    // Returns the number of properties defined for the specified object type.\n    propertyCount(o) {\n        const propertyNames = (0, Support_1.defined)(this._propertyNamesStoreView).get(o);\n        return propertyNames.size;\n    }\n    sortClassProperties(properties, propertyNames) {\n        if (this._alphabetizeProperties) {\n            return (0, collection_utils_1.mapSortBy)(properties, (_p, jsonName) => {\n                const name = (0, Support_1.defined)(propertyNames.get(jsonName));\n                return (0, Support_1.defined)(this.names.get(name));\n            });\n        }\n        else {\n            return properties;\n        }\n    }\n    forEachClassProperty(o, blankLocations, f) {\n        const propertyNames = (0, Support_1.defined)(this._propertyNamesStoreView).get(o);\n        const sortedProperties = this.sortClassProperties(o.getProperties(), propertyNames);\n        this.forEachWithBlankLines(sortedProperties, blankLocations, (p, jsonName, pos) => {\n            const name = (0, Support_1.defined)(propertyNames.get(jsonName));\n            f(name, jsonName, p, pos);\n        });\n    }\n    nameForUnionMember(u, t) {\n        return (0, Support_1.defined)((0, Support_1.defined)(this._memberNamesStoreView).get(u).get(t));\n    }\n    nameForEnumCase(e, caseName) {\n        const caseNames = (0, Support_1.defined)(this._caseNamesStoreView).get(e);\n        return (0, Support_1.defined)(caseNames.get(caseName));\n    }\n    forEachUnionMember(u, members, blankLocations, sortOrder, f) {\n        const iterateMembers = members === null ? u.members : members;\n        if (sortOrder === null) {\n            sortOrder = n => (0, Support_1.defined)(this.names.get(n));\n        }\n        const memberNames = (0, collection_utils_1.mapFilter)((0, Support_1.defined)(this._memberNamesStoreView).get(u), (_, t) => iterateMembers.has(t));\n        const sortedMemberNames = (0, collection_utils_1.mapSortBy)(memberNames, sortOrder);\n        this.forEachWithBlankLines(sortedMemberNames, blankLocations, f);\n    }\n    forEachEnumCase(e, blankLocations, f) {\n        const caseNames = (0, Support_1.defined)(this._caseNamesStoreView).get(e);\n        const sortedCaseNames = (0, collection_utils_1.mapSortBy)(caseNames, n => (0, Support_1.defined)(this.names.get(n)));\n        this.forEachWithBlankLines(sortedCaseNames, blankLocations, f);\n    }\n    forEachTransformation(blankLocations, f) {\n        this.forEachWithBlankLines((0, Support_1.defined)(this._namesForTransformations), blankLocations, f);\n    }\n    forEachSpecificNamedType(blankLocations, types, f) {\n        this.forEachWithBlankLines(types, blankLocations, (t, _, pos) => f(t, this.nameForNamedType(t), pos));\n    }\n    forEachObject(blankLocations, f) {\n        // FIXME: This is ugly.\n        this.forEachSpecificNamedType(blankLocations, (0, Support_1.defined)(this._namedObjects).entries(), f);\n    }\n    forEachEnum(blankLocations, f) {\n        this.forEachSpecificNamedType(blankLocations, this.enums.entries(), f);\n    }\n    forEachUnion(blankLocations, f) {\n        this.forEachSpecificNamedType(blankLocations, this.namedUnions.entries(), f);\n    }\n    forEachUniqueUnion(blankLocations, uniqueValue, f) {\n        const firstUnionByValue = new Map();\n        for (const u of this.namedUnions) {\n            const v = uniqueValue(u);\n            if (!firstUnionByValue.has(v)) {\n                firstUnionByValue.set(v, u);\n            }\n        }\n        this.forEachWithBlankLines(firstUnionByValue, blankLocations, f);\n    }\n    forEachNamedType(blankLocations, objectFunc, enumFunc, unionFunc) {\n        this.forEachWithBlankLines((0, Support_1.defined)(this._namedTypes).entries(), blankLocations, (t, _, pos) => {\n            const name = this.nameForNamedType(t);\n            if (t instanceof Type_1.ObjectType) {\n                // FIXME: This is ugly.  We can't runtime check that the function\n                // takes full object types if we have them.\n                objectFunc(t, name, pos);\n            }\n            else if (t instanceof Type_1.EnumType) {\n                enumFunc(t, name, pos);\n            }\n            else if (t instanceof Type_1.UnionType) {\n                unionFunc(t, name, pos);\n            }\n            else {\n                return (0, Support_1.panic)(\"Named type that's neither a class nor union\");\n            }\n        });\n    }\n    // You should never have to use this to produce parts of your generated\n    // code.  If you need to modify a Name, for example to change its casing,\n    // use `modifySource`.\n    sourcelikeToString(src) {\n        return (0, Source_1.serializeRenderResult)((0, Source_1.sourcelikeToSource)(src), this.names, \"\").lines.join(\"\\n\");\n    }\n    get commentLineStart() {\n        return \"// \";\n    }\n    emitComments(comments) {\n        comments.forEach(comment => {\n            if ((0, Comments_1.isStringComment)(comment)) {\n                this.emitCommentLines([comment]);\n            }\n            else if (\"lines\" in comment) {\n                this.emitCommentLines(comment.lines);\n            }\n            else if (\"descriptionBlock\" in comment) {\n                this.emitDescriptionBlock(comment.descriptionBlock);\n            }\n            else {\n                this.emitCommentLines(comment.customLines, comment);\n            }\n            this.ensureBlankLine();\n        });\n    }\n    emitCommentLines(lines, { lineStart = this.commentLineStart, firstLineStart = lineStart, lineEnd, beforeComment, afterComment } = {}) {\n        if (beforeComment !== undefined) {\n            this.emitLine(beforeComment);\n        }\n        let first = true;\n        for (const line of lines) {\n            let start = first ? firstLineStart : lineStart;\n            first = false;\n            if (this.sourcelikeToString(line) === \"\") {\n                start = (0, Strings_1.trimEnd)(start);\n            }\n            if (lineEnd) {\n                this.emitLine(start, line, lineEnd);\n            }\n            else {\n                this.emitLine(start, line);\n            }\n        }\n        if (afterComment !== undefined) {\n            this.emitLine(afterComment);\n        }\n    }\n    emitDescription(description) {\n        if (description === undefined)\n            return;\n        // FIXME: word-wrap\n        this.emitDescriptionBlock(description);\n    }\n    emitDescriptionBlock(lines) {\n        this.emitCommentLines(lines);\n    }\n    emitPropertyTable(c, makePropertyRow) {\n        let table = [];\n        const emitTable = () => {\n            if (table.length === 0)\n                return;\n            this.emitTable(table);\n            table = [];\n        };\n        this.forEachClassProperty(c, \"none\", (name, jsonName, p) => {\n            const description = this.descriptionForClassProperty(c, jsonName);\n            if (description !== undefined) {\n                emitTable();\n                this.emitDescription(description);\n            }\n            table.push(makePropertyRow(name, jsonName, p));\n        });\n        emitTable();\n    }\n    processGraph() {\n        this._declarationIR = (0, DeclarationIR_1.declarationsForGraph)(this.typeGraph, this.needsTypeDeclarationBeforeUse ? t => this.canBeForwardDeclared(t) : undefined, t => this.childrenOfType(t), t => {\n            if (t instanceof Type_1.UnionType) {\n                return this.unionNeedsName(t);\n            }\n            return (0, TypeUtils_1.isNamedType)(t);\n        });\n        const types = this.typeGraph.allTypesUnordered();\n        this._haveUnions = (0, collection_utils_1.iterableSome)(types, t => t instanceof Type_1.UnionType);\n        this._haveMaps = (0, collection_utils_1.iterableSome)(types, t => t instanceof Type_1.MapType);\n        const classTypes = (0, collection_utils_1.setFilter)(types, t => t instanceof Type_1.ClassType);\n        this._haveOptionalProperties = (0, collection_utils_1.iterableSome)(classTypes, c => (0, collection_utils_1.mapSome)(c.getProperties(), p => p.isOptional));\n        this._namedTypes = this._declarationIR.declarations.filter(d => d.kind === \"define\").map(d => d.type);\n        const { objects, enums, unions } = (0, TypeUtils_1.separateNamedTypes)(this._namedTypes);\n        this._namedObjects = new Set(objects);\n        this._namedEnums = new Set(enums);\n        this._namedUnions = new Set(unions);\n    }\n    emitSource(givenOutputFilename) {\n        this.processGraph();\n        this.emitSourceStructure(givenOutputFilename);\n    }\n    forEachType(process) {\n        const visitedTypes = new Set();\n        const processed = new Set();\n        const queue = Array.from(this.typeGraph.topLevels.values());\n        function visit(t) {\n            if (visitedTypes.has(t))\n                return;\n            for (const c of t.getChildren()) {\n                queue.push(c);\n            }\n            visitedTypes.add(t);\n            processed.add(process(t));\n        }\n        for (;;) {\n            const maybeType = queue.pop();\n            if (maybeType === undefined) {\n                break;\n            }\n            visit(maybeType);\n        }\n        return processed;\n    }\n}\nexports.ConvenienceRenderer = ConvenienceRenderer;\n","\"use strict\";\n// https://github.com/epoberezkin/ajv/blob/4d76c6fb813b136b6ec4fe74990bc97233d75dea/lib/compile/formats.js\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultDateTimeRecognizer = void 0;\n/*\nThe MIT License (MIT)\n\nCopyright (c) 2015 Evgeny Poberezkin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nconst DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nconst DAYS = [0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d:\\d\\d)?$/i;\nconst DATE_TIME_SEPARATOR = /t|\\s/i;\nclass DefaultDateTimeRecognizer {\n    isDate(str) {\n        // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n        const matches = str.match(DATE);\n        if (matches === null)\n            return false;\n        const month = +matches[2];\n        const day = +matches[3];\n        return month >= 1 && month <= 12 && day >= 1 && day <= DAYS[month];\n    }\n    isTime(str) {\n        const matches = str.match(TIME);\n        if (matches === null)\n            return false;\n        const hour = +matches[1];\n        const minute = +matches[2];\n        const second = +matches[3];\n        return hour <= 23 && minute <= 59 && second <= 59;\n    }\n    isDateTime(str) {\n        // http://tools.ietf.org/html/rfc3339#section-5.6\n        const dateTime = str.split(DATE_TIME_SEPARATOR);\n        return dateTime.length === 2 && this.isDate(dateTime[0]) && this.isTime(dateTime[1]);\n    }\n}\nexports.DefaultDateTimeRecognizer = DefaultDateTimeRecognizer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TargetLanguage = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Source_1 = require(\"./Source\");\nconst Support_1 = require(\"./support/Support\");\nconst DateTime_1 = require(\"./DateTime\");\nclass TargetLanguage {\n    constructor(displayName, names, extension) {\n        this.displayName = displayName;\n        this.names = names;\n        this.extension = extension;\n    }\n    get optionDefinitions() {\n        return this.getOptions().map(o => o.definition);\n    }\n    get cliOptionDefinitions() {\n        let actual = [];\n        let display = [];\n        for (const { cliDefinitions } of this.getOptions()) {\n            actual = actual.concat(cliDefinitions.actual);\n            display = display.concat(cliDefinitions.display);\n        }\n        return { actual, display };\n    }\n    get name() {\n        return (0, Support_1.defined)(this.names[0]);\n    }\n    renderGraphAndSerialize(typeGraph, givenOutputFilename, alphabetizeProperties, leadingComments, rendererOptions, indentation) {\n        if (indentation === undefined) {\n            indentation = this.defaultIndentation;\n        }\n        const renderContext = { typeGraph, leadingComments };\n        const renderer = this.makeRenderer(renderContext, rendererOptions);\n        if (renderer.setAlphabetizeProperties !== undefined) {\n            renderer.setAlphabetizeProperties(alphabetizeProperties);\n        }\n        const renderResult = renderer.render(givenOutputFilename);\n        return (0, collection_utils_1.mapMap)(renderResult.sources, s => (0, Source_1.serializeRenderResult)(s, renderResult.names, (0, Support_1.defined)(indentation)));\n    }\n    get defaultIndentation() {\n        return \"    \";\n    }\n    get stringTypeMapping() {\n        return new Map();\n    }\n    get supportsOptionalClassProperties() {\n        return false;\n    }\n    get supportsUnionsWithBothNumberTypes() {\n        return false;\n    }\n    get supportsFullObjectType() {\n        return false;\n    }\n    needsTransformerForType(_t) {\n        return false;\n    }\n    get dateTimeRecognizer() {\n        return new DateTime_1.DefaultDateTimeRecognizer();\n    }\n}\nexports.TargetLanguage = TargetLanguage;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SystemTextJsonCSharpRenderer = exports.systemTextJsonCSharpOptions = exports.NewtonsoftCSharpRenderer = exports.newtonsoftCSharpOptions = exports.CSharpRenderer = exports.CSharpTargetLanguage = exports.cSharpOptions = exports.AccessModifier = exports.Framework = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Source_1 = require(\"../Source\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Support_1 = require(\"../support/Support\");\nconst Naming_1 = require(\"../Naming\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst Annotation_1 = require(\"../Annotation\");\nconst Transformers_1 = require(\"../Transformers\");\nconst Constraints_1 = require(\"../attributes/Constraints\");\nconst unicode_properties_1 = __importDefault(require(\"unicode-properties\"));\nvar Framework;\n(function (Framework) {\n    Framework[Framework[\"Newtonsoft\"] = 0] = \"Newtonsoft\";\n    Framework[Framework[\"SystemTextJson\"] = 1] = \"SystemTextJson\";\n})(Framework = exports.Framework || (exports.Framework = {}));\nvar AccessModifier;\n(function (AccessModifier) {\n    AccessModifier[AccessModifier[\"None\"] = 0] = \"None\";\n    AccessModifier[AccessModifier[\"Public\"] = 1] = \"Public\";\n    AccessModifier[AccessModifier[\"Internal\"] = 2] = \"Internal\";\n})(AccessModifier = exports.AccessModifier || (exports.AccessModifier = {}));\nfunction noFollow(t) {\n    return t;\n}\nfunction needTransformerForType(t) {\n    if (t instanceof Type_1.UnionType) {\n        const maybeNullable = (0, TypeUtils_1.nullableFromUnion)(t);\n        if (maybeNullable === null)\n            return \"automatic\";\n        if (needTransformerForType(maybeNullable) === \"manual\")\n            return \"nullable\";\n        return \"none\";\n    }\n    if (t instanceof Type_1.ArrayType) {\n        const itemsNeed = needTransformerForType(t.items);\n        if (itemsNeed === \"manual\" || itemsNeed === \"nullable\")\n            return \"automatic\";\n        return \"none\";\n    }\n    if (t instanceof Type_1.EnumType)\n        return \"automatic\";\n    if (t.kind === \"double\")\n        return (0, Constraints_1.minMaxValueForType)(t) !== undefined ? \"manual\" : \"none\";\n    if (t.kind === \"integer-string\" || t.kind === \"bool-string\")\n        return \"manual\";\n    if (t.kind === \"string\") {\n        return (0, Constraints_1.minMaxLengthForType)(t) !== undefined ? \"manual\" : \"none\";\n    }\n    return \"none\";\n}\nfunction alwaysApplyTransformation(xf) {\n    const t = xf.targetType;\n    if (t instanceof Type_1.EnumType)\n        return true;\n    if (t instanceof Type_1.UnionType)\n        return (0, TypeUtils_1.nullableFromUnion)(t) === null;\n    return false;\n}\n/**\n * The C# type for a given transformed string type.\n */\nfunction csTypeForTransformedStringType(t) {\n    switch (t.kind) {\n        case \"date-time\":\n            return \"DateTimeOffset\";\n        case \"uuid\":\n            return \"Guid\";\n        case \"uri\":\n            return \"Uri\";\n        default:\n            return (0, Support_1.panic)(`Transformed string type ${t.kind} not supported`);\n    }\n}\nexports.cSharpOptions = {\n    framework: new RendererOptions_1.EnumOption(\"framework\", \"Serialization framework\", [\n        [\"NewtonSoft\", Framework.Newtonsoft],\n        [\"SystemTextJson\", Framework.SystemTextJson]\n    ], \"NewtonSoft\"),\n    useList: new RendererOptions_1.EnumOption(\"array-type\", \"Use T[] or List<T>\", [\n        [\"array\", false],\n        [\"list\", true]\n    ]),\n    dense: new RendererOptions_1.EnumOption(\"density\", \"Property density\", [\n        [\"normal\", false],\n        [\"dense\", true]\n    ], \"normal\", \"secondary\"),\n    // FIXME: Do this via a configurable named eventually.\n    namespace: new RendererOptions_1.StringOption(\"namespace\", \"Generated namespace\", \"NAME\", \"QuickType\"),\n    version: new RendererOptions_1.EnumOption(\"csharp-version\", \"C# version\", [\n        [\"5\", 5],\n        [\"6\", 6]\n    ], \"6\", \"secondary\"),\n    virtual: new RendererOptions_1.BooleanOption(\"virtual\", \"Generate virtual properties\", false),\n    typeForAny: new RendererOptions_1.EnumOption(\"any-type\", 'Type to use for \"any\"', [\n        [\"object\", \"object\"],\n        [\"dynamic\", \"dynamic\"]\n    ], \"object\", \"secondary\"),\n    useDecimal: new RendererOptions_1.EnumOption(\"number-type\", \"Type to use for numbers\", [\n        [\"double\", false],\n        [\"decimal\", true]\n    ], \"double\", \"secondary\"),\n    features: new RendererOptions_1.EnumOption(\"features\", \"Output features\", [\n        [\"complete\", { namespaces: true, helpers: true, attributes: true }],\n        [\"attributes-only\", { namespaces: true, helpers: false, attributes: true }],\n        [\"just-types-and-namespace\", { namespaces: true, helpers: false, attributes: false }],\n        [\"just-types\", { namespaces: true, helpers: false, attributes: false }]\n    ]),\n    baseclass: new RendererOptions_1.EnumOption(\"base-class\", \"Base class\", [\n        [\"EntityData\", \"EntityData\"],\n        [\"Object\", undefined]\n    ], \"Object\", \"secondary\"),\n    checkRequired: new RendererOptions_1.BooleanOption(\"check-required\", \"Fail if required properties are missing\", false),\n    keepPropertyName: new RendererOptions_1.BooleanOption(\"keep-property-name\", \"Keep original field name generate\", false)\n};\nclass CSharpTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor() {\n        super(\"C#\", [\"cs\", \"csharp\"], \"cs\");\n    }\n    getOptions() {\n        return [\n            exports.cSharpOptions.framework,\n            exports.cSharpOptions.namespace,\n            exports.cSharpOptions.version,\n            exports.cSharpOptions.dense,\n            exports.cSharpOptions.useList,\n            exports.cSharpOptions.useDecimal,\n            exports.cSharpOptions.typeForAny,\n            exports.cSharpOptions.virtual,\n            exports.cSharpOptions.features,\n            exports.cSharpOptions.baseclass,\n            exports.cSharpOptions.checkRequired,\n            exports.cSharpOptions.keepPropertyName\n        ];\n    }\n    get stringTypeMapping() {\n        const mapping = new Map();\n        mapping.set(\"date\", \"date-time\");\n        mapping.set(\"time\", \"date-time\");\n        mapping.set(\"date-time\", \"date-time\");\n        mapping.set(\"uuid\", \"uuid\");\n        mapping.set(\"uri\", \"uri\");\n        mapping.set(\"integer-string\", \"integer-string\");\n        mapping.set(\"bool-string\", \"bool-string\");\n        return mapping;\n    }\n    get supportsUnionsWithBothNumberTypes() {\n        return true;\n    }\n    get supportsOptionalClassProperties() {\n        return true;\n    }\n    needsTransformerForType(t) {\n        const need = needTransformerForType(t);\n        return need !== \"none\" && need !== \"nullable\";\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        const options = (0, RendererOptions_1.getOptionValues)(exports.cSharpOptions, untypedOptionValues);\n        switch (options.framework) {\n            case Framework.Newtonsoft:\n                return new NewtonsoftCSharpRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.newtonsoftCSharpOptions, untypedOptionValues));\n            case Framework.SystemTextJson:\n                return new SystemTextJsonCSharpRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.systemTextJsonCSharpOptions, untypedOptionValues));\n            default:\n                return (0, Support_1.assertNever)(options.framework);\n        }\n    }\n}\nexports.CSharpTargetLanguage = CSharpTargetLanguage;\nconst namingFunction = (0, Naming_1.funPrefixNamer)(\"namer\", csNameStyle);\nconst namingFunctionKeep = (0, Naming_1.funPrefixNamer)(\"namerKeep\", csNameStyleKeep);\n// FIXME: Make a Named?\nconst denseJsonPropertyName = \"J\";\nconst denseRequiredEnumName = \"R\";\nconst denseNullValueHandlingEnumName = \"N\";\nfunction isStartCharacter(utf16Unit) {\n    if (unicode_properties_1.default.isAlphabetic(utf16Unit)) {\n        return true;\n    }\n    return utf16Unit === 0x5f; // underscore\n}\nfunction isPartCharacter(utf16Unit) {\n    const category = unicode_properties_1.default.getCategory(utf16Unit);\n    if ([\"Nd\", \"Pc\", \"Mn\", \"Mc\"].indexOf(category) >= 0) {\n        return true;\n    }\n    return isStartCharacter(utf16Unit);\n}\nconst legalizeName = (0, Strings_1.utf16LegalizeCharacters)(isPartCharacter);\nfunction csNameStyle(original) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    return (0, Strings_1.combineWords)(words, legalizeName, Strings_1.firstUpperWordStyle, Strings_1.firstUpperWordStyle, Strings_1.firstUpperWordStyle, Strings_1.firstUpperWordStyle, \"\", isStartCharacter);\n}\nfunction csNameStyleKeep(original) {\n    const keywords = [\n        \"abstract\",\n        \"as\",\n        \"base\",\n        \"bool\",\n        \"break\",\n        \"byte\",\n        \"case\",\n        \"catch\",\n        \"char\",\n        \"checked\",\n        \"class\",\n        \"const\",\n        \"continue\",\n        \"decimal\",\n        \"default\",\n        \"delegate\",\n        \"do\",\n        \"double\",\n        \"else\",\n        \"enum\",\n        \"event\",\n        \"explicit\",\n        \"extern\",\n        \"false\",\n        \"finally\",\n        \"fixed\",\n        \"float\",\n        \"for\",\n        \"foreach\",\n        \"goto\",\n        \"if\",\n        \"implicit\",\n        \"in\",\n        \"int\",\n        \"interface\",\n        \"internal\",\n        \"is\",\n        \"lock\",\n        \"long\",\n        \"namespace\",\n        \"new\",\n        \"null\",\n        \"object\",\n        \"operator\",\n        \"out\",\n        \"override\",\n        \"params\",\n        \"private\",\n        \"protected\",\n        \"public\",\n        \"readonly\",\n        \"ref\",\n        \"return\",\n        \"sbyte\",\n        \"sealed\",\n        \"short\",\n        \"sizeof\",\n        \"stackalloc\",\n        \"static\",\n        \"string\",\n        \"struct\",\n        \"switch\",\n        \"this\",\n        \"throw\",\n        \"true\",\n        \"try\",\n        \"typeof\",\n        \"uint\",\n        \"ulong\",\n        \"unchecked\",\n        \"unsafe\",\n        \"ushort\",\n        \"using\",\n        \"virtual\",\n        \"void\",\n        \"volatile\",\n        \"while\"\n    ];\n    const words = [\n        {\n            word: original,\n            isAcronym: false\n        }\n    ];\n    const result = (0, Strings_1.combineWords)(words, legalizeName, x => x, x => x, x => x, x => x, \"\", isStartCharacter);\n    return keywords.includes(result) ? \"@\" + result : result;\n}\nfunction isValueType(t) {\n    if (t instanceof Type_1.UnionType) {\n        return (0, TypeUtils_1.nullableFromUnion)(t) === null;\n    }\n    return [\"integer\", \"double\", \"bool\", \"enum\", \"date-time\", \"uuid\"].indexOf(t.kind) >= 0;\n}\nclass CSharpRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _csOptions) {\n        super(targetLanguage, renderContext);\n        this._csOptions = _csOptions;\n    }\n    forbiddenNamesForGlobalNamespace() {\n        return [\"QuickType\", \"Type\", \"System\", \"Console\", \"Exception\", \"DateTimeOffset\", \"Guid\", \"Uri\"];\n    }\n    forbiddenForObjectProperties(_, classNamed) {\n        return {\n            names: [\n                classNamed,\n                \"ToString\",\n                \"GetHashCode\",\n                \"Finalize\",\n                \"Equals\",\n                \"GetType\",\n                \"MemberwiseClone\",\n                \"ReferenceEquals\"\n            ],\n            includeGlobalForbidden: false\n        };\n    }\n    forbiddenForUnionMembers(_, unionNamed) {\n        return { names: [unionNamed], includeGlobalForbidden: true };\n    }\n    makeNamedTypeNamer() {\n        return namingFunction;\n    }\n    namerForObjectProperty() {\n        return this._csOptions.keepPropertyName ? namingFunctionKeep : namingFunction;\n    }\n    makeUnionMemberNamer() {\n        return namingFunction;\n    }\n    makeEnumCaseNamer() {\n        return namingFunction;\n    }\n    unionNeedsName(u) {\n        return (0, TypeUtils_1.nullableFromUnion)(u) === null;\n    }\n    namedTypeToNameForTopLevel(type) {\n        // If the top-level type doesn't contain any classes or unions\n        // we have to define a class just for the `FromJson` method, in\n        // emitFromJsonForTopLevel.\n        return (0, TypeUtils_1.directlyReachableSingleNamedType)(type);\n    }\n    emitBlock(f, semicolon = false) {\n        this.emitLine(\"{\");\n        this.indent(f);\n        this.emitLine(\"}\", semicolon ? \";\" : \"\");\n    }\n    get doubleType() {\n        return this._csOptions.useDecimal ? \"decimal\" : \"double\";\n    }\n    csType(t, follow = Transformers_1.followTargetType, withIssues = false) {\n        const actualType = follow(t);\n        return (0, TypeUtils_1.matchType)(actualType, _anyType => (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.anyTypeIssueAnnotation, this._csOptions.typeForAny), _nullType => (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.nullTypeIssueAnnotation, this._csOptions.typeForAny), _boolType => \"bool\", _integerType => \"long\", _doubleType => this.doubleType, _stringType => \"string\", arrayType => {\n            const itemsType = this.csType(arrayType.items, follow, withIssues);\n            if (this._csOptions.useList) {\n                return [\"List<\", itemsType, \">\"];\n            }\n            else {\n                return [itemsType, \"[]\"];\n            }\n        }, classType => this.nameForNamedType(classType), mapType => [\"Dictionary<string, \", this.csType(mapType.values, follow, withIssues), \">\"], enumType => this.nameForNamedType(enumType), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null)\n                return this.nullableCSType(nullable, noFollow);\n            return this.nameForNamedType(unionType);\n        }, transformedStringType => csTypeForTransformedStringType(transformedStringType));\n    }\n    nullableCSType(t, follow = Transformers_1.followTargetType, withIssues = false) {\n        t = (0, Transformers_1.followTargetType)(t);\n        const csType = this.csType(t, follow, withIssues);\n        if (isValueType(t)) {\n            return [csType, \"?\"];\n        }\n        else {\n            return csType;\n        }\n    }\n    baseclassForType(_t) {\n        return undefined;\n    }\n    emitType(description, accessModifier, declaration, name, baseclass, emitter) {\n        switch (accessModifier) {\n            case AccessModifier.Public:\n                declaration = [\"public \", declaration];\n                break;\n            case AccessModifier.Internal:\n                declaration = [\"internal \", declaration];\n                break;\n            default:\n                break;\n        }\n        this.emitDescription(description);\n        if (baseclass === undefined) {\n            this.emitLine(declaration, \" \", name);\n        }\n        else {\n            this.emitLine(declaration, \" \", name, \" : \", baseclass);\n        }\n        this.emitBlock(emitter);\n    }\n    attributesForProperty(_property, _name, _c, _jsonName) {\n        return undefined;\n    }\n    propertyDefinition(property, name, _c, _jsonName) {\n        const t = property.type;\n        const csType = property.isOptional\n            ? this.nullableCSType(t, Transformers_1.followTargetType, true)\n            : this.csType(t, Transformers_1.followTargetType, true);\n        const propertyArray = [\"public \"];\n        if (this._csOptions.virtual)\n            propertyArray.push(\"virtual \");\n        return [...propertyArray, csType, \" \", name, \" { get; set; }\"];\n    }\n    emitDescriptionBlock(lines) {\n        const start = \"/// <summary>\";\n        if (this._csOptions.dense) {\n            this.emitLine(start, lines.join(\"; \"), \"</summary>\");\n        }\n        else {\n            this.emitCommentLines(lines, { lineStart: \"/// \", beforeComment: start, afterComment: \"/// </summary>\" });\n        }\n    }\n    blankLinesBetweenAttributes() {\n        return false;\n    }\n    emitClassDefinition(c, className) {\n        this.emitType(this.descriptionForType(c), AccessModifier.Public, \"partial class\", className, this.baseclassForType(c), () => {\n            if (c.getProperties().size === 0)\n                return;\n            const blankLines = this.blankLinesBetweenAttributes() ? \"interposing\" : \"none\";\n            let columns = [];\n            let isFirstProperty = true;\n            let previousDescription = undefined;\n            this.forEachClassProperty(c, blankLines, (name, jsonName, p) => {\n                const attributes = this.attributesForProperty(p, name, c, jsonName);\n                const description = this.descriptionForClassProperty(c, jsonName);\n                const property = this.propertyDefinition(p, name, c, jsonName);\n                if (attributes === undefined) {\n                    if (\n                    // Descriptions should be preceded by an empty line\n                    (!isFirstProperty && description !== undefined) ||\n                        // If the previous property has a description, leave an empty line\n                        previousDescription !== undefined) {\n                        this.ensureBlankLine();\n                    }\n                    this.emitDescription(description);\n                    this.emitLine(property);\n                }\n                else if (this._csOptions.dense && attributes.length > 0) {\n                    const comment = description === undefined ? \"\" : ` // ${description.join(\"; \")}`;\n                    columns.push([attributes, \" \", property, comment]);\n                }\n                else {\n                    this.emitDescription(description);\n                    for (const attribute of attributes) {\n                        this.emitLine(attribute);\n                    }\n                    this.emitLine(property);\n                }\n                isFirstProperty = false;\n                previousDescription = description;\n            });\n            if (columns.length > 0) {\n                this.emitTable(columns);\n            }\n        });\n    }\n    emitUnionDefinition(u, unionName) {\n        const nonNulls = (0, TypeUtils_1.removeNullFromUnion)(u, true)[1];\n        this.emitType(this.descriptionForType(u), AccessModifier.Public, \"partial struct\", unionName, this.baseclassForType(u), () => {\n            this.forEachUnionMember(u, nonNulls, \"none\", null, (fieldName, t) => {\n                const csType = this.nullableCSType(t);\n                this.emitLine(\"public \", csType, \" \", fieldName, \";\");\n            });\n            this.ensureBlankLine();\n            const nullTests = Array.from(nonNulls).map(t => [\n                this.nameForUnionMember(u, t),\n                \" == null\"\n            ]);\n            this.ensureBlankLine();\n            this.forEachUnionMember(u, nonNulls, \"none\", null, (fieldName, t) => {\n                const csType = this.csType(t);\n                this.emitExpressionMember([\"public static implicit operator \", unionName, \"(\", csType, \" \", fieldName, \")\"], [\"new \", unionName, \" { \", fieldName, \" = \", fieldName, \" }\"]);\n            });\n            if (u.findMember(\"null\") === undefined)\n                return;\n            this.emitExpressionMember(\"public bool IsNull\", (0, collection_utils_1.arrayIntercalate)(\" && \", nullTests), true);\n        });\n    }\n    emitEnumDefinition(e, enumName) {\n        const caseNames = [];\n        this.forEachEnumCase(e, \"none\", name => {\n            if (caseNames.length > 0)\n                caseNames.push(\", \");\n            caseNames.push(name);\n        });\n        this.emitDescription(this.descriptionForType(e));\n        this.emitLine(\"public enum \", enumName, \" { \", caseNames, \" };\");\n    }\n    emitExpressionMember(declare, define, isProperty = false) {\n        if (this._csOptions.version === 5) {\n            this.emitLine(declare);\n            this.emitBlock(() => {\n                const stmt = [\"return \", define, \";\"];\n                if (isProperty) {\n                    this.emitLine(\"get\");\n                    this.emitBlock(() => this.emitLine(stmt));\n                }\n                else {\n                    this.emitLine(stmt);\n                }\n            });\n        }\n        else {\n            this.emitLine(declare, \" => \", define, \";\");\n        }\n    }\n    emitTypeSwitch(types, condition, withBlock, withReturn, f) {\n        (0, Support_1.assert)(!withReturn || withBlock, \"Can only have return with block\");\n        for (const t of types) {\n            this.emitLine(\"if (\", condition(t), \")\");\n            if (withBlock) {\n                this.emitBlock(() => {\n                    f(t);\n                    if (withReturn) {\n                        this.emitLine(\"return;\");\n                    }\n                });\n            }\n            else {\n                this.indent(() => f(t));\n            }\n        }\n    }\n    emitUsing(ns) {\n        this.emitLine(\"using \", ns, \";\");\n    }\n    emitUsings() {\n        for (const ns of [\"System\", \"System.Collections.Generic\"]) {\n            this.emitUsing(ns);\n        }\n    }\n    emitRequiredHelpers() {\n        return;\n    }\n    emitTypesAndSupport() {\n        this.forEachObject(\"leading-and-interposing\", (c, name) => this.emitClassDefinition(c, name));\n        this.forEachEnum(\"leading-and-interposing\", (e, name) => this.emitEnumDefinition(e, name));\n        this.forEachUnion(\"leading-and-interposing\", (u, name) => this.emitUnionDefinition(u, name));\n        this.emitRequiredHelpers();\n    }\n    emitDefaultLeadingComments() {\n        return;\n    }\n    emitDefaultFollowingComments() {\n        return;\n    }\n    needNamespace() {\n        return true;\n    }\n    emitSourceStructure() {\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n        }\n        else {\n            this.emitDefaultLeadingComments();\n        }\n        this.ensureBlankLine();\n        if (this.needNamespace()) {\n            this.emitLine(\"namespace \", this._csOptions.namespace);\n            this.emitBlock(() => {\n                this.emitUsings();\n                this.emitTypesAndSupport();\n            });\n        }\n        else {\n            this.emitUsings();\n            this.emitTypesAndSupport();\n        }\n        this.emitDefaultFollowingComments();\n    }\n}\nexports.CSharpRenderer = CSharpRenderer;\nexports.newtonsoftCSharpOptions = Object.assign({}, exports.cSharpOptions, {});\nclass NewtonsoftCSharpRenderer extends CSharpRenderer {\n    constructor(targetLanguage, renderContext, _options) {\n        super(targetLanguage, renderContext, _options);\n        this._options = _options;\n        this._enumExtensionsNames = new Map();\n        this._needHelpers = _options.features.helpers;\n        this._needAttributes = _options.features.attributes;\n        this._needNamespaces = _options.features.namespaces;\n    }\n    forbiddenNamesForGlobalNamespace() {\n        const forbidden = [\n            \"Converter\",\n            \"JsonConverter\",\n            \"JsonSerializer\",\n            \"JsonWriter\",\n            \"JsonToken\",\n            \"Serialize\",\n            \"Newtonsoft\",\n            \"MetadataPropertyHandling\",\n            \"DateParseHandling\",\n            \"FromJson\",\n            \"Required\"\n        ];\n        if (this._options.dense) {\n            forbidden.push(\"J\", \"R\", \"N\");\n        }\n        if (this._options.baseclass !== undefined) {\n            forbidden.push(this._options.baseclass);\n        }\n        return super.forbiddenNamesForGlobalNamespace().concat(forbidden);\n    }\n    forbiddenForObjectProperties(c, className) {\n        const result = super.forbiddenForObjectProperties(c, className);\n        result.names = result.names.concat([\"ToJson\", \"FromJson\", \"Required\"]);\n        return result;\n    }\n    makeNameForTransformation(xf, typeName) {\n        if (typeName === undefined) {\n            let xfer = xf.transformer;\n            if (xfer instanceof Transformers_1.DecodingTransformer && xfer.consumer !== undefined) {\n                xfer = xfer.consumer;\n            }\n            return new Naming_1.SimpleName([`${xfer.kind}_converter`], namingFunction, ConvenienceRenderer_1.inferredNameOrder + 30);\n        }\n        return new Naming_1.DependencyName(namingFunction, typeName.order + 30, lookup => `${lookup(typeName)}_converter`);\n    }\n    makeNamedTypeDependencyNames(t, name) {\n        if (!(t instanceof Type_1.EnumType))\n            return [];\n        const extensionsName = new Naming_1.DependencyName(namingFunction, name.order + 30, lookup => `${lookup(name)}_extensions`);\n        this._enumExtensionsNames.set(name, extensionsName);\n        return [extensionsName];\n    }\n    emitUsings() {\n        // FIXME: We need System.Collections.Generic whenever we have maps or use List.\n        if (!this._needAttributes && !this._needHelpers)\n            return;\n        super.emitUsings();\n        this.ensureBlankLine();\n        for (const ns of [\"System.Globalization\", \"Newtonsoft.Json\", \"Newtonsoft.Json.Converters\"]) {\n            this.emitUsing(ns);\n        }\n        if (this._options.dense) {\n            this.emitUsing([denseJsonPropertyName, \" = Newtonsoft.Json.JsonPropertyAttribute\"]);\n            this.emitUsing([denseRequiredEnumName, \" = Newtonsoft.Json.Required\"]);\n            this.emitUsing([denseNullValueHandlingEnumName, \" = Newtonsoft.Json.NullValueHandling\"]);\n        }\n        if (this._options.baseclass === \"EntityData\") {\n            this.emitUsing(\"Microsoft.Azure.Mobile.Server\");\n        }\n    }\n    baseclassForType(_t) {\n        return this._options.baseclass;\n    }\n    emitDefaultLeadingComments() {\n        if (!this._needHelpers)\n            return;\n        this.emitLine(\"// <auto-generated />\");\n        this.emitLine(\"//\");\n        this.emitLine(\"// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do\", this.topLevels.size === 1 ? \"\" : \" one of these\", \":\");\n        this.emitLine(\"//\");\n        this.emitLine(\"//    using \", this._options.namespace, \";\");\n        this.emitLine(\"//\");\n        this.forEachTopLevel(\"none\", (t, topLevelName) => {\n            let rhs;\n            if (t instanceof Type_1.EnumType) {\n                rhs = [\"JsonConvert.DeserializeObject<\", topLevelName, \">(jsonString)\"];\n            }\n            else {\n                rhs = [topLevelName, \".FromJson(jsonString)\"];\n            }\n            this.emitLine(\"//    var \", (0, Source_1.modifySource)(Strings_1.camelCase, topLevelName), \" = \", rhs, \";\");\n        });\n    }\n    converterForType(t) {\n        let xf = (0, Transformers_1.transformationForType)(t);\n        if (xf === undefined && t instanceof Type_1.UnionType) {\n            const maybeNullable = (0, TypeUtils_1.nullableFromUnion)(t);\n            if (maybeNullable !== null) {\n                t = maybeNullable;\n                xf = (0, Transformers_1.transformationForType)(t);\n            }\n        }\n        if (xf === undefined)\n            return undefined;\n        if (alwaysApplyTransformation(xf))\n            return undefined;\n        return (0, Support_1.defined)(this.nameForTransformation(t));\n    }\n    attributesForProperty(property, _name, _c, jsonName) {\n        if (!this._needAttributes)\n            return undefined;\n        const attributes = [];\n        const jsonProperty = this._options.dense ? denseJsonPropertyName : \"JsonProperty\";\n        const escapedName = (0, Strings_1.utf16StringEscape)(jsonName);\n        const isNullable = (0, Transformers_1.followTargetType)(property.type).isNullable;\n        const isOptional = property.isOptional;\n        const requiredClass = this._options.dense ? \"R\" : \"Required\";\n        const nullValueHandlingClass = this._options.dense ? \"N\" : \"NullValueHandling\";\n        const nullValueHandling = isOptional && !isNullable ? [\", NullValueHandling = \", nullValueHandlingClass, \".Ignore\"] : [];\n        let required;\n        if (!this._options.checkRequired || (isOptional && isNullable)) {\n            required = [nullValueHandling];\n        }\n        else if (isOptional && !isNullable) {\n            required = [\", Required = \", requiredClass, \".DisallowNull\", nullValueHandling];\n        }\n        else if (!isOptional && isNullable) {\n            required = [\", Required = \", requiredClass, \".AllowNull\"];\n        }\n        else {\n            required = [\", Required = \", requiredClass, \".Always\", nullValueHandling];\n        }\n        attributes.push([\"[\", jsonProperty, '(\"', escapedName, '\"', required, \")]\"]);\n        const converter = this.converterForType(property.type);\n        if (converter !== undefined) {\n            attributes.push([\"[JsonConverter(typeof(\", converter, \"))]\"]);\n        }\n        return attributes;\n    }\n    blankLinesBetweenAttributes() {\n        return this._needAttributes && !this._options.dense;\n    }\n    // The \"this\" type can't be `dynamic`, so we have to force it to `object`.\n    topLevelResultType(t) {\n        return t.kind === \"any\" || t.kind === \"none\" ? \"object\" : this.csType(t);\n    }\n    emitFromJsonForTopLevel(t, name) {\n        if (t instanceof Type_1.EnumType)\n            return;\n        let partial;\n        let typeKind;\n        const definedType = this.namedTypeToNameForTopLevel(t);\n        if (definedType !== undefined) {\n            partial = \"partial \";\n            typeKind = definedType instanceof Type_1.ClassType ? \"class\" : \"struct\";\n        }\n        else {\n            partial = \"\";\n            typeKind = \"class\";\n        }\n        const csType = this.topLevelResultType(t);\n        this.emitType(undefined, AccessModifier.Public, [partial, typeKind], name, this.baseclassForType(t), () => {\n            // FIXME: Make FromJson a Named\n            this.emitExpressionMember([\"public static \", csType, \" FromJson(string json)\"], [\"JsonConvert.DeserializeObject<\", csType, \">(json, \", this._options.namespace, \".Converter.Settings)\"]);\n        });\n    }\n    emitDecoderSwitch(emitBody) {\n        this.emitLine(\"switch (reader.TokenType)\");\n        this.emitBlock(emitBody);\n    }\n    emitTokenCase(tokenType) {\n        this.emitLine(\"case JsonToken.\", tokenType, \":\");\n    }\n    emitThrow(message) {\n        this.emitLine(\"throw new Exception(\", message, \");\");\n    }\n    deserializeTypeCode(typeName) {\n        return [\"serializer.Deserialize<\", typeName, \">(reader)\"];\n    }\n    serializeValueCode(value) {\n        return [\"serializer.Serialize(writer, \", value, \")\"];\n    }\n    emitSerializeClass() {\n        // FIXME: Make Serialize a Named\n        this.emitType(undefined, AccessModifier.Public, \"static class\", \"Serialize\", undefined, () => {\n            // Sometimes multiple top-levels will resolve to the same type, so we have to take care\n            // not to emit more than one extension method for the same type.\n            const seenTypes = new Set();\n            this.forEachTopLevel(\"none\", t => {\n                // FIXME: Make ToJson a Named\n                if (!seenTypes.has(t)) {\n                    seenTypes.add(t);\n                    this.emitExpressionMember([\"public static string ToJson(this \", this.topLevelResultType(t), \" self)\"], [\"JsonConvert.SerializeObject(self, \", this._options.namespace, \".Converter.Settings)\"]);\n                }\n            });\n        });\n    }\n    emitCanConvert(expr) {\n        this.emitExpressionMember(\"public override bool CanConvert(Type t)\", expr);\n    }\n    emitReadJson(emitBody) {\n        this.emitLine(\"public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)\");\n        this.emitBlock(emitBody);\n    }\n    emitWriteJson(variable, emitBody) {\n        this.emitLine(\"public override void WriteJson(JsonWriter writer, object \", variable, \", JsonSerializer serializer)\");\n        this.emitBlock(emitBody);\n    }\n    converterObject(converterName) {\n        // FIXME: Get a singleton\n        return [converterName, \".Singleton\"];\n    }\n    emitConverterClass() {\n        // FIXME: Make Converter a Named\n        const converterName = [\"Converter\"];\n        this.emitType(undefined, AccessModifier.Internal, \"static class\", converterName, undefined, () => {\n            this.emitLine(\"public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings\");\n            this.emitBlock(() => {\n                this.emitLine(\"MetadataPropertyHandling = MetadataPropertyHandling.Ignore,\");\n                this.emitLine(\"DateParseHandling = DateParseHandling.None,\");\n                this.emitLine(\"Converters =\");\n                this.emitLine(\"{\");\n                this.indent(() => {\n                    for (const [t, converter] of this.typesWithNamedTransformations) {\n                        if (alwaysApplyTransformation((0, Support_1.defined)((0, Transformers_1.transformationForType)(t)))) {\n                            this.emitLine(this.converterObject(converter), \",\");\n                        }\n                    }\n                    this.emitLine(\"new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }\");\n                });\n                this.emitLine(`},`);\n            }, true);\n        });\n    }\n    emitDecoderTransformerCase(tokenCases, variableName, xfer, targetType, emitFinish) {\n        if (xfer === undefined)\n            return;\n        for (const tokenCase of tokenCases) {\n            this.emitTokenCase(tokenCase);\n        }\n        this.indent(() => {\n            const allHandled = this.emitDecodeTransformer(xfer, targetType, emitFinish, variableName);\n            if (!allHandled) {\n                this.emitLine(\"break;\");\n            }\n        });\n    }\n    emitConsume(value, consumer, targetType, emitFinish) {\n        if (consumer === undefined) {\n            emitFinish(value);\n            return true;\n        }\n        else {\n            return this.emitTransformer(value, consumer, targetType, emitFinish);\n        }\n    }\n    emitDecodeTransformer(xfer, targetType, emitFinish, variableName = \"value\") {\n        if (xfer instanceof Transformers_1.DecodingTransformer) {\n            const source = xfer.sourceType;\n            const converter = this.converterForType(targetType);\n            if (converter !== undefined) {\n                const typeSource = this.csType(targetType);\n                this.emitLine(\"var converter = \", this.converterObject(converter), \";\");\n                this.emitLine(\"var \", variableName, \" = (\", typeSource, \")converter.ReadJson(reader, typeof(\", typeSource, \"), null, serializer);\");\n            }\n            else if (source.kind !== \"null\") {\n                let output = targetType.kind === \"double\" ? targetType : source;\n                this.emitLine(\"var \", variableName, \" = \", this.deserializeTypeCode(this.csType(output)), \";\");\n            }\n            return this.emitConsume(variableName, xfer.consumer, targetType, emitFinish);\n        }\n        else if (xfer instanceof Transformers_1.ArrayDecodingTransformer) {\n            // FIXME: Consume StartArray\n            if (!(targetType instanceof Type_1.ArrayType)) {\n                return (0, Support_1.panic)(\"Array decoding must produce an array type\");\n            }\n            // FIXME: handle EOF\n            this.emitLine(\"reader.Read();\");\n            this.emitLine(\"var \", variableName, \" = new List<\", this.csType(targetType.items), \">();\");\n            this.emitLine(\"while (reader.TokenType != JsonToken.EndArray)\");\n            this.emitBlock(() => {\n                this.emitDecodeTransformer(xfer.itemTransformer, xfer.itemTargetType, v => this.emitLine(variableName, \".Add(\", v, \");\"), \"arrayItem\");\n                // FIXME: handle EOF\n                this.emitLine(\"reader.Read();\");\n            });\n            let result = variableName;\n            if (!this._options.useList) {\n                result = [result, \".ToArray()\"];\n            }\n            emitFinish(result);\n            return true;\n        }\n        else if (xfer instanceof Transformers_1.DecodingChoiceTransformer) {\n            this.emitDecoderSwitch(() => {\n                const nullTransformer = xfer.nullTransformer;\n                if (nullTransformer !== undefined) {\n                    this.emitTokenCase(\"Null\");\n                    this.indent(() => {\n                        const allHandled = this.emitDecodeTransformer(nullTransformer, targetType, emitFinish, \"null\");\n                        if (!allHandled) {\n                            this.emitLine(\"break\");\n                        }\n                    });\n                }\n                this.emitDecoderTransformerCase([\"Integer\"], \"integerValue\", xfer.integerTransformer, targetType, emitFinish);\n                this.emitDecoderTransformerCase(xfer.integerTransformer === undefined ? [\"Integer\", \"Float\"] : [\"Float\"], \"doubleValue\", xfer.doubleTransformer, targetType, emitFinish);\n                this.emitDecoderTransformerCase([\"Boolean\"], \"boolValue\", xfer.boolTransformer, targetType, emitFinish);\n                this.emitDecoderTransformerCase([\"String\", \"Date\"], \"stringValue\", xfer.stringTransformer, targetType, emitFinish);\n                this.emitDecoderTransformerCase([\"StartObject\"], \"objectValue\", xfer.objectTransformer, targetType, emitFinish);\n                this.emitDecoderTransformerCase([\"StartArray\"], \"arrayValue\", xfer.arrayTransformer, targetType, emitFinish);\n            });\n            return false;\n        }\n        else {\n            return (0, Support_1.panic)(\"Unknown transformer\");\n        }\n    }\n    stringCaseValue(t, stringCase) {\n        if (t.kind === \"string\") {\n            return ['\"', (0, Strings_1.utf16StringEscape)(stringCase), '\"'];\n        }\n        else if (t instanceof Type_1.EnumType) {\n            return [this.nameForNamedType(t), \".\", this.nameForEnumCase(t, stringCase)];\n        }\n        return (0, Support_1.panic)(`Type ${t.kind} does not have string cases`);\n    }\n    emitTransformer(variable, xfer, targetType, emitFinish) {\n        function directTargetType(continuation) {\n            if (continuation === undefined) {\n                return targetType;\n            }\n            return (0, Transformers_1.followTargetType)(continuation.sourceType);\n        }\n        if (xfer instanceof Transformers_1.ChoiceTransformer) {\n            const caseXfers = xfer.transformers;\n            if (caseXfers.length > 1 && caseXfers.every(caseXfer => caseXfer instanceof Transformers_1.StringMatchTransformer)) {\n                this.emitLine(\"switch (\", variable, \")\");\n                this.emitBlock(() => {\n                    for (const caseXfer of caseXfers) {\n                        const matchXfer = caseXfer;\n                        const value = this.stringCaseValue((0, Transformers_1.followTargetType)(matchXfer.sourceType), matchXfer.stringCase);\n                        this.emitLine(\"case \", value, \":\");\n                        this.indent(() => {\n                            const allDone = this.emitTransformer(variable, matchXfer.transformer, targetType, emitFinish);\n                            if (!allDone) {\n                                this.emitLine(\"break;\");\n                            }\n                        });\n                    }\n                });\n                // FIXME: Can we check for exhaustiveness?  For enums it should be easy.\n                return false;\n            }\n            else {\n                for (const caseXfer of caseXfers) {\n                    this.emitTransformer(variable, caseXfer, targetType, emitFinish);\n                }\n            }\n        }\n        else if (xfer instanceof Transformers_1.UnionMemberMatchTransformer) {\n            const memberType = xfer.memberType;\n            const maybeNullable = (0, TypeUtils_1.nullableFromUnion)(xfer.sourceType);\n            let test;\n            let member;\n            if (maybeNullable !== null) {\n                if (memberType.kind === \"null\") {\n                    test = [variable, \" == null\"];\n                    member = \"null\";\n                }\n                else {\n                    test = [variable, \" != null\"];\n                    member = variable;\n                }\n            }\n            else if (memberType.kind === \"null\") {\n                test = [variable, \".IsNull\"];\n                member = \"null\";\n            }\n            else {\n                const memberName = this.nameForUnionMember(xfer.sourceType, memberType);\n                member = [variable, \".\", memberName];\n                test = [member, \" != null\"];\n            }\n            if (memberType.kind !== \"null\" && isValueType(memberType)) {\n                member = [member, \".Value\"];\n            }\n            this.emitLine(\"if (\", test, \")\");\n            this.emitBlock(() => this.emitTransformer(member, xfer.transformer, targetType, emitFinish));\n        }\n        else if (xfer instanceof Transformers_1.StringMatchTransformer) {\n            const value = this.stringCaseValue((0, Transformers_1.followTargetType)(xfer.sourceType), xfer.stringCase);\n            this.emitLine(\"if (\", variable, \" == \", value, \")\");\n            this.emitBlock(() => this.emitTransformer(variable, xfer.transformer, targetType, emitFinish));\n        }\n        else if (xfer instanceof Transformers_1.EncodingTransformer) {\n            const converter = this.converterForType(xfer.sourceType);\n            if (converter !== undefined) {\n                this.emitLine(\"var converter = \", this.converterObject(converter), \";\");\n                this.emitLine(\"converter.WriteJson(writer, \", variable, \", serializer);\");\n            }\n            else {\n                this.emitLine(this.serializeValueCode(variable), \";\");\n            }\n            emitFinish([]);\n            return true;\n        }\n        else if (xfer instanceof Transformers_1.ArrayEncodingTransformer) {\n            this.emitLine(\"writer.WriteStartArray();\");\n            const itemVariable = \"arrayItem\";\n            this.emitLine(\"foreach (var \", itemVariable, \" in \", variable, \")\");\n            this.emitBlock(() => {\n                this.emitTransformer(itemVariable, xfer.itemTransformer, xfer.itemTargetType, () => {\n                    return;\n                });\n            });\n            this.emitLine(\"writer.WriteEndArray();\");\n            emitFinish([]);\n            return true;\n        }\n        else if (xfer instanceof Transformers_1.ParseStringTransformer) {\n            const immediateTargetType = xfer.consumer === undefined ? targetType : xfer.consumer.sourceType;\n            switch (immediateTargetType.kind) {\n                case \"date-time\":\n                    this.emitLine(\"DateTimeOffset dt;\");\n                    this.emitLine(\"if (DateTimeOffset.TryParse(\", variable, \", out dt))\");\n                    this.emitBlock(() => this.emitConsume(\"dt\", xfer.consumer, targetType, emitFinish));\n                    break;\n                case \"uuid\":\n                    this.emitLine(\"Guid guid;\");\n                    this.emitLine(\"if (Guid.TryParse(\", variable, \", out guid))\");\n                    this.emitBlock(() => this.emitConsume(\"guid\", xfer.consumer, targetType, emitFinish));\n                    break;\n                case \"uri\":\n                    this.emitLine(\"try\");\n                    this.emitBlock(() => {\n                        this.emitLine(\"var uri = new Uri(\", variable, \");\");\n                        this.emitConsume(\"uri\", xfer.consumer, targetType, emitFinish);\n                    });\n                    this.emitLine(\"catch (UriFormatException) {}\");\n                    break;\n                case \"integer\":\n                    this.emitLine(\"long l;\");\n                    this.emitLine(\"if (Int64.TryParse(\", variable, \", out l))\");\n                    this.emitBlock(() => this.emitConsume(\"l\", xfer.consumer, targetType, emitFinish));\n                    break;\n                case \"bool\":\n                    this.emitLine(\"bool b;\");\n                    this.emitLine(\"if (Boolean.TryParse(\", variable, \", out b))\");\n                    this.emitBlock(() => this.emitConsume(\"b\", xfer.consumer, targetType, emitFinish));\n                    break;\n                default:\n                    return (0, Support_1.panic)(`Parsing string to ${immediateTargetType.kind} not supported`);\n            }\n        }\n        else if (xfer instanceof Transformers_1.StringifyTransformer) {\n            switch (xfer.sourceType.kind) {\n                case \"date-time\":\n                    return this.emitConsume([variable, '.ToString(\"o\", System.Globalization.CultureInfo.InvariantCulture)'], xfer.consumer, targetType, emitFinish);\n                case \"uuid\":\n                    return this.emitConsume([variable, '.ToString(\"D\", System.Globalization.CultureInfo.InvariantCulture)'], xfer.consumer, targetType, emitFinish);\n                case \"integer\":\n                case \"uri\":\n                    return this.emitConsume([variable, \".ToString()\"], xfer.consumer, targetType, emitFinish);\n                case \"bool\":\n                    this.emitLine(\"var boolString = \", variable, ' ? \"true\" : \"false\";');\n                    return this.emitConsume(\"boolString\", xfer.consumer, targetType, emitFinish);\n                default:\n                    return (0, Support_1.panic)(`Stringifying ${xfer.sourceType.kind} not supported`);\n            }\n        }\n        else if (xfer instanceof Transformers_1.StringProducerTransformer) {\n            const value = this.stringCaseValue(directTargetType(xfer.consumer), xfer.result);\n            return this.emitConsume(value, xfer.consumer, targetType, emitFinish);\n        }\n        else if (xfer instanceof Transformers_1.MinMaxLengthCheckTransformer) {\n            const min = xfer.minLength;\n            const max = xfer.maxLength;\n            const conditions = [];\n            if (min !== undefined) {\n                conditions.push([variable, \".Length >= \", min.toString()]);\n            }\n            if (max !== undefined) {\n                conditions.push([variable, \".Length <= \", max.toString()]);\n            }\n            this.emitLine(\"if (\", (0, collection_utils_1.arrayIntercalate)([\" && \"], conditions), \")\");\n            this.emitBlock(() => this.emitConsume(variable, xfer.consumer, targetType, emitFinish));\n            return false;\n        }\n        else if (xfer instanceof Transformers_1.MinMaxValueTransformer) {\n            const min = xfer.minimum;\n            const max = xfer.maximum;\n            const conditions = [];\n            if (min !== undefined) {\n                conditions.push([variable, \" >= \", min.toString()]);\n            }\n            if (max !== undefined) {\n                conditions.push([variable, \" <= \", max.toString()]);\n            }\n            this.emitLine(\"if (\", (0, collection_utils_1.arrayIntercalate)([\" && \"], conditions), \")\");\n            this.emitBlock(() => this.emitConsume(variable, xfer.consumer, targetType, emitFinish));\n            return false;\n        }\n        else if (xfer instanceof Transformers_1.UnionInstantiationTransformer) {\n            if (!(targetType instanceof Type_1.UnionType)) {\n                return (0, Support_1.panic)(\"Union instantiation transformer must produce a union type\");\n            }\n            const maybeNullable = (0, TypeUtils_1.nullableFromUnion)(targetType);\n            if (maybeNullable !== null) {\n                emitFinish(variable);\n            }\n            else {\n                const unionName = this.nameForNamedType(targetType);\n                let initializer;\n                if (xfer.sourceType.kind === \"null\") {\n                    initializer = \" \";\n                }\n                else {\n                    const memberName = this.nameForUnionMember(targetType, xfer.sourceType);\n                    initializer = [\" \", memberName, \" = \", variable, \" \"];\n                }\n                emitFinish([\"new \", unionName, \" {\", initializer, \"}\"]);\n            }\n            return true;\n        }\n        else {\n            return (0, Support_1.panic)(\"Unknown transformer\");\n        }\n        return false;\n    }\n    emitTransformation(converterName, t) {\n        const xf = (0, Support_1.defined)((0, Transformers_1.transformationForType)(t));\n        const reverse = xf.reverse;\n        const targetType = xf.targetType;\n        const xfer = xf.transformer;\n        this.emitType(undefined, AccessModifier.Internal, \"class\", converterName, \"JsonConverter\", () => {\n            const csType = this.csType(targetType);\n            let canConvertExpr = [\"t == typeof(\", csType, \")\"];\n            const haveNullable = isValueType(targetType);\n            if (haveNullable) {\n                canConvertExpr = [canConvertExpr, \" || t == typeof(\", csType, \"?)\"];\n            }\n            this.emitCanConvert(canConvertExpr);\n            this.ensureBlankLine();\n            this.emitReadJson(() => {\n                // FIXME: It's unsatisfying that we need this.  The reason is that we not\n                // only match T, but also T?.  If we didn't, then the T in T? would not be\n                // deserialized with our converter but with the default one.  Can we check\n                // whether the type is a nullable?\n                // FIXME: This could duplicate one of the cases handled below in\n                // `emitDecodeTransformer`.\n                if (haveNullable && !(targetType instanceof Type_1.UnionType)) {\n                    this.emitLine(\"if (reader.TokenType == JsonToken.Null) return null;\");\n                }\n                const allHandled = this.emitDecodeTransformer(xfer, targetType, v => this.emitLine(\"return \", v, \";\"));\n                if (!allHandled) {\n                    this.emitThrow(['\"Cannot unmarshal type ', csType, '\"']);\n                }\n            });\n            this.ensureBlankLine();\n            this.emitWriteJson(\"untypedValue\", () => {\n                // FIXME: See above.\n                if (haveNullable && !(targetType instanceof Type_1.UnionType)) {\n                    this.emitLine(\"if (untypedValue == null)\");\n                    this.emitBlock(() => {\n                        this.emitLine(\"serializer.Serialize(writer, null);\");\n                        this.emitLine(\"return;\");\n                    });\n                }\n                this.emitLine(\"var value = (\", csType, \")untypedValue;\");\n                const allHandled = this.emitTransformer(\"value\", reverse.transformer, reverse.targetType, () => this.emitLine(\"return;\"));\n                if (!allHandled) {\n                    this.emitThrow(['\"Cannot marshal type ', csType, '\"']);\n                }\n            });\n            this.ensureBlankLine();\n            this.emitLine(\"public static readonly \", converterName, \" Singleton = new \", converterName, \"();\");\n        });\n    }\n    emitRequiredHelpers() {\n        if (this._needHelpers) {\n            this.forEachTopLevel(\"leading-and-interposing\", (t, n) => this.emitFromJsonForTopLevel(t, n));\n            this.ensureBlankLine();\n            this.emitSerializeClass();\n        }\n        if (this._needHelpers || (this._needAttributes && (this.haveNamedUnions || this.haveEnums))) {\n            this.ensureBlankLine();\n            this.emitConverterClass();\n            this.forEachTransformation(\"leading-and-interposing\", (n, t) => this.emitTransformation(n, t));\n        }\n    }\n    needNamespace() {\n        return this._needNamespaces;\n    }\n}\nexports.NewtonsoftCSharpRenderer = NewtonsoftCSharpRenderer;\nexports.systemTextJsonCSharpOptions = Object.assign({}, exports.cSharpOptions, {});\nclass SystemTextJsonCSharpRenderer extends CSharpRenderer {\n    constructor(targetLanguage, renderContext, _options) {\n        super(targetLanguage, renderContext, _options);\n        this._options = _options;\n        this._enumExtensionsNames = new Map();\n        this._needHelpers = _options.features.helpers;\n        this._needAttributes = _options.features.attributes;\n        this._needNamespaces = _options.features.namespaces;\n    }\n    forbiddenNamesForGlobalNamespace() {\n        const forbidden = [\n            \"Converter\",\n            \"JsonConverter\",\n            \"JsonSerializer\",\n            \"JsonWriter\",\n            \"JsonToken\",\n            \"Serialize\",\n            \"JsonSerializerOptions\",\n            // \"Newtonsoft\",\n            // \"MetadataPropertyHandling\",\n            // \"DateParseHandling\",\n            \"FromJson\",\n            \"Required\"\n        ];\n        if (this._options.dense) {\n            forbidden.push(\"J\", \"R\", \"N\");\n        }\n        if (this._options.baseclass !== undefined) {\n            forbidden.push(this._options.baseclass);\n        }\n        return super.forbiddenNamesForGlobalNamespace().concat(forbidden);\n    }\n    forbiddenForObjectProperties(c, className) {\n        const result = super.forbiddenForObjectProperties(c, className);\n        result.names = result.names.concat([\"ToJson\", \"FromJson\", \"Required\"]);\n        return result;\n    }\n    makeNameForTransformation(xf, typeName) {\n        if (typeName === undefined) {\n            let xfer = xf.transformer;\n            if (xfer instanceof Transformers_1.DecodingTransformer && xfer.consumer !== undefined) {\n                xfer = xfer.consumer;\n            }\n            return new Naming_1.SimpleName([`${xfer.kind}_converter`], namingFunction, ConvenienceRenderer_1.inferredNameOrder + 30);\n        }\n        return new Naming_1.DependencyName(namingFunction, typeName.order + 30, lookup => `${lookup(typeName)}_converter`);\n    }\n    makeNamedTypeDependencyNames(t, name) {\n        if (!(t instanceof Type_1.EnumType))\n            return [];\n        const extensionsName = new Naming_1.DependencyName(namingFunction, name.order + 30, lookup => `${lookup(name)}_extensions`);\n        this._enumExtensionsNames.set(name, extensionsName);\n        return [extensionsName];\n    }\n    emitUsings() {\n        // FIXME: We need System.Collections.Generic whenever we have maps or use List.\n        if (!this._needAttributes && !this._needHelpers)\n            return;\n        super.emitUsings();\n        this.ensureBlankLine();\n        for (const ns of [\"System.Text.Json\", \"System.Text.Json.Serialization\", \"System.Globalization\"]) {\n            this.emitUsing(ns);\n        }\n        if (this._options.dense) {\n            this.emitUsing([denseJsonPropertyName, \" = System.Text.Json.Serialization.JsonPropertyNameAttribute\"]);\n            // this.emitUsing([denseRequiredEnumName, \" = Newtonsoft.Json.Required\"]);\n            this.emitUsing([denseNullValueHandlingEnumName, \" = System.Text.Json.Serialization.JsonIgnoreCondition\"]);\n        }\n        if (this._options.baseclass === \"EntityData\") {\n            this.emitUsing(\"Microsoft.Azure.Mobile.Server\");\n        }\n    }\n    baseclassForType(_t) {\n        return this._options.baseclass;\n    }\n    emitDefaultFollowingComments() {\n        if (!this._needHelpers)\n            return;\n        this.emitLine(\"#pragma warning restore CS8618\");\n        this.emitLine(\"#pragma warning restore CS8601\");\n        this.emitLine(\"#pragma warning restore CS8603\");\n    }\n    emitDefaultLeadingComments() {\n        if (!this._needHelpers)\n            return;\n        this.emitLine(\"// <auto-generated />\");\n        this.emitLine(\"//\");\n        this.emitLine(\"// To parse this JSON data, add NuGet 'System.Text.Json' then do\", this.topLevels.size === 1 ? \"\" : \" one of these\", \":\");\n        this.emitLine(\"//\");\n        this.emitLine(\"//    using \", this._options.namespace, \";\");\n        this.emitLine(\"//\");\n        this.forEachTopLevel(\"none\", (t, topLevelName) => {\n            let rhs;\n            if (t instanceof Type_1.EnumType) {\n                rhs = [\"JsonSerializer.Deserialize<\", topLevelName, \">(jsonString)\"];\n            }\n            else {\n                rhs = [topLevelName, \".FromJson(jsonString)\"];\n            }\n            this.emitLine(\"//    var \", (0, Source_1.modifySource)(Strings_1.camelCase, topLevelName), \" = \", rhs, \";\");\n        });\n        // fix: should this be an option? Or respond to an existing option?\n        this.emitLine(\"#nullable enable\");\n        this.emitLine(\"#pragma warning disable CS8618\");\n        this.emitLine(\"#pragma warning disable CS8601\");\n        this.emitLine(\"#pragma warning disable CS8603\");\n    }\n    converterForType(t) {\n        let xf = (0, Transformers_1.transformationForType)(t);\n        if (xf === undefined && t instanceof Type_1.UnionType) {\n            const maybeNullable = (0, TypeUtils_1.nullableFromUnion)(t);\n            if (maybeNullable !== null) {\n                t = maybeNullable;\n                xf = (0, Transformers_1.transformationForType)(t);\n            }\n        }\n        if (xf === undefined)\n            return undefined;\n        if (alwaysApplyTransformation(xf))\n            return undefined;\n        return (0, Support_1.defined)(this.nameForTransformation(t));\n    }\n    attributesForProperty(property, _name, _c, jsonName) {\n        if (!this._needAttributes)\n            return undefined;\n        const attributes = [];\n        const jsonPropertyName = this._options.dense ? denseJsonPropertyName : \"JsonPropertyName\";\n        const escapedName = (0, Strings_1.utf16StringEscape)(jsonName);\n        const isNullable = (0, Transformers_1.followTargetType)(property.type).isNullable;\n        const isOptional = property.isOptional;\n        if (isOptional && !isNullable) {\n            attributes.push([\"[\", \"JsonIgnore\", \"(Condition = JsonIgnoreCondition.WhenWritingNull)]\"]);\n        }\n        // const requiredClass = this._options.dense ? \"R\" : \"Required\";\n        // const nullValueHandlingClass = this._options.dense ? \"N\" : \"NullValueHandling\";\n        // const nullValueHandling = isOptional && !isNullable ? [\", NullValueHandling = \", nullValueHandlingClass, \".Ignore\"] : [];\n        // let required: Sourcelike;\n        // if (!this._options.checkRequired || (isOptional && isNullable)) {\n        //     required = [nullValueHandling];\n        // } else if (isOptional && !isNullable) {\n        //     required = [\", Required = \", requiredClass, \".DisallowNull\", nullValueHandling];\n        // } else if (!isOptional && isNullable) {\n        //     required = [\", Required = \", requiredClass, \".AllowNull\"];\n        // } else {\n        //     required = [\", Required = \", requiredClass, \".Always\", nullValueHandling];\n        // }\n        attributes.push([\"[\", jsonPropertyName, '(\"', escapedName, '\")]']);\n        const converter = this.converterForType(property.type);\n        if (converter !== undefined) {\n            attributes.push([\"[JsonConverter(typeof(\", converter, \"))]\"]);\n        }\n        return attributes;\n    }\n    blankLinesBetweenAttributes() {\n        return this._needAttributes && !this._options.dense;\n    }\n    // The \"this\" type can't be `dynamic`, so we have to force it to `object`.\n    topLevelResultType(t) {\n        return t.kind === \"any\" || t.kind === \"none\" ? \"object\" : this.csType(t);\n    }\n    emitFromJsonForTopLevel(t, name) {\n        if (t instanceof Type_1.EnumType)\n            return;\n        let partial;\n        let typeKind;\n        const definedType = this.namedTypeToNameForTopLevel(t);\n        if (definedType !== undefined) {\n            partial = \"partial \";\n            typeKind = definedType instanceof Type_1.ClassType ? \"class\" : \"struct\";\n        }\n        else {\n            partial = \"\";\n            typeKind = \"class\";\n        }\n        const csType = this.topLevelResultType(t);\n        this.emitType(undefined, AccessModifier.Public, [partial, typeKind], name, this.baseclassForType(t), () => {\n            // FIXME: Make FromJson a Named\n            this.emitExpressionMember([\"public static \", csType, \" FromJson(string json)\"], [\"JsonSerializer.Deserialize<\", csType, \">(json, \", this._options.namespace, \".Converter.Settings)\"]);\n        });\n    }\n    emitDecoderSwitch(emitBody) {\n        this.emitLine(\"switch (reader.TokenType)\");\n        this.emitBlock(emitBody);\n    }\n    emitTokenCase(tokenType) {\n        this.emitLine(\"case JsonTokenType.\", tokenType, \":\");\n    }\n    emitThrow(message) {\n        this.emitLine(\"throw new Exception(\", message, \");\");\n    }\n    deserializeTypeCode(typeName) {\n        switch (typeName) {\n            case \"bool\":\n                return [\"reader.GetBoolean()\"];\n            case \"long\":\n                return [\"reader.GetInt64()\"];\n            case \"decimal\":\n                return [\"reader.GetDecimal()\"];\n            case \"double\":\n                return [\"reader.GetDouble()\"];\n            case \"string\":\n                return [\"reader.GetString()\"];\n            default:\n                return [\"JsonSerializer.Deserialize<\", typeName, \">(ref reader, options)\"];\n        }\n    }\n    serializeValueCode(value) {\n        if (value !== \"null\")\n            return [\"JsonSerializer.Serialize(writer, \", value, \", options)\"];\n        else\n            return [\"writer.WriteNullValue()\"];\n    }\n    emitSerializeClass() {\n        // FIXME: Make Serialize a Named\n        this.emitType(undefined, AccessModifier.Public, \"static class\", \"Serialize\", undefined, () => {\n            // Sometimes multiple top-levels will resolve to the same type, so we have to take care\n            // not to emit more than one extension method for the same type.\n            const seenTypes = new Set();\n            this.forEachTopLevel(\"none\", t => {\n                // FIXME: Make ToJson a Named\n                if (!seenTypes.has(t)) {\n                    seenTypes.add(t);\n                    this.emitExpressionMember([\"public static string ToJson(this \", this.topLevelResultType(t), \" self)\"], [\"JsonSerializer.Serialize(self, \", this._options.namespace, \".Converter.Settings)\"]);\n                }\n            });\n        });\n    }\n    emitCanConvert(expr) {\n        this.emitExpressionMember(\"public override bool CanConvert(Type t)\", expr);\n    }\n    emitReadJson(emitBody, csType) {\n        this.emitLine(\"public override \", csType, \" Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)\");\n        this.emitBlock(emitBody);\n    }\n    emitWriteJson(variable, emitBody, csType) {\n        this.emitLine(\"public override void Write(Utf8JsonWriter writer, \", csType, \" \", variable, \", JsonSerializerOptions options)\");\n        this.emitBlock(emitBody);\n    }\n    converterObject(converterName) {\n        // FIXME: Get a singleton\n        return [converterName, \".Singleton\"];\n    }\n    emitConverterClass() {\n        // FIXME: Make Converter a Named\n        const converterName = [\"Converter\"];\n        this.emitType(undefined, AccessModifier.Internal, \"static class\", converterName, undefined, () => {\n            // Do not use .Web as defaults. That turns on caseInsensitive property names and will fail the keywords test.\n            this.emitLine(\"public static readonly JsonSerializerOptions Settings = new(JsonSerializerDefaults.General)\");\n            this.emitBlock(() => {\n                // this.emitLine(\"MetadataPropertyHandling = MetadataPropertyHandling.Ignore,\");\n                // this.emitLine(\"DateParseHandling = DateParseHandling.None,\");\n                this.emitLine(\"Converters =\");\n                this.emitLine(\"{\");\n                this.indent(() => {\n                    for (const [t, converter] of this.typesWithNamedTransformations) {\n                        if (alwaysApplyTransformation((0, Support_1.defined)((0, Transformers_1.transformationForType)(t)))) {\n                            this.emitLine(this.converterObject(converter), \",\");\n                        }\n                    }\n                    this.emitLine(\"new DateOnlyConverter(),\");\n                    this.emitLine(\"new TimeOnlyConverter(),\");\n                    this.emitLine(\"IsoDateTimeOffsetConverter.Singleton\");\n                    // this.emitLine(\"new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }\");\n                });\n                this.emitLine(`},`);\n            }, true);\n        });\n    }\n    emitDecoderTransformerCase(tokenCases, variableName, xfer, targetType, emitFinish) {\n        if (xfer === undefined)\n            return;\n        for (const tokenCase of tokenCases) {\n            this.emitTokenCase(tokenCase);\n        }\n        this.indent(() => {\n            const allHandled = this.emitDecodeTransformer(xfer, targetType, emitFinish, variableName);\n            if (!allHandled) {\n                this.emitLine(\"break;\");\n            }\n        });\n    }\n    emitConsume(value, consumer, targetType, emitFinish) {\n        if (consumer === undefined) {\n            emitFinish(value);\n            return true;\n        }\n        else {\n            return this.emitTransformer(value, consumer, targetType, emitFinish);\n        }\n    }\n    emitDecodeTransformer(xfer, targetType, emitFinish, variableName = \"value\") {\n        if (xfer instanceof Transformers_1.DecodingTransformer) {\n            const source = xfer.sourceType;\n            const converter = this.converterForType(targetType);\n            if (converter !== undefined) {\n                const typeSource = this.csType(targetType);\n                this.emitLine(\"var converter = \", this.converterObject(converter), \";\");\n                this.emitLine(\"var \", variableName, \" = (\", typeSource, \")converter.ReadJson(reader, typeof(\", typeSource, \"), null, serializer);\");\n            }\n            else if (source.kind !== \"null\") {\n                let output = targetType.kind === \"double\" ? targetType : source;\n                this.emitLine(\"var \", variableName, \" = \", this.deserializeTypeCode(this.csType(output)), \";\");\n            }\n            return this.emitConsume(variableName, xfer.consumer, targetType, emitFinish);\n        }\n        else if (xfer instanceof Transformers_1.ArrayDecodingTransformer) {\n            // FIXME: Consume StartArray\n            if (!(targetType instanceof Type_1.ArrayType)) {\n                return (0, Support_1.panic)(\"Array decoding must produce an array type\");\n            }\n            // FIXME: handle EOF\n            this.emitLine(\"reader.Read();\");\n            this.emitLine(\"var \", variableName, \" = new List<\", this.csType(targetType.items), \">();\");\n            this.emitLine(\"while (reader.TokenType != JsonToken.EndArray)\");\n            this.emitBlock(() => {\n                this.emitDecodeTransformer(xfer.itemTransformer, xfer.itemTargetType, v => this.emitLine(variableName, \".Add(\", v, \");\"), \"arrayItem\");\n                // FIXME: handle EOF\n                this.emitLine(\"reader.Read();\");\n            });\n            let result = variableName;\n            if (!this._options.useList) {\n                result = [result, \".ToArray()\"];\n            }\n            emitFinish(result);\n            return true;\n        }\n        else if (xfer instanceof Transformers_1.DecodingChoiceTransformer) {\n            this.emitDecoderSwitch(() => {\n                const nullTransformer = xfer.nullTransformer;\n                if (nullTransformer !== undefined) {\n                    this.emitTokenCase(\"Null\");\n                    this.indent(() => {\n                        const allHandled = this.emitDecodeTransformer(nullTransformer, targetType, emitFinish, \"null\");\n                        if (!allHandled) {\n                            this.emitLine(\"break\");\n                        }\n                    });\n                }\n                this.emitDecoderTransformerCase([\"Number\"], \"integerValue\", xfer.integerTransformer, targetType, emitFinish);\n                this.emitDecoderTransformerCase([\"Number\"], \n                // xfer.integerTransformer === undefined ? [\"Integer\", \"Float\"] : [\"Float\"],\n                \"doubleValue\", xfer.doubleTransformer, targetType, emitFinish);\n                this.emitDecoderTransformerCase([\"True\", \"False\"], \"boolValue\", xfer.boolTransformer, targetType, emitFinish);\n                this.emitDecoderTransformerCase(\n                // [\"String\", \"Date\"],\n                [\"String\"], \"stringValue\", xfer.stringTransformer, targetType, emitFinish);\n                this.emitDecoderTransformerCase([\"StartObject\"], \"objectValue\", xfer.objectTransformer, targetType, emitFinish);\n                this.emitDecoderTransformerCase([\"StartArray\"], \"arrayValue\", xfer.arrayTransformer, targetType, emitFinish);\n            });\n            return false;\n        }\n        else {\n            return (0, Support_1.panic)(\"Unknown transformer\");\n        }\n    }\n    stringCaseValue(t, stringCase) {\n        if (t.kind === \"string\") {\n            return ['\"', (0, Strings_1.utf16StringEscape)(stringCase), '\"'];\n        }\n        else if (t instanceof Type_1.EnumType) {\n            return [this.nameForNamedType(t), \".\", this.nameForEnumCase(t, stringCase)];\n        }\n        return (0, Support_1.panic)(`Type ${t.kind} does not have string cases`);\n    }\n    emitTransformer(variable, xfer, targetType, emitFinish) {\n        function directTargetType(continuation) {\n            if (continuation === undefined) {\n                return targetType;\n            }\n            return (0, Transformers_1.followTargetType)(continuation.sourceType);\n        }\n        if (xfer instanceof Transformers_1.ChoiceTransformer) {\n            const caseXfers = xfer.transformers;\n            if (caseXfers.length > 1 && caseXfers.every(caseXfer => caseXfer instanceof Transformers_1.StringMatchTransformer)) {\n                this.emitLine(\"switch (\", variable, \")\");\n                this.emitBlock(() => {\n                    for (const caseXfer of caseXfers) {\n                        const matchXfer = caseXfer;\n                        const value = this.stringCaseValue((0, Transformers_1.followTargetType)(matchXfer.sourceType), matchXfer.stringCase);\n                        this.emitLine(\"case \", value, \":\");\n                        this.indent(() => {\n                            const allDone = this.emitTransformer(variable, matchXfer.transformer, targetType, emitFinish);\n                            if (!allDone) {\n                                this.emitLine(\"break;\");\n                            }\n                        });\n                    }\n                });\n                // FIXME: Can we check for exhaustiveness?  For enums it should be easy.\n                return false;\n            }\n            else {\n                for (const caseXfer of caseXfers) {\n                    this.emitTransformer(variable, caseXfer, targetType, emitFinish);\n                }\n            }\n        }\n        else if (xfer instanceof Transformers_1.UnionMemberMatchTransformer) {\n            const memberType = xfer.memberType;\n            const maybeNullable = (0, TypeUtils_1.nullableFromUnion)(xfer.sourceType);\n            let test;\n            let member;\n            if (maybeNullable !== null) {\n                if (memberType.kind === \"null\") {\n                    test = [variable, \" == null\"];\n                    member = \"null\";\n                }\n                else {\n                    test = [variable, \" != null\"];\n                    member = variable;\n                }\n            }\n            else if (memberType.kind === \"null\") {\n                test = [variable, \".IsNull\"];\n                member = \"null\";\n            }\n            else {\n                const memberName = this.nameForUnionMember(xfer.sourceType, memberType);\n                member = [variable, \".\", memberName];\n                test = [member, \" != null\"];\n            }\n            if (memberType.kind !== \"null\" && isValueType(memberType)) {\n                member = [member, \".Value\"];\n            }\n            this.emitLine(\"if (\", test, \")\");\n            this.emitBlock(() => this.emitTransformer(member, xfer.transformer, targetType, emitFinish));\n        }\n        else if (xfer instanceof Transformers_1.StringMatchTransformer) {\n            const value = this.stringCaseValue((0, Transformers_1.followTargetType)(xfer.sourceType), xfer.stringCase);\n            this.emitLine(\"if (\", variable, \" == \", value, \")\");\n            this.emitBlock(() => this.emitTransformer(variable, xfer.transformer, targetType, emitFinish));\n        }\n        else if (xfer instanceof Transformers_1.EncodingTransformer) {\n            const converter = this.converterForType(xfer.sourceType);\n            if (converter !== undefined) {\n                this.emitLine(\"var converter = \", this.converterObject(converter), \";\");\n                this.emitLine(\"converter.WriteJson(writer, \", variable, \", serializer);\");\n            }\n            else {\n                this.emitLine(this.serializeValueCode(variable), \";\");\n            }\n            emitFinish([]);\n            return true;\n        }\n        else if (xfer instanceof Transformers_1.ArrayEncodingTransformer) {\n            this.emitLine(\"writer.WriteStartArray();\");\n            const itemVariable = \"arrayItem\";\n            this.emitLine(\"foreach (var \", itemVariable, \" in \", variable, \")\");\n            this.emitBlock(() => {\n                this.emitTransformer(itemVariable, xfer.itemTransformer, xfer.itemTargetType, () => {\n                    return;\n                });\n            });\n            this.emitLine(\"writer.WriteEndArray();\");\n            emitFinish([]);\n            return true;\n        }\n        else if (xfer instanceof Transformers_1.ParseStringTransformer) {\n            const immediateTargetType = xfer.consumer === undefined ? targetType : xfer.consumer.sourceType;\n            switch (immediateTargetType.kind) {\n                case \"date-time\":\n                    this.emitLine(\"DateTimeOffset dt;\");\n                    this.emitLine(\"if (DateTimeOffset.TryParse(\", variable, \", out dt))\");\n                    this.emitBlock(() => this.emitConsume(\"dt\", xfer.consumer, targetType, emitFinish));\n                    break;\n                case \"uuid\":\n                    this.emitLine(\"Guid guid;\");\n                    this.emitLine(\"if (Guid.TryParse(\", variable, \", out guid))\");\n                    this.emitBlock(() => this.emitConsume(\"guid\", xfer.consumer, targetType, emitFinish));\n                    break;\n                case \"uri\":\n                    this.emitLine(\"try\");\n                    this.emitBlock(() => {\n                        // this.emitLine(\"var uri = new Uri(\", variable, \");\");\n                        // The default value about:blank should never happen, but this way we avoid a null reference warning.\n                        this.emitLine('var uri = new Uri(\"about:blank\");');\n                        this.emitLine(\"if (!string.IsNullOrEmpty(stringValue))\");\n                        this.emitBlock(() => {\n                            this.emitLine(\"uri = new Uri(\", variable, \");\");\n                        });\n                        this.emitConsume(\"uri\", xfer.consumer, targetType, emitFinish);\n                    });\n                    this.emitLine(\"catch (UriFormatException) {}\");\n                    break;\n                case \"integer\":\n                    this.emitLine(\"long l;\");\n                    this.emitLine(\"if (Int64.TryParse(\", variable, \", out l))\");\n                    this.emitBlock(() => this.emitConsume(\"l\", xfer.consumer, targetType, emitFinish));\n                    break;\n                case \"bool\":\n                    this.emitLine(\"bool b;\");\n                    this.emitLine(\"if (Boolean.TryParse(\", variable, \", out b))\");\n                    this.emitBlock(() => this.emitConsume(\"b\", xfer.consumer, targetType, emitFinish));\n                    break;\n                default:\n                    return (0, Support_1.panic)(`Parsing string to ${immediateTargetType.kind} not supported`);\n            }\n        }\n        else if (xfer instanceof Transformers_1.StringifyTransformer) {\n            switch (xfer.sourceType.kind) {\n                case \"date-time\":\n                    return this.emitConsume([variable, '.ToString(\"o\", System.Globalization.CultureInfo.InvariantCulture)'], xfer.consumer, targetType, emitFinish);\n                case \"uuid\":\n                    return this.emitConsume([variable, '.ToString(\"D\", System.Globalization.CultureInfo.InvariantCulture)'], xfer.consumer, targetType, emitFinish);\n                case \"integer\":\n                case \"uri\":\n                    return this.emitConsume([variable, \".ToString()\"], xfer.consumer, targetType, emitFinish);\n                case \"bool\":\n                    this.emitLine(\"var boolString = \", variable, ' ? \"true\" : \"false\";');\n                    return this.emitConsume(\"boolString\", xfer.consumer, targetType, emitFinish);\n                default:\n                    return (0, Support_1.panic)(`Stringifying ${xfer.sourceType.kind} not supported`);\n            }\n        }\n        else if (xfer instanceof Transformers_1.StringProducerTransformer) {\n            const value = this.stringCaseValue(directTargetType(xfer.consumer), xfer.result);\n            return this.emitConsume(value, xfer.consumer, targetType, emitFinish);\n        }\n        else if (xfer instanceof Transformers_1.MinMaxLengthCheckTransformer) {\n            const min = xfer.minLength;\n            const max = xfer.maxLength;\n            const conditions = [];\n            if (min !== undefined) {\n                conditions.push([variable, \".Length >= \", min.toString()]);\n            }\n            if (max !== undefined) {\n                conditions.push([variable, \".Length <= \", max.toString()]);\n            }\n            this.emitLine(\"if (\", (0, collection_utils_1.arrayIntercalate)([\" && \"], conditions), \")\");\n            this.emitBlock(() => this.emitConsume(variable, xfer.consumer, targetType, emitFinish));\n            return false;\n        }\n        else if (xfer instanceof Transformers_1.MinMaxValueTransformer) {\n            const min = xfer.minimum;\n            const max = xfer.maximum;\n            const conditions = [];\n            if (min !== undefined) {\n                conditions.push([variable, \" >= \", min.toString()]);\n            }\n            if (max !== undefined) {\n                conditions.push([variable, \" <= \", max.toString()]);\n            }\n            this.emitLine(\"if (\", (0, collection_utils_1.arrayIntercalate)([\" && \"], conditions), \")\");\n            this.emitBlock(() => this.emitConsume(variable, xfer.consumer, targetType, emitFinish));\n            return false;\n        }\n        else if (xfer instanceof Transformers_1.UnionInstantiationTransformer) {\n            if (!(targetType instanceof Type_1.UnionType)) {\n                return (0, Support_1.panic)(\"Union instantiation transformer must produce a union type\");\n            }\n            const maybeNullable = (0, TypeUtils_1.nullableFromUnion)(targetType);\n            if (maybeNullable !== null) {\n                emitFinish(variable);\n            }\n            else {\n                const unionName = this.nameForNamedType(targetType);\n                let initializer;\n                if (xfer.sourceType.kind === \"null\") {\n                    initializer = \" \";\n                }\n                else {\n                    const memberName = this.nameForUnionMember(targetType, xfer.sourceType);\n                    initializer = [\" \", memberName, \" = \", variable, \" \"];\n                }\n                emitFinish([\"new \", unionName, \" {\", initializer, \"}\"]);\n            }\n            return true;\n        }\n        else {\n            return (0, Support_1.panic)(\"Unknown transformer\");\n        }\n        return false;\n    }\n    emitTransformation(converterName, t) {\n        const xf = (0, Support_1.defined)((0, Transformers_1.transformationForType)(t));\n        const reverse = xf.reverse;\n        const targetType = xf.targetType;\n        const xfer = xf.transformer;\n        const csType = this.csType(targetType);\n        // const haveNullable = isValueType(targetType);\n        // if (haveNullable) {\n        //     converterName = ['Nullable', converterName];\n        //     csType = [csType, \"?\"];\n        // }\n        this.emitType(undefined, AccessModifier.Internal, \"class\", converterName, [\"JsonConverter<\", csType, \">\"], () => {\n            let canConvertExpr = [\"t == typeof(\", csType, \")\"];\n            this.emitCanConvert(canConvertExpr);\n            this.ensureBlankLine();\n            this.emitReadJson(() => {\n                // FIXME: It's unsatisfying that we need this.  The reason is that we not\n                // only match T, but also T?.  If we didn't, then the T in T? would not be\n                // deserialized with our converter but with the default one.  Can we check\n                // whether the type is a nullable?\n                // FIXME: This could duplicate one of the cases handled below in\n                // `emitDecodeTransformer`.\n                // if (haveNullable && !(targetType instanceof UnionType)) {\n                //     this.emitLine(\"if (reader.TokenType == JsonTokenType.Null) return null;\");\n                // }\n                const allHandled = this.emitDecodeTransformer(xfer, targetType, v => this.emitLine(\"return \", v, \";\"));\n                if (!allHandled) {\n                    this.emitThrow(['\"Cannot unmarshal type ', csType, '\"']);\n                }\n            }, csType);\n            this.ensureBlankLine();\n            this.emitWriteJson(\"value\", () => {\n                // FIXME: See above.\n                // if (haveNullable && !(targetType instanceof UnionType)) {\n                //     this.emitLine(\"if (value == null)\");\n                //     this.emitBlock(() => {\n                //         this.emitLine(\"writer.WriteNullValue();\");\n                //         this.emitLine(\"return;\");\n                //     });\n                // }\n                const allHandled = this.emitTransformer(\"value\", reverse.transformer, reverse.targetType, () => this.emitLine(\"return;\"));\n                if (!allHandled) {\n                    this.emitThrow(['\"Cannot marshal type ', csType, '\"']);\n                }\n            }, csType);\n            this.ensureBlankLine();\n            this.emitLine(\"public static readonly \", converterName, \" Singleton = new \", converterName, \"();\");\n        });\n    }\n    emitRequiredHelpers() {\n        if (this._needHelpers) {\n            this.forEachTopLevel(\"leading-and-interposing\", (t, n) => this.emitFromJsonForTopLevel(t, n));\n            this.ensureBlankLine();\n            this.emitSerializeClass();\n        }\n        if (this._needHelpers || (this._needAttributes && (this.haveNamedUnions || this.haveEnums))) {\n            this.ensureBlankLine();\n            this.emitConverterClass();\n            this.forEachTransformation(\"leading-and-interposing\", (n, t) => this.emitTransformation(n, t));\n            this.emitMultiline(`\npublic class DateOnlyConverter : JsonConverter<DateOnly>\n{\n    private readonly string serializationFormat;\n    public DateOnlyConverter() : this(null) { }\n\n    public DateOnlyConverter(string? serializationFormat)\n    {\n        this.serializationFormat = serializationFormat ?? \"yyyy-MM-dd\";\n    }\n\n    public override DateOnly Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)\n    {\n        var value = reader.GetString();\n        return DateOnly.Parse(value!);\n    }\n\n    public override void Write(Utf8JsonWriter writer, DateOnly value, JsonSerializerOptions options)\n        => writer.WriteStringValue(value.ToString(serializationFormat));\n}\n\npublic class TimeOnlyConverter : JsonConverter<TimeOnly>\n{\n    private readonly string serializationFormat;\n\n    public TimeOnlyConverter() : this(null) { }\n\n    public TimeOnlyConverter(string? serializationFormat)\n    {\n        this.serializationFormat = serializationFormat ?? \"HH:mm:ss.fff\";\n    }\n\n    public override TimeOnly Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)\n    {\n        var value = reader.GetString();\n        return TimeOnly.Parse(value!);\n    }\n\n    public override void Write(Utf8JsonWriter writer, TimeOnly value, JsonSerializerOptions options)\n        => writer.WriteStringValue(value.ToString(serializationFormat));\n}\n\ninternal class IsoDateTimeOffsetConverter : JsonConverter<DateTimeOffset>\n{\n    public override bool CanConvert(Type t) => t == typeof(DateTimeOffset);\n\n    private const string DefaultDateTimeFormat = \"yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK\";\n\n    private DateTimeStyles _dateTimeStyles = DateTimeStyles.RoundtripKind;\n    private string? _dateTimeFormat;\n    private CultureInfo? _culture;\n\n    public DateTimeStyles DateTimeStyles\n    {\n        get => _dateTimeStyles;\n        set => _dateTimeStyles = value;\n    }\n\n    public string? DateTimeFormat\n    {\n        get => _dateTimeFormat ?? string.Empty;\n        set => _dateTimeFormat = (string.IsNullOrEmpty(value)) ? null : value;\n    }\n\n    public CultureInfo Culture\n    {\n        get => _culture ?? CultureInfo.CurrentCulture;\n        set => _culture = value;\n    }\n\n    public override void Write(Utf8JsonWriter writer, DateTimeOffset value, JsonSerializerOptions options)\n    {\n        string text;\n\n\n        if ((_dateTimeStyles & DateTimeStyles.AdjustToUniversal) == DateTimeStyles.AdjustToUniversal\n            || (_dateTimeStyles & DateTimeStyles.AssumeUniversal) == DateTimeStyles.AssumeUniversal)\n        {\n            value = value.ToUniversalTime();\n        }\n\n        text = value.ToString(_dateTimeFormat ?? DefaultDateTimeFormat, Culture);\n\n        writer.WriteStringValue(text);\n    }\n\n    public override DateTimeOffset Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)\n    {\n        string? dateText = reader.GetString();\n        \n        if (string.IsNullOrEmpty(dateText) == false)\n        {\n            if (!string.IsNullOrEmpty(_dateTimeFormat))\n            {\n                return DateTimeOffset.ParseExact(dateText, _dateTimeFormat, Culture, _dateTimeStyles);\n            }\n            else\n            {\n                return DateTimeOffset.Parse(dateText, Culture, _dateTimeStyles);\n            }\n        }\n        else\n        {\n            return default(DateTimeOffset);\n        }\n    }\n\n\n    public static readonly IsoDateTimeOffsetConverter Singleton = new IsoDateTimeOffsetConverter();\n}`);\n        }\n    }\n    needNamespace() {\n        return this._needNamespaces;\n    }\n}\nexports.SystemTextJsonCSharpRenderer = SystemTextJsonCSharpRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GoRenderer = exports.GoTargetLanguage = exports.goOptions = void 0;\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Naming_1 = require(\"../Naming\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Support_1 = require(\"../support/Support\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst Source_1 = require(\"../Source\");\nconst Annotation_1 = require(\"../Annotation\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nexports.goOptions = {\n    justTypes: new RendererOptions_1.BooleanOption(\"just-types\", \"Plain types only\", false),\n    justTypesAndPackage: new RendererOptions_1.BooleanOption(\"just-types-and-package\", \"Plain types with package only\", false),\n    packageName: new RendererOptions_1.StringOption(\"package\", \"Generated package name\", \"NAME\", \"main\"),\n    multiFileOutput: new RendererOptions_1.BooleanOption(\"multi-file-output\", \"Renders each top-level object in its own Go file\", false),\n    fieldTags: new RendererOptions_1.StringOption(\"field-tags\", \"list of tags which should be generated for fields\", \"TAGS\", \"json\"),\n    omitEmpty: new RendererOptions_1.BooleanOption(\"omit-empty\", 'If set, all non-required objects will be tagged with \",omitempty\"', false)\n};\nclass GoTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor() {\n        super(\"Go\", [\"go\", \"golang\"], \"go\");\n    }\n    getOptions() {\n        return [\n            exports.goOptions.justTypes,\n            exports.goOptions.justTypesAndPackage,\n            exports.goOptions.packageName,\n            exports.goOptions.multiFileOutput,\n            exports.goOptions.fieldTags,\n            exports.goOptions.omitEmpty\n        ];\n    }\n    get supportsUnionsWithBothNumberTypes() {\n        return true;\n    }\n    get stringTypeMapping() {\n        const mapping = new Map();\n        mapping.set(\"date-time\", \"date-time\");\n        return mapping;\n    }\n    get supportsOptionalClassProperties() {\n        return true;\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        return new GoRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.goOptions, untypedOptionValues));\n    }\n    get defaultIndentation() {\n        return \"\\t\";\n    }\n}\nexports.GoTargetLanguage = GoTargetLanguage;\nconst namingFunction = (0, Naming_1.funPrefixNamer)(\"namer\", goNameStyle);\nconst legalizeName = (0, Strings_1.legalizeCharacters)(Strings_1.isLetterOrUnderscoreOrDigit);\nfunction goNameStyle(original) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    return (0, Strings_1.combineWords)(words, legalizeName, Strings_1.firstUpperWordStyle, Strings_1.firstUpperWordStyle, Strings_1.allUpperWordStyle, Strings_1.allUpperWordStyle, \"\", Strings_1.isLetterOrUnderscore);\n}\nconst primitiveValueTypeKinds = [\"integer\", \"double\", \"bool\", \"string\"];\nconst compoundTypeKinds = [\"array\", \"class\", \"map\", \"enum\"];\nfunction isValueType(t) {\n    const kind = t.kind;\n    return primitiveValueTypeKinds.indexOf(kind) >= 0 || kind === \"class\" || kind === \"enum\" || kind === \"date-time\";\n}\nfunction canOmitEmpty(cp, omitEmptyOption) {\n    if (!cp.isOptional)\n        return false;\n    if (omitEmptyOption)\n        return true;\n    const t = cp.type;\n    return [\"union\", \"null\", \"any\"].indexOf(t.kind) < 0;\n}\nclass GoRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _options) {\n        super(targetLanguage, renderContext);\n        this._options = _options;\n        this._topLevelUnmarshalNames = new Map();\n    }\n    makeNamedTypeNamer() {\n        return namingFunction;\n    }\n    namerForObjectProperty() {\n        return namingFunction;\n    }\n    makeUnionMemberNamer() {\n        return namingFunction;\n    }\n    makeEnumCaseNamer() {\n        return namingFunction;\n    }\n    get enumCasesInGlobalNamespace() {\n        return true;\n    }\n    makeTopLevelDependencyNames(_, topLevelName) {\n        const unmarshalName = new Naming_1.DependencyName(namingFunction, topLevelName.order, lookup => `unmarshal_${lookup(topLevelName)}`);\n        this._topLevelUnmarshalNames.set(topLevelName, unmarshalName);\n        return [unmarshalName];\n    }\n    /// startFile takes a file name, lowercases it, appends \".go\" to it, and sets it as the current filename.\n    startFile(basename) {\n        if (this._options.multiFileOutput === false) {\n            return;\n        }\n        (0, Support_1.assert)(this._currentFilename === undefined, \"Previous file wasn't finished: \" + this._currentFilename);\n        this._currentFilename = `${this.sourcelikeToString(basename)}.go`;\n        this.initializeEmitContextForFilename(this._currentFilename);\n    }\n    /// endFile pushes the current file name onto the collection of finished files and then resets the current file name. These finished files are used in index.ts to write the output.\n    endFile() {\n        if (this._options.multiFileOutput === false) {\n            return;\n        }\n        this.finishFile((0, Support_1.defined)(this._currentFilename));\n        this._currentFilename = undefined;\n    }\n    emitBlock(line, f) {\n        this.emitLine(line, \" {\");\n        this.indent(f);\n        this.emitLine(\"}\");\n    }\n    emitFunc(decl, f) {\n        this.emitBlock([\"func \", decl], f);\n    }\n    emitStruct(name, table) {\n        this.emitBlock([\"type \", name, \" struct\"], () => this.emitTable(table));\n    }\n    nullableGoType(t, withIssues) {\n        const goType = this.goType(t, withIssues);\n        if (isValueType(t)) {\n            return [\"*\", goType];\n        }\n        else {\n            return goType;\n        }\n    }\n    propertyGoType(cp) {\n        const t = cp.type;\n        if (t instanceof Type_1.UnionType && (0, TypeUtils_1.nullableFromUnion)(t) === null) {\n            return [\"*\", this.goType(t, true)];\n        }\n        if (cp.isOptional) {\n            return this.nullableGoType(t, true);\n        }\n        return this.goType(t, true);\n    }\n    goType(t, withIssues = false) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.anyTypeIssueAnnotation, \"interface{}\"), _nullType => (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.nullTypeIssueAnnotation, \"interface{}\"), _boolType => \"bool\", _integerType => \"int64\", _doubleType => \"float64\", _stringType => \"string\", arrayType => [\"[]\", this.goType(arrayType.items, withIssues)], classType => this.nameForNamedType(classType), mapType => {\n            let valueSource;\n            const v = mapType.values;\n            if (v instanceof Type_1.UnionType && (0, TypeUtils_1.nullableFromUnion)(v) === null) {\n                valueSource = [\"*\", this.nameForNamedType(v)];\n            }\n            else {\n                valueSource = this.goType(v, withIssues);\n            }\n            return [\"map[string]\", valueSource];\n        }, enumType => this.nameForNamedType(enumType), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null)\n                return this.nullableGoType(nullable, withIssues);\n            return this.nameForNamedType(unionType);\n        }, transformedStringType => {\n            if (transformedStringType.kind === \"date-time\") {\n                return \"time.Time\";\n            }\n            return \"string\";\n        });\n    }\n    emitTopLevel(t, name) {\n        this.startFile(name);\n        if (this._options.multiFileOutput &&\n            this._options.justTypes === false &&\n            this._options.justTypesAndPackage === false &&\n            this.leadingComments === undefined) {\n            this.emitLineOnce(\"// This file was generated from JSON Schema using quicktype, do not modify it directly.\");\n            this.emitLineOnce(\"// To parse and unparse this JSON data, add this code to your project and do:\");\n            this.emitLineOnce(\"//\");\n            const ref = (0, Source_1.modifySource)(Strings_1.camelCase, name);\n            this.emitLineOnce(\"//    \", ref, \", err := \", (0, Support_1.defined)(this._topLevelUnmarshalNames.get(name)), \"(bytes)\");\n            this.emitLineOnce(\"//    bytes, err = \", ref, \".Marshal()\");\n        }\n        this.emitPackageDefinitons(true);\n        const unmarshalName = (0, Support_1.defined)(this._topLevelUnmarshalNames.get(name));\n        if (this.namedTypeToNameForTopLevel(t) === undefined) {\n            this.emitLine(\"type \", name, \" \", this.goType(t));\n        }\n        if (this._options.justTypes || this._options.justTypesAndPackage)\n            return;\n        this.ensureBlankLine();\n        this.emitFunc([unmarshalName, \"(data []byte) (\", name, \", error)\"], () => {\n            this.emitLine(\"var r \", name);\n            this.emitLine(\"err := json.Unmarshal(data, &r)\");\n            this.emitLine(\"return r, err\");\n        });\n        this.ensureBlankLine();\n        this.emitFunc([\"(r *\", name, \") Marshal() ([]byte, error)\"], () => {\n            this.emitLine(\"return json.Marshal(r)\");\n        });\n        this.endFile();\n    }\n    emitClass(c, className) {\n        this.startFile(className);\n        let columns = [];\n        const usedTypes = new Set();\n        this.forEachClassProperty(c, \"none\", (name, jsonName, p) => {\n            const description = this.descriptionForClassProperty(c, jsonName);\n            const docStrings = description !== undefined && description.length > 0 ? description.map(d => \"// \" + d) : [];\n            const goType = this.propertyGoType(p);\n            const omitEmpty = canOmitEmpty(p, this._options.omitEmpty) ? \",omitempty\" : [];\n            docStrings.forEach(doc => columns.push([doc]));\n            const tags = this._options.fieldTags\n                .split(\",\")\n                .map(tag => tag + ':\"' + (0, Strings_1.stringEscape)(jsonName) + omitEmpty + '\"')\n                .join(\" \");\n            columns.push([\n                [name, \" \"],\n                [goType, \" \"],\n                [\"`\", tags, \"`\"]\n            ]);\n            usedTypes.add(goType.toString());\n        });\n        this.emitPackageDefinitons(false, usedTypes.has(\"time.Time\") || usedTypes.has(\"*,time.Time\") || usedTypes.has(\"[],time.Time\") ? new Set([\"time\"]) : undefined);\n        this.emitDescription(this.descriptionForType(c));\n        this.emitStruct(className, columns);\n        this.endFile();\n    }\n    emitEnum(e, enumName) {\n        this.startFile(enumName);\n        this.emitPackageDefinitons(false);\n        this.emitDescription(this.descriptionForType(e));\n        this.emitLine(\"type \", enumName, \" string\");\n        this.ensureBlankLine();\n        this.emitLine(\"const (\");\n        let columns = [];\n        this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n            columns.push([\n                [name, \" \"],\n                [enumName, ' = \"', (0, Strings_1.stringEscape)(jsonName), '\"']\n            ]);\n        });\n        this.indent(() => this.emitTable(columns));\n        this.emitLine(\")\");\n        this.endFile();\n    }\n    emitUnion(u, unionName) {\n        this.startFile(unionName);\n        this.emitPackageDefinitons(false);\n        const [hasNull, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(u);\n        const isNullableArg = hasNull !== null ? \"true\" : \"false\";\n        const ifMember = (kind, ifNotMember, f) => {\n            const maybeType = u.findMember(kind);\n            if (maybeType === undefined)\n                return ifNotMember;\n            return f(maybeType, this.nameForUnionMember(u, maybeType), this.goType(maybeType));\n        };\n        const maybeAssignNil = (kind) => {\n            ifMember(kind, undefined, (_1, fieldName, _2) => {\n                this.emitLine(\"x.\", fieldName, \" = nil\");\n            });\n        };\n        const makeArgs = (primitiveArg, compoundArg) => {\n            const args = [];\n            for (const kind of primitiveValueTypeKinds) {\n                args.push(ifMember(kind, \"nil\", (_1, fieldName, _2) => primitiveArg(fieldName)), \", \");\n            }\n            for (const kind of compoundTypeKinds) {\n                args.push(ifMember(kind, \"false, nil\", (t, fieldName, _) => compoundArg(t.kind === \"class\", fieldName)), \", \");\n            }\n            args.push(isNullableArg);\n            return args;\n        };\n        let columns = [];\n        this.forEachUnionMember(u, nonNulls, \"none\", null, (fieldName, t) => {\n            const goType = this.nullableGoType(t, true);\n            columns.push([[fieldName, \" \"], goType]);\n        });\n        this.emitDescription(this.descriptionForType(u));\n        this.emitStruct(unionName, columns);\n        if (this._options.justTypes || this._options.justTypesAndPackage)\n            return;\n        this.ensureBlankLine();\n        this.emitFunc([\"(x *\", unionName, \") UnmarshalJSON(data []byte) error\"], () => {\n            for (const kind of compoundTypeKinds) {\n                maybeAssignNil(kind);\n            }\n            ifMember(\"class\", undefined, (_1, _2, goType) => {\n                this.emitLine(\"var c \", goType);\n            });\n            const args = makeArgs(fn => [\"&x.\", fn], (isClass, fn) => {\n                if (isClass) {\n                    return \"true, &c\";\n                }\n                else {\n                    return [\"true, &x.\", fn];\n                }\n            });\n            this.emitLine(\"object, err := unmarshalUnion(data, \", args, \")\");\n            this.emitBlock(\"if err != nil\", () => {\n                this.emitLine(\"return err\");\n            });\n            this.emitBlock(\"if object\", () => {\n                ifMember(\"class\", undefined, (_1, fieldName, _2) => {\n                    this.emitLine(\"x.\", fieldName, \" = &c\");\n                });\n            });\n            this.emitLine(\"return nil\");\n        });\n        this.ensureBlankLine();\n        this.emitFunc([\"(x *\", unionName, \") MarshalJSON() ([]byte, error)\"], () => {\n            const args = makeArgs(fn => [\"x.\", fn], (_, fn) => [\"x.\", fn, \" != nil, x.\", fn]);\n            this.emitLine(\"return marshalUnion(\", args, \")\");\n        });\n        this.endFile();\n    }\n    emitSingleFileHeaderComments() {\n        this.emitLineOnce(\"// This file was generated from JSON Schema using quicktype, do not modify it directly.\");\n        this.emitLineOnce(\"// To parse and unparse this JSON data, add this code to your project and do:\");\n        this.forEachTopLevel(\"none\", (_, name) => {\n            this.emitLine(\"//\");\n            const ref = (0, Source_1.modifySource)(Strings_1.camelCase, name);\n            this.emitLine(\"//    \", ref, \", err := \", (0, Support_1.defined)(this._topLevelUnmarshalNames.get(name)), \"(bytes)\");\n            this.emitLine(\"//    bytes, err = \", ref, \".Marshal()\");\n        });\n    }\n    emitPackageDefinitons(includeJSONEncodingImport, imports = new Set()) {\n        if (!this._options.justTypes || this._options.justTypesAndPackage) {\n            this.ensureBlankLine();\n            const packageDeclaration = \"package \" + this._options.packageName;\n            this.emitLineOnce(packageDeclaration);\n            this.ensureBlankLine();\n        }\n        if (!this._options.justTypes && !this._options.justTypesAndPackage) {\n            if (this.haveNamedUnions && this._options.multiFileOutput === false) {\n                imports.add(\"bytes\");\n                imports.add(\"errors\");\n            }\n            if (includeJSONEncodingImport) {\n                imports.add(\"encoding/json\");\n            }\n        }\n        this.emitImports(imports);\n    }\n    emitImports(imports) {\n        const sortedImports = Array.from(imports).sort((a, b) => a.localeCompare(b));\n        if (sortedImports.length === 0) {\n            return;\n        }\n        sortedImports.forEach(packageName => {\n            this.emitLineOnce(`import \"${packageName}\"`);\n        });\n        this.ensureBlankLine();\n    }\n    emitHelperFunctions() {\n        if (this.haveNamedUnions) {\n            this.startFile(\"JSONSchemaSupport\");\n            const imports = new Set();\n            if (this._options.multiFileOutput) {\n                imports.add(\"bytes\");\n                imports.add(\"errors\");\n            }\n            this.emitPackageDefinitons(true, imports);\n            this.ensureBlankLine();\n            this\n                .emitMultiline(`func unmarshalUnion(data []byte, pi **int64, pf **float64, pb **bool, ps **string, haveArray bool, pa interface{}, haveObject bool, pc interface{}, haveMap bool, pm interface{}, haveEnum bool, pe interface{}, nullable bool) (bool, error) {\n    if pi != nil {\n        *pi = nil\n    }\n    if pf != nil {\n        *pf = nil\n    }\n    if pb != nil {\n        *pb = nil\n    }\n    if ps != nil {\n        *ps = nil\n    }\n\n    dec := json.NewDecoder(bytes.NewReader(data))\n    dec.UseNumber()\n    tok, err := dec.Token()\n    if err != nil {\n        return false, err\n    }\n\n    switch v := tok.(type) {\n    case json.Number:\n        if pi != nil {\n            i, err := v.Int64()\n            if err == nil {\n                *pi = &i\n                return false, nil\n            }\n        }\n        if pf != nil {\n            f, err := v.Float64()\n            if err == nil {\n                *pf = &f\n                return false, nil\n            }\n            return false, errors.New(\"Unparsable number\")\n        }\n        return false, errors.New(\"Union does not contain number\")\n    case float64:\n        return false, errors.New(\"Decoder should not return float64\")\n    case bool:\n        if pb != nil {\n            *pb = &v\n            return false, nil\n        }\n        return false, errors.New(\"Union does not contain bool\")\n    case string:\n        if haveEnum {\n            return false, json.Unmarshal(data, pe)\n        }\n        if ps != nil {\n            *ps = &v\n            return false, nil\n        }\n        return false, errors.New(\"Union does not contain string\")\n    case nil:\n        if nullable {\n            return false, nil\n        }\n        return false, errors.New(\"Union does not contain null\")\n    case json.Delim:\n        if v == '{' {\n            if haveObject {\n                return true, json.Unmarshal(data, pc)\n            }\n            if haveMap {\n                return false, json.Unmarshal(data, pm)\n            }\n            return false, errors.New(\"Union does not contain object\")\n        }\n        if v == '[' {\n            if haveArray {\n                return false, json.Unmarshal(data, pa)\n            }\n            return false, errors.New(\"Union does not contain array\")\n        }\n        return false, errors.New(\"Cannot handle delimiter\")\n    }\n    return false, errors.New(\"Cannot unmarshal union\")\n\n}\n\nfunc marshalUnion(pi *int64, pf *float64, pb *bool, ps *string, haveArray bool, pa interface{}, haveObject bool, pc interface{}, haveMap bool, pm interface{}, haveEnum bool, pe interface{}, nullable bool) ([]byte, error) {\n    if pi != nil {\n        return json.Marshal(*pi)\n    }\n    if pf != nil {\n        return json.Marshal(*pf)\n    }\n    if pb != nil {\n        return json.Marshal(*pb)\n    }\n    if ps != nil {\n        return json.Marshal(*ps)\n    }\n    if haveArray {\n        return json.Marshal(pa)\n    }\n    if haveObject {\n        return json.Marshal(pc)\n    }\n    if haveMap {\n        return json.Marshal(pm)\n    }\n    if haveEnum {\n        return json.Marshal(pe)\n    }\n    if nullable {\n        return json.Marshal(nil)\n    }\n    return nil, errors.New(\"Union must not be null\")\n}`);\n            this.endFile();\n        }\n    }\n    emitSourceStructure() {\n        if (this._options.multiFileOutput === false &&\n            this._options.justTypes === false &&\n            this._options.justTypesAndPackage === false &&\n            this.leadingComments === undefined) {\n            this.emitSingleFileHeaderComments();\n            this.emitPackageDefinitons(false, this.collectAllImports());\n        }\n        this.forEachTopLevel(\"leading-and-interposing\", (t, name) => this.emitTopLevel(t, name), t => !(this._options.justTypes || this._options.justTypesAndPackage) ||\n            this.namedTypeToNameForTopLevel(t) === undefined);\n        this.forEachObject(\"leading-and-interposing\", (c, className) => this.emitClass(c, className));\n        this.forEachEnum(\"leading-and-interposing\", (u, enumName) => this.emitEnum(u, enumName));\n        this.forEachUnion(\"leading-and-interposing\", (u, unionName) => this.emitUnion(u, unionName));\n        if (this._options.justTypes || this._options.justTypesAndPackage) {\n            return;\n        }\n        this.emitHelperFunctions();\n    }\n    collectAllImports() {\n        let imports = new Set();\n        this.forEachObject(\"leading-and-interposing\", (c, _className) => {\n            const classImports = this.collectClassImports(c);\n            imports = new Set([...imports, ...classImports]);\n        });\n        this.forEachUnion(\"leading-and-interposing\", (u, _unionName) => {\n            const unionImports = this.collectUnionImports(u);\n            imports = new Set([...imports, ...unionImports]);\n        });\n        return imports;\n    }\n    collectClassImports(c) {\n        const usedTypes = new Set();\n        const mapping = new Map();\n        mapping.set(\"time.Time\", \"time\");\n        mapping.set(\"*,time.Time\", \"time\");\n        this.forEachClassProperty(c, \"none\", (_name, _jsonName, p) => {\n            const goType = this.propertyGoType(p);\n            usedTypes.add(goType.toString());\n        });\n        const imports = new Set();\n        usedTypes.forEach(k => {\n            const typeImport = mapping.get(k);\n            if (typeImport) {\n                imports.add(typeImport);\n            }\n        });\n        return imports;\n    }\n    collectUnionImports(u) {\n        const usedTypes = new Set();\n        const mapping = new Map();\n        mapping.set(\"time.Time\", \"time\");\n        mapping.set(\"*,time.Time\", \"time\");\n        this.forEachUnionMember(u, null, \"none\", null, (_fieldName, t) => {\n            const goType = this.nullableGoType(t, true);\n            usedTypes.add(goType.toString());\n        });\n        const imports = new Set();\n        usedTypes.forEach(k => {\n            const typeImport = mapping.get(k);\n            if (!typeImport) {\n                return;\n            }\n            imports.add(typeImport);\n        });\n        return imports;\n    }\n}\nexports.GoRenderer = GoRenderer;\n","\"use strict\";\n/**\n * CJSON.ts\n * This file is used to generate cJSON code with quicktype\n * The generated code depends of https://github.com/DaveGamble/cJSON, https://github.com/joelguittet/c-list and https://github.com/joelguittet/c-hashtable\n *\n * Similarly to C++ generator, it is possible to generate a single header file or multiple header files.\n * To generate multiple header files, use the following option: --source-style multi-source\n *\n * JSON data are represented using structures, and functions in the cJSON style are created to use them.\n * To parse json data from json string use the following: struct <type> * data = cJSON_Parse<type>(<string>);\n * To get json data from cJSON object use the following: struct <type> * data = cJSON_Get<type>Value(<cjson>);\n * To get cJSON object from json data use the following: cJSON * cjson = cJSON_Create<type>(<data>);\n * To print json string from json data use the following: char * string = cJSON_Print<type>(<data>);\n * To delete json data use the following: cJSON_Delete<type>(<data>);\n *\n * TODO list for futur enhancements:\n * - Management of Class, Union and TopLevel should be mutualized to reduce code size and to permit Union and TopLevel having recursive Array/Map\n * - Types check should be added to verify unwanted inputs (for example a Number passed while a String is expected, etc)\n * - Constraints should be implemented (verification of Enum values, min/max values for Numbers and min/max length for Strings, regex)\n * - Support of pure Any type for example providing a callback from the application to handle these cases dynamically\n * See test/languages.ts for the test cases which are not implmented/checked.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CJSONRenderer = exports.IncludeKind = exports.GlobalNames = exports.CJSONTargetLanguage = exports.cJSONOptions = void 0;\n/* Imports */\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Naming_1 = require(\"../Naming\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Support_1 = require(\"../support/Support\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst Support_2 = require(\"../support/Support\");\nconst AccessorNames_1 = require(\"../attributes/AccessorNames\");\nconst EnumValues_1 = require(\"../attributes/EnumValues\");\n/* Naming styles */\nconst pascalValue = [\"pascal-case\", \"pascal\"];\nconst underscoreValue = [\"underscore-case\", \"underscore\"];\nconst camelValue = [\"camel-case\", \"camel\"];\nconst upperUnderscoreValue = [\"upper-underscore-case\", \"upper-underscore\"];\nconst pascalUpperAcronymsValue = [\"pascal-case-upper-acronyms\", \"pascal-upper-acronyms\"];\nconst camelUpperAcronymsValue = [\"camel-case-upper-acronyms\", \"camel-upper-acronyms\"];\n/* cJSON generator options */\nexports.cJSONOptions = {\n    typeSourceStyle: new RendererOptions_1.EnumOption(\"source-style\", \"Source code generation type, whether to generate single or multiple source files\", [\n        [\"single-source\", true],\n        [\"multi-source\", false]\n    ], \"single-source\", \"secondary\"),\n    typeIntegerSize: new RendererOptions_1.EnumOption(\"integer-size\", \"Integer code generation type (int64_t by default)\", [\n        [\"int8_t\", \"int8_t\"],\n        [\"int16_t\", \"int16_t\"],\n        [\"int32_t\", \"int32_t\"],\n        [\"int64_t\", \"int64_t\"]\n    ], \"int64_t\", \"secondary\"),\n    hashtableSize: new RendererOptions_1.StringOption(\"hashtable-size\", \"Hashtable size, used when maps are created (64 by default)\", \"SIZE\", \"64\"),\n    addTypedefAlias: new RendererOptions_1.EnumOption(\"typedef-alias\", \"Add typedef alias to unions, structs, and enums (no typedef by default)\", [\n        [\"no-typedef\", false],\n        [\"add-typedef\", true]\n    ], \"no-typedef\", \"secondary\"),\n    printStyle: new RendererOptions_1.EnumOption(\"print-style\", \"Which cJSON print should be used (formatted by default)\", [\n        [\"print-formatted\", false],\n        [\"print-unformatted\", true]\n    ], \"print-formatted\", \"secondary\"),\n    typeNamingStyle: new RendererOptions_1.EnumOption(\"type-style\", \"Naming style for types\", [\n        pascalValue,\n        underscoreValue,\n        camelValue,\n        upperUnderscoreValue,\n        pascalUpperAcronymsValue,\n        camelUpperAcronymsValue\n    ]),\n    memberNamingStyle: new RendererOptions_1.EnumOption(\"member-style\", \"Naming style for members\", [\n        underscoreValue,\n        pascalValue,\n        camelValue,\n        upperUnderscoreValue,\n        pascalUpperAcronymsValue,\n        camelUpperAcronymsValue\n    ]),\n    enumeratorNamingStyle: new RendererOptions_1.EnumOption(\"enumerator-style\", \"Naming style for enumerators\", [\n        upperUnderscoreValue,\n        underscoreValue,\n        pascalValue,\n        camelValue,\n        pascalUpperAcronymsValue,\n        camelUpperAcronymsValue\n    ])\n};\n/* cJSON generator target language */\nclass CJSONTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    /**\n     * Constructor\n     * @param displayName: display name\n     * @params names: names\n     * @param extension: extension of files\n     */\n    constructor(displayName = \"C (cJSON)\", names = [\"cjson\", \"cJSON\"], extension = \"h\") {\n        super(displayName, names, extension);\n    }\n    /**\n     * Return cJSON generator options\n     * @return cJSON generator options array\n     */\n    getOptions() {\n        return [\n            exports.cJSONOptions.typeSourceStyle,\n            exports.cJSONOptions.typeIntegerSize,\n            exports.cJSONOptions.addTypedefAlias,\n            exports.cJSONOptions.printStyle,\n            exports.cJSONOptions.hashtableSize,\n            exports.cJSONOptions.typeNamingStyle,\n            exports.cJSONOptions.memberNamingStyle,\n            exports.cJSONOptions.enumeratorNamingStyle\n        ];\n    }\n    /**\n     * Indicate if language support union with both number types\n     * @return true\n     */\n    get supportsUnionsWithBothNumberTypes() {\n        return true;\n    }\n    /**\n     * Indicate if language support optional class properties\n     * @return true\n     */\n    get supportsOptionalClassProperties() {\n        return true;\n    }\n    /**\n     * Create renderer\n     * @param renderContext: render context\n     * @param untypedOptionValues\n     * @return cJSON renderer\n     */\n    makeRenderer(renderContext, untypedOptionValues) {\n        return new CJSONRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.cJSONOptions, untypedOptionValues));\n    }\n}\nexports.CJSONTargetLanguage = CJSONTargetLanguage;\n/* Function used to format names */\nconst legalizeName = (0, Strings_1.legalizeCharacters)(cp => (0, Strings_1.isAscii)(cp) && (0, Strings_1.isLetterOrUnderscoreOrDigit)(cp));\n/* Forbidden names for namespace */\nconst keywords = [\n    /* C and C++ keywords */\n    \"alignas\",\n    \"alignof\",\n    \"and\",\n    \"and_eq\",\n    \"asm\",\n    \"atomic_cancel\",\n    \"atomic_commit\",\n    \"atomic_noexcept\",\n    \"auto\",\n    \"bitand\",\n    \"bitor\",\n    \"bool\",\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"char\",\n    \"char16_t\",\n    \"char32_t\",\n    \"class\",\n    \"compl\",\n    \"concept\",\n    \"const\",\n    \"constexpr\",\n    \"const_cast\",\n    \"continue\",\n    \"co_await\",\n    \"co_return\",\n    \"co_yield\",\n    \"decltype\",\n    \"default\",\n    \"delete\",\n    \"do\",\n    \"double\",\n    \"dynamic_cast\",\n    \"else\",\n    \"enum\",\n    \"explicit\",\n    \"export\",\n    \"extern\",\n    \"false\",\n    \"float\",\n    \"for\",\n    \"friend\",\n    \"goto\",\n    \"if\",\n    \"import\",\n    \"inline\",\n    \"int\",\n    \"long\",\n    \"module\",\n    \"mutable\",\n    \"namespace\",\n    \"new\",\n    \"noexcept\",\n    \"not\",\n    \"not_eq\",\n    \"nullptr\",\n    \"operator\",\n    \"or\",\n    \"or_eq\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"register\",\n    \"reinterpret_cast\",\n    \"requires\",\n    \"restrict\",\n    \"return\",\n    \"short\",\n    \"signed\",\n    \"sizeof\",\n    \"static\",\n    \"static_assert\",\n    \"static_cast\",\n    \"struct\",\n    \"switch\",\n    \"synchronized\",\n    \"template\",\n    \"this\",\n    \"thread_local\",\n    \"throw\",\n    \"true\",\n    \"try\",\n    \"typedef\",\n    \"typeid\",\n    \"typename\",\n    \"typeof\",\n    \"union\",\n    \"unsigned\",\n    \"using\",\n    \"virtual\",\n    \"void\",\n    \"volatile\",\n    \"wchar_t\",\n    \"while\",\n    \"xor\",\n    \"xor_eq\",\n    \"override\",\n    \"final\",\n    \"transaction_safe\",\n    \"transaction_safe_dynamic\",\n    \"NULL\",\n    /* cJSON keywords */\n    \"Array\",\n    \"ArrayReference\",\n    \"Bool\",\n    \"DoubleArray\",\n    \"False\",\n    \"FloatArray\",\n    \"IntArray\",\n    \"Object\",\n    \"Null\",\n    \"Number\",\n    \"Raw\",\n    \"String\",\n    \"StringArray\",\n    \"StringReference\",\n    \"True\"\n];\n/* Used to build forbidden global names */\nvar GlobalNames;\n(function (GlobalNames) {\n    GlobalNames[GlobalNames[\"ClassMemberConstraints\"] = 0] = \"ClassMemberConstraints\";\n    GlobalNames[GlobalNames[\"ClassMemberConstraintException\"] = 1] = \"ClassMemberConstraintException\";\n    GlobalNames[GlobalNames[\"ValueTooLowException\"] = 2] = \"ValueTooLowException\";\n    GlobalNames[GlobalNames[\"ValueTooHighException\"] = 3] = \"ValueTooHighException\";\n    GlobalNames[GlobalNames[\"ValueTooShortException\"] = 4] = \"ValueTooShortException\";\n    GlobalNames[GlobalNames[\"ValueTooLongException\"] = 5] = \"ValueTooLongException\";\n    GlobalNames[GlobalNames[\"InvalidPatternException\"] = 6] = \"InvalidPatternException\";\n    GlobalNames[GlobalNames[\"CheckConstraint\"] = 7] = \"CheckConstraint\";\n})(GlobalNames = exports.GlobalNames || (exports.GlobalNames = {}));\n/* To be able to support circles in multiple files - e.g. class#A using class#B using class#A (obviously not directly) we can forward declare them */\nvar IncludeKind;\n(function (IncludeKind) {\n    IncludeKind[IncludeKind[\"ForwardDeclare\"] = 0] = \"ForwardDeclare\";\n    IncludeKind[IncludeKind[\"Include\"] = 1] = \"Include\";\n})(IncludeKind = exports.IncludeKind || (exports.IncludeKind = {}));\n/* cJSON renderer */\nclass CJSONRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    /**\n     * Constructor\n     * @param targetLanguage: target language\n     * @param renderContext: render context\n     * @param _options: renderer options\n     */\n    constructor(targetLanguage, renderContext, _options) {\n        super(targetLanguage, renderContext);\n        this._options = _options;\n        this.typeIntegerSize = _options.typeIntegerSize;\n        this.hashtableSize = _options.hashtableSize;\n        this.typeNamingStyle = _options.typeNamingStyle;\n        this.namedTypeNameStyle = (0, Strings_1.makeNameStyle)(this.typeNamingStyle, legalizeName);\n        this.enumeratorNamingStyle = _options.enumeratorNamingStyle;\n        this.memberNameStyle = (0, Strings_1.makeNameStyle)(_options.memberNamingStyle, legalizeName);\n        this.forbiddenGlobalNames = [];\n        for (const type of (0, Support_1.numberEnumValues)(GlobalNames)) {\n            const genName = this.namedTypeNameStyle(GlobalNames[type]);\n            this.forbiddenGlobalNames.push(genName);\n        }\n    }\n    /**\n     * Build forbidden names for namespace\n     * @return Forbidden names for namespace\n     */\n    forbiddenNamesForGlobalNamespace() {\n        return [...keywords, ...this.forbiddenGlobalNames];\n    }\n    /**\n     * Build forbidden names for enums\n     * @return Forbidden names for enums\n     */\n    forbiddenForEnumCases(_enumType, _enumName) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    /**\n     * Build forbidden names for unions members\n     * @return Forbidden names for unions members\n     */\n    forbiddenForUnionMembers(_u, _unionName) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    /**\n     * Build forbidden names for objects\n     * @return Forbidden names for objects\n     */\n    forbiddenForObjectProperties(_c, _className) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    /**\n     * Build types member names\n     * @return types member namer\n     */\n    makeNamedTypeNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"types\", this.namedTypeNameStyle);\n    }\n    /**\n     * Build object properties member names\n     * @return object properties member namer\n     */\n    namerForObjectProperty() {\n        return (0, Naming_1.funPrefixNamer)(\"members\", this.memberNameStyle);\n    }\n    /**\n     * Build union member names\n     * @return union member namer\n     */\n    makeUnionMemberNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"members\", this.memberNameStyle);\n    }\n    /**\n     * Build enum member names\n     * @return enum member namer\n     */\n    makeEnumCaseNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"enumerators\", (0, Strings_1.makeNameStyle)(this.enumeratorNamingStyle, legalizeName));\n    }\n    /**\n     * Override of super proposeUnionMemberName function\n     * @param unionType: union type\n     * @param unionName: union name\n     * @param fieldType: field type\n     * @param lookup: Lookup function\n     * @return Proposed union member name\n     */\n    proposeUnionMemberName(unionType, unionName, fieldType, lookup) {\n        let fieldName = super.proposeUnionMemberName(unionType, unionName, fieldType, lookup);\n        if (\"bool\" === fieldName) {\n            fieldName = \"boolean\";\n        }\n        else if (\"double\" === fieldName) {\n            fieldName = \"number\";\n        }\n        return fieldName;\n    }\n    /**\n     * Function called to emit typedef alias for a a given type\n     * @param fieldType: the variable type\n     * @param fieldName: name of the variable\n     */\n    emitTypdefAlias(fieldType, fieldName) {\n        if (this._options.addTypedefAlias) {\n            this.emitLine(\"typedef \", this.quicktypeTypeToCJSON(fieldType, false).cType, \" \", fieldName, \";\");\n            this.ensureBlankLine();\n        }\n    }\n    /**\n     * Function called to create header file(s)\n     * @param proposedFilename: source filename provided from stdin\n     */\n    emitSourceStructure(proposedFilename) {\n        /* Depending of source style option, generate a unique header or multiple header files */\n        if (this._options.typeSourceStyle) {\n            this.emitSingleSourceStructure(proposedFilename);\n        }\n        else {\n            this.emitMultiSourceStructure();\n        }\n    }\n    /**\n     * Function called to create a single header file with types and generators\n     * @param proposedFilename: source filename provided from stdin\n     */\n    emitSingleSourceStructure(proposedFilename) {\n        /* Create file */\n        this.startFile(proposedFilename);\n        /* Create types */\n        this.forEachDeclaration(\"leading-and-interposing\", decl => {\n            if (decl.kind === \"forward\") {\n                this.emitLine(\"struct \", this.nameForNamedType(decl.type), \";\");\n            }\n            else if (decl.kind === \"define\") {\n                const type = decl.type;\n                if (type instanceof Type_1.ClassType) {\n                    this.emitClassTypedef(type);\n                }\n                else if (type instanceof Type_1.EnumType) {\n                    this.emitEnumTypedef(type);\n                }\n                else if (type instanceof Type_1.UnionType) {\n                    this.emitUnionTypedef(type);\n                }\n                else {\n                    (0, Support_1.panic)(\"Cannot declare type\");\n                }\n            }\n            else {\n                (0, Support_1.assertNever)(decl.kind);\n            }\n        });\n        /* Create top level type */\n        this.forEachTopLevel(\"leading\", (type, className) => this.emitTopLevelTypedef(type, className), type => this.namedTypeToNameForTopLevel(type) === undefined);\n        /* Create enum prototypes */\n        this.forEachEnum(\"leading-and-interposing\", (enumType, _enumName) => this.emitEnumPrototypes(enumType));\n        /* Create union prototypes */\n        this.forEachUnion(\"leading-and-interposing\", (unionType) => this.emitUnionPrototypes(unionType));\n        /* Create class prototypes */\n        this.forEachObject(\"leading-and-interposing\", (classType, _className) => this.emitClassPrototypes(classType));\n        /* Create top level prototypes */\n        this.forEachTopLevel(\"leading\", (type, className) => this.emitTopLevelPrototypes(type, className), type => this.namedTypeToNameForTopLevel(type) === undefined);\n        /* Create enum functions */\n        this.forEachEnum(\"leading-and-interposing\", (enumType, _enumName) => this.emitEnumFunctions(enumType));\n        /* Create union functions */\n        this.forEachUnion(\"leading-and-interposing\", (unionType) => this.emitUnionFunctions(unionType));\n        /* Create class functions */\n        this.forEachObject(\"leading-and-interposing\", (classType, _className) => this.emitClassFunctions(classType));\n        /* Create top level functions */\n        this.forEachTopLevel(\"leading\", (type, className) => this.emitTopLevelFunctions(type, className), type => this.namedTypeToNameForTopLevel(type) === undefined);\n        /* Close file */\n        this.finishFile();\n    }\n    /**\n     * Function called to create a multiple header files with types and generators\n     */\n    emitMultiSourceStructure() {\n        /* Array of includes */\n        let includes;\n        /* Create each file */\n        this.forEachNamedType(\"leading-and-interposing\", (classType, _name) => {\n            this.emitClass(classType, includes);\n        }, (enumType, _name) => {\n            this.emitEnum(enumType, includes);\n        }, (unionType, _name) => {\n            this.emitUnion(unionType, includes);\n        });\n        /* Create top level file */\n        this.forEachTopLevel(\"leading\", (type, className) => this.emitTopLevel(type, className, includes), type => this.namedTypeToNameForTopLevel(type) === undefined);\n    }\n    /**\n     * Function called to create an enum header files with types and generators\n     * @param enumType: enum type\n     * @param includes: Array of includes\n     */\n    emitEnum(enumType, includes) {\n        /* Create file */\n        const enumName = this.nameForNamedType(enumType);\n        const filename = this.sourcelikeToString(enumName).concat(\".h\");\n        includes.push(filename);\n        this.startFile(filename);\n        /* Create includes */\n        this.emitIncludes(enumType, this.sourcelikeToString(filename));\n        /* Create types */\n        this.emitEnumTypedef(enumType);\n        /* Create prototypes */\n        this.emitEnumPrototypes(enumType);\n        /* Create functions */\n        this.emitEnumFunctions(enumType);\n        /* Close file */\n        this.finishFile();\n    }\n    /**\n     * Function called to create enum typedef\n     * @param enumType: enum type\n     */\n    emitEnumTypedef(enumType) {\n        /* FIXME: Now there is a language with need of global enum name, see FIXME in makeNameForEnumCase of ConvenienceRenderer.ts, should simplify here when fixed */\n        const enumName = this.nameForNamedType(enumType);\n        const enumValues = (0, EnumValues_1.enumCaseValues)(enumType, this.targetLanguage.name);\n        this.emitDescription(this.descriptionForType(enumType));\n        this.emitBlock([\"enum \", enumName], () => {\n            const combinedName = (0, Strings_1.allUpperWordStyle)(this.sourcelikeToString(enumName));\n            this.forEachEnumCase(enumType, \"none\", (name, jsonName) => {\n                if (enumValues !== undefined) {\n                    const [enumValue] = (0, AccessorNames_1.getAccessorName)(enumValues, jsonName);\n                    if (enumValue !== undefined) {\n                        this.emitLine(combinedName, \"_\", name, \" = \", enumValue.toString(), \",\");\n                    }\n                    else {\n                        this.emitLine(combinedName, \"_\", name, \",\");\n                    }\n                }\n                else {\n                    this.emitLine(combinedName, \"_\", name, \",\");\n                }\n            });\n        }, \"\", true);\n        this.ensureBlankLine();\n        this.emitTypdefAlias(enumType, enumName);\n    }\n    /**\n     * Function called to create enum prototypes\n     * @param enumType: enum type\n     */\n    emitEnumPrototypes(enumType) {\n        const enumName = this.nameForNamedType(enumType);\n        this.emitLine(\"enum \", enumName, \" cJSON_Get\", enumName, \"Value(\", this.withConst(\"cJSON\"), \" * j);\");\n        this.emitLine(\"cJSON * cJSON_Create\", enumName, \"(\", this.withConst([\"enum \", enumName]), \" x);\");\n        this.ensureBlankLine();\n    }\n    /**\n     * Function called to create enum functions\n     * @param enumType: enum type\n     */\n    emitEnumFunctions(enumType) {\n        const enumName = this.nameForNamedType(enumType);\n        /* Create cJSON to enumName generator function */\n        this.emitBlock([\"enum \", enumName, \" cJSON_Get\", enumName, \"Value(\", this.withConst(\"cJSON\"), \" * j)\"], () => {\n            this.emitLine(\"enum \", enumName, \" x = 0;\");\n            this.emitBlock([\"if (NULL != j)\"], () => {\n                let onFirst = true;\n                const combinedName = (0, Strings_1.allUpperWordStyle)(this.sourcelikeToString(enumName));\n                this.forEachEnumCase(enumType, \"none\", (name, jsonName) => {\n                    this.emitLine(onFirst ? \"\" : \"else \", 'if (!strcmp(cJSON_GetStringValue(j), \"', jsonName, '\")) x = ', combinedName, \"_\", name, \";\");\n                    onFirst = false;\n                });\n            });\n            this.emitLine(\"return x;\");\n        });\n        this.ensureBlankLine();\n        /* Create enumName to cJSON generator function */\n        this.emitBlock([\"cJSON * cJSON_Create\", enumName, \"(\", this.withConst([\"enum \", enumName]), \" x)\"], () => {\n            this.emitLine(\"cJSON * j = NULL;\");\n            this.emitBlock([\"switch (x)\"], () => {\n                const combinedName = (0, Strings_1.allUpperWordStyle)(this.sourcelikeToString(enumName));\n                this.forEachEnumCase(enumType, \"none\", (name, jsonName) => {\n                    this.emitLine(\"case \", combinedName, \"_\", name, ': j = cJSON_CreateString(\"', jsonName, '\"); break;');\n                });\n            });\n            this.emitLine(\"return j;\");\n        });\n        this.ensureBlankLine();\n    }\n    /**\n     * Function called to create a union header files with types and generators\n     * @param unionType: union type\n     * @param includes: Array of includes\n     */\n    emitUnion(unionType, includes) {\n        /* Create file */\n        const unionName = this.nameForNamedType(unionType);\n        const filename = this.sourcelikeToString(unionName).concat(\".h\");\n        includes.push(filename);\n        this.startFile(filename);\n        /* Create includes */\n        this.emitIncludes(unionType, this.sourcelikeToString(filename));\n        /* Create types */\n        this.emitUnionTypedef(unionType);\n        /* Create prototypes */\n        this.emitUnionPrototypes(unionType);\n        /* Create functions */\n        this.emitUnionFunctions(unionType);\n        /* Close file */\n        this.finishFile();\n    }\n    /**\n     * Function called to create union typedef\n     * @param unionType: union type\n     */\n    emitUnionTypedef(unionType) {\n        const [_hasNull, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(unionType);\n        const unionName = this.nameForNamedType(unionType);\n        this.emitDescription(this.descriptionForType(unionType));\n        this.emitBlock([\"struct \", unionName], () => {\n            this.emitLine(\"int type;\");\n            this.emitBlock([\"union\"], () => {\n                for (const type of nonNulls) {\n                    const cJSON = this.quicktypeTypeToCJSON(type, false);\n                    this.emitLine(cJSON.cType, cJSON.optionalQualifier !== \"\" ? \" \" : \"\", cJSON.optionalQualifier, \" \", this.nameForUnionMember(unionType, type), \";\");\n                }\n            }, \"value\", true);\n        }, \"\", true);\n        this.ensureBlankLine();\n        this.emitTypdefAlias(unionType, unionName);\n    }\n    /**\n     * Function called to create union prototypes\n     * @param unionType: union type\n     */\n    emitUnionPrototypes(unionType) {\n        const unionName = this.nameForNamedType(unionType);\n        this.emitLine(\"struct \", unionName, \" * cJSON_Get\", unionName, \"Value(const cJSON * j);\");\n        this.emitLine(\"cJSON * cJSON_Create\", unionName, \"(\", this.withConst([\"struct \", unionName]), \" * x);\");\n        this.emitLine(\"void cJSON_Delete\", unionName, \"(struct \", unionName, \" * x);\");\n        this.ensureBlankLine();\n    }\n    /**\n     * Function called to create union functions\n     * @param unionType: union type\n     */\n    emitUnionFunctions(unionType) {\n        const [hasNull, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(unionType);\n        const unionName = this.nameForNamedType(unionType);\n        /* Create cJSON to unionType generator function */\n        this.emitBlock([\"struct \", unionName, \" * cJSON_Get\", unionName, \"Value(const cJSON * j)\"], () => {\n            let onFirst = true;\n            this.emitLine(\"struct \", unionName, \" * x = cJSON_malloc(sizeof(struct \", unionName, \"));\");\n            this.emitBlock([\"if (NULL != x)\"], () => {\n                this.emitLine(\"memset(x, 0, sizeof(struct \", unionName, \"));\");\n                if (hasNull !== null) {\n                    this.emitBlock([\"if (cJSON_IsNull(j))\"], () => {\n                        this.emitLine(\"x->type = cJSON_NULL;\");\n                    });\n                    onFirst = false;\n                }\n                for (const type of nonNulls) {\n                    const cJSON = this.quicktypeTypeToCJSON(type, false);\n                    this.emitBlock([onFirst === true ? \"if (\" : \"else if (\", cJSON.isType, \"(j))\"], () => {\n                        this.emitLine(\"x->type = \", cJSON.cjsonType, \";\");\n                        if (cJSON.cjsonType === \"cJSON_Array\" && cJSON.items !== undefined) {\n                            const level = 0;\n                            const child_level = 1;\n                            this.emitLine(cJSON.cType, \" * x\", child_level.toString(), \" = list_create(false, NULL);\");\n                            this.emitBlock([\"if (NULL != x\", child_level.toString(), \")\"], () => {\n                                this.emitLine(\"cJSON * e\", child_level.toString(), \" = NULL;\");\n                                this.emitBlock([\n                                    \"cJSON_ArrayForEach(e\",\n                                    child_level.toString(),\n                                    \", j\",\n                                    level > 0 ? level.toString() : \"\",\n                                    \")\"\n                                ], () => {\n                                    const add = (cJSON, level, child_level) => {\n                                        if (cJSON.items.cjsonType === \"cJSON_Array\") {\n                                            /* Not supported */\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_Map\") {\n                                            /* Not supported */\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_Invalid\" ||\n                                            cJSON.items.cjsonType === \"cJSON_NULL\") {\n                                            this.emitLine(\"list_add_tail(x\", child_level.toString(), \", (\", cJSON.items.cType, \" *)0xDEADBEEF, sizeof(\", cJSON.items.cType, \" *));\");\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_String\") {\n                                            this.emitLine(\"list_add_tail(x\", child_level.toString(), \", strdup(\", cJSON.items.getValue, \"(e\", child_level.toString(), \")), sizeof(\", cJSON.items.cType, \" *));\");\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_Object\" ||\n                                            cJSON.items.cjsonType === \"cJSON_Union\") {\n                                            this.emitLine(\"list_add_tail(x\", child_level.toString(), \", \", cJSON.items.getValue, \"(e\", child_level.toString(), \"), sizeof(\", cJSON.items.cType, \" *));\");\n                                        }\n                                        else {\n                                            this.emitLine(cJSON.items.cType, \" * tmp\", level > 0 ? level.toString() : \"\", \" = cJSON_malloc(sizeof(\", cJSON.items.cType, \"));\");\n                                            this.emitBlock([\"if (NULL != tmp\", level > 0 ? level.toString() : \"\", \")\"], () => {\n                                                this.emitLine(\"* tmp\", level > 0 ? level.toString() : \"\", \" = \", cJSON.items.getValue, \"(e\", child_level.toString(), \");\");\n                                                this.emitLine(\"list_add_tail(x\", child_level.toString(), \", tmp\", level > 0 ? level.toString() : \"\", \", sizeof(\", cJSON.items.cType, \" *));\");\n                                            });\n                                        }\n                                    };\n                                    if (cJSON.items.isNullable) {\n                                        this.emitBlock([\"if (!cJSON_IsNull(e\", child_level.toString(), \"))\"], () => {\n                                            add(cJSON, level, child_level);\n                                        });\n                                        this.emitBlock([\"else\"], () => {\n                                            this.emitLine(\"list_add_tail(x\", child_level.toString(), \", (void *)0xDEADBEEF, sizeof(void *));\");\n                                        });\n                                    }\n                                    else {\n                                        add(cJSON, level, child_level);\n                                    }\n                                });\n                                this.emitLine(\"x->value.\", this.nameForUnionMember(unionType, type), \" = x\", child_level.toString(), \";\");\n                            });\n                        }\n                        else if (cJSON.cjsonType === \"cJSON_Map\" && cJSON.items !== undefined) {\n                            const level = 0;\n                            const child_level = 1;\n                            this.emitLine(cJSON.cType, \" * x\", child_level.toString(), \" = hashtable_create(\", this.hashtableSize, \", false);\");\n                            this.emitBlock([\"if (NULL != x\", child_level.toString(), \")\"], () => {\n                                this.emitLine(\"cJSON * e\", child_level.toString(), \" = NULL;\");\n                                this.emitBlock([\n                                    \"cJSON_ArrayForEach(e\",\n                                    child_level.toString(),\n                                    \", j\",\n                                    level > 0 ? level.toString() : \"\",\n                                    \")\"\n                                ], () => {\n                                    const add = (cJSON, level, child_level) => {\n                                        if (cJSON.items.cjsonType === \"cJSON_Array\") {\n                                            /* Not supported */\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_Map\") {\n                                            /* Not supported */\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_Invalid\" ||\n                                            cJSON.items.cjsonType === \"cJSON_NULL\") {\n                                            this.emitLine(\"hashtable_add(x\", child_level.toString(), \", e\", child_level.toString(), \"->string, (\", cJSON.items.cType, \" *)0xDEADBEEF, sizeof(\", cJSON.items.cType, \" *));\");\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_String\") {\n                                            this.emitLine(\"hashtable_add(x\", child_level.toString(), \", e\", child_level.toString(), \"->string, strdup(\", cJSON.items.getValue, \"(e\", child_level.toString(), \")), sizeof(\", cJSON.items.cType, \" *));\");\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_Object\" ||\n                                            cJSON.items.cjsonType === \"cJSON_Union\") {\n                                            this.emitLine(\"hashtable_add(x\", child_level.toString(), \", e\", child_level.toString(), \"->string, \", cJSON.items.getValue, \"(e\", child_level.toString(), \"), sizeof(\", cJSON.items.cType, \" *));\");\n                                        }\n                                        else {\n                                            this.emitLine(cJSON.items.cType, \" * tmp\", level > 0 ? level.toString() : \"\", \" = cJSON_malloc(sizeof(\", cJSON.items.cType, \"));\");\n                                            this.emitBlock([\"if (NULL != tmp\", level > 0 ? level.toString() : \"\", \")\"], () => {\n                                                this.emitLine(\"* tmp\", level > 0 ? level.toString() : \"\", \" = \", cJSON.items.getValue, \"(e\", child_level.toString(), \");\");\n                                                this.emitLine(\"hashtable_add(x\", child_level.toString(), \", e\", child_level.toString(), \"->string, tmp\", level > 0 ? level.toString() : \"\", \", sizeof(\", cJSON.items.cType, \" *));\");\n                                            });\n                                        }\n                                    };\n                                    if (cJSON.items.isNullable) {\n                                        this.emitBlock([\"if (!cJSON_IsNull(e\", child_level.toString(), \"))\"], () => {\n                                            add(cJSON, level, child_level);\n                                        });\n                                        this.emitBlock([\"else\"], () => {\n                                            this.emitLine(\"hashtable_add(x\", child_level.toString(), \", e\", child_level.toString(), \"->string, (void *)0xDEADBEEF, sizeof(void *));\");\n                                        });\n                                    }\n                                    else {\n                                        add(cJSON, level, child_level);\n                                    }\n                                });\n                                this.emitLine(\"x->value.\", this.nameForUnionMember(unionType, type), \" = x\", child_level.toString(), \";\");\n                            });\n                        }\n                        else if (cJSON.cjsonType === \"cJSON_Invalid\" || cJSON.cjsonType === \"cJSON_NULL\") {\n                            this.emitLine(\"x->value.\", this.nameForUnionMember(unionType, type), \" = (\", cJSON.cType, \" *)0xDEADBEEF;\");\n                        }\n                        else if (cJSON.cjsonType === \"cJSON_String\") {\n                            this.emitLine(\"x->value.\", this.nameForUnionMember(unionType, type), \" = strdup(\", cJSON.getValue, \"(j));\");\n                        }\n                        else {\n                            this.emitLine(\"x->value.\", this.nameForUnionMember(unionType, type), \" = \", cJSON.getValue, \"(j);\");\n                        }\n                    });\n                    onFirst = false;\n                }\n            });\n            this.emitLine(\"return x;\");\n        });\n        this.ensureBlankLine();\n        /* Create unionName to cJSON generator function */\n        this.emitBlock([\"cJSON * cJSON_Create\", unionName, \"(\", this.withConst([\"struct \", unionName]), \" * x)\"], () => {\n            this.emitLine(\"cJSON * j = NULL;\");\n            this.emitBlock([\"if (NULL != x)\"], () => {\n                let onFirst = true;\n                if (hasNull !== null) {\n                    this.emitBlock([\"if (cJSON_NULL == x->type)\"], () => {\n                        this.emitLine(\"j = cJSON_CreateNull();\");\n                    });\n                    onFirst = false;\n                }\n                for (const type of nonNulls) {\n                    const cJSON = this.quicktypeTypeToCJSON(type, false);\n                    this.emitBlock([onFirst === true ? \"if (\" : \"else if (\", cJSON.cjsonType, \" == x->type)\"], () => {\n                        if (cJSON.cjsonType === \"cJSON_Array\" && cJSON.items !== undefined) {\n                            const level = 0;\n                            const child_level = 1;\n                            this.emitLine(\"cJSON * j\", child_level.toString(), \" = \", cJSON.createObject, \"();\");\n                            this.emitBlock([\"if (NULL != j\", child_level.toString(), \")\"], () => {\n                                this.emitLine(cJSON.items.cType, \" * x\", child_level.toString(), \" = list_get_head(x\", level > 0 ? level.toString() : \"\", \"->value.\", this.nameForUnionMember(unionType, type), \");\");\n                                this.emitBlock([\"while (NULL != x\", child_level.toString(), \")\"], () => {\n                                    const add = (cJSON, child_level) => {\n                                        if (cJSON.items.cjsonType === \"cJSON_Array\") {\n                                            /* Not supported */\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_Map\") {\n                                            /* Not supported */\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_Invalid\") {\n                                            /* Nothing to do */\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_NULL\") {\n                                            this.emitLine(\"cJSON_AddItemToArray(j\", child_level.toString(), \", \", cJSON.items.createObject, \"());\");\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_String\" ||\n                                            cJSON.items.cjsonType === \"cJSON_Object\" ||\n                                            cJSON.items.cjsonType === \"cJSON_Union\") {\n                                            this.emitLine(\"cJSON_AddItemToArray(j\", child_level.toString(), \", \", cJSON.items.createObject, \"(x\", child_level.toString(), \"));\");\n                                        }\n                                        else {\n                                            this.emitLine(\"cJSON_AddItemToArray(j\", child_level.toString(), \", \", cJSON.items.createObject, \"(*x\", child_level.toString(), \"));\");\n                                        }\n                                    };\n                                    if (cJSON.items.isNullable) {\n                                        this.emitBlock([\"if ((void *)0xDEADBEEF != x\", child_level.toString(), \")\"], () => {\n                                            add(cJSON, child_level);\n                                        });\n                                        this.emitBlock([\"else\"], () => {\n                                            this.emitLine(\"cJSON_AddItemToArray(j\", child_level.toString(), \", cJSON_CreateNull());\");\n                                        });\n                                    }\n                                    else {\n                                        add(cJSON, child_level);\n                                    }\n                                    this.emitLine(\"x\", child_level.toString(), \" = list_get_next(x\", level > 0 ? level.toString() : \"\", \"->value.\", this.nameForUnionMember(unionType, type), \");\");\n                                });\n                                this.emitLine(\"j = j\", child_level.toString(), \";\");\n                            });\n                        }\n                        else if (cJSON.cjsonType === \"cJSON_Map\" && cJSON.items !== undefined) {\n                            const level = 0;\n                            const child_level = 1;\n                            this.emitLine(\"cJSON * j\", child_level.toString(), \" = \", cJSON.createObject, \"();\");\n                            this.emitBlock([\"if (NULL != j\", child_level.toString(), \")\"], () => {\n                                this.emitLine(\"char **keys\", child_level.toString(), \" = NULL;\");\n                                this.emitLine(\"size_t count\", child_level.toString(), \" = hashtable_get_keys(x\", level > 0 ? level.toString() : \"\", \"->value.\", this.nameForUnionMember(unionType, type), \", &keys\", child_level.toString(), \");\");\n                                this.emitBlock([\"if (NULL != keys\", child_level.toString(), \")\"], () => {\n                                    this.emitBlock([\n                                        \"for (size_t index\",\n                                        child_level.toString(),\n                                        \" = 0; index\",\n                                        child_level.toString(),\n                                        \" < count\",\n                                        child_level.toString(),\n                                        \"; index\",\n                                        child_level.toString(),\n                                        \"++)\"\n                                    ], () => {\n                                        this.emitLine(cJSON.items.cType, \" *x\", child_level.toString(), \" = hashtable_lookup(x\", level > 0 ? level.toString() : \"\", \"->value.\", this.nameForUnionMember(unionType, type), \", keys\", child_level.toString(), \"[index\", child_level.toString(), \"]);\");\n                                        const add = (cJSON, child_level) => {\n                                            if (cJSON.items.cjsonType === \"cJSON_Array\") {\n                                                /* Not supported */\n                                            }\n                                            else if (cJSON.items.cjsonType === \"cJSON_Map\") {\n                                                /* Not supported */\n                                            }\n                                            else if (cJSON.items.cjsonType === \"cJSON_Invalid\") {\n                                                /* Nothing to do */\n                                            }\n                                            else if (cJSON.items.cjsonType === \"cJSON_NULL\") {\n                                                this.emitLine(cJSON.addToObject, \"(j\", child_level.toString(), \", keys\", child_level.toString(), \"[index\", child_level.toString(), \"], \", cJSON.items.createObject, \"());\");\n                                            }\n                                            else if (cJSON.items.cjsonType === \"cJSON_String\" ||\n                                                cJSON.items.cjsonType === \"cJSON_Object\" ||\n                                                cJSON.items.cjsonType === \"cJSON_Union\") {\n                                                this.emitLine(cJSON.addToObject, \"(j\", child_level.toString(), \", keys\", child_level.toString(), \"[index\", child_level.toString(), \"], \", cJSON.items.createObject, \"(x\", child_level.toString(), \"));\");\n                                            }\n                                            else {\n                                                this.emitLine(cJSON.addToObject, \"(j\", child_level.toString(), \", keys\", child_level.toString(), \"[index\", child_level.toString(), \"], \", cJSON.items.createObject, \"(*x\", child_level.toString(), \"));\");\n                                            }\n                                        };\n                                        if (cJSON.items.isNullable) {\n                                            this.emitBlock([\n                                                \"if ((void *)0xDEADBEEF != x\",\n                                                child_level.toString(),\n                                                \")\"\n                                            ], () => {\n                                                add(cJSON, child_level);\n                                            });\n                                            this.emitBlock([\"else\"], () => {\n                                                this.emitLine(cJSON.addToObject, \"(j\", child_level.toString(), \", keys\", child_level.toString(), \"[index\", child_level.toString(), \"], cJSON_CreateNull());\");\n                                            });\n                                        }\n                                        else {\n                                            add(cJSON, child_level);\n                                        }\n                                    });\n                                    this.emitLine(\"cJSON_free(keys\", child_level.toString(), \");\");\n                                });\n                                this.emitLine(\"j = j\", child_level.toString(), \";\");\n                            });\n                        }\n                        else if (cJSON.cjsonType === \"cJSON_Invalid\") {\n                            /* Nothing to do */\n                        }\n                        else if (cJSON.cjsonType === \"cJSON_NULL\") {\n                            this.emitLine(\"j = \", cJSON.createObject, \"();\");\n                        }\n                        else {\n                            this.emitLine(\"j = \", cJSON.createObject, \"(x->value.\", this.nameForUnionMember(unionType, type), \");\");\n                        }\n                    });\n                    onFirst = false;\n                }\n            });\n            this.emitLine(\"return j;\");\n        });\n        this.ensureBlankLine();\n        /* Create unionName delete function */\n        this.emitBlock([\"void cJSON_Delete\", unionName, \"(struct \", unionName, \" * x)\"], () => {\n            this.emitBlock([\"if (NULL != x)\"], () => {\n                let onFirst = true;\n                for (const type of nonNulls) {\n                    const cJSON = this.quicktypeTypeToCJSON(type, false);\n                    this.emitBlock([onFirst === true ? \"if (\" : \"else if (\", cJSON.cjsonType, \" == x->type)\"], () => {\n                        if (cJSON.cjsonType === \"cJSON_Array\" && cJSON.items !== undefined) {\n                            const level = 0;\n                            const child_level = 1;\n                            this.emitBlock([\n                                \"if (NULL != x\",\n                                level > 0 ? level.toString() : \"\",\n                                \"->value.\",\n                                this.nameForUnionMember(unionType, type),\n                                \")\"\n                            ], () => {\n                                this.emitLine(cJSON.items.cType, \" * x\", child_level.toString(), \" = list_get_head(x\", level > 0 ? level.toString() : \"\", \"->value.\", this.nameForUnionMember(unionType, type), \");\");\n                                this.emitBlock([\"while (NULL != x\", child_level.toString(), \")\"], () => {\n                                    if (cJSON.items.cjsonType === \"cJSON_Array\") {\n                                        /* Not supported */\n                                    }\n                                    else if (cJSON.items.cjsonType === \"cJSON_Map\") {\n                                        /* Not supported */\n                                    }\n                                    else if (cJSON.items.cjsonType === \"cJSON_Invalid\" ||\n                                        cJSON.items.cjsonType === \"cJSON_NULL\") {\n                                        /* Nothing to do */\n                                    }\n                                    else {\n                                        if (cJSON.items.isNullable) {\n                                            this.emitBlock([\"if ((void *)0xDEADBEEF != x\", child_level.toString(), \")\"], () => {\n                                                this.emitLine(cJSON.items.deleteType, \"(x\", child_level.toString(), \");\");\n                                            });\n                                        }\n                                        else {\n                                            this.emitLine(cJSON.items.deleteType, \"(x\", child_level.toString(), \");\");\n                                        }\n                                    }\n                                    this.emitLine(\"x\", child_level.toString(), \" = list_get_next(x\", level > 0 ? level.toString() : \"\", \"->value.\", this.nameForUnionMember(unionType, type), \");\");\n                                });\n                                this.emitLine(cJSON.deleteType, \"(x\", level > 0 ? level.toString() : \"\", \"->value.\", this.nameForUnionMember(unionType, type), \");\");\n                            });\n                        }\n                        else if (cJSON.cjsonType === \"cJSON_Map\" && cJSON.items !== undefined) {\n                            const level = 0;\n                            const child_level = 1;\n                            this.emitBlock([\n                                \"if (NULL != x\",\n                                level > 0 ? level.toString() : \"\",\n                                \"->value.\",\n                                this.nameForUnionMember(unionType, type),\n                                \")\"\n                            ], () => {\n                                this.emitLine(\"char **keys\", child_level.toString(), \" = NULL;\");\n                                this.emitLine(\"size_t count\", child_level.toString(), \" = hashtable_get_keys(x\", level > 0 ? level.toString() : \"\", \"->value.\", this.nameForUnionMember(unionType, type), \", &keys\", child_level.toString(), \");\");\n                                this.emitBlock([\"if (NULL != keys\", child_level.toString(), \")\"], () => {\n                                    this.emitBlock([\n                                        \"for (size_t index\",\n                                        child_level.toString(),\n                                        \" = 0; index\",\n                                        child_level.toString(),\n                                        \" < count\",\n                                        child_level.toString(),\n                                        \"; index\",\n                                        child_level.toString(),\n                                        \"++)\"\n                                    ], () => {\n                                        this.emitLine(cJSON.items.cType, \" *x\", child_level.toString(), \" = hashtable_lookup(x\", level > 0 ? level.toString() : \"\", \"->value.\", this.nameForUnionMember(unionType, type), \", keys\", child_level.toString(), \"[index\", child_level.toString(), \"]);\");\n                                        this.emitBlock([\"if (NULL != x\", child_level.toString(), \")\"], () => {\n                                            if (cJSON.items.cjsonType === \"cJSON_Array\") {\n                                                /* Not supported */\n                                            }\n                                            else if (cJSON.items.cjsonType === \"cJSON_Map\") {\n                                                /* Not supported */\n                                            }\n                                            else if (cJSON.items.cjsonType === \"cJSON_Invalid\" ||\n                                                cJSON.items.cjsonType === \"cJSON_NULL\") {\n                                                /* Nothing to do */\n                                            }\n                                            else {\n                                                if (cJSON.items.isNullable) {\n                                                    this.emitBlock([\n                                                        \"if ((void *)0xDEADBEEF != x\",\n                                                        child_level.toString(),\n                                                        \")\"\n                                                    ], () => {\n                                                        this.emitLine(cJSON.items.deleteType, \"(x\", child_level.toString(), \");\");\n                                                    });\n                                                }\n                                                else {\n                                                    this.emitLine(cJSON.items.deleteType, \"(x\", child_level.toString(), \");\");\n                                                }\n                                            }\n                                        });\n                                    });\n                                    this.emitLine(\"cJSON_free(keys\", child_level.toString(), \");\");\n                                });\n                                this.emitLine(cJSON.deleteType, \"(x\", level > 0 ? level.toString() : \"\", \"->value.\", this.nameForUnionMember(unionType, type), \");\");\n                            });\n                        }\n                        else if (cJSON.cjsonType === \"cJSON_Invalid\" || cJSON.cjsonType === \"cJSON_NULL\") {\n                            /* Nothing to do */\n                        }\n                        else if (cJSON.cjsonType === \"cJSON_String\" ||\n                            cJSON.cjsonType === \"cJSON_Object\" ||\n                            cJSON.cjsonType === \"cJSON_Union\") {\n                            this.emitLine(cJSON.deleteType, \"(x->value.\", this.nameForUnionMember(unionType, type), \");\");\n                        }\n                        else {\n                            /* Nothing to do */\n                        }\n                    });\n                    onFirst = false;\n                }\n                this.emitLine(\"cJSON_free(x);\");\n            });\n        });\n        this.ensureBlankLine();\n    }\n    /**\n     * Function called to create a class header files with types and generators\n     * @param classType: class type\n     * @param includes: Array of includes\n     */\n    emitClass(classType, includes) {\n        /* Create file */\n        const className = this.nameForNamedType(classType);\n        const filename = this.sourcelikeToString(className).concat(\".h\");\n        includes.push(filename);\n        this.startFile(filename);\n        /* Create includes */\n        this.emitIncludes(classType, this.sourcelikeToString(filename));\n        /* Create types */\n        this.emitClassTypedef(classType);\n        /* Create prototypes */\n        this.emitClassPrototypes(classType);\n        /* Create functions */\n        this.emitClassFunctions(classType);\n        /* Close file */\n        this.finishFile();\n    }\n    /**\n     * Function called to create class typedef\n     * @param classType: class type\n     */\n    emitClassTypedef(classType) {\n        const className = this.nameForNamedType(classType);\n        this.emitDescription(this.descriptionForType(classType));\n        this.emitBlock([\"struct \", className], () => {\n            this.forEachClassProperty(classType, \"none\", (name, jsonName, property) => {\n                this.emitDescription(this.descriptionForClassProperty(classType, jsonName));\n                const cJSON = this.quicktypeTypeToCJSON(property.type, property.isOptional);\n                this.emitLine(cJSON.cType, cJSON.optionalQualifier !== \"\" ? \" \" : \"\", cJSON.optionalQualifier, \" \", name, \";\");\n            });\n        }, \"\", true);\n        this.ensureBlankLine();\n        this.emitTypdefAlias(classType, className);\n    }\n    /**\n     * Function called to create class prototypes\n     * @param classType: class type\n     */\n    emitClassPrototypes(classType) {\n        const className = this.nameForNamedType(classType);\n        this.emitLine(\"struct \", className, \" * cJSON_Parse\", className, \"(\", this.withConst(\"char\"), \" * s);\");\n        this.emitLine(\"struct \", className, \" * cJSON_Get\", className, \"Value(\", this.withConst(\"cJSON\"), \" * j);\");\n        this.emitLine(\"cJSON * cJSON_Create\", className, \"(\", this.withConst([\"struct \", className]), \" * x);\");\n        this.emitLine(\"char * cJSON_Print\", className, \"(\", this.withConst([\"struct \", className]), \" * x);\");\n        this.emitLine(\"void cJSON_Delete\", className, \"(struct \", className, \" * x);\");\n        this.ensureBlankLine();\n    }\n    /**\n     * Function called to create class functions\n     * @param classType: class type\n     */\n    emitClassFunctions(classType) {\n        const className = this.nameForNamedType(classType);\n        /* Create string to className generator function */\n        this.emitBlock([\"struct \", className, \" * cJSON_Parse\", className, \"(\", this.withConst(\"char\"), \" * s)\"], () => {\n            this.emitLine(\"struct \", className, \" * x = NULL;\");\n            this.emitBlock([\"if (NULL != s)\"], () => {\n                this.emitLine(\"cJSON * j = cJSON_Parse(s);\");\n                this.emitBlock([\"if (NULL != j)\"], () => {\n                    this.emitLine(\"x = cJSON_Get\", className, \"Value(j);\");\n                    this.emitLine(\"cJSON_Delete(j);\");\n                });\n            });\n            this.emitLine(\"return x;\");\n        });\n        this.ensureBlankLine();\n        /* Create cJSON to className generator function */\n        this.emitBlock([\"struct \", className, \" * cJSON_Get\", className, \"Value(\", this.withConst(\"cJSON\"), \" * j)\"], () => {\n            this.emitLine(\"struct \", className, \" * x = NULL;\");\n            this.emitBlock([\"if (NULL != j)\"], () => {\n                this.emitBlock([\"if (NULL != (x = cJSON_malloc(sizeof(struct \", className, \"))))\"], () => {\n                    this.emitLine(\"memset(x, 0, sizeof(struct \", className, \"));\");\n                    const recur = (type, level) => {\n                        if (type instanceof Type_1.ArrayType) {\n                            const child_level = level + 1;\n                            const cJSON = this.quicktypeTypeToCJSON(type.items, false);\n                            this.emitLine(\"list_t * x\", child_level.toString(), \" = list_create(false, NULL);\");\n                            this.emitBlock([\"if (NULL != x\", child_level.toString(), \")\"], () => {\n                                this.emitLine(\"cJSON * e\", child_level.toString(), \" = NULL;\");\n                                this.emitBlock([\"cJSON_ArrayForEach(e\", child_level.toString(), \", e\", level.toString(), \")\"], () => {\n                                    if (cJSON.cjsonType === \"cJSON_Array\") {\n                                        const child_level2 = child_level + 1;\n                                        recur(type.items, child_level);\n                                        this.emitLine(\"list_add_tail(x\", child_level.toString(), \", x\", child_level2.toString(), \", sizeof(\", cJSON.items.cType, \" *));\");\n                                    }\n                                    else if (cJSON.cjsonType === \"cJSON_Map\") {\n                                        /* Not supported */\n                                    }\n                                    else if (cJSON.cjsonType === \"cJSON_Invalid\" ||\n                                        cJSON.cjsonType === \"cJSON_NULL\") {\n                                        this.emitLine(\"list_add_tail(x\", child_level.toString(), \", (\", cJSON.cType, \" *)0xDEADBEEF, sizeof(\", cJSON.cType, \" *));\");\n                                    }\n                                    else if (cJSON.cjsonType === \"cJSON_String\") {\n                                        this.emitLine(\"list_add_tail(x\", child_level.toString(), \", strdup(\", cJSON.getValue, \"(e\", child_level.toString(), \")), sizeof(\", cJSON.cType, \" *));\");\n                                    }\n                                    else if (cJSON.cjsonType === \"cJSON_Object\" ||\n                                        cJSON.cjsonType === \"cJSON_Union\") {\n                                        this.emitLine(\"list_add_tail(x\", child_level.toString(), \", \", cJSON.getValue, \"(e\", child_level.toString(), \"), sizeof(\", cJSON.cType, \" *));\");\n                                    }\n                                    else {\n                                        this.emitLine(cJSON.cType, \" * tmp\", level > 0 ? level.toString() : \"\", \" = cJSON_malloc(sizeof(\", cJSON.cType, \"));\");\n                                        this.emitBlock([\"if (NULL != tmp\", level > 0 ? level.toString() : \"\", \")\"], () => {\n                                            this.emitLine(\"* tmp\", level > 0 ? level.toString() : \"\", \" = \", cJSON.getValue, \"(e\", child_level.toString(), \");\");\n                                            this.emitLine(\"list_add_tail(x\", child_level.toString(), \", tmp\", level > 0 ? level.toString() : \"\", \", sizeof(\", cJSON.cType, \" *));\");\n                                        });\n                                    }\n                                });\n                            });\n                        }\n                        else if (type instanceof Type_1.ClassType) {\n                            this.forEachClassProperty(type, \"none\", (name, jsonName, property) => {\n                                const cJSON = this.quicktypeTypeToCJSON(property.type, property.isOptional);\n                                this.emitBlock(!cJSON.isNullable\n                                    ? [\n                                        \"if (cJSON_HasObjectItem(j\",\n                                        level > 0 ? level.toString() : \"\",\n                                        ', \"',\n                                        jsonName,\n                                        '\"))'\n                                    ]\n                                    : [\n                                        \"if ((cJSON_HasObjectItem(j\",\n                                        level > 0 ? level.toString() : \"\",\n                                        ', \"',\n                                        jsonName,\n                                        '\")) && (!cJSON_IsNull(cJSON_GetObjectItemCaseSensitive(j',\n                                        level > 0 ? level.toString() : \"\",\n                                        ', \"',\n                                        jsonName,\n                                        '\"))))'\n                                    ], () => {\n                                    if (cJSON.cjsonType === \"cJSON_Array\" && cJSON.items !== undefined) {\n                                        const child_level = level + 1;\n                                        this.emitLine(cJSON.cType, \" * x\", child_level.toString(), \" = list_create(false, NULL);\");\n                                        this.emitBlock([\"if (NULL != x\", child_level.toString(), \")\"], () => {\n                                            this.emitLine(\"cJSON * e\", child_level.toString(), \" = NULL;\");\n                                            this.emitLine(\"cJSON * j\", child_level.toString(), \" = cJSON_GetObjectItemCaseSensitive(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\");');\n                                            this.emitBlock([\n                                                \"cJSON_ArrayForEach(e\",\n                                                child_level.toString(),\n                                                \", j\",\n                                                child_level.toString(),\n                                                \")\"\n                                            ], () => {\n                                                const add = (type, cJSON, level, child_level) => {\n                                                    if (cJSON.items.cjsonType === \"cJSON_Array\") {\n                                                        if (type instanceof Type_1.ArrayType) {\n                                                            const child_level2 = child_level + 1;\n                                                            recur(type.items, child_level);\n                                                            this.emitLine(\"list_add_tail(x\", child_level.toString(), \", x\", child_level2.toString(), \", sizeof(\", cJSON.items.cType, \" *));\");\n                                                        }\n                                                        else {\n                                                            (0, Support_1.panic)(\"Invalid type\");\n                                                        }\n                                                    }\n                                                    else if (cJSON.items.cjsonType === \"cJSON_Map\") {\n                                                        /* Not supported */\n                                                    }\n                                                    else if (cJSON.items.cjsonType === \"cJSON_Invalid\" ||\n                                                        cJSON.items.cjsonType === \"cJSON_NULL\") {\n                                                        this.emitLine(\"list_add_tail(x\", child_level.toString(), \", (\", cJSON.items.cType, \" *)0xDEADBEEF, sizeof(\", cJSON.items.cType, \" *));\");\n                                                    }\n                                                    else if (cJSON.items.cjsonType === \"cJSON_String\") {\n                                                        this.emitLine(\"list_add_tail(x\", child_level.toString(), \", strdup(\", cJSON.items.getValue, \"(e\", child_level.toString(), \")), sizeof(\", cJSON.items.cType, \" *));\");\n                                                    }\n                                                    else if (cJSON.items.cjsonType === \"cJSON_Object\" ||\n                                                        cJSON.items.cjsonType === \"cJSON_Union\") {\n                                                        this.emitLine(\"list_add_tail(x\", child_level.toString(), \", \", cJSON.items.getValue, \"(e\", child_level.toString(), \"), sizeof(\", cJSON.items.cType, \" *));\");\n                                                    }\n                                                    else {\n                                                        this.emitLine(cJSON.items.cType, \" * tmp\", level > 0 ? level.toString() : \"\", \" = cJSON_malloc(sizeof(\", cJSON.items.cType, \"));\");\n                                                        this.emitBlock([\n                                                            \"if (NULL != tmp\",\n                                                            level > 0 ? level.toString() : \"\",\n                                                            \")\"\n                                                        ], () => {\n                                                            this.emitLine(\"* tmp\", level > 0 ? level.toString() : \"\", \" = \", cJSON.items.getValue, \"(e\", child_level.toString(), \");\");\n                                                            this.emitLine(\"list_add_tail(x\", child_level.toString(), \", tmp\", level > 0 ? level.toString() : \"\", \", sizeof(\", cJSON.items.cType, \" *));\");\n                                                        });\n                                                    }\n                                                };\n                                                if (cJSON.items.isNullable) {\n                                                    this.emitBlock([\n                                                        \"if (!cJSON_IsNull(e\",\n                                                        child_level.toString(),\n                                                        \"))\"\n                                                    ], () => {\n                                                        add(property.type, cJSON, level, child_level);\n                                                    });\n                                                    this.emitBlock([\"else\"], () => {\n                                                        this.emitLine(\"list_add_tail(x\", child_level.toString(), \", (void *)0xDEADBEEF, sizeof(void *));\");\n                                                    });\n                                                }\n                                                else {\n                                                    add(property.type, cJSON, level, child_level);\n                                                }\n                                            });\n                                            this.emitLine(\"x\", level > 0 ? level.toString() : \"\", \"->\", name, \" = x\", child_level.toString(), \";\");\n                                        });\n                                    }\n                                    else if (cJSON.cjsonType === \"cJSON_Map\" && cJSON.items !== undefined) {\n                                        const child_level = level + 1;\n                                        this.emitLine(cJSON.cType, \" * x\", child_level.toString(), \" = hashtable_create(\", this.hashtableSize, \", false);\");\n                                        this.emitBlock([\"if (NULL != x\", child_level.toString(), \")\"], () => {\n                                            this.emitLine(\"cJSON * e\", child_level.toString(), \" = NULL;\");\n                                            this.emitLine(\"cJSON * j\", child_level.toString(), \" = cJSON_GetObjectItemCaseSensitive(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\");');\n                                            this.emitBlock([\n                                                \"cJSON_ArrayForEach(e\",\n                                                child_level.toString(),\n                                                \", j\",\n                                                child_level.toString(),\n                                                \")\"\n                                            ], () => {\n                                                const add = (type, cJSON, level, child_level) => {\n                                                    if (cJSON.items.cjsonType === \"cJSON_Array\") {\n                                                        if (type instanceof Type_1.MapType) {\n                                                            const child_level2 = child_level + 1;\n                                                            recur(type.values, child_level);\n                                                            this.emitLine(\"hashtable_add(x\", child_level.toString(), \", e\", child_level.toString(), \"->string, x\", child_level2.toString(), \", sizeof(\", cJSON.items.cType, \" *));\");\n                                                        }\n                                                        else {\n                                                            (0, Support_1.panic)(\"Invalid type\");\n                                                        }\n                                                    }\n                                                    else if (cJSON.items.cjsonType === \"cJSON_Map\") {\n                                                        /* Not supported */\n                                                    }\n                                                    else if (cJSON.items.cjsonType === \"cJSON_Invalid\" ||\n                                                        cJSON.items.cjsonType === \"cJSON_NULL\") {\n                                                        this.emitLine(\"hashtable_add(x\", child_level.toString(), \", e\", child_level.toString(), \"->string, (\", cJSON.items.cType, \" *)0xDEADBEEF, sizeof(\", cJSON.items.cType, \" *));\");\n                                                    }\n                                                    else if (cJSON.items.cjsonType === \"cJSON_String\") {\n                                                        this.emitLine(\"hashtable_add(x\", child_level.toString(), \", e\", child_level.toString(), \"->string, strdup(\", cJSON.items.getValue, \"(e\", child_level.toString(), \")), sizeof(\", cJSON.items.cType, \" *));\");\n                                                    }\n                                                    else if (cJSON.items.cjsonType === \"cJSON_Object\" ||\n                                                        cJSON.items.cjsonType === \"cJSON_Union\") {\n                                                        this.emitLine(\"hashtable_add(x\", child_level.toString(), \", e\", child_level.toString(), \"->string, \", cJSON.items.getValue, \"(e\", child_level.toString(), \"), sizeof(\", cJSON.items.cType, \" *));\");\n                                                    }\n                                                    else {\n                                                        this.emitLine(cJSON.items.cType, \" * tmp\", level > 0 ? level.toString() : \"\", \" = cJSON_malloc(sizeof(\", cJSON.items.cType, \"));\");\n                                                        this.emitBlock([\n                                                            \"if (NULL != tmp\",\n                                                            level > 0 ? level.toString() : \"\",\n                                                            \")\"\n                                                        ], () => {\n                                                            this.emitLine(\"* tmp\", level > 0 ? level.toString() : \"\", \" = \", cJSON.items.getValue, \"(e\", child_level.toString(), \");\");\n                                                            this.emitLine(\"hashtable_add(x\", child_level.toString(), \", e\", child_level.toString(), \"->string, tmp\", level > 0 ? level.toString() : \"\", \", sizeof(\", cJSON.items.cType, \" *));\");\n                                                        });\n                                                    }\n                                                };\n                                                if (cJSON.items.isNullable) {\n                                                    this.emitBlock([\n                                                        \"if (!cJSON_IsNull(e\",\n                                                        child_level.toString(),\n                                                        \"))\"\n                                                    ], () => {\n                                                        add(property.type, cJSON, level, child_level);\n                                                    });\n                                                    this.emitBlock([\"else\"], () => {\n                                                        this.emitLine(\"hashtable_add(x\", child_level.toString(), \", e\", child_level.toString(), \"->string, (void *)0xDEADBEEF, sizeof(void *));\");\n                                                    });\n                                                }\n                                                else {\n                                                    add(property.type, cJSON, level, child_level);\n                                                }\n                                            });\n                                            this.emitLine(\"x\", level > 0 ? level.toString() : \"\", \"->\", name, \" = x\", child_level.toString(), \";\");\n                                        });\n                                    }\n                                    else if (cJSON.cjsonType === \"cJSON_Invalid\" ||\n                                        cJSON.cjsonType === \"cJSON_NULL\") {\n                                        this.emitLine(\"x\", level > 0 ? level.toString() : \"\", \"->\", name, \" = (\", cJSON.cType, \" *)0xDEADBEEF;\");\n                                    }\n                                    else if (cJSON.cjsonType === \"cJSON_String\") {\n                                        this.emitLine(\"x\", level > 0 ? level.toString() : \"\", \"->\", name, \" = strdup(\", cJSON.getValue, \"(cJSON_GetObjectItemCaseSensitive(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\")));');\n                                    }\n                                    else if (cJSON.cjsonType === \"cJSON_Object\" ||\n                                        cJSON.cjsonType === \"cJSON_Union\") {\n                                        this.emitLine(\"x\", level > 0 ? level.toString() : \"\", \"->\", name, \" = \", cJSON.getValue, \"(cJSON_GetObjectItemCaseSensitive(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\"));');\n                                    }\n                                    else {\n                                        if (property.isOptional || cJSON.isNullable) {\n                                            this.emitBlock([\n                                                \"if (NULL != (x\",\n                                                level > 0 ? level.toString() : \"\",\n                                                \"->\",\n                                                name,\n                                                \" = cJSON_malloc(sizeof(\",\n                                                cJSON.cType,\n                                                \"))))\"\n                                            ], () => {\n                                                this.emitLine(\"*x\", level > 0 ? level.toString() : \"\", \"->\", name, \" = \", cJSON.getValue, \"(cJSON_GetObjectItemCaseSensitive(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\"));');\n                                            });\n                                        }\n                                        else {\n                                            this.emitLine(\"x\", level > 0 ? level.toString() : \"\", \"->\", name, \" = \", cJSON.getValue, \"(cJSON_GetObjectItemCaseSensitive(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\"));');\n                                        }\n                                    }\n                                });\n                                if (!property.isOptional && !cJSON.isNullable) {\n                                    if (cJSON.cjsonType === \"cJSON_Array\") {\n                                        this.emitBlock([\"else\"], () => {\n                                            this.emitLine(\"x\", level > 0 ? level.toString() : \"\", \"->\", name, \" = list_create(false, NULL);\");\n                                        });\n                                    }\n                                    else if (cJSON.cjsonType === \"cJSON_Map\") {\n                                        this.emitBlock([\"else\"], () => {\n                                            this.emitLine(\"x\", level > 0 ? level.toString() : \"\", \"->\", name, \" = hashtable_create(\", this.hashtableSize, \", false);\");\n                                        });\n                                    }\n                                    else if (cJSON.cjsonType === \"cJSON_Invalid\" ||\n                                        cJSON.cjsonType === \"cJSON_NULL\") {\n                                        this.emitBlock([\"else\"], () => {\n                                            this.emitLine(\"x\", level > 0 ? level.toString() : \"\", \"->\", name, \" = (\", cJSON.cType, \" *)0xDEADBEEF;\");\n                                        });\n                                    }\n                                    else if (cJSON.cjsonType === \"cJSON_String\") {\n                                        this.emitBlock([\"else\"], () => {\n                                            this.emitBlock([\n                                                \"if (NULL != (x\",\n                                                level > 0 ? level.toString() : \"\",\n                                                \"->\",\n                                                name,\n                                                \" = cJSON_malloc(sizeof(\",\n                                                cJSON.cType,\n                                                \"))))\"\n                                            ], () => {\n                                                this.emitLine(\"x\", level > 0 ? level.toString() : \"\", \"->\", name, \"[0] = '\\\\0';\");\n                                            });\n                                        });\n                                    }\n                                    else {\n                                        /* Nothing to do */\n                                    }\n                                }\n                            });\n                        }\n                    };\n                    recur(classType, 0);\n                });\n            });\n            this.emitLine(\"return x;\");\n        });\n        this.ensureBlankLine();\n        /* Create className to cJSON generator function */\n        this.emitBlock([\"cJSON * cJSON_Create\", className, \"(\", this.withConst([\"struct \", className]), \" * x)\"], () => {\n            this.emitLine(\"cJSON * j = NULL;\");\n            this.emitBlock([\"if (NULL != x)\"], () => {\n                this.emitBlock([\"if (NULL != (j = cJSON_CreateObject()))\"], () => {\n                    const recur = (type, level) => {\n                        if (type instanceof Type_1.ArrayType) {\n                            const child_level = level + 1;\n                            const cJSON = this.quicktypeTypeToCJSON(type.items, false);\n                            this.emitLine(\"cJSON * j\", child_level.toString(), \" = cJSON_CreateArray();\");\n                            this.emitBlock([\"if (NULL != j\", child_level.toString(), \")\"], () => {\n                                this.emitLine(cJSON.cType, \" * x\", child_level.toString(), \" = list_get_head(x\", level.toString(), \");\");\n                                this.emitBlock([\"while (NULL != x\", child_level.toString(), \")\"], () => {\n                                    if (cJSON.cjsonType === \"cJSON_Array\") {\n                                        const child_level2 = child_level + 1;\n                                        recur(type.items, child_level);\n                                        this.emitLine(\"cJSON_AddItemToArray(j\", child_level.toString(), \", j\", child_level2.toString(), \");\");\n                                    }\n                                    else if (cJSON.cjsonType === \"cJSON_Map\") {\n                                        /* Not supported */\n                                    }\n                                    else if (cJSON.cjsonType === \"cJSON_Invalid\") {\n                                        /* Nothing to do */\n                                    }\n                                    else if (cJSON.cjsonType === \"cJSON_NULL\") {\n                                        this.emitLine(\"cJSON_AddItemToArray(j\", child_level.toString(), \", \", cJSON.createObject, \"());\");\n                                    }\n                                    else if (cJSON.cjsonType === \"cJSON_String\" ||\n                                        cJSON.cjsonType === \"cJSON_Object\" ||\n                                        cJSON.cjsonType === \"cJSON_Union\") {\n                                        this.emitLine(\"cJSON_AddItemToArray(j\", child_level.toString(), \", \", cJSON.createObject, \"(x\", child_level.toString(), \"));\");\n                                    }\n                                    else {\n                                        this.emitLine(\"cJSON_AddItemToArray(j\", child_level.toString(), \", \", cJSON.createObject, \"(*x\", child_level.toString(), \"));\");\n                                    }\n                                    this.emitLine(\"x\", child_level.toString(), \" = list_get_next(x\", level.toString(), \");\");\n                                });\n                            });\n                        }\n                        else if (type instanceof Type_1.ClassType) {\n                            this.forEachClassProperty(type, \"none\", (name, jsonName, property) => {\n                                const cJSON = this.quicktypeTypeToCJSON(property.type, property.isOptional);\n                                if (cJSON.cjsonType === \"cJSON_Array\" && cJSON.items !== undefined) {\n                                    const child_level = level + 1;\n                                    this.emitBlock([\"if (NULL != x\", level > 0 ? level.toString() : \"\", \"->\", name, \")\"], () => {\n                                        this.emitLine(\"cJSON * j\", child_level.toString(), \" = cJSON_AddArrayToObject(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\");');\n                                        this.emitBlock([\"if (NULL != j\", child_level.toString(), \")\"], () => {\n                                            this.emitLine(cJSON.items.cType, \" * x\", child_level.toString(), \" = list_get_head(x\", level > 0 ? level.toString() : \"\", \"->\", name, \");\");\n                                            this.emitBlock([\"while (NULL != x\", child_level.toString(), \")\"], () => {\n                                                const add = (type, cJSON, child_level) => {\n                                                    if (cJSON.items.cjsonType === \"cJSON_Array\") {\n                                                        if (type instanceof Type_1.ArrayType) {\n                                                            const child_level2 = child_level + 1;\n                                                            recur(type.items, child_level);\n                                                            this.emitLine(\"cJSON_AddItemToArray(j\", child_level.toString(), \", j\", child_level2.toString(), \");\");\n                                                        }\n                                                        else {\n                                                            (0, Support_1.panic)(\"Invalid type\");\n                                                        }\n                                                    }\n                                                    else if (cJSON.items.cjsonType === \"cJSON_Map\") {\n                                                        /* Not supported */\n                                                    }\n                                                    else if (cJSON.items.cjsonType === \"cJSON_Invalid\") {\n                                                        /* Nothing to do */\n                                                    }\n                                                    else if (cJSON.items.cjsonType === \"cJSON_NULL\") {\n                                                        this.emitLine(\"cJSON_AddItemToArray(j\", child_level.toString(), \", \", cJSON.items.createObject, \"());\");\n                                                    }\n                                                    else if (cJSON.items.cjsonType === \"cJSON_String\" ||\n                                                        cJSON.items.cjsonType === \"cJSON_Object\" ||\n                                                        cJSON.items.cjsonType === \"cJSON_Union\") {\n                                                        this.emitLine(\"cJSON_AddItemToArray(j\", child_level.toString(), \", \", cJSON.items.createObject, \"(x\", child_level.toString(), \"));\");\n                                                    }\n                                                    else {\n                                                        this.emitLine(\"cJSON_AddItemToArray(j\", child_level.toString(), \", \", cJSON.items.createObject, \"(*x\", child_level.toString(), \"));\");\n                                                    }\n                                                };\n                                                if (cJSON.items.isNullable) {\n                                                    this.emitBlock([\n                                                        \"if ((void *)0xDEADBEEF != x\",\n                                                        child_level.toString(),\n                                                        \")\"\n                                                    ], () => {\n                                                        add(property.type, cJSON, child_level);\n                                                    });\n                                                    this.emitBlock([\"else\"], () => {\n                                                        this.emitLine(\"cJSON_AddItemToArray(j\", child_level.toString(), \", cJSON_CreateNull());\");\n                                                    });\n                                                }\n                                                else {\n                                                    add(property.type, cJSON, child_level);\n                                                }\n                                                this.emitLine(\"x\", child_level.toString(), \" = list_get_next(x\", level > 0 ? level.toString() : \"\", \"->\", name, \");\");\n                                            });\n                                        });\n                                    });\n                                }\n                                else if (cJSON.cjsonType === \"cJSON_Map\" && cJSON.items !== undefined) {\n                                    const child_level = level + 1;\n                                    this.emitBlock([\"if (NULL != x\", level > 0 ? level.toString() : \"\", \"->\", name, \")\"], () => {\n                                        this.emitLine(\"cJSON * j\", child_level.toString(), \" = \", cJSON.createObject, \"();\");\n                                        this.emitBlock([\"if (NULL != j\", child_level.toString(), \")\"], () => {\n                                            this.emitLine(\"char **keys\", child_level.toString(), \" = NULL;\");\n                                            this.emitLine(\"size_t count\", child_level.toString(), \" = hashtable_get_keys(x\", level > 0 ? level.toString() : \"\", \"->\", name, \", &keys\", child_level.toString(), \");\");\n                                            this.emitBlock([\"if (NULL != keys\", child_level.toString(), \")\"], () => {\n                                                this.emitBlock([\n                                                    \"for (size_t index\",\n                                                    child_level.toString(),\n                                                    \" = 0; index\",\n                                                    child_level.toString(),\n                                                    \" < count\",\n                                                    child_level.toString(),\n                                                    \"; index\",\n                                                    child_level.toString(),\n                                                    \"++)\"\n                                                ], () => {\n                                                    this.emitLine(cJSON.items.cType, \" *x\", child_level.toString(), \" = hashtable_lookup(x\", level > 0 ? level.toString() : \"\", \"->\", name, \", keys\", child_level.toString(), \"[index\", child_level.toString(), \"]);\");\n                                                    const add = (type, cJSON, child_level) => {\n                                                        if (cJSON.items.cjsonType === \"cJSON_Array\") {\n                                                            if (type instanceof Type_1.MapType) {\n                                                                const child_level2 = child_level + 1;\n                                                                recur(type.values, child_level);\n                                                                this.emitLine(cJSON.addToObject, \"(j\", child_level.toString(), \", keys\", child_level.toString(), \"[index\", child_level.toString(), \"], j\", child_level2.toString(), \");\");\n                                                            }\n                                                            else {\n                                                                (0, Support_1.panic)(\"Invalid type\");\n                                                            }\n                                                        }\n                                                        else if (cJSON.items.cjsonType === \"cJSON_Map\") {\n                                                            /* Not supported */\n                                                        }\n                                                        else if (cJSON.items.cjsonType === \"cJSON_Invalid\") {\n                                                            /* Nothing to do */\n                                                        }\n                                                        else if (cJSON.items.cjsonType === \"cJSON_NULL\") {\n                                                            this.emitLine(cJSON.addToObject, \"(j\", child_level.toString(), \", keys\", child_level.toString(), \"[index\", child_level.toString(), \"], \", cJSON.items.createObject, \"());\");\n                                                        }\n                                                        else if (cJSON.items.cjsonType === \"cJSON_String\" ||\n                                                            cJSON.items.cjsonType === \"cJSON_Object\" ||\n                                                            cJSON.items.cjsonType === \"cJSON_Union\") {\n                                                            this.emitLine(cJSON.addToObject, \"(j\", child_level.toString(), \", keys\", child_level.toString(), \"[index\", child_level.toString(), \"], \", cJSON.items.createObject, \"(x\", child_level.toString(), \"));\");\n                                                        }\n                                                        else {\n                                                            this.emitLine(cJSON.addToObject, \"(j\", child_level.toString(), \", keys\", child_level.toString(), \"[index\", child_level.toString(), \"], \", cJSON.items.createObject, \"(*x\", child_level.toString(), \"));\");\n                                                        }\n                                                    };\n                                                    if (cJSON.items.isNullable) {\n                                                        this.emitBlock([\n                                                            \"if ((void *)0xDEADBEEF != x\",\n                                                            child_level.toString(),\n                                                            \")\"\n                                                        ], () => {\n                                                            add(property.type, cJSON, child_level);\n                                                        });\n                                                        this.emitBlock([\"else\"], () => {\n                                                            this.emitLine(cJSON.addToObject, \"(j\", child_level.toString(), \", keys\", child_level.toString(), \"[index\", child_level.toString(), \"], cJSON_CreateNull());\");\n                                                        });\n                                                    }\n                                                    else {\n                                                        add(property.type, cJSON, child_level);\n                                                    }\n                                                });\n                                                this.emitLine(\"cJSON_free(keys\", child_level.toString(), \");\");\n                                            });\n                                            this.emitLine(cJSON.addToObject, \"(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\", j', child_level.toString(), \");\");\n                                        });\n                                    });\n                                }\n                                else if (cJSON.cjsonType === \"cJSON_Invalid\") {\n                                    /* Nothing to do */\n                                }\n                                else if (cJSON.cjsonType === \"cJSON_NULL\") {\n                                    if (property.isOptional) {\n                                        this.emitBlock([\"if (NULL != x\", level > 0 ? level.toString() : \"\", \"->\", name, \")\"], () => {\n                                            this.emitLine(cJSON.addToObject, \"(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\");');\n                                        });\n                                    }\n                                    else {\n                                        this.emitLine(cJSON.addToObject, \"(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\");');\n                                    }\n                                }\n                                else if (cJSON.cjsonType === \"cJSON_String\") {\n                                    this.emitBlock([\"if (NULL != x\", level > 0 ? level.toString() : \"\", \"->\", name, \")\"], () => {\n                                        this.emitLine(cJSON.addToObject, \"(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\", x', level > 0 ? level.toString() : \"\", \"->\", name, \");\");\n                                    });\n                                    if (!property.isOptional && !cJSON.isNullable) {\n                                        this.emitBlock([\"else\"], () => {\n                                            this.emitLine(cJSON.addToObject, \"(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\", \"\");');\n                                        });\n                                    }\n                                }\n                                else if (cJSON.cjsonType === \"cJSON_Object\" ||\n                                    cJSON.cjsonType === \"cJSON_Union\") {\n                                    if (property.isOptional || cJSON.isNullable) {\n                                        this.emitBlock([\"if (NULL != x\", level > 0 ? level.toString() : \"\", \"->\", name, \")\"], () => {\n                                            this.emitLine(cJSON.addToObject, \"(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\", ', cJSON.createObject, \"(x\", level > 0 ? level.toString() : \"\", \"->\", name, \"));\");\n                                        });\n                                    }\n                                    else {\n                                        this.emitLine(cJSON.addToObject, \"(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\", ', cJSON.createObject, \"(x\", level > 0 ? level.toString() : \"\", \"->\", name, \"));\");\n                                    }\n                                }\n                                else if (cJSON.cjsonType === \"cJSON_Enum\") {\n                                    if (property.isOptional || cJSON.isNullable) {\n                                        this.emitBlock([\"if (NULL != x\", level > 0 ? level.toString() : \"\", \"->\", name, \")\"], () => {\n                                            this.emitLine(cJSON.addToObject, \"(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\", ', cJSON.createObject, \"(*x\", level > 0 ? level.toString() : \"\", \"->\", name, \"));\");\n                                        });\n                                    }\n                                    else {\n                                        this.emitLine(cJSON.addToObject, \"(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\", ', cJSON.createObject, \"(x\", level > 0 ? level.toString() : \"\", \"->\", name, \"));\");\n                                    }\n                                }\n                                else {\n                                    if (property.isOptional || cJSON.isNullable) {\n                                        this.emitBlock([\"if (NULL != x\", level > 0 ? level.toString() : \"\", \"->\", name, \")\"], () => {\n                                            this.emitLine(cJSON.addToObject, \"(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\", *x', level > 0 ? level.toString() : \"\", \"->\", name, \");\");\n                                        });\n                                    }\n                                    else {\n                                        this.emitLine(cJSON.addToObject, \"(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\", x', level > 0 ? level.toString() : \"\", \"->\", name, \");\");\n                                    }\n                                }\n                                if (cJSON.isNullable) {\n                                    this.emitBlock([\"else\"], () => {\n                                        this.emitLine(\"cJSON_AddNullToObject(j\", level > 0 ? level.toString() : \"\", ', \"', jsonName, '\");');\n                                    });\n                                }\n                            });\n                        }\n                    };\n                    recur(classType, 0);\n                });\n            });\n            this.emitLine(\"return j;\");\n        });\n        this.ensureBlankLine();\n        /* Create className to string generator function */\n        this.emitBlock([\"char * cJSON_Print\", className, \"(\", this.withConst([\"struct \", className]), \" * x)\"], () => {\n            this.emitLine(\"char * s = NULL;\");\n            this.emitBlock([\"if (NULL != x)\"], () => {\n                this.emitLine(\"cJSON * j = cJSON_Create\", className, \"(x);\");\n                this.emitBlock([\"if (NULL != j)\"], () => {\n                    this.emitLine(this._options.printStyle ? \"s = cJSON_PrintUnformatted(j);\" : \"s = cJSON_Print(j);\");\n                    this.emitLine(\"cJSON_Delete(j);\");\n                });\n            });\n            this.emitLine(\"return s;\");\n        });\n        this.ensureBlankLine();\n        /* Create className delete function */\n        this.emitBlock([\"void cJSON_Delete\", className, \"(struct \", className, \" * x)\"], () => {\n            this.emitBlock([\"if (NULL != x)\"], () => {\n                const recur = (type, level) => {\n                    if (type instanceof Type_1.ArrayType) {\n                        const child_level = level + 1;\n                        const cJSON = this.quicktypeTypeToCJSON(type.items, false);\n                        this.emitLine(cJSON.cType, \" * x\", child_level.toString(), \" = list_get_head(x\", level.toString(), \");\");\n                        this.emitBlock([\"while (NULL != x\", child_level.toString(), \")\"], () => {\n                            if (cJSON.cjsonType === \"cJSON_Array\") {\n                                recur(type.items, child_level);\n                                this.emitLine(cJSON.deleteType, \"(x\", child_level.toString(), \");\");\n                            }\n                            else if (cJSON.cjsonType === \"cJSON_Map\") {\n                                /* Not supported */\n                            }\n                            else if (cJSON.cjsonType === \"cJSON_Invalid\" || cJSON.cjsonType === \"cJSON_NULL\") {\n                                /* Nothing to do */\n                            }\n                            else {\n                                this.emitLine(cJSON.deleteType, \"(x\", child_level.toString(), \");\");\n                            }\n                            this.emitLine(\"x\", child_level.toString(), \" = list_get_next(x\", level.toString(), \");\");\n                        });\n                    }\n                    else if (type instanceof Type_1.ClassType) {\n                        this.forEachClassProperty(type, \"none\", (name, _jsonName, property) => {\n                            const cJSON = this.quicktypeTypeToCJSON(property.type, property.isOptional);\n                            if (cJSON.cjsonType === \"cJSON_Array\" && cJSON.items !== undefined) {\n                                const child_level = level + 1;\n                                this.emitBlock([\"if (NULL != x\", level > 0 ? level.toString() : \"\", \"->\", name, \")\"], () => {\n                                    this.emitLine(cJSON.items.cType, \" * x\", child_level.toString(), \" = list_get_head(x\", level > 0 ? level.toString() : \"\", \"->\", name, \");\");\n                                    this.emitBlock([\"while (NULL != x\", child_level.toString(), \")\"], () => {\n                                        if (cJSON.items.cjsonType === \"cJSON_Array\") {\n                                            if (property.type instanceof Type_1.ArrayType) {\n                                                recur(property.type.items, child_level);\n                                                this.emitLine(cJSON.items.deleteType, \"(x\", child_level.toString(), \");\");\n                                            }\n                                            else {\n                                                (0, Support_1.panic)(\"Invalid type\");\n                                            }\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_Map\") {\n                                            /* Not supported */\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_Invalid\" ||\n                                            cJSON.items.cjsonType === \"cJSON_NULL\") {\n                                            /* Nothing to do */\n                                        }\n                                        else {\n                                            if (cJSON.items.isNullable) {\n                                                this.emitBlock([\"if ((void *)0xDEADBEEF != x\", child_level.toString(), \")\"], () => {\n                                                    this.emitLine(cJSON.items.deleteType, \"(x\", child_level.toString(), \");\");\n                                                });\n                                            }\n                                            else {\n                                                this.emitLine(cJSON.items.deleteType, \"(x\", child_level.toString(), \");\");\n                                            }\n                                        }\n                                        this.emitLine(\"x\", child_level.toString(), \" = list_get_next(x\", level > 0 ? level.toString() : \"\", \"->\", name, \");\");\n                                    });\n                                    this.emitLine(cJSON.deleteType, \"(x\", level > 0 ? level.toString() : \"\", \"->\", name, \");\");\n                                });\n                            }\n                            else if (cJSON.cjsonType === \"cJSON_Map\" && cJSON.items !== undefined) {\n                                const child_level = level + 1;\n                                this.emitBlock([\"if (NULL != x\", level > 0 ? level.toString() : \"\", \"->\", name, \")\"], () => {\n                                    this.emitLine(\"char **keys\", child_level.toString(), \" = NULL;\");\n                                    this.emitLine(\"size_t count\", child_level.toString(), \" = hashtable_get_keys(x\", level > 0 ? level.toString() : \"\", \"->\", name, \", &keys\", child_level.toString(), \");\");\n                                    this.emitBlock([\"if (NULL != keys\", child_level.toString(), \")\"], () => {\n                                        this.emitBlock([\n                                            \"for (size_t index\",\n                                            child_level.toString(),\n                                            \" = 0; index\",\n                                            child_level.toString(),\n                                            \" < count\",\n                                            child_level.toString(),\n                                            \"; index\",\n                                            child_level.toString(),\n                                            \"++)\"\n                                        ], () => {\n                                            this.emitLine(cJSON.items.cType, \" *x\", child_level.toString(), \" = hashtable_lookup(x\", level > 0 ? level.toString() : \"\", \"->\", name, \", keys\", child_level.toString(), \"[index\", child_level.toString(), \"]);\");\n                                            this.emitBlock([\"if (NULL != x\", child_level.toString(), \")\"], () => {\n                                                if (cJSON.items.cjsonType === \"cJSON_Array\") {\n                                                    if (property.type instanceof Type_1.MapType) {\n                                                        recur(property.type.values, child_level);\n                                                        this.emitLine(cJSON.items.deleteType, \"(x\", child_level.toString(), \");\");\n                                                    }\n                                                    else {\n                                                        (0, Support_1.panic)(\"Invalid type\");\n                                                    }\n                                                }\n                                                else if (cJSON.items.cjsonType === \"cJSON_Map\") {\n                                                    /* Not supported */\n                                                }\n                                                else if (cJSON.items.cjsonType === \"cJSON_Invalid\" ||\n                                                    cJSON.items.cjsonType === \"cJSON_NULL\") {\n                                                    /* Nothing to do */\n                                                }\n                                                else {\n                                                    if (cJSON.items.isNullable) {\n                                                        this.emitBlock([\n                                                            \"if ((void *)0xDEADBEEF != x\",\n                                                            child_level.toString(),\n                                                            \")\"\n                                                        ], () => {\n                                                            this.emitLine(cJSON.items.deleteType, \"(x\", child_level.toString(), \");\");\n                                                        });\n                                                    }\n                                                    else {\n                                                        this.emitLine(cJSON.items.deleteType, \"(x\", child_level.toString(), \");\");\n                                                    }\n                                                }\n                                            });\n                                        });\n                                        this.emitLine(\"cJSON_free(keys\", child_level.toString(), \");\");\n                                    });\n                                    this.emitLine(cJSON.deleteType, \"(x\", level > 0 ? level.toString() : \"\", \"->\", name, \");\");\n                                });\n                            }\n                            else if (cJSON.cjsonType === \"cJSON_Invalid\" || cJSON.cjsonType === \"cJSON_NULL\") {\n                                /* Nothing to do */\n                            }\n                            else if (cJSON.cjsonType === \"cJSON_String\" ||\n                                cJSON.cjsonType === \"cJSON_Object\" ||\n                                cJSON.cjsonType === \"cJSON_Union\") {\n                                this.emitBlock([\"if (NULL != x\", level > 0 ? level.toString() : \"\", \"->\", name, \")\"], () => {\n                                    this.emitLine(cJSON.deleteType, \"(x\", level > 0 ? level.toString() : \"\", \"->\", name, \");\");\n                                });\n                            }\n                            else {\n                                if (property.isOptional || cJSON.isNullable) {\n                                    this.emitBlock([\"if (NULL != x\", level > 0 ? level.toString() : \"\", \"->\", name, \")\"], () => {\n                                        this.emitLine(cJSON.deleteType, \"(x\", level > 0 ? level.toString() : \"\", \"->\", name, \");\");\n                                    });\n                                }\n                            }\n                        });\n                    }\n                };\n                recur(classType, 0);\n                this.emitLine(\"cJSON_free(x);\");\n            });\n        });\n        this.ensureBlankLine();\n    }\n    /**\n     * Function called to create a top level header files with types and generators\n     * @param type: type of the top level element\n     * @param className: top level class name\n     * @param includes: Array of includes\n     */\n    emitTopLevel(type, className, includes) {\n        /* Create file */\n        const filename = this.sourcelikeToString(className).concat(\".h\");\n        this.startFile(filename);\n        /* Create includes - This create too much includes but this is safer because of specific corner cases */\n        includes.forEach(name => {\n            this.emitIncludeLine(name);\n        });\n        this.ensureBlankLine();\n        /* Create types */\n        this.emitTopLevelTypedef(type, className);\n        /* Create prototypes */\n        this.emitTopLevelPrototypes(type, className);\n        /* Create functions */\n        this.emitTopLevelFunctions(type, className);\n        /* Close file */\n        this.finishFile();\n    }\n    /**\n     * Function called to create top level typedef\n     * @param type: type of the top level element\n     * @param className: top level class name\n     */\n    emitTopLevelTypedef(type, className) {\n        this.emitBlock([\"struct \", className], () => {\n            const cJSON = this.quicktypeTypeToCJSON(type, false);\n            this.emitLine(cJSON.cType, cJSON.optionalQualifier !== \"\" ? \" \" : \"\", cJSON.optionalQualifier, \" value;\");\n        }, \"\", true);\n        this.ensureBlankLine();\n        this.emitTypdefAlias(type, className);\n    }\n    /**\n     * Function called to create top level prototypes\n     * @param type: type of the top level element\n     * @param className: top level class name\n     */\n    emitTopLevelPrototypes(_type, className) {\n        this.emitLine(\"struct \", className, \" * cJSON_Parse\", className, \"(\", this.withConst(\"char\"), \" * s);\");\n        this.emitLine(\"struct \", className, \" * cJSON_Get\", className, \"Value(\", this.withConst(\"cJSON\"), \" * j);\");\n        this.emitLine(\"cJSON * cJSON_Create\", className, \"(\", this.withConst([\"struct \", className]), \" * x);\");\n        this.emitLine(\"char * cJSON_Print\", className, \"(\", this.withConst([\"struct \", className]), \" * x);\");\n        this.emitLine(\"void cJSON_Delete\", className, \"(struct \", className, \" * x);\");\n        this.ensureBlankLine();\n    }\n    /**\n     * Function called to create top level functions\n     * @param type: type of the top level element\n     * @param className: top level class name\n     */\n    emitTopLevelFunctions(type, className) {\n        /* Create string to className generator function */\n        this.emitBlock([\"struct \", className, \" * cJSON_Parse\", className, \"(\", this.withConst(\"char\"), \" * s)\"], () => {\n            this.emitLine(\"struct \", className, \" * x = NULL;\");\n            this.emitBlock([\"if (NULL != s)\"], () => {\n                this.emitLine(\"cJSON * j = cJSON_Parse(s);\");\n                this.emitBlock([\"if (NULL != j)\"], () => {\n                    this.emitLine(\"x = cJSON_Get\", className, \"Value(j);\");\n                    this.emitLine(\"cJSON_Delete(j);\");\n                });\n            });\n            this.emitLine(\"return x;\");\n        });\n        this.ensureBlankLine();\n        /* Create cJSON to className generator function */\n        this.emitBlock([\"struct \", className, \" * cJSON_Get\", className, \"Value(\", this.withConst(\"cJSON\"), \" * j)\"], () => {\n            this.emitLine(\"struct \", className, \" * x = NULL;\");\n            this.emitBlock([\"if (NULL != j)\"], () => {\n                this.emitBlock([\"if (NULL != (x = cJSON_malloc(sizeof(struct \", className, \"))))\"], () => {\n                    this.emitLine(\"memset(x, 0, sizeof(struct \", className, \"));\");\n                    const cJSON = this.quicktypeTypeToCJSON(type, false);\n                    if (cJSON.cjsonType === \"cJSON_Array\" && cJSON.items !== undefined) {\n                        this.emitLine(\"x->value = list_create(false, NULL);\");\n                        this.emitBlock([\"if (NULL != x->value)\"], () => {\n                            this.emitLine(\"cJSON * e = NULL;\");\n                            this.emitBlock([\"cJSON_ArrayForEach(e, j)\"], () => {\n                                const add = (cJSON) => {\n                                    if (cJSON.items.cjsonType === \"cJSON_Array\") {\n                                        /* Not supported */\n                                    }\n                                    else if (cJSON.items.cjsonType === \"cJSON_Map\") {\n                                        /* Not supported */\n                                    }\n                                    else if (cJSON.items.cjsonType === \"cJSON_Invalid\" ||\n                                        cJSON.items.cjsonType === \"cJSON_NULL\") {\n                                        this.emitLine(\"list_add_tail(x->value, (\", cJSON.items.cType, \" *)0xDEADBEAF, sizeof(\", cJSON.items.cType, \" *));\");\n                                    }\n                                    else if (cJSON.items.cjsonType === \"cJSON_String\") {\n                                        this.emitLine(\"list_add_tail(x->value, strdup(\", cJSON.items.getValue, \"(e)), sizeof(\", cJSON.items.cType, \" *));\");\n                                    }\n                                    else {\n                                        this.emitLine(\"list_add_tail(x->value, \", cJSON.items.getValue, \"(e), sizeof(\", cJSON.items.cType, \" *));\");\n                                    }\n                                };\n                                if (cJSON.items.isNullable) {\n                                    this.emitBlock([\"if (!cJSON_IsNull(e))\"], () => {\n                                        add(cJSON);\n                                    });\n                                    this.emitBlock([\"else\"], () => {\n                                        this.emitLine(\"list_add_tail(x->value, (void *)0xDEADBEEF, sizeof(void *));\");\n                                    });\n                                }\n                                else {\n                                    add(cJSON);\n                                }\n                            });\n                        });\n                    }\n                    else if (cJSON.cjsonType === \"cJSON_Map\" && cJSON.items !== undefined) {\n                        this.emitLine(\"x->value = hashtable_create(\", this.hashtableSize, \", false);\");\n                        this.emitBlock([\"if (NULL != x->value)\"], () => {\n                            this.emitLine(\"cJSON * e = NULL;\");\n                            this.emitBlock([\"cJSON_ArrayForEach(e, j)\"], () => {\n                                const add = (cJSON) => {\n                                    if (cJSON.items.cjsonType === \"cJSON_Array\") {\n                                        /* Not supported */\n                                    }\n                                    else if (cJSON.items.cjsonType === \"cJSON_Map\") {\n                                        /* Not supported */\n                                    }\n                                    else if (cJSON.items.cjsonType === \"cJSON_Invalid\" ||\n                                        cJSON.items.cjsonType === \"cJSON_NULL\") {\n                                        this.emitLine(\"hashtable_add(x->value, e->string, (\", cJSON.items.cType, \" *)0xDEADBEEF, sizeof(\", cJSON.items.cType, \" *));\");\n                                    }\n                                    else if (cJSON.items.cjsonType === \"cJSON_String\") {\n                                        this.emitLine(\"hashtable_add(x->value, e->string, strdup(\", cJSON.items.getValue, \"(e)), sizeof(\", cJSON.items.cType, \" *));\");\n                                    }\n                                    else {\n                                        this.emitLine(\"hashtable_add(x->value, e->string, \", cJSON.items.getValue, \"(e), sizeof(\", cJSON.items.cType, \" *));\");\n                                    }\n                                };\n                                if (cJSON.items.isNullable) {\n                                    this.emitBlock([\"if (!cJSON_IsNull(e))\"], () => {\n                                        add(cJSON);\n                                    });\n                                    this.emitBlock([\"else\"], () => {\n                                        this.emitLine(\"hashtable_add(x->value, e->string, (void *)0xDEADBEEF, sizeof(void *));\");\n                                    });\n                                }\n                                else {\n                                    add(cJSON);\n                                }\n                            });\n                        });\n                    }\n                    else if (cJSON.cjsonType === \"cJSON_Invalid\") {\n                        /* Nothing to do */\n                    }\n                    else if (cJSON.cjsonType === \"cJSON_NULL\") {\n                        this.emitLine(\"x->value = (\", cJSON.cType, \" *)0xDEADBEEF;\");\n                    }\n                    else if (cJSON.cjsonType === \"cJSON_String\") {\n                        this.emitLine(\"x->value = strdup(\", cJSON.getValue, \"(j));\");\n                    }\n                    else {\n                        this.emitLine(\"x->value = \", cJSON.getValue, \"(j);\");\n                    }\n                });\n            });\n            this.emitLine(\"return x;\");\n        });\n        this.ensureBlankLine();\n        /* Create className to cJSON generator function */\n        this.emitBlock([\"cJSON * cJSON_Create\", className, \"(\", this.withConst([\"struct \", className]), \" * x)\"], () => {\n            this.emitLine(\"cJSON * j = NULL;\");\n            this.emitBlock([\"if (NULL != x)\"], () => {\n                const cJSON = this.quicktypeTypeToCJSON(type, false);\n                if (cJSON.cjsonType === \"cJSON_Array\" && cJSON.items !== undefined) {\n                    this.emitBlock([\"if (NULL != x->value)\"], () => {\n                        this.emitLine(\"j = \", cJSON.createObject, \"();\");\n                        this.emitBlock([\"if (NULL != j)\"], () => {\n                            this.emitLine(cJSON.items.cType, \" * x1 = list_get_head(x->value);\");\n                            this.emitBlock([\"while (NULL != x1)\"], () => {\n                                const add = (cJSON) => {\n                                    if (cJSON.items.cjsonType === \"cJSON_Array\") {\n                                        /* Not supported */\n                                    }\n                                    else if (cJSON.items.cjsonType === \"cJSON_Map\") {\n                                        /* Not supported */\n                                    }\n                                    else if (cJSON.items.cjsonType === \"cJSON_Invalid\") {\n                                        /* Nothing to do */\n                                    }\n                                    else if (cJSON.items.cjsonType === \"cJSON_NULL\") {\n                                        this.emitLine(\"cJSON_AddItemToArray(j, \", cJSON.items.createObject, \"());\");\n                                    }\n                                    else if (cJSON.items.cjsonType === \"cJSON_String\" ||\n                                        cJSON.items.cjsonType === \"cJSON_Object\" ||\n                                        cJSON.items.cjsonType === \"cJSON_Union\") {\n                                        this.emitLine(\"cJSON_AddItemToArray(j, \", cJSON.items.createObject, \"(x1));\");\n                                    }\n                                    else {\n                                        this.emitLine(\"cJSON_AddItemToArray(j, \", cJSON.items.createObject, \"(*x1));\");\n                                    }\n                                };\n                                if (cJSON.items.isNullable) {\n                                    this.emitBlock([\"if ((void *)0xDEADBEEF != x1)\"], () => {\n                                        add(cJSON);\n                                    });\n                                    this.emitBlock([\"else\"], () => {\n                                        this.emitLine(\"cJSON_AddItemToArray(j, cJSON_CreateNull());\");\n                                    });\n                                }\n                                else {\n                                    add(cJSON);\n                                }\n                                this.emitLine(\"x1 = list_get_next(x->value);\");\n                            });\n                        });\n                    });\n                }\n                else if (cJSON.cjsonType === \"cJSON_Map\" && cJSON.items !== undefined) {\n                    this.emitBlock([\"if (NULL != x->value)\"], () => {\n                        this.emitLine(\"j = \", cJSON.createObject, \"();\");\n                        this.emitBlock([\"if (NULL != j)\"], () => {\n                            this.emitLine(\"char **keys = NULL;\");\n                            this.emitLine(\"size_t count = hashtable_get_keys(x->value, &keys);\");\n                            this.emitBlock([\"if (NULL != keys)\"], () => {\n                                this.emitBlock([\"for (size_t index = 0; index < count; index++)\"], () => {\n                                    this.emitLine(cJSON.items.cType, \" *x2 = hashtable_lookup(x->value, keys[index]);\");\n                                    const add = (cJSON) => {\n                                        if (cJSON.items.cjsonType === \"cJSON_Array\") {\n                                            /* Not supported */\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_Map\") {\n                                            /* Not supported */\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_Invalid\") {\n                                            /* Nothing to do */\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_NULL\") {\n                                            this.emitLine(cJSON.addToObject, \"(j, keys[index], \", cJSON.items.createObject, \"());\");\n                                        }\n                                        else if (cJSON.items.cjsonType === \"cJSON_String\" ||\n                                            cJSON.items.cjsonType === \"cJSON_Object\" ||\n                                            cJSON.items.cjsonType === \"cJSON_Union\") {\n                                            this.emitLine(cJSON.addToObject, \"(j, keys[index], \", cJSON.items.createObject, \"(x2));\");\n                                        }\n                                        else {\n                                            this.emitLine(cJSON.addToObject, \"(j, keys[index], \", cJSON.items.createObject, \"(*x2));\");\n                                        }\n                                    };\n                                    if (cJSON.items.isNullable) {\n                                        this.emitBlock([\"if ((void *)0xDEADBEEF != x2)\"], () => {\n                                            add(cJSON);\n                                        });\n                                        this.emitBlock([\"else\"], () => {\n                                            this.emitLine(cJSON.addToObject, \"(j, keys[index], cJSON_CreateNull());\");\n                                        });\n                                    }\n                                    else {\n                                        add(cJSON);\n                                    }\n                                });\n                                this.emitLine(\"cJSON_free(keys);\");\n                            });\n                        });\n                    });\n                }\n                else if (cJSON.cjsonType === \"cJSON_Invalid\") {\n                    /* Nothing to do */\n                }\n                else if (cJSON.cjsonType === \"cJSON_NULL\") {\n                    this.emitLine(\"j = \", cJSON.createObject, \"();\");\n                }\n                else {\n                    this.emitLine(\"j = \", cJSON.createObject, \"(x->value);\");\n                }\n            });\n            this.emitLine(\"return j;\");\n        });\n        this.ensureBlankLine();\n        /* Create className to string generator function */\n        this.emitBlock([\"char * cJSON_Print\", className, \"(\", this.withConst([\"struct \", className]), \" * x)\"], () => {\n            this.emitLine(\"char * s = NULL;\");\n            this.emitBlock([\"if (NULL != x)\"], () => {\n                this.emitLine(\"cJSON * j = cJSON_Create\", className, \"(x);\");\n                this.emitBlock([\"if (NULL != j)\"], () => {\n                    this.emitLine(\"s = cJSON_Print(j);\");\n                    this.emitLine(\"cJSON_Delete(j);\");\n                });\n            });\n            this.emitLine(\"return s;\");\n        });\n        this.ensureBlankLine();\n        /* Create className delete function */\n        this.emitBlock([\"void cJSON_Delete\", className, \"(struct \", className, \" * x)\"], () => {\n            this.emitBlock([\"if (NULL != x)\"], () => {\n                const cJSON = this.quicktypeTypeToCJSON(type, false);\n                if (cJSON.cjsonType === \"cJSON_Array\" && cJSON.items !== undefined) {\n                    this.emitBlock([\"if (NULL != x->value)\"], () => {\n                        this.emitLine(cJSON.items.cType, \" * x1 = list_get_head(x->value);\");\n                        this.emitBlock([\"while (NULL != x1)\"], () => {\n                            if (cJSON.items.isNullable) {\n                                this.emitBlock([\"if ((void *)0xDEADBEEF != x1)\"], () => {\n                                    this.emitLine(cJSON.items.deleteType, \"(x1);\");\n                                });\n                            }\n                            else {\n                                this.emitLine(cJSON.items.deleteType, \"(x1);\");\n                            }\n                            this.emitLine(\"x1 = list_get_next(x->value);\");\n                        });\n                        this.emitLine(cJSON.deleteType, \"(x->value);\");\n                    });\n                }\n                else if (cJSON.cjsonType === \"cJSON_Map\" && cJSON.items !== undefined) {\n                    this.emitBlock([\"if (NULL != x->value)\"], () => {\n                        this.emitLine(\"char **keys = NULL;\");\n                        this.emitLine(\"size_t count = hashtable_get_keys(x->value, &keys);\");\n                        this.emitBlock([\"if (NULL != keys)\"], () => {\n                            this.emitBlock([\"for (size_t index = 0; index < count; index++)\"], () => {\n                                this.emitLine(cJSON.items.cType, \" *x2 = hashtable_lookup(x->value, keys[index]);\");\n                                this.emitBlock([\"if (NULL != x2)\"], () => {\n                                    if (cJSON.items.isNullable) {\n                                        this.emitBlock([\"if ((\", cJSON.items.cType, \" *)0xDEADBEEF != x2)\"], () => {\n                                            this.emitLine(cJSON.items.deleteType, \"(x2);\");\n                                        });\n                                    }\n                                    else {\n                                        this.emitLine(cJSON.items.deleteType, \"(x2);\");\n                                    }\n                                });\n                            });\n                            this.emitLine(\"cJSON_free(keys);\");\n                        });\n                        this.emitLine(cJSON.deleteType, \"(x->value);\");\n                    });\n                }\n                else if (cJSON.cjsonType === \"cJSON_Invalid\" || cJSON.cjsonType === \"cJSON_NULL\") {\n                    /* Nothing to do */\n                }\n                else if (cJSON.cjsonType === \"cJSON_String\" ||\n                    cJSON.cjsonType === \"cJSON_Object\" ||\n                    cJSON.cjsonType === \"cJSON_Union\") {\n                    this.emitLine(cJSON.deleteType, \"(x->value);\");\n                }\n                else {\n                    /* Nothing to do */\n                }\n                this.emitLine(\"cJSON_free(x);\");\n            });\n        });\n        this.ensureBlankLine();\n    }\n    /**\n     * Convert quicktype type to cJSON type\n     * @param t: quicktype type\n     * @param isOptional: true if the field is optional\n     * @param isNullable: true if the field is nullable\n     * @return cJSON type\n     */\n    quicktypeTypeToCJSON(t, isOptional, isNullable = false) {\n        /* Compute cJSON type */\n        return (0, TypeUtils_1.matchType)(t, _anyType => {\n            return {\n                cType: \"void\",\n                optionalQualifier: \"*\",\n                cjsonType: \"cJSON_Invalid\",\n                isType: \"cJSON_IsInvalid\",\n                getValue: \"\",\n                addToObject: \"\",\n                createObject: \"\",\n                deleteType: \"\",\n                items: undefined,\n                isNullable\n            };\n        }, _nullType => {\n            return {\n                cType: \"void\",\n                optionalQualifier: \"*\",\n                cjsonType: \"cJSON_NULL\",\n                isType: \"cJSON_IsNull\",\n                getValue: \"\",\n                addToObject: \"cJSON_AddNullToObject\",\n                createObject: \"cJSON_CreateNull\",\n                deleteType: \"cJSON_free\",\n                items: undefined,\n                isNullable\n            };\n        }, _boolType => {\n            return {\n                cType: \"bool\",\n                optionalQualifier: isOptional === true ? \"*\" : \"\",\n                cjsonType: \"cJSON_Bool\",\n                isType: \"cJSON_IsBool\",\n                getValue: \"cJSON_IsTrue\",\n                addToObject: \"cJSON_AddBoolToObject\",\n                createObject: \"cJSON_CreateBool\",\n                deleteType: \"cJSON_free\",\n                items: undefined,\n                isNullable\n            };\n        }, _integerType => {\n            return {\n                cType: this.typeIntegerSize,\n                optionalQualifier: isOptional === true ? \"*\" : \"\",\n                cjsonType: \"cJSON_Number\",\n                isType: \"cJSON_IsNumber\",\n                getValue: \"cJSON_GetNumberValue\",\n                addToObject: \"cJSON_AddNumberToObject\",\n                createObject: \"cJSON_CreateNumber\",\n                deleteType: \"cJSON_free\",\n                items: undefined,\n                isNullable\n            };\n        }, _doubleType => {\n            return {\n                cType: \"double\",\n                optionalQualifier: isOptional === true ? \"*\" : \"\",\n                cjsonType: \"cJSON_Number\",\n                isType: \"cJSON_IsNumber\",\n                getValue: \"cJSON_GetNumberValue\",\n                addToObject: \"cJSON_AddNumberToObject\",\n                createObject: \"cJSON_CreateNumber\",\n                deleteType: \"cJSON_free\",\n                items: undefined,\n                isNullable\n            };\n        }, _stringType => {\n            return {\n                cType: \"char\",\n                optionalQualifier: \"*\",\n                cjsonType: \"cJSON_String\",\n                isType: \"cJSON_IsString\",\n                getValue: \"cJSON_GetStringValue\",\n                addToObject: \"cJSON_AddStringToObject\",\n                createObject: \"cJSON_CreateString\",\n                deleteType: \"cJSON_free\",\n                items: undefined,\n                isNullable\n            };\n        }, arrayType => {\n            const items = this.quicktypeTypeToCJSON(arrayType.items, false);\n            return {\n                cType: \"list_t\",\n                optionalQualifier: \"*\",\n                cjsonType: \"cJSON_Array\",\n                isType: \"cJSON_IsArray\",\n                getValue: \"cJSON_GetArrayItem\",\n                addToObject: \"cJSON_AddItemToObject\",\n                createObject: \"cJSON_CreateArray\",\n                deleteType: \"list_release\",\n                items,\n                isNullable\n            };\n        }, classType => {\n            return {\n                cType: [\"struct \", this.nameForNamedType(classType)],\n                optionalQualifier: \"*\",\n                cjsonType: \"cJSON_Object\",\n                isType: \"cJSON_IsObject\",\n                getValue: [\"cJSON_Get\", this.nameForNamedType(classType), \"Value\"],\n                addToObject: \"cJSON_AddItemToObject\",\n                createObject: [\"cJSON_Create\", this.nameForNamedType(classType)],\n                deleteType: [\"cJSON_Delete\", this.nameForNamedType(classType)],\n                items: undefined,\n                isNullable\n            };\n        }, mapType => {\n            const items = this.quicktypeTypeToCJSON(mapType.values, false);\n            return {\n                cType: \"hashtable_t\",\n                optionalQualifier: \"*\",\n                cjsonType: \"cJSON_Map\",\n                isType: \"cJSON_IsObject\",\n                getValue: \"\",\n                addToObject: \"cJSON_AddItemToObject\",\n                createObject: \"cJSON_CreateObject\",\n                deleteType: \"hashtable_release\",\n                items,\n                isNullable\n            };\n        }, enumType => {\n            return {\n                cType: [\"enum \", this.nameForNamedType(enumType)],\n                optionalQualifier: isOptional === true ? \"*\" : \"\",\n                cjsonType: \"cJSON_Enum\",\n                isType: \"cJSON_IsString\",\n                getValue: [\"cJSON_Get\", this.nameForNamedType(enumType), \"Value\"],\n                addToObject: \"cJSON_AddItemToObject\",\n                createObject: [\"cJSON_Create\", this.nameForNamedType(enumType)],\n                deleteType: \"cJSON_free\",\n                items: undefined,\n                isNullable\n            };\n        }, unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                return this.quicktypeTypeToCJSON(nullable, true, true);\n            }\n            else {\n                return {\n                    cType: [\"struct \", this.nameForNamedType(unionType)],\n                    optionalQualifier: \"*\",\n                    cjsonType: \"cJSON_Union\",\n                    isType: \"\",\n                    getValue: [\"cJSON_Get\", this.nameForNamedType(unionType), \"Value\"],\n                    addToObject: \"cJSON_AddItemToObject\",\n                    createObject: [\"cJSON_Create\", this.nameForNamedType(unionType)],\n                    deleteType: [\"cJSON_Delete\", this.nameForNamedType(unionType)],\n                    items: undefined,\n                    isNullable\n                };\n            }\n        });\n    }\n    /**\n     * Function called to create a file\n     * @param proposedFilename: source filename provided from stdin\n     */\n    startFile(proposedFilename) {\n        /* Check if previous file is closed, create a new file */\n        (0, Support_2.assert)(this.currentFilename === undefined, \"Previous file wasn't finished\");\n        if (proposedFilename !== undefined) {\n            this.currentFilename = this.sourcelikeToString(proposedFilename);\n        }\n        /* Check if file has been created */\n        if (this.currentFilename !== undefined) {\n            /* Write header */\n            this.emitDescriptionBlock([\n                this.currentFilename,\n                \"This file has been autogenerated using quicktype https://github.com/quicktype/quicktype - DO NOT EDIT\",\n                \"This file depends of https://github.com/DaveGamble/cJSON, https://github.com/joelguittet/c-list and https://github.com/joelguittet/c-hashtable\",\n                \"To parse json data from json string use the following: struct <type> * data = cJSON_Parse<type>(<string>);\",\n                \"To get json data from cJSON object use the following: struct <type> * data = cJSON_Get<type>Value(<cjson>);\",\n                \"To get cJSON object from json data use the following: cJSON * cjson = cJSON_Create<type>(<data>);\",\n                \"To print json string from json data use the following: char * string = cJSON_Print<type>(<data>);\",\n                \"To delete json data use the following: cJSON_Delete<type>(<data>);\"\n            ]);\n            this.ensureBlankLine();\n            /* Write include guard */\n            this.emitLine(\"#ifndef __\", (0, Strings_1.allUpperWordStyle)(this.currentFilename.replace(new RegExp(/[^a-zA-Z0-9]+/, \"g\"), \"_\")), \"__\");\n            this.emitLine(\"#define __\", (0, Strings_1.allUpperWordStyle)(this.currentFilename.replace(new RegExp(/[^a-zA-Z0-9]+/, \"g\"), \"_\")), \"__\");\n            this.ensureBlankLine();\n            /* Write C++ guard */\n            this.emitLine(\"#ifdef __cplusplus\");\n            this.emitLine('extern \"C\" {');\n            this.emitLine(\"#endif\");\n            this.ensureBlankLine();\n            /* Write includes */\n            this.emitIncludeLine(\"stdint.h\", true);\n            this.emitIncludeLine(\"stdbool.h\", true);\n            this.emitIncludeLine(\"stdlib.h\", true);\n            this.emitIncludeLine(\"string.h\", true);\n            this.emitIncludeLine(\"cJSON.h\", true);\n            this.emitIncludeLine(\"hashtable.h\", true);\n            this.emitIncludeLine(\"list.h\", true);\n            this.ensureBlankLine();\n            /* Additional cJSON types */\n            this.emitLine(\"#ifndef cJSON_Bool\");\n            this.emitLine(\"#define cJSON_Bool (cJSON_True | cJSON_False)\");\n            this.emitLine(\"#endif\");\n            this.emitLine(\"#ifndef cJSON_Map\");\n            this.emitLine(\"#define cJSON_Map (1 << 16)\");\n            this.emitLine(\"#endif\");\n            this.emitLine(\"#ifndef cJSON_Enum\");\n            this.emitLine(\"#define cJSON_Enum (1 << 17)\");\n            this.emitLine(\"#endif\");\n            this.ensureBlankLine();\n        }\n    }\n    /**\n     * Function called to close current file\n     */\n    finishFile() {\n        /* Check if file has been created */\n        if (this.currentFilename !== undefined) {\n            /* Write C++ guard */\n            this.emitLine(\"#ifdef __cplusplus\");\n            this.emitLine(\"}\");\n            this.emitLine(\"#endif\");\n            this.ensureBlankLine();\n            /* Write include guard */\n            this.emitLine(\"#endif /* __\", (0, Strings_1.allUpperWordStyle)(this.currentFilename.replace(new RegExp(/[^a-zA-Z0-9]+/, \"g\"), \"_\")), \"__ */\");\n            this.ensureBlankLine();\n            /* Close file */\n            super.finishFile((0, Support_1.defined)(this.currentFilename));\n            this.currentFilename = undefined;\n        }\n    }\n    /**\n     * Check if type need declaration before use\n     * @note If returning true, canBeForwardDeclared must be declared\n     * @return Always returns true\n     */\n    get needsTypeDeclarationBeforeUse() {\n        return true;\n    }\n    /**\n     * Check if type can be forward declared\n     * @return true for classes, false otherwise\n     */\n    canBeForwardDeclared(type) {\n        return type.kind === \"class\";\n    }\n    /**\n     * Add const to wanted Sourcelike\n     * @return Const Sourcelike\n     */\n    withConst(s) {\n        return [\"const \", s];\n    }\n    /**\n     * Emit include line\n     * @param name: filename to include\n     * @pram global: true if global include, false otherwise (default)\n     */\n    emitIncludeLine(name, global = false) {\n        this.emitLine(\"#include \", global ? \"<\" : '\"', name, global ? \">\" : '\"');\n    }\n    /**\n     * Emit description block\n     * @param lines: description block lines\n     */\n    emitDescriptionBlock(lines) {\n        this.emitCommentLines(lines, { lineStart: \" * \", beforeComment: \"/**\", afterComment: \" */\" });\n    }\n    /**\n     * Emit code block\n     * @param line: code block line\n     * @param f: callback function\n     * @param withName: name of the block as string\n     * @param withSemicolon: true to add semicolon at the end of the block, false otherwise\n     * @param withIndent: true to indent the block (default), false otherwise\n     */\n    emitBlock(line, f, withName = \"\", withSemicolon = false, withIndent = true) {\n        this.emitLine(line, \" {\");\n        this.preventBlankLine();\n        if (withIndent) {\n            this.indent(f);\n        }\n        else {\n            f();\n        }\n        this.preventBlankLine();\n        if (withSemicolon) {\n            if (withName !== \"\") {\n                this.emitLine(\"} \", withName, \";\");\n            }\n            else {\n                this.emitLine(\"};\");\n            }\n        }\n        else {\n            if (withName !== \"\") {\n                this.emitLine(\"} \", withName);\n            }\n            else {\n                this.emitLine(\"}\");\n            }\n        }\n    }\n    /**\n     * Emit includes\n     * @param type: class, union or enum type\n     * @param filename: current file name\n     */\n    emitIncludes(type, filename) {\n        /* List required includes */\n        const includes = new Map();\n        if (type instanceof Type_1.UnionType) {\n            this.updateIncludes(false, includes, type);\n        }\n        else if (type instanceof Type_1.ClassType) {\n            this.forEachClassProperty(type, \"none\", (_name, _jsonName, property) => {\n                this.updateIncludes(true, includes, property.type);\n            });\n        }\n        /* Emit includes */\n        if (includes.size !== 0) {\n            includes.forEach((_rec, name) => {\n                name = name.concat(\".h\");\n                if (name !== filename) {\n                    this.emitIncludeLine(name);\n                }\n            });\n        }\n        this.ensureBlankLine();\n    }\n    /**\n     * Compute includes\n     * @param isClassMender: true if class, false otherwise\n     * @param includes: include map\n     * @param propertyType: property type\n     */\n    updateIncludes(isClassMember, includes, propertyType) {\n        const propTypes = this.generatedTypes(isClassMember, propertyType);\n        for (const t of propTypes) {\n            const typeName = this.sourcelikeToString(t.name);\n            const propRecord = { kind: undefined, typeKind: undefined };\n            if (t.type instanceof Type_1.ClassType) {\n                /* We can NOT forward declare direct class members, e.g. a class type is included at level#0 */\n                /* HOWEVER if it is not a direct class member, then we can SURELY forward declare it */\n                propRecord.typeKind = \"class\";\n                propRecord.kind = t.level === 0 ? IncludeKind.Include : IncludeKind.ForwardDeclare;\n                if (t.forceInclude) {\n                    propRecord.kind = IncludeKind.Include;\n                }\n            }\n            else if (t.type instanceof Type_1.EnumType) {\n                propRecord.typeKind = \"enum\";\n                propRecord.kind = IncludeKind.ForwardDeclare;\n            }\n            else if (t.type instanceof Type_1.UnionType) {\n                propRecord.typeKind = \"union\";\n                /* Recurse into the union */\n                const [maybeNull] = (0, TypeUtils_1.removeNullFromUnion)(t.type, true);\n                if (maybeNull !== undefined) {\n                    /* Houston this is a variant, include it */\n                    propRecord.kind = IncludeKind.Include;\n                }\n                else {\n                    if (t.forceInclude) {\n                        propRecord.kind = IncludeKind.Include;\n                    }\n                    else {\n                        propRecord.kind = IncludeKind.ForwardDeclare;\n                    }\n                }\n            }\n            if (includes.has(typeName)) {\n                const incKind = includes.get(typeName);\n                /* If we already include the type as typed include, do not write it over with forward declare */\n                if (incKind !== undefined && incKind.kind === IncludeKind.ForwardDeclare) {\n                    includes.set(typeName, propRecord);\n                }\n            }\n            else {\n                includes.set(typeName, propRecord);\n            }\n        }\n    }\n    /**\n     * Compute generated types\n     * @param isClassMender: true if class, false otherwise\n     * @param type: type\n     * @return Type record array\n     */\n    generatedTypes(isClassMember, type) {\n        const result = [];\n        const recur = (forceInclude, isVariant, l, t) => {\n            if (t instanceof Type_1.ArrayType) {\n                recur(forceInclude, isVariant, l + 1, t.items);\n            }\n            else if (t instanceof Type_1.ClassType) {\n                result.push({\n                    name: this.nameForNamedType(t),\n                    type: t,\n                    level: l,\n                    variant: isVariant,\n                    forceInclude\n                });\n            }\n            else if (t instanceof Type_1.MapType) {\n                recur(forceInclude, isVariant, l + 1, t.values);\n            }\n            else if (t instanceof Type_1.EnumType) {\n                result.push({\n                    name: this.nameForNamedType(t),\n                    type: t,\n                    level: l,\n                    variant: isVariant,\n                    forceInclude: false\n                });\n            }\n            else if (t instanceof Type_1.UnionType) {\n                /**\n                 * If we have a union as a class member and we see it as a \"named union\",\n                 * we can safely include it as-is.\n                 * HOWEVER if we define a union on its own, we must recurse into the\n                 * typedefinition and include all subtypes.\n                 */\n                if (this.unionNeedsName(t) && isClassMember) {\n                    /**\n                     * This is NOT ENOUGH.\n                     * We have a variant member in a class, e.g. defined with a boost::variant.\n                     * The compiler can only compile the class if IT KNOWS THE SIZES\n                     * OF ALL MEMBERS OF THE VARIANT.\n                     * So it means that you must include ALL SUBTYPES (practically classes only)\n                     * AS WELL\n                     */\n                    forceInclude = true;\n                    result.push({\n                        name: this.nameForNamedType(t),\n                        type: t,\n                        level: l,\n                        variant: true,\n                        forceInclude\n                    });\n                    /** intentional \"fall-through\", add all subtypes as well - but forced include */\n                }\n                const [hasNull, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(t);\n                isVariant = hasNull !== null;\n                /** we need to collect all the subtypes of the union */\n                for (const tt of nonNulls) {\n                    recur(forceInclude, isVariant, l + 1, tt);\n                }\n            }\n        };\n        recur(false, false, 0, type);\n        return result;\n    }\n}\nexports.CJSONRenderer = CJSONRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CPlusPlusRenderer = exports.MemberNames = exports.GlobalNames = exports.IncludeKind = exports.CPlusPlusTargetLanguage = exports.cPlusPlusOptions = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Naming_1 = require(\"../Naming\");\nconst Source_1 = require(\"../Source\");\nconst Annotation_1 = require(\"../Annotation\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Support_1 = require(\"../support/Support\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst Support_2 = require(\"../support/Support\");\nconst AccessorNames_1 = require(\"../attributes/AccessorNames\");\nconst EnumValues_1 = require(\"../attributes/EnumValues\");\nconst Constraints_1 = require(\"../attributes/Constraints\");\nconst pascalValue = [\"pascal-case\", \"pascal\"];\nconst underscoreValue = [\"underscore-case\", \"underscore\"];\nconst camelValue = [\"camel-case\", \"camel\"];\nconst upperUnderscoreValue = [\"upper-underscore-case\", \"upper-underscore\"];\nconst pascalUpperAcronymsValue = [\"pascal-case-upper-acronyms\", \"pascal-upper-acronyms\"];\nconst camelUpperAcronymsValue = [\"camel-case-upper-acronyms\", \"camel-upper-acronyms\"];\nexports.cPlusPlusOptions = {\n    typeSourceStyle: new RendererOptions_1.EnumOption(\"source-style\", \"Source code generation type,  whether to generate single or multiple source files\", [\n        [\"single-source\", true],\n        [\"multi-source\", false]\n    ], \"single-source\", \"secondary\"),\n    includeLocation: new RendererOptions_1.EnumOption(\"include-location\", \"Whether json.hpp is to be located globally or locally\", [\n        [\"local-include\", true],\n        [\"global-include\", false]\n    ], \"local-include\", \"secondary\"),\n    codeFormat: new RendererOptions_1.EnumOption(\"code-format\", \"Generate classes with getters/setters, instead of structs\", [\n        [\"with-struct\", false],\n        [\"with-getter-setter\", true]\n    ], \"with-getter-setter\"),\n    wstring: new RendererOptions_1.EnumOption(\"wstring\", \"Store strings using Utf-16 std::wstring, rather than Utf-8 std::string\", [\n        [\"use-string\", false],\n        [\"use-wstring\", true]\n    ], \"use-string\"),\n    westConst: new RendererOptions_1.EnumOption(\"const-style\", \"Put const to the left/west (const T) or right/east (T const)\", [\n        [\"west-const\", true],\n        [\"east-const\", false]\n    ], \"west-const\"),\n    justTypes: new RendererOptions_1.BooleanOption(\"just-types\", \"Plain types only\", false),\n    namespace: new RendererOptions_1.StringOption(\"namespace\", \"Name of the generated namespace(s)\", \"NAME\", \"quicktype\"),\n    enumType: new RendererOptions_1.StringOption(\"enum-type\", \"Type of enum class\", \"NAME\", \"int\", \"secondary\"),\n    typeNamingStyle: new RendererOptions_1.EnumOption(\"type-style\", \"Naming style for types\", [\n        pascalValue,\n        underscoreValue,\n        camelValue,\n        upperUnderscoreValue,\n        pascalUpperAcronymsValue,\n        camelUpperAcronymsValue\n    ]),\n    memberNamingStyle: new RendererOptions_1.EnumOption(\"member-style\", \"Naming style for members\", [\n        underscoreValue,\n        pascalValue,\n        camelValue,\n        upperUnderscoreValue,\n        pascalUpperAcronymsValue,\n        camelUpperAcronymsValue\n    ]),\n    enumeratorNamingStyle: new RendererOptions_1.EnumOption(\"enumerator-style\", \"Naming style for enumerators\", [\n        upperUnderscoreValue,\n        underscoreValue,\n        pascalValue,\n        camelValue,\n        pascalUpperAcronymsValue,\n        camelUpperAcronymsValue\n    ]),\n    boost: new RendererOptions_1.BooleanOption(\"boost\", \"Require a dependency on boost. Without boost, C++17 is required\", true),\n    hideNullOptional: new RendererOptions_1.BooleanOption(\"hide-null-optional\", \"Hide null value for optional field\", false)\n};\nclass CPlusPlusTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor(displayName = \"C++\", names = [\"c++\", \"cpp\", \"cplusplus\"], extension = \"cpp\") {\n        super(displayName, names, extension);\n    }\n    getOptions() {\n        return [\n            exports.cPlusPlusOptions.justTypes,\n            exports.cPlusPlusOptions.namespace,\n            exports.cPlusPlusOptions.codeFormat,\n            exports.cPlusPlusOptions.wstring,\n            exports.cPlusPlusOptions.westConst,\n            exports.cPlusPlusOptions.typeSourceStyle,\n            exports.cPlusPlusOptions.includeLocation,\n            exports.cPlusPlusOptions.typeNamingStyle,\n            exports.cPlusPlusOptions.memberNamingStyle,\n            exports.cPlusPlusOptions.enumeratorNamingStyle,\n            exports.cPlusPlusOptions.enumType,\n            exports.cPlusPlusOptions.boost,\n            exports.cPlusPlusOptions.hideNullOptional\n        ];\n    }\n    get supportsUnionsWithBothNumberTypes() {\n        return true;\n    }\n    get supportsOptionalClassProperties() {\n        return true;\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        return new CPlusPlusRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.cPlusPlusOptions, untypedOptionValues));\n    }\n}\nexports.CPlusPlusTargetLanguage = CPlusPlusTargetLanguage;\nfunction constraintsForType(t) {\n    const minMax = (0, Constraints_1.minMaxValueForType)(t);\n    const minMaxLength = (0, Constraints_1.minMaxLengthForType)(t);\n    const pattern = (0, Constraints_1.patternForType)(t);\n    if (minMax === undefined && minMaxLength === undefined && pattern === undefined)\n        return undefined;\n    return { minMax, minMaxLength, pattern };\n}\nconst legalizeName = (0, Strings_1.legalizeCharacters)(cp => (0, Strings_1.isAscii)(cp) && (0, Strings_1.isLetterOrUnderscoreOrDigit)(cp));\nconst keywords = [\n    \"alignas\",\n    \"alignof\",\n    \"and\",\n    \"and_eq\",\n    \"asm\",\n    \"atomic_cancel\",\n    \"atomic_commit\",\n    \"atomic_noexcept\",\n    \"auto\",\n    \"bitand\",\n    \"bitor\",\n    \"bool\",\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"char\",\n    \"char16_t\",\n    \"char32_t\",\n    \"class\",\n    \"compl\",\n    \"concept\",\n    \"const\",\n    \"constexpr\",\n    \"const_cast\",\n    \"continue\",\n    \"co_await\",\n    \"co_return\",\n    \"co_yield\",\n    \"decltype\",\n    \"default\",\n    \"delete\",\n    \"do\",\n    \"double\",\n    \"dynamic_cast\",\n    \"else\",\n    \"enum\",\n    \"explicit\",\n    \"export\",\n    \"extern\",\n    \"false\",\n    \"float\",\n    \"for\",\n    \"friend\",\n    \"goto\",\n    \"if\",\n    \"import\",\n    \"inline\",\n    \"int\",\n    \"long\",\n    \"module\",\n    \"mutable\",\n    \"namespace\",\n    \"new\",\n    \"noexcept\",\n    \"not\",\n    \"not_eq\",\n    \"nullptr\",\n    \"operator\",\n    \"or\",\n    \"or_eq\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"register\",\n    \"reinterpret_cast\",\n    \"requires\",\n    \"return\",\n    \"short\",\n    \"signed\",\n    \"sizeof\",\n    \"static\",\n    \"static_assert\",\n    \"static_cast\",\n    \"struct\",\n    \"switch\",\n    \"synchronized\",\n    \"template\",\n    \"this\",\n    \"thread_local\",\n    \"throw\",\n    \"true\",\n    \"try\",\n    \"typedef\",\n    \"typeid\",\n    \"typename\",\n    \"union\",\n    \"unsigned\",\n    \"using\",\n    \"virtual\",\n    \"void\",\n    \"volatile\",\n    \"wchar_t\",\n    \"while\",\n    \"xor\",\n    \"xor_eq\",\n    \"override\",\n    \"final\",\n    \"transaction_safe\",\n    \"transaction_safe_dynamic\",\n    \"NULL\"\n];\n/// Type to use as an optional if cycle breaking is required\nconst optionalAsSharedType = \"std::shared_ptr\";\n/// Factory to use when creating an optional if cycle breaking is required\nconst optionalFactoryAsSharedType = \"std::make_shared\";\n/**\n * To be able to support circles in multiple files -\n * e.g. class#A using class#B using class#A (obviously not directly,\n * but in vector or in variant) we can forward declare them;\n */\nvar IncludeKind;\n(function (IncludeKind) {\n    IncludeKind[IncludeKind[\"ForwardDeclare\"] = 0] = \"ForwardDeclare\";\n    IncludeKind[IncludeKind[\"Include\"] = 1] = \"Include\";\n})(IncludeKind = exports.IncludeKind || (exports.IncludeKind = {}));\nvar GlobalNames;\n(function (GlobalNames) {\n    GlobalNames[GlobalNames[\"ClassMemberConstraints\"] = 0] = \"ClassMemberConstraints\";\n    GlobalNames[GlobalNames[\"ClassMemberConstraintException\"] = 1] = \"ClassMemberConstraintException\";\n    GlobalNames[GlobalNames[\"ValueTooLowException\"] = 2] = \"ValueTooLowException\";\n    GlobalNames[GlobalNames[\"ValueTooHighException\"] = 3] = \"ValueTooHighException\";\n    GlobalNames[GlobalNames[\"ValueTooShortException\"] = 4] = \"ValueTooShortException\";\n    GlobalNames[GlobalNames[\"ValueTooLongException\"] = 5] = \"ValueTooLongException\";\n    GlobalNames[GlobalNames[\"InvalidPatternException\"] = 6] = \"InvalidPatternException\";\n    GlobalNames[GlobalNames[\"CheckConstraint\"] = 7] = \"CheckConstraint\";\n})(GlobalNames = exports.GlobalNames || (exports.GlobalNames = {}));\nvar MemberNames;\n(function (MemberNames) {\n    MemberNames[MemberNames[\"MinIntValue\"] = 0] = \"MinIntValue\";\n    MemberNames[MemberNames[\"GetMinIntValue\"] = 1] = \"GetMinIntValue\";\n    MemberNames[MemberNames[\"SetMinIntValue\"] = 2] = \"SetMinIntValue\";\n    MemberNames[MemberNames[\"MaxIntValue\"] = 3] = \"MaxIntValue\";\n    MemberNames[MemberNames[\"GetMaxIntValue\"] = 4] = \"GetMaxIntValue\";\n    MemberNames[MemberNames[\"SetMaxIntValue\"] = 5] = \"SetMaxIntValue\";\n    MemberNames[MemberNames[\"MinDoubleValue\"] = 6] = \"MinDoubleValue\";\n    MemberNames[MemberNames[\"GetMinDoubleValue\"] = 7] = \"GetMinDoubleValue\";\n    MemberNames[MemberNames[\"SetMinDoubleValue\"] = 8] = \"SetMinDoubleValue\";\n    MemberNames[MemberNames[\"MaxDoubleValue\"] = 9] = \"MaxDoubleValue\";\n    MemberNames[MemberNames[\"GetMaxDoubleValue\"] = 10] = \"GetMaxDoubleValue\";\n    MemberNames[MemberNames[\"SetMaxDoubleValue\"] = 11] = \"SetMaxDoubleValue\";\n    MemberNames[MemberNames[\"MinLength\"] = 12] = \"MinLength\";\n    MemberNames[MemberNames[\"GetMinLength\"] = 13] = \"GetMinLength\";\n    MemberNames[MemberNames[\"SetMinLength\"] = 14] = \"SetMinLength\";\n    MemberNames[MemberNames[\"MaxLength\"] = 15] = \"MaxLength\";\n    MemberNames[MemberNames[\"GetMaxLength\"] = 16] = \"GetMaxLength\";\n    MemberNames[MemberNames[\"SetMaxLength\"] = 17] = \"SetMaxLength\";\n    MemberNames[MemberNames[\"Pattern\"] = 18] = \"Pattern\";\n    MemberNames[MemberNames[\"GetPattern\"] = 19] = \"GetPattern\";\n    MemberNames[MemberNames[\"SetPattern\"] = 20] = \"SetPattern\";\n})(MemberNames = exports.MemberNames || (exports.MemberNames = {}));\nfunction addQualifier(qualifier, qualified) {\n    if (qualified.length === 0) {\n        return [];\n    }\n    return [qualifier, qualified];\n}\nclass WrappingCode {\n    constructor(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    wrap(qualifier, inner) {\n        return [addQualifier(qualifier, this.start), inner, this.end];\n    }\n}\nclass BaseString {\n    constructor(stringType, constStringType, smatch, regex, stringLiteralPrefix, toString, encodingClass, encodingFunction) {\n        this._stringType = stringType;\n        this._constStringType = constStringType;\n        this._smatch = smatch;\n        this._regex = regex;\n        this._stringLiteralPrefix = stringLiteralPrefix;\n        this._toString = toString;\n        this._encodingClass = encodingClass;\n        this._encodingFunction = encodingFunction;\n    }\n    getType() {\n        return this._stringType;\n    }\n    getConstType() {\n        return this._constStringType;\n    }\n    getSMatch() {\n        return this._smatch;\n    }\n    getRegex() {\n        return this._regex;\n    }\n    createStringLiteral(inner) {\n        return [this._stringLiteralPrefix, '\"', inner, '\"'];\n    }\n    wrapToString(inner) {\n        return this._toString.wrap([], inner);\n    }\n}\nclass CPlusPlusRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _options) {\n        super(targetLanguage, renderContext);\n        this._options = _options;\n        this._gettersAndSettersForPropertyName = new Map();\n        this.NarrowString = new (class extends BaseString {\n            constructor() {\n                super(\"std::string\", \"const std::string & \", \"std::smatch\", \"std::regex\", \"\", new WrappingCode([\"std::to_string(\"], [\")\"]), \"\", \"\");\n            }\n            wrapEncodingChange(_qualifier, _fromType, _toType, inner) {\n                return inner;\n            }\n            emitHelperFunctions() {\n                return;\n            }\n        })();\n        this.WideString = new (class extends BaseString {\n            constructor(superThis) {\n                super(\"std::wstring\", \"const std::wstring & \", \"std::wsmatch\", \"std::wregex\", \"L\", new WrappingCode([\"std::to_wstring(\"], [\")\"]), \"Utf16_Utf8\", \"convert\");\n                this.superThis = superThis;\n            }\n            wrapEncodingChange(qualifier, fromType, toType, inner) {\n                if (this.superThis.sourcelikeToString(fromType) === this.superThis.sourcelikeToString(toType)) {\n                    return inner;\n                }\n                return [\n                    addQualifier(qualifier, [this._encodingClass]),\n                    \"<\",\n                    fromType,\n                    \", \",\n                    toType,\n                    \">::\",\n                    this._encodingFunction,\n                    \"(\",\n                    inner,\n                    \")\"\n                ];\n            }\n            emitHelperFunctions() {\n                this.superThis.emitLine(\"template<typename T>\");\n                this.superThis.emitLine(\"struct tag {};\");\n                this.superThis.ensureBlankLine();\n                this.superThis.emitLine(\"template<typename fromType, typename toType>\");\n                this.superThis.emitBlock([\"class Utf16_Utf8\"], true, () => {\n                    this.superThis.emitLine(\"private:\");\n                    this.superThis.emitLine(\"template<typename TF, typename TT>\");\n                    this.superThis.emitBlock([\"static toType convert(tag<std::shared_ptr<TF> >, tag<std::shared_ptr<TT> >, fromType ptr)\"], false, () => {\n                        this.superThis.emitLine(\"if (ptr == nullptr) return std::unique_ptr<TT>(); else return std::unique_ptr<TT>(new TT(Utf16_Utf8<TF,TT>::convert(*ptr)));\");\n                    });\n                    this.superThis.ensureBlankLine();\n                    this.superThis.emitLine(\"template<typename TF, typename TT>\");\n                    this.superThis.emitBlock([\"static toType convert(tag<std::vector<TF> >, tag<std::vector<TT> >, fromType v)\"], false, () => {\n                        this.superThis.emitLine(\"auto it = v.begin();\");\n                        this.superThis.emitLine(\"auto newVector = std::vector<TT>();\");\n                        this.superThis.emitBlock([\"while (it != v.end())\"], false, () => {\n                            this.superThis.emitLine(\"newVector.push_back(Utf16_Utf8<TF,TT>::convert(*it));\");\n                            this.superThis.emitLine(\"it++;\");\n                        });\n                        this.superThis.emitLine(\"return newVector;\");\n                    });\n                    this.superThis.ensureBlankLine();\n                    this.superThis.emitLine(\"template<typename KF, typename VF, typename KT, typename VT>\");\n                    this.superThis.emitBlock([\"static toType convert(tag<std::map<KF,VF> >, tag<std::map<KT,VT> >, fromType m)\"], false, () => {\n                        this.superThis.emitLine(\"auto it = m.begin();\");\n                        this.superThis.emitLine(\"auto newMap = std::map<KT, VT>();\");\n                        this.superThis.emitBlock([\"while (it != m.end())\"], false, () => {\n                            this.superThis.emitLine(\"newMap.insert(std::pair<KT, VT>(Utf16_Utf8<KF, KT>::convert(it->first), Utf16_Utf8<VF, VT>::convert(it->second)));\");\n                            this.superThis.emitLine(\"it++;\");\n                        });\n                        this.superThis.emitLine(\"return newMap;\");\n                    });\n                    this.superThis.ensureBlankLine();\n                    this.superThis.emitLine(\"template<typename TF, typename TT>\");\n                    this.superThis.emitBlock([\"static fromType convert(tag<TF>, tag<TT>, fromType from)\"], false, () => {\n                        this.superThis.emitLine(\"return from;\");\n                    });\n                    this.superThis.ensureBlankLine();\n                    this.superThis.emitBlock([\"static std::wstring convert(tag<std::string>, tag<std::wstring>, std::string str)\"], false, () => {\n                        this.superThis.emitLine(\"return std::wstring_convert<std::codecvt_utf8_utf16<wchar_t, 0x10ffff, std::little_endian>, wchar_t>{}.from_bytes(str.data());\");\n                    });\n                    this.superThis.ensureBlankLine();\n                    this.superThis.emitBlock([\"static std::string convert(tag<std::wstring>, tag<std::string>, std::wstring str)\"], false, () => {\n                        this.superThis.emitLine(\"return std::wstring_convert<std::codecvt_utf8_utf16<wchar_t, 0x10ffff, std::little_endian>, wchar_t>{}.to_bytes(str.data());\");\n                    });\n                    this.superThis.ensureBlankLine();\n                    this.superThis.emitLine(\"public:\");\n                    this.superThis.emitBlock([\"static toType convert(fromType in)\"], false, () => {\n                        this.superThis.emitLine(\"return convert(tag<fromType>(), tag<toType>(), in);\");\n                    });\n                });\n                this.superThis.ensureBlankLine();\n                this.superThis.emitLine(\"template<typename T>\");\n                this.superThis.emitBlock([\"std::wstring wdump(const T& j)\"], false, () => {\n                    this.superThis.emitLine(\"std::ostringstream s;\");\n                    this.superThis.emitLine(\"s << j;\");\n                    this.superThis.emitLine(\"return \", this.superThis.ourQualifier(false), \"Utf16_Utf8<std::string, std::wstring>::convert(s.str()); \");\n                });\n                this.superThis.ensureBlankLine();\n            }\n        })(this);\n        this._enumType = _options.enumType;\n        this._namespaceNames = _options.namespace.split(\"::\");\n        this.typeNamingStyle = _options.typeNamingStyle;\n        this._namedTypeNameStyle = (0, Strings_1.makeNameStyle)(this.typeNamingStyle, legalizeName);\n        this.enumeratorNamingStyle = _options.enumeratorNamingStyle;\n        this._memberNameStyle = (0, Strings_1.makeNameStyle)(_options.memberNamingStyle, legalizeName);\n        this._memberNamingFunction = (0, Naming_1.funPrefixNamer)(\"members\", this._memberNameStyle);\n        this._gettersAndSettersForPropertyName = new Map();\n        this._allTypeNames = new Set();\n        this._generatedFiles = new Set();\n        this._generatedGlobalNames = new Map();\n        this._generatedMemberNames = new Map();\n        this._forbiddenGlobalNames = [];\n        if (_options.wstring) {\n            this._stringType = this.WideString;\n        }\n        else {\n            this._stringType = this.NarrowString;\n        }\n        if (_options.boost) {\n            this._optionalType = \"boost::optional\";\n            this._optionalFactory = \"boost::optional\";\n            this._nulloptType = \"boost::none\";\n            this._variantType = \"boost::variant\";\n            this._variantIndexMethodName = \"which\";\n        }\n        else {\n            this._optionalType = \"std::optional\";\n            this._optionalFactory = \"std::make_optional\";\n            this._nulloptType = \"std::nullopt\";\n            this._variantType = \"std::variant\";\n            this._variantIndexMethodName = \"index\";\n        }\n        this.setupGlobalNames();\n    }\n    // union typeguard\n    isUnion(t) {\n        return t.kind === \"union\";\n    }\n    // Returns true if the type can be stored in\n    // a stack based optional type. This requires\n    // that the type does not require forward declaration.\n    isOptionalAsValuePossible(t) {\n        if (this.isForwardDeclaredType(t))\n            return false;\n        if (this.isUnion(t)) {\n            // There is something stinky about this test.\n            // There is special handling somewhere that if you\n            // have the following schema\n            // {\n            //     \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n            //     \"$ref\": \"#/definitions/List\",\n            //     \"definitions\": {\n            //         \"List\": {\n            //             \"type\": \"object\",\n            //             \"additionalProperties\": false,\n            //             \"properties\": {\n            //                 \"data\": {\n            //                     \"type\": \"string\"\n            //                 },\n            //                 \"next\": {\n            //                     \"anyOf\": [\n            //                         {\n            //                             \"$ref\": \"#/definitions/List\"\n            //                         }\n            //                         {\n            //                             \"type\": \"null\"\n            //                         }\n            //                     ]\n            //                 }\n            //             },\n            //             \"required\": [],\n            //             \"title\": \"List\"\n            //         }\n            //     }\n            // }\n            // Then a variant is not output but the single item inlined\n            //\n            //     struct TopLevel {\n            //       std::optional<std::string> data;\n            //       std::optional<TopLevel> next;\n            //     };\n            //\n            // instead of\n            //     struct TopLevel {\n            //       std::optional<std::string> data;\n            //       std::shared_ptr<TopLevel> next;\n            //     };\n            //\n            // checking to see if the collapse of the variant has\n            // occured and then doing the isCycleBreakerType check\n            // on the single type the variant would contain seems\n            // to solve the problem. But does this point to a problem\n            // with the core library or with the CPlusPlus package\n            const [, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(t);\n            if (nonNulls.size === 1) {\n                const tt = (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(nonNulls));\n                return !this.isCycleBreakerType(tt);\n            }\n        }\n        return !this.isCycleBreakerType(t);\n    }\n    isImplicitCycleBreaker(t) {\n        const kind = t.kind;\n        return kind === \"array\" || kind === \"map\";\n    }\n    // Is likely to return std::optional or boost::optional\n    optionalTypeStack() {\n        return this._optionalType;\n    }\n    // Is likely to return std::make_optional or boost::optional\n    optionalFactoryStack() {\n        return this._optionalFactory;\n    }\n    // Is likely to return std::shared_ptr\n    optionalTypeHeap() {\n        return optionalAsSharedType;\n    }\n    // Is likely to return std::make_shared\n    optionalFactoryHeap() {\n        return optionalFactoryAsSharedType;\n    }\n    // Returns the optional type most suitable for the given type.\n    // Classes that don't require forward declarations can be stored\n    // in std::optional ( or boost::optional )\n    optionalType(t) {\n        if (this.isOptionalAsValuePossible(t))\n            return this.optionalTypeStack();\n        else\n            return this.optionalTypeHeap();\n    }\n    // Returns a label that can be used to distinguish between\n    // heap and stack based optional handling methods\n    optionalTypeLabel(t) {\n        if (this.isOptionalAsValuePossible(t))\n            return \"stack\";\n        else\n            return \"heap\";\n    }\n    getConstraintMembers() {\n        return [\n            {\n                name: MemberNames.MinIntValue,\n                getter: MemberNames.GetMinIntValue,\n                setter: MemberNames.SetMinIntValue,\n                cppType: \"int64_t\"\n            },\n            {\n                name: MemberNames.MaxIntValue,\n                getter: MemberNames.GetMaxIntValue,\n                setter: MemberNames.SetMaxIntValue,\n                cppType: \"int64_t\"\n            },\n            {\n                name: MemberNames.MinDoubleValue,\n                getter: MemberNames.GetMinDoubleValue,\n                setter: MemberNames.SetMinDoubleValue,\n                cppType: \"double\"\n            },\n            {\n                name: MemberNames.MaxDoubleValue,\n                getter: MemberNames.GetMaxDoubleValue,\n                setter: MemberNames.SetMaxDoubleValue,\n                cppType: \"double\"\n            },\n            {\n                name: MemberNames.MinLength,\n                getter: MemberNames.GetMinLength,\n                setter: MemberNames.SetMinLength,\n                cppType: \"size_t\"\n            },\n            {\n                name: MemberNames.MaxLength,\n                getter: MemberNames.GetMaxLength,\n                setter: MemberNames.SetMaxLength,\n                cppType: \"size_t\"\n            },\n            {\n                name: MemberNames.Pattern,\n                getter: MemberNames.GetPattern,\n                setter: MemberNames.SetPattern,\n                cppType: this._stringType.getType(),\n                cppConstType: this._stringType.getConstType()\n            }\n        ];\n    }\n    lookupGlobalName(type) {\n        return (0, Support_1.defined)(this._generatedGlobalNames.get(type));\n    }\n    lookupMemberName(type) {\n        return (0, Support_1.defined)(this._generatedMemberNames.get(type));\n    }\n    addGlobalName(type) {\n        const genName = this._namedTypeNameStyle(GlobalNames[type]);\n        this._generatedGlobalNames.set(type, genName);\n        this._forbiddenGlobalNames.push(genName);\n    }\n    addMemberName(type) {\n        this._generatedMemberNames.set(type, this._memberNameStyle(MemberNames[type]));\n    }\n    setupGlobalNames() {\n        for (const v of (0, Support_1.numberEnumValues)(GlobalNames)) {\n            this.addGlobalName(v);\n        }\n        for (const v of (0, Support_1.numberEnumValues)(MemberNames)) {\n            this.addMemberName(v);\n        }\n    }\n    forbiddenNamesForGlobalNamespace() {\n        return [...keywords, ...this._forbiddenGlobalNames];\n    }\n    forbiddenForObjectProperties(_c, _className) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    forbiddenForEnumCases(_e, _enumName) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    makeNamedTypeNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"types\", this._namedTypeNameStyle);\n    }\n    namerForObjectProperty() {\n        return this._memberNamingFunction;\n    }\n    makeUnionMemberNamer() {\n        return null;\n    }\n    makeEnumCaseNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"enumerators\", (0, Strings_1.makeNameStyle)(this.enumeratorNamingStyle, legalizeName));\n    }\n    makeNamesForPropertyGetterAndSetter(_c, _className, _p, _jsonName, name) {\n        const getterName = new Naming_1.DependencyName(this._memberNamingFunction, name.order, lookup => `get_${lookup(name)}`);\n        const mutableGetterName = new Naming_1.DependencyName(this._memberNamingFunction, name.order, lookup => `getMutable_${lookup(name)}`);\n        const setterName = new Naming_1.DependencyName(this._memberNamingFunction, name.order, lookup => `set_${lookup(name)}`);\n        return [getterName, mutableGetterName, setterName];\n    }\n    makePropertyDependencyNames(c, className, p, jsonName, name) {\n        const getterAndSetterNames = this.makeNamesForPropertyGetterAndSetter(c, className, p, jsonName, name);\n        this._gettersAndSettersForPropertyName.set(name, getterAndSetterNames);\n        return getterAndSetterNames;\n    }\n    withConst(s) {\n        if (this._options.westConst) {\n            return [\"const \", s];\n        }\n        else {\n            return [s, \" const\"];\n        }\n    }\n    emitInclude(global, name) {\n        this.emitLine(\"#include \", global ? \"<\" : '\"', name, global ? \">\" : '\"');\n    }\n    startFile(basename, includeHelper = true) {\n        (0, Support_2.assert)(this._currentFilename === undefined, \"Previous file wasn't finished\");\n        if (basename !== undefined) {\n            this._currentFilename = this.sourcelikeToString(basename);\n        }\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n        }\n        else if (!this._options.justTypes) {\n            this.emitCommentLines([\" To parse this JSON data, first install\", \"\"]);\n            if (this._options.boost) {\n                this.emitCommentLines([\"     Boost     http://www.boost.org\"]);\n            }\n            this.emitCommentLines([\n                \"     json.hpp  https://github.com/nlohmann/json\",\n                \"\",\n                \" Then include this file, and then do\",\n                \"\"\n            ]);\n            if (this._options.typeSourceStyle) {\n                this.forEachTopLevel(\"none\", (_, topLevelName) => {\n                    this.emitLine(\"//     \", topLevelName, \" data = nlohmann::json::parse(jsonString);\");\n                });\n            }\n            else {\n                this.emitLine(\"//     \", basename, \" data = nlohmann::json::parse(jsonString);\");\n            }\n            if (this._options.wstring) {\n                this.emitLine(\"//\");\n                this.emitLine(\"//  You can get std::wstring data back out using\");\n                this.emitLine(\"//\");\n                this.forEachTopLevel(\"none\", (_, topLevelName) => {\n                    this.emitLine(\"//     std::wcout << \", \"wdump((nlohmann::json) \", topLevelName, \");\");\n                });\n            }\n        }\n        this.ensureBlankLine();\n        this.emitLine(\"#pragma once\");\n        this.ensureBlankLine();\n        if (this.haveOptionalProperties) {\n            if (this._options.boost) {\n                this.emitInclude(true, \"boost/optional.hpp\");\n            }\n            else {\n                this.emitInclude(true, \"optional\");\n            }\n        }\n        if (this.haveNamedUnions) {\n            if (this._options.boost) {\n                this.emitInclude(true, \"boost/variant.hpp\");\n            }\n            else {\n                this.emitInclude(true, \"variant\");\n            }\n        }\n        if (!this._options.justTypes) {\n            if (!this._options.includeLocation) {\n                this.emitInclude(true, \"nlohmann/json.hpp\");\n            }\n            else {\n                this.emitInclude(false, \"json.hpp\");\n            }\n            if (includeHelper && !this._options.typeSourceStyle) {\n                this.emitInclude(false, \"helper.hpp\");\n            }\n        }\n        this.ensureBlankLine();\n    }\n    finishFile() {\n        super.finishFile((0, Support_1.defined)(this._currentFilename));\n        this._currentFilename = undefined;\n    }\n    get needsTypeDeclarationBeforeUse() {\n        return true;\n    }\n    canBeForwardDeclared(t) {\n        const kind = t.kind;\n        return kind === \"class\";\n    }\n    emitDescriptionBlock(lines) {\n        this.emitCommentLines(lines, { lineStart: \" * \", beforeComment: \"/**\", afterComment: \" */\" });\n    }\n    emitBlock(line, withSemicolon, f, withIndent = true) {\n        this.emitLine(line, \" {\");\n        this.preventBlankLine();\n        if (withIndent) {\n            this.indent(f);\n        }\n        else {\n            f();\n        }\n        this.preventBlankLine();\n        if (withSemicolon) {\n            this.emitLine(\"};\");\n        }\n        else {\n            this.emitLine(\"}\");\n        }\n    }\n    emitNamespaces(namespaceNames, f) {\n        const namesArray = (0, collection_utils_1.toReadonlyArray)(namespaceNames);\n        const first = namesArray[0];\n        if (first === undefined) {\n            f();\n        }\n        else {\n            this.emitBlock([\"namespace \", first], false, () => this.emitNamespaces(namesArray.slice(1), f), namesArray.length === 1);\n        }\n    }\n    cppTypeInOptional(nonNulls, ctx, withIssues, forceNarrowString) {\n        if (nonNulls.size === 1) {\n            return this.cppType((0, Support_1.defined)((0, collection_utils_1.iterableFirst)(nonNulls)), ctx, withIssues, forceNarrowString, false);\n        }\n        const typeList = [];\n        for (const t of nonNulls) {\n            if (typeList.length !== 0) {\n                typeList.push(\", \");\n            }\n            typeList.push(this.cppType(t, {\n                needsForwardIndirection: true,\n                needsOptionalIndirection: false,\n                inJsonNamespace: ctx.inJsonNamespace\n            }, withIssues, false, false));\n        }\n        return [this._variantType, \"<\", typeList, \">\"];\n    }\n    variantType(u, inJsonNamespace) {\n        const [maybeNull, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(u, true);\n        (0, Support_2.assert)(nonNulls.size >= 2, \"Variant not needed for less than two types.\");\n        const indirection = maybeNull !== null;\n        const variant = this.cppTypeInOptional(nonNulls, {\n            needsForwardIndirection: !indirection,\n            needsOptionalIndirection: !indirection,\n            inJsonNamespace\n        }, true, false);\n        if (!indirection) {\n            return variant;\n        }\n        return [this.optionalType(u), \"<\", variant, \">\"];\n    }\n    ourQualifier(inJsonNamespace) {\n        return inJsonNamespace ? [(0, collection_utils_1.arrayIntercalate)(\"::\", this._namespaceNames), \"::\"] : [];\n    }\n    jsonQualifier(inJsonNamespace) {\n        return inJsonNamespace ? [] : \"nlohmann::\";\n    }\n    variantIndirection(type, needIndirection, typeSrc) {\n        if (!needIndirection)\n            return typeSrc;\n        return [this.optionalType(type), \"<\", typeSrc, \">\"];\n    }\n    cppType(t, ctx, withIssues, forceNarrowString, isOptional) {\n        const inJsonNamespace = ctx.inJsonNamespace;\n        if (isOptional && t instanceof Type_1.UnionType) {\n            // avoid have optionalType<optionalType<Type>>\n            for (const tChild of t.getChildren()) {\n                if (tChild.isNullable) {\n                    isOptional = false;\n                    break;\n                }\n            }\n        }\n        const typeSource = (0, TypeUtils_1.matchType)(t, _anyType => {\n            isOptional = false;\n            return (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.anyTypeIssueAnnotation, [\n                this.jsonQualifier(inJsonNamespace),\n                \"json\"\n            ]);\n        }, _nullType => {\n            isOptional = false;\n            return (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.nullTypeIssueAnnotation, [\n                this.jsonQualifier(inJsonNamespace),\n                \"json\"\n            ]);\n        }, _boolType => \"bool\", _integerType => \"int64_t\", _doubleType => \"double\", _stringType => {\n            if (forceNarrowString) {\n                return \"std::string\";\n            }\n            else {\n                return this._stringType.getType();\n            }\n        }, arrayType => [\n            \"std::vector<\",\n            this.cppType(arrayType.items, {\n                needsForwardIndirection: false,\n                needsOptionalIndirection: true,\n                inJsonNamespace\n            }, withIssues, forceNarrowString, false),\n            \">\"\n        ], classType => this.variantIndirection(classType, ctx.needsForwardIndirection && this.isForwardDeclaredType(classType) && !isOptional, [this.ourQualifier(inJsonNamespace), this.nameForNamedType(classType)]), mapType => {\n            let keyType = this._stringType.getType();\n            if (forceNarrowString) {\n                keyType = \"std::string\";\n            }\n            return [\n                \"std::map<\",\n                keyType,\n                \", \",\n                this.cppType(mapType.values, {\n                    needsForwardIndirection: false,\n                    needsOptionalIndirection: true,\n                    inJsonNamespace\n                }, withIssues, forceNarrowString, false),\n                \">\"\n            ];\n        }, enumType => [this.ourQualifier(inJsonNamespace), this.nameForNamedType(enumType)], unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                isOptional = true;\n                return this.cppType(nullable, {\n                    needsForwardIndirection: false,\n                    needsOptionalIndirection: false,\n                    inJsonNamespace\n                }, withIssues, forceNarrowString, false);\n            }\n            else {\n                return [this.ourQualifier(inJsonNamespace), this.nameForNamedType(unionType)];\n            }\n        });\n        if (!isOptional)\n            return typeSource;\n        return [this.optionalType(t), \"<\", typeSource, \">\"];\n    }\n    /**\n     * similar to cppType, it practically gathers all the generated types within\n     * 't'. It also records, whether a given sub-type is part of a variant or not.\n     */\n    generatedTypes(isClassMember, theType) {\n        const result = [];\n        const recur = (forceInclude, isVariant, l, t) => {\n            if (t instanceof Type_1.ArrayType) {\n                recur(true, isVariant, l + 1, t.items);\n            }\n            else if (t instanceof Type_1.ClassType) {\n                result.push({\n                    name: this.nameForNamedType(t),\n                    type: t,\n                    level: l,\n                    variant: isVariant,\n                    forceInclude\n                });\n            }\n            else if (t instanceof Type_1.MapType) {\n                recur(true, isVariant, l + 1, t.values);\n            }\n            else if (t instanceof Type_1.EnumType) {\n                result.push({\n                    name: this.nameForNamedType(t),\n                    type: t,\n                    level: l,\n                    variant: isVariant,\n                    forceInclude: false\n                });\n            }\n            else if (t instanceof Type_1.UnionType) {\n                /**\n                 * If we have a union as a class member and we see it as a \"named union\",\n                 * we can safely include it as-is.\n                 * HOWEVER if we define a union on its own, we must recurse into the\n                 * typedefinition and include all subtypes.\n                 */\n                if (this.unionNeedsName(t) && isClassMember) {\n                    /**\n                     * This is NOT ENOUGH.\n                     * We have a variant member in a class, e.g. defined with a boost::variant.\n                     * The compiler can only compile the class if IT KNOWS THE SIZES\n                     * OF ALL MEMBERS OF THE VARIANT.\n                     * So it means that you must include ALL SUBTYPES (practically classes only)\n                     * AS WELL\n                     */\n                    forceInclude = true;\n                    result.push({\n                        name: this.nameForNamedType(t),\n                        type: t,\n                        level: l,\n                        variant: true,\n                        forceInclude\n                    });\n                    /** intentional \"fall-through\", add all subtypes as well - but forced include */\n                }\n                const [hasNull, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(t);\n                isVariant = hasNull !== null;\n                /** we need to collect all the subtypes of the union */\n                for (const tt of nonNulls) {\n                    recur(forceInclude, isVariant, l + 1, tt);\n                }\n            }\n        };\n        recur(false, false, 0, theType);\n        return result;\n    }\n    constraintMember(jsonName) {\n        return this._memberNameStyle(`${jsonName}Constraint`);\n    }\n    emitMember(cppType, name) {\n        this.emitLine(cppType, \" \", name, \";\");\n    }\n    emitClassMembers(c, constraints) {\n        if (this._options.codeFormat) {\n            this.emitLine(\"private:\");\n            this.forEachClassProperty(c, \"none\", (name, jsonName, property) => {\n                this.emitMember(this.cppType(property.type, {\n                    needsForwardIndirection: true,\n                    needsOptionalIndirection: true,\n                    inJsonNamespace: false\n                }, true, false, property.isOptional), name);\n                if (constraints === null || constraints === void 0 ? void 0 : constraints.has(jsonName)) {\n                    /** FIXME!!! NameStyle will/can collide with other Names */\n                    const cnst = this.lookupGlobalName(GlobalNames.ClassMemberConstraints);\n                    this.emitMember(cnst, this.constraintMember(jsonName));\n                }\n            });\n            this.ensureBlankLine();\n            this.emitLine(\"public:\");\n        }\n        this.forEachClassProperty(c, \"none\", (name, jsonName, property) => {\n            this.emitDescription(this.descriptionForClassProperty(c, jsonName));\n            if (!this._options.codeFormat) {\n                this.emitMember(this.cppType(property.type, {\n                    needsForwardIndirection: true,\n                    needsOptionalIndirection: true,\n                    inJsonNamespace: false\n                }, true, false, property.isOptional), name);\n            }\n            else {\n                const [getterName, mutableGetterName, setterName] = (0, Support_1.defined)(this._gettersAndSettersForPropertyName.get(name));\n                const rendered = this.cppType(property.type, {\n                    needsForwardIndirection: true,\n                    needsOptionalIndirection: true,\n                    inJsonNamespace: false\n                }, true, false, property.isOptional);\n                /**\n                 * fix for optional type -> e.g. unique_ptrs can't be copied\n                 * One might as why the \"this->xxx = value\". Simple if we have\n                 * a member called 'value' value = value will screw up the compiler\n                 */\n                const checkConst = this.lookupGlobalName(GlobalNames.CheckConstraint);\n                if ((property.type instanceof Type_1.UnionType && property.type.findMember(\"null\") !== undefined) ||\n                    (property.isOptional && property.type.kind !== \"null\" && property.type.kind !== \"any\")) {\n                    this.emitLine(rendered, \" \", getterName, \"() const { return \", name, \"; }\");\n                    if (constraints === null || constraints === void 0 ? void 0 : constraints.has(jsonName)) {\n                        this.emitLine(\"void \", setterName, \"(\", rendered, \" value) { if (value) \", checkConst, \"(\", this._stringType.createStringLiteral([name]), \", \", this.constraintMember(jsonName), \", *value); this->\", name, \" = value; }\");\n                    }\n                    else {\n                        this.emitLine(\"void \", setterName, \"(\", rendered, \" value) { this->\", name, \" = value; }\");\n                    }\n                }\n                else {\n                    this.emitLine(this.withConst(rendered), \" & \", getterName, \"() const { return \", name, \"; }\");\n                    this.emitLine(rendered, \" & \", mutableGetterName, \"() { return \", name, \"; }\");\n                    if (constraints === null || constraints === void 0 ? void 0 : constraints.has(jsonName)) {\n                        this.emitLine(\"void \", setterName, \"(\", this.withConst(rendered), \" & value) { \", checkConst, \"(\", this._stringType.createStringLiteral([name]), \", \", this.constraintMember(jsonName), \", value); this->\", name, \" = value; }\");\n                    }\n                    else {\n                        this.emitLine(\"void \", setterName, \"(\", this.withConst(rendered), \" & value) { this->\", name, \" = value; }\");\n                    }\n                }\n                this.ensureBlankLine();\n            }\n        });\n    }\n    generateClassConstraints(c) {\n        const res = new Map();\n        this.forEachClassProperty(c, \"none\", (_name, jsonName, property) => {\n            const constraints = constraintsForType(property.type);\n            if (constraints === undefined)\n                return;\n            const { minMax, minMaxLength, pattern } = constraints;\n            // TODO is there a better way to check if property.type is an interger or a number?\n            const cppType = this.cppType(property.type, {\n                needsForwardIndirection: true,\n                needsOptionalIndirection: true,\n                inJsonNamespace: false\n            }, true, false, property.isOptional);\n            res.set(jsonName, [\n                this.constraintMember(jsonName),\n                \"(\",\n                (minMax === null || minMax === void 0 ? void 0 : minMax[0]) && cppType === \"int64_t\" ? String(minMax[0]) : this._nulloptType,\n                \", \",\n                (minMax === null || minMax === void 0 ? void 0 : minMax[1]) && cppType === \"int64_t\" ? String(minMax[1]) : this._nulloptType,\n                \", \",\n                (minMax === null || minMax === void 0 ? void 0 : minMax[0]) && cppType === \"double\" ? String(minMax[0]) : this._nulloptType,\n                \", \",\n                (minMax === null || minMax === void 0 ? void 0 : minMax[1]) && cppType === \"double\" ? String(minMax[1]) : this._nulloptType,\n                \", \",\n                (minMaxLength === null || minMaxLength === void 0 ? void 0 : minMaxLength[0]) ? String(minMaxLength[0]) : this._nulloptType,\n                \", \",\n                (minMaxLength === null || minMaxLength === void 0 ? void 0 : minMaxLength[1]) ? String(minMaxLength[1]) : this._nulloptType,\n                \", \",\n                pattern === undefined\n                    ? this._nulloptType\n                    : [\n                        this._stringType.getType(),\n                        \"(\",\n                        this._stringType.createStringLiteral([(0, Strings_1.stringEscape)(pattern)]),\n                        \")\"\n                    ],\n                \")\"\n            ]);\n        });\n        return res.size === 0 ? undefined : res;\n    }\n    emitClass(c, className) {\n        this.emitDescription(this.descriptionForType(c));\n        this.emitBlock([this._options.codeFormat ? \"class \" : \"struct \", className], true, () => {\n            const constraints = this.generateClassConstraints(c);\n            if (this._options.codeFormat) {\n                this.emitLine(\"public:\");\n                if (constraints === undefined) {\n                    this.emitLine(className, \"() = default;\");\n                }\n                else {\n                    this.emitLine(className, \"() :\");\n                    let numEmits = 0;\n                    constraints.forEach((initializer, _propName) => {\n                        numEmits++;\n                        this.indent(() => {\n                            if (numEmits === constraints.size) {\n                                this.emitLine(initializer);\n                            }\n                            else {\n                                this.emitLine(initializer, \",\");\n                            }\n                        });\n                    });\n                    this.emitLine(\"{}\");\n                }\n                this.emitLine(\"virtual ~\", className, \"() = default;\");\n                this.ensureBlankLine();\n            }\n            this.emitClassMembers(c, constraints);\n        });\n    }\n    emitTopLevelHeaders(t, className) {\n        // Forward declarations for std::map<std::wstring, Key> (need to convert UTF16 <-> UTF8)\n        if (t instanceof Type_1.MapType && this._stringType !== this.NarrowString) {\n            const ourQualifier = this.ourQualifier(true);\n            this.emitBlock([\"struct adl_serializer<\", ourQualifier, className, \">\"], true, () => {\n                this.emitLine(\"template <>\");\n                this.emitLine(\"static void from_json(\", this.withConst(\"json\"), \" & j, \", ourQualifier, className, \" & x);\");\n                this.emitLine(\"static void to_json(json & j, \", this.withConst([ourQualifier, className]), \" & x);\");\n            });\n        }\n    }\n    emitClassHeaders(className) {\n        const ourQualifier = this.ourQualifier(false);\n        this.emitLine(\"void from_json(\", this.withConst(\"json\"), \" & j, \", ourQualifier, className, \" & x);\");\n        this.emitLine(\"void to_json(json & j, \", this.withConst([ourQualifier, className]), \" & x);\");\n    }\n    emitTopLevelFunction(t, className) {\n        // Function definitions for std::map<std::wstring, Key> (need to convert UTF16 <-> UTF8)\n        if (t instanceof Type_1.MapType && this._stringType !== this.NarrowString) {\n            const ourQualifier = this.ourQualifier(true);\n            let cppType;\n            let toType;\n            this.emitBlock([\n                \"inline void adl_serializer<\",\n                ourQualifier,\n                className,\n                \">::from_json(\",\n                this.withConst(\"json\"),\n                \" & j, \",\n                ourQualifier,\n                className,\n                \"& x)\"\n            ], false, () => {\n                cppType = this.cppType(t, {\n                    needsForwardIndirection: true,\n                    needsOptionalIndirection: true,\n                    inJsonNamespace: true\n                }, false, true, false);\n                toType = this.cppType(t, {\n                    needsForwardIndirection: true,\n                    needsOptionalIndirection: true,\n                    inJsonNamespace: true\n                }, false, false, false);\n                this.emitLine([\n                    \"x = \",\n                    this._stringType.wrapEncodingChange([ourQualifier], cppType, toType, [\n                        \"j.get<\",\n                        cppType,\n                        \">()\"\n                    ]),\n                    \";\"\n                ]);\n            });\n            this.emitBlock([\n                \"inline void adl_serializer<\",\n                ourQualifier,\n                className,\n                \">::to_json(json & j, \",\n                this.withConst([ourQualifier, className]),\n                \" & x)\"\n            ], false, () => {\n                cppType = this.cppType(t, {\n                    needsForwardIndirection: true,\n                    needsOptionalIndirection: true,\n                    inJsonNamespace: true\n                }, false, false, false);\n                toType = this.cppType(t, {\n                    needsForwardIndirection: true,\n                    needsOptionalIndirection: true,\n                    inJsonNamespace: true\n                }, false, true, false);\n                this.emitLine([\n                    \"j = \",\n                    this._stringType.wrapEncodingChange([ourQualifier], cppType, toType, \"x\"),\n                    \";\"\n                ]);\n            });\n        }\n    }\n    emitClassFunctions(c, className) {\n        const ourQualifier = this.ourQualifier(false);\n        let cppType;\n        let toType;\n        this.emitBlock([\"inline void from_json(\", this.withConst(\"json\"), \" & j, \", ourQualifier, className, \"& x)\"], false, () => {\n            this.forEachClassProperty(c, \"none\", (name, json, p) => {\n                const [, , setterName] = (0, Support_1.defined)(this._gettersAndSettersForPropertyName.get(name));\n                const propType = p.type;\n                let assignment;\n                if (this._options.codeFormat) {\n                    assignment = new WrappingCode([\"x.\", setterName, \"(\"], [\")\"]);\n                }\n                else {\n                    assignment = new WrappingCode([\"x.\", name, \" = \"], []);\n                }\n                if (propType.kind === \"null\" || propType.kind === \"any\") {\n                    this.emitLine(assignment.wrap([], [\n                        ourQualifier,\n                        \"get_untyped(j, \",\n                        this._stringType.wrapEncodingChange([ourQualifier], this._stringType.getType(), this.NarrowString.getType(), [this._stringType.createStringLiteral([(0, Strings_1.stringEscape)(json)])]),\n                        \")\"\n                    ]), \";\");\n                    return;\n                }\n                if (p.isOptional || propType instanceof Type_1.UnionType) {\n                    const [nullOrOptional, typeSet] = (function () {\n                        if (propType instanceof Type_1.UnionType) {\n                            const [maybeNull, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(propType, true);\n                            return [maybeNull !== null || p.isOptional, nonNulls];\n                        }\n                        else {\n                            const set = new Set();\n                            set.add(propType);\n                            return [true, set];\n                        }\n                    })();\n                    if (nullOrOptional) {\n                        cppType = this.cppTypeInOptional(typeSet, {\n                            needsForwardIndirection: false,\n                            needsOptionalIndirection: false,\n                            inJsonNamespace: false\n                        }, false, true);\n                        toType = this.cppTypeInOptional(typeSet, {\n                            needsForwardIndirection: false,\n                            needsOptionalIndirection: false,\n                            inJsonNamespace: false\n                        }, false, false);\n                        this.emitLine(assignment.wrap([], [\n                            this._stringType.wrapEncodingChange([ourQualifier], [this.optionalType(propType), \"<\", cppType, \">\"], [this.optionalType(propType), \"<\", toType, \">\"], [\n                                ourQualifier,\n                                `get_${this.optionalTypeLabel(propType)}_optional<`,\n                                cppType,\n                                \">(j, \",\n                                this._stringType.wrapEncodingChange([ourQualifier], this._stringType.getType(), this.NarrowString.getType(), [this._stringType.createStringLiteral([(0, Strings_1.stringEscape)(json)])]),\n                                \")\"\n                            ])\n                        ]), \";\");\n                        return;\n                    }\n                }\n                cppType = this.cppType(propType, {\n                    needsForwardIndirection: true,\n                    needsOptionalIndirection: true,\n                    inJsonNamespace: false\n                }, false, true, p.isOptional);\n                toType = this.cppType(propType, {\n                    needsForwardIndirection: true,\n                    needsOptionalIndirection: true,\n                    inJsonNamespace: false\n                }, false, false, p.isOptional);\n                this.emitLine(assignment.wrap([], this._stringType.wrapEncodingChange([ourQualifier], cppType, toType, [\n                    \"j.at(\",\n                    this._stringType.wrapEncodingChange([ourQualifier], this._stringType.getType(), this.NarrowString.getType(), this._stringType.createStringLiteral([(0, Strings_1.stringEscape)(json)])),\n                    \").get<\",\n                    cppType,\n                    \">()\"\n                ])), \";\");\n            });\n        });\n        this.ensureBlankLine();\n        this.emitBlock([\"inline void to_json(json & j, \", this.withConst([ourQualifier, className]), \" & x)\"], false, () => {\n            this.emitLine(\"j = json::object();\");\n            this.forEachClassProperty(c, \"none\", (name, json, p) => {\n                const propType = p.type;\n                cppType = this.cppType(propType, {\n                    needsForwardIndirection: true,\n                    needsOptionalIndirection: true,\n                    inJsonNamespace: false\n                }, false, false, p.isOptional);\n                toType = this.cppType(propType, {\n                    needsForwardIndirection: true,\n                    needsOptionalIndirection: true,\n                    inJsonNamespace: false\n                }, false, true, p.isOptional);\n                const [getterName, ,] = (0, Support_1.defined)(this._gettersAndSettersForPropertyName.get(name));\n                let getter;\n                if (this._options.codeFormat) {\n                    getter = [getterName, \"()\"];\n                }\n                else {\n                    getter = [name];\n                }\n                const assignment = [\n                    \"j[\",\n                    this._stringType.wrapEncodingChange([ourQualifier], this._stringType.getType(), this.NarrowString.getType(), this._stringType.createStringLiteral([(0, Strings_1.stringEscape)(json)])),\n                    \"] = \",\n                    this._stringType.wrapEncodingChange([ourQualifier], cppType, toType, [\"x.\", getter]),\n                    \";\"\n                ];\n                if (p.isOptional && this._options.hideNullOptional) {\n                    this.emitBlock([\n                        \"if (\",\n                        this._stringType.wrapEncodingChange([ourQualifier], cppType, toType, [\"x.\", getter]),\n                        \")\"\n                    ], false, () => {\n                        this.emitLine(assignment);\n                    });\n                }\n                else {\n                    this.emitLine(assignment);\n                }\n            });\n        });\n    }\n    emitEnum(e, enumName) {\n        const caseNames = [];\n        const enumValues = (0, EnumValues_1.enumCaseValues)(e, this.targetLanguage.name);\n        this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n            if (caseNames.length > 0)\n                caseNames.push(\", \");\n            caseNames.push(name);\n            if (enumValues !== undefined) {\n                const [enumValue] = (0, AccessorNames_1.getAccessorName)(enumValues, jsonName);\n                if (enumValue !== undefined) {\n                    caseNames.push(\" = \", enumValue.toString());\n                }\n            }\n        });\n        this.emitDescription(this.descriptionForType(e));\n        this.emitLine(\"enum class \", enumName, \" : \", this._enumType, \" { \", caseNames, \" };\");\n    }\n    emitUnionTypedefs(u, unionName) {\n        this.emitLine(\"using \", unionName, \" = \", this.variantType(u, false), \";\");\n    }\n    emitUnionHeaders(u) {\n        // Forward declarations for boost::variant<Ts...>. If none of the Ts were defined by us (e.g. if we have\n        // boost::variant<int32_t, std::string>) then we need to specialize nlohmann::adl_serializer for our\n        // variant type. If at least one of the Ts is our type then we could get away with regular adl definitions,\n        // but it's nontrivial to detect that (consider variant<string, variant<map<string, string>, int>> which\n        // does need an adl_serializer specialization) so we'll just specialize every time.\n        const nonNulls = (0, TypeUtils_1.removeNullFromUnion)(u, true)[1];\n        const variantType = this.cppTypeInOptional(nonNulls, {\n            needsForwardIndirection: false,\n            needsOptionalIndirection: false,\n            inJsonNamespace: true\n        }, false, false);\n        this.emitLine(\"template <>\");\n        this.emitBlock([\"struct adl_serializer<\", variantType, \">\"], true, () => {\n            this.emitLine(\"static void from_json(\", this.withConst(\"json\"), \" & j, \", variantType, \" & x);\");\n            this.emitLine(\"static void to_json(json & j, \", this.withConst(variantType), \" & x);\");\n        });\n    }\n    emitUnionFunctions(u) {\n        // Function definitions for boost::variant<Ts...>.\n        const ourQualifier = this.ourQualifier(true);\n        const functionForKind = [\n            [\"bool\", \"is_boolean\"],\n            [\"integer\", \"is_number_integer\"],\n            [\"double\", \"is_number\"],\n            [\"string\", \"is_string\"],\n            [\"class\", \"is_object\"],\n            [\"map\", \"is_object\"],\n            [\"array\", \"is_array\"],\n            [\"enum\", \"is_string\"]\n        ];\n        const nonNulls = (0, TypeUtils_1.removeNullFromUnion)(u, true)[1];\n        const variantType = this.cppTypeInOptional(nonNulls, {\n            needsForwardIndirection: false,\n            needsOptionalIndirection: false,\n            inJsonNamespace: true\n        }, false, false);\n        this.emitBlock([\n            \"inline void adl_serializer<\",\n            variantType,\n            \">::from_json(\",\n            this.withConst(\"json\"),\n            \" & j, \",\n            variantType,\n            \" & x)\"\n        ], false, () => {\n            let onFirst = true;\n            for (const [kind, func] of functionForKind) {\n                const typeForKind = (0, collection_utils_1.iterableFind)(nonNulls, t => t.kind === kind);\n                if (typeForKind === undefined)\n                    continue;\n                this.emitLine(onFirst ? \"if\" : \"else if\", \" (j.\", func, \"())\");\n                this.indent(() => {\n                    const cppType = this.cppType(typeForKind, {\n                        needsForwardIndirection: true,\n                        needsOptionalIndirection: true,\n                        inJsonNamespace: true\n                    }, false, true, false);\n                    const toType = this.cppType(typeForKind, {\n                        needsForwardIndirection: true,\n                        needsOptionalIndirection: true,\n                        inJsonNamespace: true\n                    }, false, false, false);\n                    this.emitLine(\"x = \", this._stringType.wrapEncodingChange([ourQualifier], cppType, toType, [\n                        \"j.get<\",\n                        cppType,\n                        \">()\"\n                    ]), \";\");\n                });\n                onFirst = false;\n            }\n            this.emitLine('else throw std::runtime_error(\"Could not deserialise!\");');\n        });\n        this.ensureBlankLine();\n        this.emitBlock([\"inline void adl_serializer<\", variantType, \">::to_json(json & j, \", this.withConst(variantType), \" & x)\"], false, () => {\n            this.emitBlock([\"switch (x.\", this._variantIndexMethodName, \"())\"], false, () => {\n                let i = 0;\n                for (const t of nonNulls) {\n                    this.emitLine(\"case \", i.toString(), \":\");\n                    this.indent(() => {\n                        const cppType = this.cppType(t, {\n                            needsForwardIndirection: true,\n                            needsOptionalIndirection: true,\n                            inJsonNamespace: true\n                        }, false, false, false);\n                        const toType = this.cppType(t, {\n                            needsForwardIndirection: true,\n                            needsOptionalIndirection: true,\n                            inJsonNamespace: true\n                        }, false, true, false);\n                        this.emitLine(\"j = \", this._stringType.wrapEncodingChange([ourQualifier], cppType, toType, [\n                            this._options.boost ? \"boost::get<\" : \"std::get<\",\n                            cppType,\n                            \">(x)\"\n                        ]), \";\");\n                        this.emitLine(\"break;\");\n                    });\n                    i++;\n                }\n                this.emitLine('default: throw std::runtime_error(\"Input JSON does not conform to schema!\");');\n            });\n        });\n    }\n    emitEnumHeaders(enumName) {\n        const ourQualifier = this.ourQualifier(false);\n        this.emitLine(\"void from_json(\", this.withConst(\"json\"), \" & j, \", ourQualifier, enumName, \" & x);\");\n        this.emitLine(\"void to_json(json & j, \", this.withConst([ourQualifier, enumName]), \" & x);\");\n    }\n    isLargeEnum(e) {\n        // This is just an estimation. Someone might want to do some\n        // benchmarks to find the optimum value here\n        return e.cases.size > 15;\n    }\n    emitEnumFunctions(e, enumName) {\n        const ourQualifier = this.ourQualifier(false);\n        this.emitBlock([\"inline void from_json(\", this.withConst(\"json\"), \" & j, \", ourQualifier, enumName, \" & x)\"], false, () => {\n            if (this.isLargeEnum(e)) {\n                this.emitBlock([\n                    \"static std::unordered_map<\",\n                    this._stringType.getType(),\n                    \", \",\n                    ourQualifier,\n                    enumName,\n                    \"> enumValues\"\n                ], true, () => {\n                    this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n                        this.emitLine(\"{\", this._stringType.wrapEncodingChange([ourQualifier], this._stringType.getType(), this.NarrowString.getType(), [this._stringType.createStringLiteral([(0, Strings_1.stringEscape)(jsonName)])]), \", \", ourQualifier, enumName, \"::\", name, \"},\");\n                    });\n                });\n                this.emitLine(`auto iter = enumValues.find(j.get<${this._stringType.getType()}>());`);\n                this.emitBlock(\"if (iter != enumValues.end())\", false, () => {\n                    this.emitLine(\"x = iter->second;\");\n                });\n            }\n            else {\n                let onFirst = true;\n                this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n                    const maybeElse = onFirst ? \"\" : \"else \";\n                    this.emitLine(maybeElse, \"if (j == \", this._stringType.wrapEncodingChange([ourQualifier], this._stringType.getType(), this.NarrowString.getType(), [this._stringType.createStringLiteral([(0, Strings_1.stringEscape)(jsonName)])]), \") x = \", ourQualifier, enumName, \"::\", name, \";\");\n                    onFirst = false;\n                });\n                this.emitLine('else { throw std::runtime_error(\"Input JSON does not conform to schema!\"); }');\n            }\n        });\n        this.ensureBlankLine();\n        this.emitBlock([\"inline void to_json(json & j, \", this.withConst([ourQualifier, enumName]), \" & x)\"], false, () => {\n            this.emitBlock(\"switch (x)\", false, () => {\n                this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n                    this.emitLine(\"case \", ourQualifier, enumName, \"::\", name, \": j = \", this._stringType.wrapEncodingChange([ourQualifier], this._stringType.getType(), this.NarrowString.getType(), [this._stringType.createStringLiteral([(0, Strings_1.stringEscape)(jsonName)])]), \"; break;\");\n                });\n                this.emitLine(`default: throw std::runtime_error(\"Unexpected value in enumeration \\\\\"${enumName}\\\\\": \" + std::to_string(static_cast<int>(x)));`);\n            });\n        });\n    }\n    emitTopLevelTypedef(t, name) {\n        this.emitLine(\"using \", name, \" = \", this.cppType(t, {\n            needsForwardIndirection: true,\n            needsOptionalIndirection: true,\n            inJsonNamespace: false\n        }, true, false, false), \";\");\n    }\n    emitAllUnionFunctions() {\n        this.forEachUniqueUnion(\"leading-and-interposing\", u => this.sourcelikeToString(this.cppTypeInOptional((0, TypeUtils_1.removeNullFromUnion)(u, true)[1], {\n            needsForwardIndirection: false,\n            needsOptionalIndirection: false,\n            inJsonNamespace: true\n        }, false, false)), (u) => this.emitUnionFunctions(u));\n    }\n    emitAllUnionHeaders() {\n        this.forEachUniqueUnion(\"interposing\", u => this.sourcelikeToString(this.cppTypeInOptional((0, TypeUtils_1.removeNullFromUnion)(u, true)[1], {\n            needsForwardIndirection: false,\n            needsOptionalIndirection: false,\n            inJsonNamespace: true\n        }, false, false)), (u) => this.emitUnionHeaders(u));\n    }\n    emitOptionalHelpers() {\n        this.emitLine(\"#ifndef NLOHMANN_OPT_HELPER\");\n        this.emitLine(\"#define NLOHMANN_OPT_HELPER\");\n        this.emitNamespaces([\"nlohmann\"], () => {\n            const emitAdlStruct = (optType, factory) => {\n                this.emitLine(\"template <typename T>\");\n                this.emitBlock([\"struct adl_serializer<\", optType, \"<T>>\"], true, () => {\n                    this.emitBlock([\"static void to_json(json & j, \", this.withConst([optType, \"<T>\"]), \" & opt)\"], false, () => {\n                        this.emitLine(\"if (!opt) j = nullptr; else j = *opt;\");\n                    });\n                    this.ensureBlankLine();\n                    this.emitBlock([\"static \", optType, \"<T> from_json(\", this.withConst(\"json\"), \" & j)\"], false, () => {\n                        this.emitLine(`if (j.is_null()) return ${factory}<T>(); else return ${factory}<T>(j.get<T>());`);\n                    });\n                });\n            };\n            emitAdlStruct(this.optionalTypeHeap(), this.optionalFactoryHeap());\n            emitAdlStruct(this.optionalTypeStack(), this.optionalFactoryStack());\n        });\n        this.emitLine(\"#endif\");\n    }\n    emitDeclaration(decl) {\n        if (decl.kind === \"forward\") {\n            if (this._options.codeFormat) {\n                this.emitLine(\"class \", this.nameForNamedType(decl.type), \";\");\n            }\n            else {\n                this.emitLine(\"struct \", this.nameForNamedType(decl.type), \";\");\n            }\n        }\n        else if (decl.kind === \"define\") {\n            const type = decl.type;\n            const name = this.nameForNamedType(type);\n            if (type instanceof Type_1.ClassType) {\n                this.emitClass(type, name);\n            }\n            else if (type instanceof Type_1.EnumType) {\n                this.emitEnum(type, name);\n            }\n            else if (type instanceof Type_1.UnionType) {\n                this.emitUnionTypedefs(type, name);\n            }\n            else {\n                (0, Support_1.panic)(`Cannot declare type ${type.kind}`);\n            }\n        }\n        else {\n            (0, Support_1.assertNever)(decl.kind);\n        }\n    }\n    emitGetterSetter(t, getterName, setterName, memberName) {\n        this.emitLine(\"void \", setterName, \"(\", t, \" \", memberName, \") { this->\", memberName, \" = \", memberName, \"; }\");\n        this.emitLine(\"auto \", getterName, \"() const { return \", memberName, \"; }\");\n    }\n    emitNumericCheckConstraints(checkConst, classConstraint, getterMinValue, getterMaxValue, cppType) {\n        this.emitBlock([\n            \"inline void \",\n            checkConst,\n            \"(\",\n            this._stringType.getConstType(),\n            \" name, \",\n            this.withConst(classConstraint),\n            \" & c, \",\n            cppType,\n            \" value)\"\n        ], false, () => {\n            this.emitBlock([\"if (c.\", getterMinValue, \"() != \", this._nulloptType, \" && value < *c.\", getterMinValue, \"())\"], false, () => {\n                this.emitLine(\"throw \", this.lookupGlobalName(GlobalNames.ValueTooLowException), \" (\", this._stringType.createStringLiteral([\"Value too low for \"]), \" + name + \", this._stringType.createStringLiteral([\" (\"]), \" + \", this._stringType.wrapToString([\"value\"]), \" + \", this._stringType.createStringLiteral([\"<\"]), \" + \", this._stringType.wrapToString([\"*c.\", getterMinValue, \"()\"]), \" + \", this._stringType.createStringLiteral([\")\"]), \");\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock([\"if (c.\", getterMaxValue, \"() != \", this._nulloptType, \" && value > *c.\", getterMaxValue, \"())\"], false, () => {\n                this.emitLine(\"throw \", this.lookupGlobalName(GlobalNames.ValueTooHighException), \" (\", this._stringType.createStringLiteral([\"Value too high for \"]), \" + name + \", this._stringType.createStringLiteral([\" (\"]), \" + \", this._stringType.wrapToString([\"value\"]), \" + \", this._stringType.createStringLiteral([\">\"]), \" + \", this._stringType.wrapToString([\"*c.\", getterMaxValue, \"()\"]), \" + \", this._stringType.createStringLiteral([\")\"]), \");\");\n            });\n            this.ensureBlankLine();\n        });\n        this.ensureBlankLine();\n    }\n    emitConstraintClasses() {\n        const ourQualifier = this.ourQualifier(false);\n        const getterMinIntValue = this.lookupMemberName(MemberNames.GetMinIntValue);\n        const getterMaxIntValue = this.lookupMemberName(MemberNames.GetMaxIntValue);\n        const getterMinDoubleValue = this.lookupMemberName(MemberNames.GetMinDoubleValue);\n        const getterMaxDoubleValue = this.lookupMemberName(MemberNames.GetMaxDoubleValue);\n        const getterMinLength = this.lookupMemberName(MemberNames.GetMinLength);\n        const getterMaxLength = this.lookupMemberName(MemberNames.GetMaxLength);\n        const getterPattern = this.lookupMemberName(MemberNames.GetPattern);\n        const classConstraint = this.lookupGlobalName(GlobalNames.ClassMemberConstraints);\n        this.emitBlock([\"class \", classConstraint], true, () => {\n            this.emitLine(\"private:\");\n            const constraintMembers = this.getConstraintMembers();\n            for (const member of constraintMembers) {\n                this.emitMember([this._optionalType, \"<\", member.cppType, \">\"], this.lookupMemberName(member.name));\n            }\n            this.ensureBlankLine();\n            this.emitLine(\"public:\");\n            this.emitLine(classConstraint, \"(\");\n            this.indent(() => {\n                this.iterableForEach(constraintMembers, ({ name, cppType }, pos) => {\n                    const comma = pos === \"first\" || pos === \"middle\" ? \",\" : [];\n                    this.emitLine(this._optionalType, \"<\", cppType, \"> \", this.lookupMemberName(name), comma);\n                });\n            });\n            const args = constraintMembers.map(({ name }) => {\n                const member = this.lookupMemberName(name);\n                return [member, \"(\", member, \")\"];\n            });\n            this.emitLine(\") : \", (0, collection_utils_1.arrayIntercalate)([\", \"], args), \" {}\");\n            this.emitLine(classConstraint, \"() = default;\");\n            this.emitLine(\"virtual ~\", classConstraint, \"() = default;\");\n            for (const member of constraintMembers) {\n                this.ensureBlankLine();\n                this.emitGetterSetter((0, collection_utils_1.withDefault)(member.cppConstType, member.cppType), this.lookupMemberName(member.getter), this.lookupMemberName(member.setter), this.lookupMemberName(member.name));\n            }\n        });\n        this.ensureBlankLine();\n        const classConstEx = this.lookupGlobalName(GlobalNames.ClassMemberConstraintException);\n        this.emitBlock([\"class \", classConstEx, \" : public std::runtime_error\"], true, () => {\n            this.emitLine(\"public:\");\n            this.emitLine(classConstEx, \"(\", this._stringType.getConstType(), \" msg) : std::runtime_error(\", this._stringType.wrapEncodingChange([ourQualifier], this._stringType.getType(), this.NarrowString.getType(), [\"msg\"]), \") {}\");\n        });\n        this.ensureBlankLine();\n        const exceptions = [\n            GlobalNames.ValueTooLowException,\n            GlobalNames.ValueTooHighException,\n            GlobalNames.ValueTooShortException,\n            GlobalNames.ValueTooLongException,\n            GlobalNames.InvalidPatternException\n        ];\n        for (const ex of exceptions) {\n            const name = this.lookupGlobalName(ex);\n            this.emitBlock([\"class \", name, \" : public \", classConstEx], true, () => {\n                this.emitLine(\"public:\");\n                this.emitLine(name, \"(\", this._stringType.getConstType(), \" msg) : \", classConstEx, \"(msg) {}\");\n            });\n            this.ensureBlankLine();\n        }\n        const checkConst = this.lookupGlobalName(GlobalNames.CheckConstraint);\n        this.emitNumericCheckConstraints(checkConst, classConstraint, getterMinIntValue, getterMaxIntValue, \"int64_t\");\n        this.emitNumericCheckConstraints(checkConst, classConstraint, getterMinDoubleValue, getterMaxDoubleValue, \"double\");\n        this.emitBlock([\n            \"inline void \",\n            checkConst,\n            \"(\",\n            this._stringType.getConstType(),\n            \" name, \",\n            this.withConst(classConstraint),\n            \" & c, \",\n            this._stringType.getConstType(),\n            \" value)\"\n        ], false, () => {\n            this.emitBlock([\n                \"if (c.\",\n                getterMinLength,\n                \"() != \",\n                this._nulloptType,\n                \" && value.length() < *c.\",\n                getterMinLength,\n                \"())\"\n            ], false, () => {\n                this.emitLine(\"throw \", this.lookupGlobalName(GlobalNames.ValueTooShortException), \" (\", this._stringType.createStringLiteral([\"Value too short for \"]), \" + name + \", this._stringType.createStringLiteral([\" (\"]), \" + \", this._stringType.wrapToString([\"value.length()\"]), \" + \", this._stringType.createStringLiteral([\"<\"]), \" + \", this._stringType.wrapToString([\"*c.\", getterMinLength, \"()\"]), \" + \", this._stringType.createStringLiteral([\")\"]), \");\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock([\n                \"if (c.\",\n                getterMaxLength,\n                \"() != \",\n                this._nulloptType,\n                \" && value.length() > *c.\",\n                getterMaxLength,\n                \"())\"\n            ], false, () => {\n                this.emitLine(\"throw \", this.lookupGlobalName(GlobalNames.ValueTooLongException), \" (\", this._stringType.createStringLiteral([\"Value too long for \"]), \" + name + \", this._stringType.createStringLiteral([\" (\"]), \" + \", this._stringType.wrapToString([\"value.length()\"]), \" + \", this._stringType.createStringLiteral([\">\"]), \" + \", this._stringType.wrapToString([\"*c.\", getterMaxLength, \"()\"]), \" + \", this._stringType.createStringLiteral([\")\"]), \");\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock([\"if (c.\", getterPattern, \"() != \", this._nulloptType, \")\"], false, () => {\n                this.emitLine(this._stringType.getSMatch(), \" result;\");\n                this.emitLine(\"std::regex_search(value, result, \", this._stringType.getRegex(), \"( *c.\", getterPattern, \"() ));\");\n                this.emitBlock([\"if (result.empty())\"], false, () => {\n                    this.emitLine(\"throw \", this.lookupGlobalName(GlobalNames.InvalidPatternException), \" (\", this._stringType.createStringLiteral([\"Value doesn't match pattern for \"]), \" + name + \", this._stringType.createStringLiteral([\" (\"]), \" + value +\", this._stringType.createStringLiteral([\" != \"]), \" + *c.\", getterPattern, \"() + \", this._stringType.createStringLiteral([\")\"]), \");\");\n                });\n            });\n            this.ensureBlankLine();\n        });\n    }\n    emitHelperFunctions() {\n        this._stringType.emitHelperFunctions();\n        if (this._options.codeFormat &&\n            (0, collection_utils_1.iterableSome)(this.typeGraph.allTypesUnordered(), t => constraintsForType(t) !== undefined)) {\n            this.emitConstraintClasses();\n            this.ensureBlankLine();\n        }\n        this.ensureBlankLine();\n        let untypedMacroName = \"NLOHMANN_UNTYPED_\";\n        let optionalMacroName = \"NLOHMANN_OPTIONAL_\";\n        this._namespaceNames.forEach(value => {\n            // We can't use upper name, because namespaces are case sensitive\n            untypedMacroName += value;\n            untypedMacroName += \"_\";\n            optionalMacroName += value;\n            optionalMacroName += \"_\";\n        });\n        untypedMacroName += \"HELPER\";\n        optionalMacroName += \"HELPER\";\n        this.emitLine(`#ifndef ${untypedMacroName}`);\n        this.emitLine(`#define ${untypedMacroName}`);\n        this.emitBlock([\"inline json get_untyped(\", this.withConst(\"json\"), \" & j, \", this.withConst(\"char\"), \" * property)\"], false, () => {\n            this.emitBlock([\"if (j.find(property) != j.end())\"], false, () => {\n                this.emitLine(\"return j.at(property).get<json>();\");\n            });\n            this.emitLine(\"return json();\");\n        });\n        this.ensureBlankLine();\n        this.emitBlock([\"inline json get_untyped(\", this.withConst(\"json\"), \" & j, std::string property)\"], false, () => {\n            this.emitLine(\"return get_untyped(j, property.data());\");\n        });\n        this.emitLine(\"#endif\");\n        this.ensureBlankLine();\n        if (this.haveUnions || this.haveOptionalProperties) {\n            this.ensureBlankLine();\n            this.emitLine(`#ifndef ${optionalMacroName}`);\n            this.emitLine(`#define ${optionalMacroName}`);\n            const emitGetOptional = (optionalType, label) => {\n                this.emitLine(\"template <typename T>\");\n                this.emitBlock([\n                    \"inline \",\n                    optionalType,\n                    `<T> get_${label}_optional(`,\n                    this.withConst(\"json\"),\n                    \" & j, \",\n                    this.withConst(\"char\"),\n                    \" * property)\"\n                ], false, () => {\n                    this.emitLine([\"auto it = j.find(property);\"]);\n                    this.emitBlock([\"if (it != j.end() && !it->is_null())\"], false, () => {\n                        this.emitLine(\"return j.at(property).get<\", optionalType, \"<T>>();\");\n                    });\n                    this.emitLine(\"return \", optionalType, \"<T>();\");\n                });\n                this.ensureBlankLine();\n                this.emitLine(\"template <typename T>\");\n                this.emitBlock([\n                    \"inline \",\n                    optionalType,\n                    `<T> get_${label}_optional(`,\n                    this.withConst(\"json\"),\n                    \" & j, std::string property)\"\n                ], false, () => {\n                    this.emitLine(`return get_${label}_optional<T>(j, property.data());`);\n                });\n            };\n            emitGetOptional(this.optionalTypeHeap(), \"heap\");\n            emitGetOptional(this.optionalTypeStack(), \"stack\");\n            this.emitLine(\"#endif\");\n            this.ensureBlankLine();\n        }\n    }\n    emitExtraIncludes() {\n        this.ensureBlankLine();\n        if (this._options.codeFormat) {\n            if (this._options.boost) {\n                this.emitInclude(true, \"boost/optional.hpp\");\n            }\n            else {\n                this.emitInclude(true, \"optional\");\n            }\n            this.emitInclude(true, \"stdexcept\");\n            this.emitInclude(true, \"regex\");\n        }\n        if (this._options.wstring) {\n            this.emitInclude(true, \"codecvt\");\n            this.emitInclude(true, \"locale\");\n        }\n        // Include unordered_map if contains large enums\n        if (Array.from(this.enums).some(enumType => this.isLargeEnum(enumType))) {\n            this.emitInclude(true, \"unordered_map\");\n        }\n        this.ensureBlankLine();\n    }\n    emitHelper() {\n        this.startFile(\"helper.hpp\", false);\n        this.emitExtraIncludes();\n        this.emitInclude(true, \"sstream\");\n        this.ensureBlankLine();\n        this.emitNamespaces(this._namespaceNames, () => {\n            this.emitLine(\"using nlohmann::json;\");\n            this.ensureBlankLine();\n            this.emitHelperFunctions();\n        });\n        if (this.haveUnions || this.haveOptionalProperties) {\n            this.ensureBlankLine();\n            this.emitOptionalHelpers();\n        }\n        this.finishFile();\n    }\n    emitTypes() {\n        if (!this._options.justTypes) {\n            this.emitLine(\"using nlohmann::json;\");\n            this.ensureBlankLine();\n            this.emitHelperFunctions();\n        }\n        this.forEachDeclaration(\"interposing\", decl => this.emitDeclaration(decl));\n        if (this._options.justTypes)\n            return;\n        this.forEachTopLevel(\"leading\", (t, name) => this.emitTopLevelTypedef(t, name), t => this.namedTypeToNameForTopLevel(t) === undefined);\n    }\n    gatherUserNamespaceForwardDecls() {\n        return this.gatherSource(() => {\n            this.forEachObject(\"leading-and-interposing\", (_, className) => this.emitClassHeaders(className));\n            this.forEachEnum(\"leading-and-interposing\", (_, enumName) => this.emitEnumHeaders(enumName));\n        });\n    }\n    gatherNlohmannNamespaceForwardDecls() {\n        return this.gatherSource(() => {\n            this.forEachTopLevel(\"leading-and-interposing\", (t, className) => this.emitTopLevelHeaders(t, className));\n            this.ensureBlankLine();\n            this.emitAllUnionHeaders();\n        });\n    }\n    emitUserNamespaceImpls() {\n        this.forEachObject(\"leading-and-interposing\", (c, className) => this.emitClassFunctions(c, className));\n        this.forEachEnum(\"leading-and-interposing\", (e, enumName) => this.emitEnumFunctions(e, enumName));\n    }\n    emitNlohmannNamespaceImpls() {\n        this.forEachTopLevel(\"leading-and-interposing\", (t, name) => this.emitTopLevelFunction(t, name), t => this.namedTypeToNameForTopLevel(t) === undefined);\n        this.ensureBlankLine();\n        this.emitAllUnionFunctions();\n    }\n    emitGenerators() {\n        if (this._options.justTypes) {\n            let didEmit = false;\n            const gathered = this.gatherSource(() => this.emitNamespaces(this._namespaceNames, () => {\n                didEmit = this.forEachTopLevel(\"none\", (t, name) => this.emitTopLevelTypedef(t, name), t => this.namedTypeToNameForTopLevel(t) === undefined);\n            }));\n            if (didEmit) {\n                this.emitGatheredSource(gathered);\n                this.ensureBlankLine();\n            }\n        }\n        else {\n            const userNamespaceForwardDecls = this.gatherUserNamespaceForwardDecls();\n            const nlohmannNamespaceForwardDecls = this.gatherNlohmannNamespaceForwardDecls();\n            if (userNamespaceForwardDecls.length === 0 && nlohmannNamespaceForwardDecls.length > 0) {\n                this.emitNamespaces([\"nlohmann\"], () => {\n                    this.emitGatheredSource(nlohmannNamespaceForwardDecls);\n                    this.emitNlohmannNamespaceImpls();\n                });\n            }\n            else if (userNamespaceForwardDecls.length > 0 && nlohmannNamespaceForwardDecls.length === 0) {\n                this.emitNamespaces(this._namespaceNames, () => {\n                    this.emitGatheredSource(userNamespaceForwardDecls);\n                    this.emitUserNamespaceImpls();\n                });\n            }\n            else if (userNamespaceForwardDecls.length > 0 && nlohmannNamespaceForwardDecls.length > 0) {\n                this.emitNamespaces(this._namespaceNames, () => {\n                    this.emitGatheredSource(userNamespaceForwardDecls);\n                });\n                this.emitNamespaces([\"nlohmann\"], () => {\n                    this.emitGatheredSource(nlohmannNamespaceForwardDecls);\n                });\n                this.emitNamespaces(this._namespaceNames, () => {\n                    this.emitUserNamespaceImpls();\n                });\n                this.emitNamespaces([\"nlohmann\"], () => {\n                    this.emitNlohmannNamespaceImpls();\n                });\n            }\n        }\n    }\n    emitSingleSourceStructure(proposedFilename) {\n        this.startFile(proposedFilename);\n        this._generatedFiles.add(proposedFilename);\n        this.emitExtraIncludes();\n        if (this._options.justTypes) {\n            this.emitTypes();\n        }\n        else {\n            if (!this._options.justTypes && this.haveNamedTypes && (this.haveUnions || this.haveOptionalProperties)) {\n                this.emitOptionalHelpers();\n                this.ensureBlankLine();\n            }\n            this.emitNamespaces(this._namespaceNames, () => this.emitTypes());\n        }\n        this.ensureBlankLine();\n        this.emitGenerators();\n        this.finishFile();\n    }\n    updateIncludes(isClassMember, includes, propertyType, _defName) {\n        const propTypes = this.generatedTypes(isClassMember, propertyType);\n        for (const t of propTypes) {\n            const typeName = this.sourcelikeToString(t.name);\n            const propRecord = { kind: undefined, typeKind: undefined };\n            if (t.type instanceof Type_1.ClassType) {\n                /**\n                 * Ok. We can NOT forward declare direct class members, e.g. a class type is included\n                 * at level#0. HOWEVER if it is not a direct class member (e.g. std::shared_ptr<Class>),\n                 * - level > 0 - then we can SURELY forward declare it.\n                 */\n                propRecord.typeKind = \"class\";\n                propRecord.kind = t.level === 0 ? IncludeKind.Include : IncludeKind.ForwardDeclare;\n                if (t.forceInclude) {\n                    propRecord.kind = IncludeKind.Include;\n                }\n            }\n            else if (t.type instanceof Type_1.EnumType) {\n                propRecord.typeKind = \"enum\";\n                propRecord.kind = IncludeKind.ForwardDeclare;\n            }\n            else if (t.type instanceof Type_1.UnionType) {\n                propRecord.typeKind = \"union\";\n                /** Recurse into the union */\n                const [maybeNull] = (0, TypeUtils_1.removeNullFromUnion)(t.type, true);\n                if (maybeNull !== undefined) {\n                    /** Houston this is a variant, include it */\n                    propRecord.kind = IncludeKind.Include;\n                }\n                else {\n                    if (t.forceInclude) {\n                        propRecord.kind = IncludeKind.Include;\n                    }\n                    else {\n                        propRecord.kind = IncludeKind.ForwardDeclare;\n                    }\n                }\n            }\n            if (includes.has(typeName)) {\n                const incKind = includes.get(typeName);\n                /**\n                 * If we already include the type as typed include,\n                 * do not write it over with forward declare\n                 */\n                if (incKind !== undefined && incKind.kind === IncludeKind.ForwardDeclare) {\n                    includes.set(typeName, propRecord);\n                }\n            }\n            else {\n                includes.set(typeName, propRecord);\n            }\n        }\n    }\n    emitIncludes(c, defName) {\n        /**\n         * Need to generate \"includes\", in terms 'c' has members, which\n         * are defined by others\n         */\n        const includes = new Map();\n        if (c instanceof Type_1.UnionType) {\n            this.updateIncludes(false, includes, c, defName);\n        }\n        else if (c instanceof Type_1.ClassType) {\n            this.forEachClassProperty(c, \"none\", (_name, _jsonName, property) => {\n                this.updateIncludes(true, includes, property.type, defName);\n            });\n        }\n        if (includes.size !== 0) {\n            let numForwards = 0;\n            let numIncludes = 0;\n            includes.forEach((rec, name) => {\n                /** Don't bother including the one we are defining */\n                if (name === defName) {\n                    return;\n                }\n                if (rec.kind !== IncludeKind.ForwardDeclare) {\n                    this.emitInclude(false, [name, \".hpp\"]);\n                    numIncludes++;\n                }\n                else {\n                    numForwards++;\n                }\n            });\n            if (numIncludes > 0) {\n                this.ensureBlankLine();\n            }\n            if (numForwards > 0) {\n                this.emitNamespaces(this._namespaceNames, () => {\n                    includes.forEach((rec, name) => {\n                        /** Don't bother including the one we are defining */\n                        if (name === defName) {\n                            return;\n                        }\n                        if (rec.kind !== IncludeKind.ForwardDeclare) {\n                            return;\n                        }\n                        if (rec.typeKind === \"class\" || rec.typeKind === \"union\") {\n                            if (this._options.codeFormat) {\n                                this.emitLine(\"class \", name, \";\");\n                            }\n                            else {\n                                this.emitLine(\"struct \", name, \";\");\n                            }\n                        }\n                        else if (rec.typeKind === \"enum\") {\n                            this.emitLine(\"enum class \", name, \" : \", this._enumType, \";\");\n                        }\n                        else {\n                            (0, Support_1.panic)(`Invalid type \"${rec.typeKind}\" to forward declare`);\n                        }\n                    });\n                });\n            }\n            this.ensureBlankLine();\n        }\n    }\n    emitDefinition(d, defName) {\n        const name = `${this.sourcelikeToString(defName)}.hpp`;\n        this.startFile(name, true);\n        this._generatedFiles.add(name);\n        this.emitIncludes(d, this.sourcelikeToString(defName));\n        this.emitNamespaces(this._namespaceNames, () => {\n            this.emitDescription(this.descriptionForType(d));\n            this.ensureBlankLine();\n            this.emitLine(\"using nlohmann::json;\");\n            this.ensureBlankLine();\n            if (d instanceof Type_1.ClassType) {\n                this.emitClass(d, defName);\n            }\n            else if (d instanceof Type_1.EnumType) {\n                this.emitEnum(d, defName);\n            }\n            else if (d instanceof Type_1.UnionType) {\n                this.emitUnionTypedefs(d, defName);\n            }\n        });\n        this.finishFile();\n    }\n    emitMultiSourceStructure(proposedFilename) {\n        if (!this._options.justTypes && this.haveNamedTypes) {\n            this.emitHelper();\n            this.startFile(\"Generators.hpp\", true);\n            this._allTypeNames.forEach(t => {\n                this.emitInclude(false, [t, \".hpp\"]);\n            });\n            this.ensureBlankLine();\n            this.emitGenerators();\n            this.finishFile();\n        }\n        this.forEachNamedType(\"leading-and-interposing\", (c, n) => {\n            this.emitDefinition(c, n);\n        }, (e, n) => {\n            this.emitDefinition(e, n);\n        }, (u, n) => {\n            this.emitDefinition(u, n);\n        });\n        /**\n         * If for some reason we have not generated anything,\n         * it means that a unnamed type has been generated - or nothing.\n         */\n        if (!this._generatedFiles.has(proposedFilename)) {\n            if (!this.haveNamedTypes) {\n                this.emitHelper();\n            }\n            this.startFile(proposedFilename);\n            this._generatedFiles.forEach(f => {\n                this.emitInclude(false, f);\n            });\n            this.emitNamespaces(this._namespaceNames, () => {\n                this.forEachTopLevel(\"leading\", (t, name) => this.emitTopLevelTypedef(t, name), t => this.namedTypeToNameForTopLevel(t) === undefined);\n            });\n            this.finishFile();\n        }\n    }\n    emitSourceStructure(proposedFilename) {\n        this._generatedFiles.clear();\n        /** Gather all the unique/custom types used by the schema */\n        this._allTypeNames.clear();\n        this.forEachDeclaration(\"none\", decl => {\n            const definedTypes = (0, TypeUtils_1.directlyReachableTypes)(decl.type, t => {\n                if ((0, TypeUtils_1.isNamedType)(t) && (t instanceof Type_1.ClassType || t instanceof Type_1.EnumType || t instanceof Type_1.UnionType)) {\n                    return new Set([\n                        this.sourcelikeToString(this.cppType(t, {\n                            needsForwardIndirection: false,\n                            needsOptionalIndirection: false,\n                            inJsonNamespace: false\n                        }, true, false, false))\n                    ]);\n                }\n                return null;\n            });\n            this._allTypeNames = (0, collection_utils_1.setUnion)(definedTypes, this._allTypeNames);\n        });\n        if (this._options.typeSourceStyle) {\n            this.emitSingleSourceStructure(proposedFilename);\n        }\n        else {\n            this.emitMultiSourceStructure(proposedFilename);\n        }\n    }\n    isConversionRequired(t) {\n        const originalType = this.cppType(t, {\n            needsForwardIndirection: true,\n            needsOptionalIndirection: true,\n            inJsonNamespace: true\n        }, false, false, false);\n        const newType = this.cppType(t, {\n            needsForwardIndirection: true,\n            needsOptionalIndirection: true,\n            inJsonNamespace: true\n        }, false, true, false);\n        return originalType !== newType;\n    }\n}\nexports.CPlusPlusRenderer = CPlusPlusRenderer;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectiveCRenderer = exports.ObjectiveCTargetLanguage = exports.objcOptions = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Naming_1 = require(\"../Naming\");\nconst Source_1 = require(\"../Source\");\nconst Strings_1 = require(\"../support/Strings\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst Support_1 = require(\"../support/Support\");\nconst unicode_properties_1 = __importDefault(require(\"unicode-properties\"));\nconst DEBUG = false;\nconst DEFAULT_CLASS_PREFIX = \"QT\";\nexports.objcOptions = {\n    features: new RendererOptions_1.EnumOption(\"features\", \"Interface and implementation\", [\n        [\"all\", { interface: true, implementation: true }],\n        [\"interface\", { interface: true, implementation: false }],\n        [\"implementation\", { interface: false, implementation: true }]\n    ]),\n    justTypes: new RendererOptions_1.BooleanOption(\"just-types\", \"Plain types only\", false),\n    marshallingFunctions: new RendererOptions_1.BooleanOption(\"functions\", \"C-style functions\", false),\n    classPrefix: new RendererOptions_1.StringOption(\"class-prefix\", \"Class prefix\", \"PREFIX\", DEFAULT_CLASS_PREFIX),\n    extraComments: new RendererOptions_1.BooleanOption(\"extra-comments\", \"Extra comments\", false)\n};\nclass ObjectiveCTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor() {\n        super(\"Objective-C\", [\"objc\", \"objective-c\", \"objectivec\"], \"m\");\n    }\n    getOptions() {\n        return [\n            exports.objcOptions.justTypes,\n            exports.objcOptions.classPrefix,\n            exports.objcOptions.features,\n            exports.objcOptions.extraComments,\n            exports.objcOptions.marshallingFunctions\n        ];\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        return new ObjectiveCRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.objcOptions, untypedOptionValues));\n    }\n}\nexports.ObjectiveCTargetLanguage = ObjectiveCTargetLanguage;\nfunction typeNameStyle(prefix, original) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    const result = (0, Strings_1.combineWords)(words, legalizeName, Strings_1.firstUpperWordStyle, Strings_1.firstUpperWordStyle, Strings_1.allUpperWordStyle, Strings_1.allUpperWordStyle, \"\", isStartCharacter);\n    return (0, Strings_1.addPrefixIfNecessary)(prefix, result);\n}\nfunction propertyNameStyle(original, isBool = false) {\n    // Objective-C developers are uncomfortable with property \"id\"\n    // so we use an alternate name in this special case.\n    if (original === \"id\") {\n        original = \"identifier\";\n    }\n    let words = (0, Strings_1.splitIntoWords)(original);\n    if (isBool) {\n        if (words.length === 0) {\n            words = [{ word: \"flag\", isAcronym: false }];\n        }\n        else if (!words[0].isAcronym && booleanPrefixes.indexOf(words[0].word) < 0) {\n            words = [{ word: \"is\", isAcronym: false }, ...words];\n        }\n    }\n    // Properties cannot even begin with any of the forbidden names\n    // For example, properies named new* are treated differently by ARC\n    if (words.length > 0 && forbiddenPropertyNames.indexOf(words[0].word) >= 0) {\n        words = [{ word: \"the\", isAcronym: false }, ...words];\n    }\n    return (0, Strings_1.combineWords)(words, legalizeName, Strings_1.allLowerWordStyle, Strings_1.firstUpperWordStyle, Strings_1.allLowerWordStyle, Strings_1.allUpperWordStyle, \"\", isStartCharacter);\n}\nconst keywords = [\n    /*\n    \"_Bool\",\n    \"_Complex\",\n    \"_Imaginary\",\n    */\n    \"asm\",\n    \"atomic\",\n    \"auto\",\n    \"bool\",\n    \"break\",\n    \"case\",\n    \"char\",\n    \"const\",\n    \"continue\",\n    \"default\",\n    \"do\",\n    \"double\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"false\",\n    \"float\",\n    \"for\",\n    \"goto\",\n    \"if\",\n    \"inline\",\n    \"int\",\n    \"long\",\n    \"nil\",\n    \"nonatomic\",\n    \"register\",\n    \"restrict\",\n    \"retain\",\n    \"return\",\n    \"short\",\n    \"signed\",\n    \"sizeof\",\n    \"static\",\n    \"struct\",\n    \"switch\",\n    \"typedef\",\n    \"typeof\",\n    \"true\",\n    \"union\",\n    \"unsigned\",\n    \"void\",\n    \"volatile\",\n    \"while\"\n];\nconst forbiddenPropertyNames = [\n    \"id\",\n    \"hash\",\n    \"description\",\n    \"init\",\n    \"copy\",\n    \"mutableCopy\",\n    \"superclass\",\n    \"debugDescription\",\n    \"new\"\n];\nconst booleanPrefixes = [\n    \"is\",\n    \"are\",\n    \"were\",\n    \"was\",\n    \"will\",\n    \"all\",\n    \"some\",\n    \"many\",\n    \"has\",\n    \"have\",\n    \"had\",\n    \"does\",\n    \"do\",\n    \"requires\",\n    \"require\",\n    \"needs\",\n    \"need\"\n];\nfunction isStartCharacter(utf16Unit) {\n    return unicode_properties_1.default.isAlphabetic(utf16Unit) || utf16Unit === 0x5f; // underscore\n}\nfunction isPartCharacter(utf16Unit) {\n    const category = unicode_properties_1.default.getCategory(utf16Unit);\n    return [\"Nd\", \"Pc\", \"Mn\", \"Mc\"].indexOf(category) >= 0 || isStartCharacter(utf16Unit);\n}\nconst legalizeName = (0, Strings_1.utf16LegalizeCharacters)(isPartCharacter);\nconst staticEnumValuesIdentifier = \"values\";\nconst forbiddenForEnumCases = [\"new\", staticEnumValuesIdentifier];\nfunction splitExtension(filename) {\n    const i = filename.lastIndexOf(\".\");\n    const extension = i !== -1 ? filename.split(\".\").pop() : \"m\";\n    filename = i !== -1 ? filename.slice(0, i) : filename;\n    return [filename, extension === undefined ? \"m\" : extension];\n}\nclass ObjectiveCRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _options) {\n        super(targetLanguage, renderContext);\n        this._options = _options;\n        // Infer the class prefix from a top-level name if it's not given\n        if (_options.classPrefix === DEFAULT_CLASS_PREFIX) {\n            const aTopLevel = (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(this.topLevels.keys()));\n            this._classPrefix = this.inferClassPrefix(aTopLevel);\n        }\n        else {\n            this._classPrefix = _options.classPrefix;\n        }\n    }\n    inferClassPrefix(name) {\n        const l = name.length;\n        let firstNonUpper = 0;\n        while (firstNonUpper < l && (0, Strings_1.fastIsUpperCase)(name.charCodeAt(firstNonUpper))) {\n            firstNonUpper += 1;\n        }\n        if (firstNonUpper < 2)\n            return DEFAULT_CLASS_PREFIX;\n        return name.slice(0, firstNonUpper - 1);\n    }\n    forbiddenNamesForGlobalNamespace() {\n        return keywords;\n    }\n    forbiddenForObjectProperties(_c, _className) {\n        return { names: forbiddenPropertyNames, includeGlobalForbidden: true };\n    }\n    forbiddenForEnumCases(_e, _enumName) {\n        return { names: forbiddenForEnumCases, includeGlobalForbidden: true };\n    }\n    makeNamedTypeNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"types\", rawName => typeNameStyle(this._classPrefix, rawName));\n    }\n    namerForObjectProperty(_, p) {\n        // TODO why is underscore being removed?\n        return new Naming_1.Namer(\"properties\", s => propertyNameStyle(s, p.type.kind === \"bool\"), [\n            \"_\",\n            \"the\",\n            \"one\",\n            \"some\",\n            \"another\"\n        ]);\n    }\n    makeUnionMemberNamer() {\n        return null;\n    }\n    makeEnumCaseNamer() {\n        return new Naming_1.Namer(\"enum-cases\", propertyNameStyle, []);\n    }\n    namedTypeToNameForTopLevel(type) {\n        return type;\n    }\n    emitDescriptionBlock(lines) {\n        this.emitCommentLines(lines, { lineStart: \"/// \" });\n    }\n    emitBlock(line, f) {\n        this.emitLine(line, \" {\");\n        this.indent(f);\n        this.emitLine(\"}\");\n    }\n    emitMethod(declaration, f) {\n        this.emitLine(declaration);\n        this.emitLine(\"{\");\n        this.indent(f);\n        this.emitLine(\"}\");\n    }\n    emitExtraComments(...comments) {\n        if (!this._options.extraComments)\n            return;\n        for (const comment of comments) {\n            this.emitLine(\"// \", comment);\n        }\n    }\n    startFile(basename, extension) {\n        (0, Support_1.assert)(this._currentFilename === undefined, \"Previous file wasn't finished\");\n        // FIXME: The filenames should actually be Sourcelikes, too\n        this._currentFilename = `${this.sourcelikeToString(basename)}.${extension}`;\n    }\n    finishFile() {\n        super.finishFile((0, Support_1.defined)(this._currentFilename));\n        this._currentFilename = undefined;\n    }\n    memoryAttribute(t, isNullable) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => \"copy\", _nullType => \"copy\", _boolType => (isNullable ? \"strong\" : \"assign\"), _integerType => (isNullable ? \"strong\" : \"assign\"), _doubleType => (isNullable ? \"strong\" : \"assign\"), _stringType => \"copy\", _arrayType => \"copy\", _classType => \"strong\", _mapType => \"copy\", _enumType => \"assign\", unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            return nullable !== null ? this.memoryAttribute(nullable, true) : \"copy\";\n        });\n    }\n    objcType(t, nullableOrBoxed = false) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => [\"id\", \"\"], \n        // For now, we're treating nulls just like any\n        _nullType => [\"id\", \"\"], _boolType => (nullableOrBoxed ? [\"NSNumber\", \" *\"] : [\"BOOL\", \"\"]), _integerType => (nullableOrBoxed ? [\"NSNumber\", \" *\"] : [\"NSInteger\", \"\"]), _doubleType => (nullableOrBoxed ? [\"NSNumber\", \" *\"] : [\"double\", \"\"]), _stringType => [\"NSString\", \" *\"], arrayType => {\n            const itemType = arrayType.items;\n            const itemTypeName = this.objcType(itemType, true);\n            // NSArray<id>* === NSArray*\n            if ((0, TypeUtils_1.isAnyOrNull)(itemType)) {\n                return [\"NSArray\", \" *\"];\n            }\n            return [[\"NSArray<\", itemTypeName, \">\"], \" *\"];\n        }, classType => [this.nameForNamedType(classType), \" *\"], mapType => [[\"NSDictionary<NSString *, \", this.objcType(mapType.values, true), \">\"], \" *\"], enumType => [this.nameForNamedType(enumType), \" *\"], unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            return nullable !== null ? this.objcType(nullable, true) : [\"id\", \"\"];\n        });\n    }\n    jsonType(t) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => [\"id\", \"\"], \n        // For now, we're treating nulls just like any\n        _nullType => [\"id\", \"\"], _boolType => [\"NSNumber\", \" *\"], _integerType => [\"NSNumber\", \" *\"], _doubleType => [\"NSNumber\", \" *\"], _stringType => [\"NSString\", \" *\"], _arrayType => [\"NSArray\", \" *\"], _classType => [\"NSDictionary<NSString *, id>\", \" *\"], mapType => [[\"NSDictionary<NSString *, \", this.jsonType(mapType.values), \">\"], \" *\"], _enumType => [\"NSString\", \" *\"], unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            return nullable !== null ? this.jsonType(nullable) : [\"id\", \"\"];\n        });\n    }\n    fromDynamicExpression(t, ...dynamic) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => dynamic, _nullType => dynamic, _boolType => dynamic, _integerType => dynamic, _doubleType => dynamic, _stringType => dynamic, arrayType => [\"map(\", dynamic, \", λ(id x, \", this.fromDynamicExpression(arrayType.items, \"x\"), \"))\"], classType => [\"[\", this.nameForNamedType(classType), \" fromJSONDictionary:\", dynamic, \"]\"], mapType => [\"map(\", dynamic, \", λ(id x, \", this.fromDynamicExpression(mapType.values, \"x\"), \"))\"], enumType => [\"[\", this.nameForNamedType(enumType), \" withValue:\", dynamic, \"]\"], unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            return nullable !== null ? this.fromDynamicExpression(nullable, dynamic) : dynamic;\n        });\n    }\n    toDynamicExpression(t, typed) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => [\"NSNullify(\", typed, \")\"], _nullType => [\"NSNullify(\", typed, \")\"], \n        // Sadly, KVC\n        _boolType => [typed, ` ? @YES : @NO`], _integerType => typed, _doubleType => typed, _stringType => typed, arrayType => {\n            if (this.implicitlyConvertsFromJSON(arrayType)) {\n                // TODO check each value type\n                return typed;\n            }\n            return [\"map(\", typed, \", λ(id x, \", this.toDynamicExpression(arrayType.items, \"x\"), \"))\"];\n        }, _classType => [\"[\", typed, \" JSONDictionary]\"], mapType => {\n            if (this.implicitlyConvertsFromJSON(mapType)) {\n                // TODO check each value type\n                return typed;\n            }\n            return [\"map(\", typed, \", λ(id x, \", this.toDynamicExpression(mapType.values, \"x\"), \"))\"];\n        }, _enumType => [\"[\", typed, \" value]\"], unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                if (this.implicitlyConvertsFromJSON(nullable)) {\n                    return [\"NSNullify(\", typed, \")\"];\n                }\n                else {\n                    return [\"NSNullify(\", this.toDynamicExpression(nullable, typed), \")\"];\n                }\n            }\n            else {\n                // TODO support unions\n                return typed;\n            }\n        });\n    }\n    implicitlyConvertsFromJSON(t) {\n        if (t instanceof Type_1.ClassType) {\n            return false;\n        }\n        else if (t instanceof Type_1.EnumType) {\n            return false;\n        }\n        else if (t instanceof Type_1.ArrayType) {\n            return this.implicitlyConvertsFromJSON(t.items);\n        }\n        else if (t instanceof Type_1.MapType) {\n            return this.implicitlyConvertsFromJSON(t.values);\n        }\n        else if (t.isPrimitive()) {\n            return true;\n        }\n        else if (t instanceof Type_1.UnionType) {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(t);\n            if (nullable !== null) {\n                return this.implicitlyConvertsFromJSON(nullable);\n            }\n            else {\n                // We don't support unions yet, so this is just untyped\n                return true;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    implicitlyConvertsToJSON(t) {\n        return this.implicitlyConvertsFromJSON(t) && \"bool\" !== t.kind;\n    }\n    emitPropertyAssignment(propertyName, jsonName, propertyType) {\n        const name = [\"_\", propertyName];\n        (0, TypeUtils_1.matchType)(propertyType, anyType => this.emitLine(name, \" = \", this.fromDynamicExpression(anyType, name), \";\"), nullType => this.emitLine(name, \" = \", this.fromDynamicExpression(nullType, name), \";\"), boolType => this.emitLine(name, \" = \", this.fromDynamicExpression(boolType, name), \";\"), integerType => this.emitLine(name, \" = \", this.fromDynamicExpression(integerType, name), \";\"), doubleType => this.emitLine(name, \" = \", this.fromDynamicExpression(doubleType, name), \";\"), stringType => this.emitLine(name, \" = \", this.fromDynamicExpression(stringType, name), \";\"), arrayType => this.emitLine(name, \" = \", this.fromDynamicExpression(arrayType, name), \";\"), classType => this.emitLine(name, \" = \", this.fromDynamicExpression(classType, [\"(id)\", name]), \";\"), mapType => {\n            const itemType = mapType.values;\n            this.emitLine(name, \" = map(\", name, \", \", [\"λ(id x, \", this.fromDynamicExpression(itemType, \"x\"), \")\"], \");\");\n        }, enumType => this.emitLine(name, \" = \", this.fromDynamicExpression(enumType, [\"(id)\", name]), \";\"), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                this.emitPropertyAssignment(propertyName, jsonName, nullable);\n            }\n            else {\n                // TODO This is a union, but for now we just leave it dynamic\n                this.emitLine(name, \" = \", this.fromDynamicExpression(unionType, name), \";\");\n            }\n        });\n    }\n    emitPrivateClassInterface(_, name) {\n        this.emitLine(\"@interface \", name, \" (JSONConversion)\");\n        this.emitLine(\"+ (instancetype)fromJSONDictionary:(NSDictionary *)dict;\");\n        this.emitLine(\"- (NSDictionary *)JSONDictionary;\");\n        this.emitLine(\"@end\");\n    }\n    pointerAwareTypeName(t) {\n        const name = t instanceof Type_1.Type ? this.objcType(t) : t;\n        const isPointer = name[1] !== \"\";\n        return isPointer ? name : [name, \" \"];\n    }\n    emitNonClassTopLevelTypedef(t, name) {\n        let nonPointerTypeName = this.objcType(t)[0];\n        this.emitLine(\"typedef \", nonPointerTypeName, \" \", name, \";\");\n    }\n    topLevelFromDataPrototype(name) {\n        return [name, \" *_Nullable \", name, \"FromData(NSData *data, NSError **error)\"];\n    }\n    topLevelFromJSONPrototype(name) {\n        return [name, \" *_Nullable \", name, \"FromJSON(NSString *json, NSStringEncoding encoding, NSError **error)\"];\n    }\n    topLevelToDataPrototype(name, pad = false) {\n        const parameter = this.variableNameForTopLevel(name);\n        const padding = pad ? (0, Strings_1.repeatString)(\" \", this.sourcelikeToString(name).length - \"NSData\".length) : \"\";\n        return [\"NSData\", padding, \" *_Nullable \", name, \"ToData(\", name, \" *\", parameter, \", NSError **error)\"];\n    }\n    topLevelToJSONPrototype(name, pad = false) {\n        const parameter = this.variableNameForTopLevel(name);\n        const padding = pad ? (0, Strings_1.repeatString)(\" \", this.sourcelikeToString(name).length - \"NSString\".length) : \"\";\n        return [\n            \"NSString\",\n            padding,\n            \" *_Nullable \",\n            name,\n            \"ToJSON(\",\n            name,\n            \" *\",\n            parameter,\n            \", NSStringEncoding encoding, NSError **error)\"\n        ];\n    }\n    emitTopLevelFunctionDeclarations(_, name) {\n        this.emitLine(this.topLevelFromDataPrototype(name), \";\");\n        this.emitLine(this.topLevelFromJSONPrototype(name), \";\");\n        this.emitLine(this.topLevelToDataPrototype(name, true), \";\");\n        this.emitLine(this.topLevelToJSONPrototype(name, true), \";\");\n    }\n    emitTryCatchAsError(inTry, inCatch) {\n        this.emitLine(\"@try {\");\n        this.indent(inTry);\n        this.emitLine(\"} @catch (NSException *exception) {\");\n        this.indent(() => {\n            this.emitLine(`*error = [NSError errorWithDomain:@\"JSONSerialization\" code:-1 userInfo:@{ @\"exception\": exception }];`);\n            inCatch();\n        });\n        this.emitLine(\"}\");\n    }\n    emitTopLevelFunctions(t, name) {\n        const parameter = this.variableNameForTopLevel(name);\n        this.ensureBlankLine();\n        this.emitMethod(this.topLevelFromDataPrototype(name), () => {\n            this.emitTryCatchAsError(() => {\n                this.emitLine(\"id json = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingAllowFragments error:error];\");\n                this.emitLine(\"return *error ? nil : \", this.fromDynamicExpression(t, \"json\"), \";\");\n            }, () => this.emitLine(\"return nil;\"));\n        });\n        this.ensureBlankLine();\n        this.emitMethod(this.topLevelFromJSONPrototype(name), () => {\n            this.emitLine(\"return \", name, \"FromData([json dataUsingEncoding:encoding], error);\");\n        });\n        this.ensureBlankLine();\n        this.emitMethod(this.topLevelToDataPrototype(name), () => {\n            this.emitTryCatchAsError(() => {\n                this.emitLine(\"id json = \", this.toDynamicExpression(t, parameter), \";\");\n                this.emitLine(\"NSData *data = [NSJSONSerialization dataWithJSONObject:json options:kNilOptions error:error];\");\n                this.emitLine(\"return *error ? nil : data;\");\n            }, () => this.emitLine(\"return nil;\"));\n        });\n        this.ensureBlankLine();\n        this.emitMethod(this.topLevelToJSONPrototype(name), () => {\n            this.emitLine(\"NSData *data = \", name, \"ToData(\", parameter, \", error);\");\n            this.emitLine(\"return data ? [[NSString alloc] initWithData:data encoding:encoding] : nil;\");\n        });\n    }\n    emitClassInterface(t, className) {\n        const isTopLevel = (0, collection_utils_1.mapContains)(this.topLevels, t);\n        this.emitDescription(this.descriptionForType(t));\n        this.emitLine(\"@interface \", className, \" : NSObject\");\n        if (DEBUG)\n            this.emitLine(\"@property NSDictionary<NSString *, id> *_json;\");\n        this.emitPropertyTable(t, (name, _json, property) => {\n            let attributes = [\"nonatomic\"];\n            // TODO offer a 'readonly' option\n            // TODO We must add \"copy\" if it's NSCopy, otherwise \"strong\"\n            if (property.type.isNullable) {\n                attributes.push(\"nullable\");\n            }\n            attributes.push(this.memoryAttribute(property.type, property.type.isNullable));\n            return [\n                [\"@property \", [\"(\", attributes.join(\", \"), \")\"], \" \"],\n                [this.pointerAwareTypeName(property.type), name, \";\"]\n            ];\n        });\n        if (!this._options.justTypes && isTopLevel) {\n            if (t.getProperties().size > 0)\n                this.ensureBlankLine();\n            this.emitLine(\"+ (_Nullable instancetype)fromJSON:(NSString *)json encoding:(NSStringEncoding)encoding error:(NSError *_Nullable *)error;\");\n            this.emitLine(\"+ (_Nullable instancetype)fromData:(NSData *)data error:(NSError *_Nullable *)error;\");\n            this.emitLine(\"- (NSString *_Nullable)toJSON:(NSStringEncoding)encoding error:(NSError *_Nullable *)error;\");\n            this.emitLine(\"- (NSData *_Nullable)toData:(NSError *_Nullable *)error;\");\n        }\n        this.emitLine(\"@end\");\n    }\n    hasIrregularProperties(t) {\n        let irregular = false;\n        this.forEachClassProperty(t, \"none\", (name, jsonName) => {\n            irregular = irregular || (0, Strings_1.stringEscape)(jsonName) !== this.sourcelikeToString(name);\n        });\n        return irregular;\n    }\n    hasUnsafeProperties(t) {\n        let unsafe = false;\n        this.forEachClassProperty(t, \"none\", (_, __, property) => {\n            unsafe = unsafe || !this.implicitlyConvertsToJSON(property.type);\n        });\n        return unsafe;\n    }\n    // TODO Implement NSCopying\n    emitClassImplementation(t, className) {\n        const isTopLevel = (0, collection_utils_1.mapContains)(this.topLevels, t);\n        const hasIrregularProperties = this.hasIrregularProperties(t);\n        const hasUnsafeProperties = this.hasUnsafeProperties(t);\n        this.emitLine(\"@implementation \", className);\n        if (!this._options.justTypes) {\n            this.emitMethod(\"+ (NSDictionary<NSString *, NSString *> *)properties\", () => {\n                this.emitLine(\"static NSDictionary<NSString *, NSString *> *properties;\");\n                this.emitLine(\"return properties = properties ? properties : @{\");\n                this.indent(() => {\n                    this.forEachClassProperty(t, \"none\", (name, jsonName) => this.emitLine(`@\"${(0, Strings_1.stringEscape)(jsonName)}\": @\"`, name, `\",`));\n                });\n                this.emitLine(\"};\");\n            });\n            this.ensureBlankLine();\n            if (isTopLevel) {\n                this.emitMethod(\"+ (_Nullable instancetype)fromData:(NSData *)data error:(NSError *_Nullable *)error\", () => {\n                    this.emitLine(\"return \", className, \"FromData(data, error);\");\n                });\n                this.ensureBlankLine();\n                this.emitMethod(\"+ (_Nullable instancetype)fromJSON:(NSString *)json encoding:(NSStringEncoding)encoding error:(NSError *_Nullable *)error\", () => {\n                    this.emitLine(\"return \", className, \"FromJSON(json, encoding, error);\");\n                });\n                this.ensureBlankLine();\n            }\n            this.emitMethod(\"+ (instancetype)fromJSONDictionary:(NSDictionary *)dict\", () => {\n                this.emitLine(\"return dict ? [[\", className, \" alloc] initWithJSONDictionary:dict] : nil;\");\n            });\n            this.ensureBlankLine();\n            this.emitMethod(\"- (instancetype)initWithJSONDictionary:(NSDictionary *)dict\", () => {\n                this.emitBlock(\"if (self = [super init])\", () => {\n                    if (DEBUG)\n                        this.emitLine(\"__json = dict;\");\n                    this.emitLine(\"[self setValuesForKeysWithDictionary:dict];\");\n                    this.forEachClassProperty(t, \"none\", (name, jsonName, property) => {\n                        if (!this.implicitlyConvertsFromJSON(property.type)) {\n                            this.emitPropertyAssignment(name, jsonName, property.type);\n                        }\n                    });\n                });\n                this.emitLine(\"return self;\");\n            });\n            this.ensureBlankLine();\n            this.emitMethod(\"- (void)setValue:(nullable id)value forKey:(NSString *)key\", () => {\n                this.emitLine(\"id resolved = \", className, \".properties[key];\");\n                this.emitLine(\"if (resolved) [super setValue:value forKey:resolved];\");\n            });\n            // setNilValueForKey: is automatically invoked by the NSObject setValue:forKey: when it is passed nil for a scalar (a.k.a. non-nullable) object\n            // The approach below sets the scalar to 0 in this case, and therefore assumes an initializer with incomplete data shouldn't be grounds for raising an exception.\n            // Put another way, if the initializer didn't have a key at all, there wouldn't be an exception raised, so sending nil for something probably shouldn't cause one.\n            this.ensureBlankLine();\n            this.emitMethod(\"- (void)setNilValueForKey:(NSString *)key\", () => {\n                this.emitLine(\"id resolved = \", className, \".properties[key];\");\n                this.emitLine(\"if (resolved) [super setValue:@(0) forKey:resolved];\");\n            });\n            this.ensureBlankLine();\n            this.emitMethod(\"- (NSDictionary *)JSONDictionary\", () => {\n                if (!hasIrregularProperties && !hasUnsafeProperties) {\n                    this.emitLine(\"return [self dictionaryWithValuesForKeys:\", className, \".properties.allValues];\");\n                    return;\n                }\n                this.emitLine(\"id dict = [[self dictionaryWithValuesForKeys:\", className, \".properties.allValues] mutableCopy];\");\n                this.ensureBlankLine();\n                if (hasIrregularProperties) {\n                    this.emitExtraComments(\"Rewrite property names that differ in JSON\");\n                    this.emitBlock([\"for (id jsonName in \", className, \".properties)\"], () => {\n                        this.emitLine(`id propertyName = `, className, `.properties[jsonName];`);\n                        this.emitBlock(`if (![jsonName isEqualToString:propertyName])`, () => {\n                            this.emitLine(`dict[jsonName] = dict[propertyName];`);\n                            this.emitLine(`[dict removeObjectForKey:propertyName];`);\n                        });\n                    });\n                }\n                if (hasUnsafeProperties) {\n                    this.ensureBlankLine();\n                    this.emitExtraComments(\"Map values that need translation\");\n                    this.emitLine(\"[dict addEntriesFromDictionary:@{\");\n                    this.indent(() => {\n                        this.forEachClassProperty(t, \"none\", (propertyName, jsonKey, property) => {\n                            if (!this.implicitlyConvertsToJSON(property.type)) {\n                                const key = (0, Strings_1.stringEscape)(jsonKey);\n                                const name = [\"_\", propertyName];\n                                this.emitLine('@\"', key, '\": ', this.toDynamicExpression(property.type, name), \",\");\n                            }\n                        });\n                    });\n                    this.emitLine(\"}];\");\n                }\n                this.ensureBlankLine();\n                this.emitLine(\"return dict;\");\n            });\n            if (isTopLevel) {\n                this.ensureBlankLine();\n                this.emitMethod(`- (NSData *_Nullable)toData:(NSError *_Nullable *)error`, () => {\n                    this.emitLine(\"return \", className, \"ToData(self, error);\");\n                });\n                this.ensureBlankLine();\n                this.emitMethod(`- (NSString *_Nullable)toJSON:(NSStringEncoding)encoding error:(NSError *_Nullable *)error`, () => {\n                    this.emitLine(\"return \", className, \"ToJSON(self, encoding, error);\");\n                });\n            }\n        }\n        this.emitLine(\"@end\");\n    }\n    emitMark(label) {\n        this.ensureBlankLine();\n        this.emitLine(`#pragma mark - ${label}`);\n        this.ensureBlankLine();\n    }\n    variableNameForTopLevel(name) {\n        const camelCaseName = (0, Source_1.modifySource)(serialized => {\n            // 1. remove class prefix\n            serialized = serialized.slice(this._classPrefix.length);\n            // 2. camel case\n            return (0, Strings_1.camelCase)(serialized);\n        }, name);\n        return camelCaseName;\n    }\n    emitPseudoEnumInterface(enumType, enumName) {\n        this.emitDescription(this.descriptionForType(enumType));\n        this.emitLine(\"@interface \", enumName, \" : NSObject\");\n        this.emitLine(\"@property (nonatomic, readonly, copy) NSString *value;\");\n        this.emitLine(\"+ (instancetype _Nullable)withValue:(NSString *)value;\");\n        this.forEachEnumCase(enumType, \"none\", (name, _) => {\n            this.emitLine(\"+ (\", enumName, \" *)\", name, \";\");\n        });\n        this.emitLine(\"@end\");\n    }\n    emitPseudoEnumImplementation(enumType, enumName) {\n        this.emitLine(\"@implementation \", enumName);\n        const instances = [enumName, \".\", staticEnumValuesIdentifier];\n        this.emitMethod([\"+ (NSDictionary<NSString *, \", enumName, \" *> *)\", staticEnumValuesIdentifier], () => {\n            this.emitLine(\"static NSDictionary<NSString *, \", enumName, \" *> *\", staticEnumValuesIdentifier, \";\");\n            this.emitLine(\"return \", staticEnumValuesIdentifier, \" = \", staticEnumValuesIdentifier, \" ? \", staticEnumValuesIdentifier, \" : @{\");\n            this.indent(() => {\n                this.forEachEnumCase(enumType, \"none\", (_, jsonValue) => {\n                    const value = ['@\"', (0, Strings_1.stringEscape)(jsonValue), '\"'];\n                    this.emitLine(value, \": [[\", enumName, \" alloc] initWithValue:\", value, \"],\");\n                });\n            });\n            this.emitLine(\"};\");\n        });\n        this.ensureBlankLine();\n        this.forEachEnumCase(enumType, \"none\", (name, jsonValue) => {\n            this.emitLine(\"+ (\", enumName, \" *)\", name, \" { return \", instances, '[@\"', (0, Strings_1.stringEscape)(jsonValue), '\"]; }');\n        });\n        this.ensureBlankLine();\n        this.emitMethod(\"+ (instancetype _Nullable)withValue:(NSString *)value\", () => this.emitLine(\"return \", instances, \"[value];\"));\n        this.ensureBlankLine();\n        this.emitMethod(\"- (instancetype)initWithValue:(NSString *)value\", () => {\n            this.emitLine(\"if (self = [super init]) _value = value;\");\n            this.emitLine(\"return self;\");\n        });\n        this.ensureBlankLine();\n        this.emitLine(\"- (NSUInteger)hash { return _value.hash; }\");\n        this.emitLine(\"@end\");\n    }\n    emitSourceStructure(proposedFilename) {\n        const fileMode = proposedFilename !== \"stdout\";\n        if (!fileMode) {\n            // We don't have a filename, so we use a top-level name\n            const firstTopLevel = (0, Support_1.defined)((0, collection_utils_1.mapFirst)(this.topLevels));\n            proposedFilename = this.sourcelikeToString(this.nameForNamedType(firstTopLevel)) + \".m\";\n        }\n        const [filename, extension] = splitExtension(proposedFilename);\n        if (this._options.features.interface) {\n            this.startFile(filename, \"h\");\n            if (this.leadingComments !== undefined) {\n                this.emitComments(this.leadingComments);\n            }\n            else if (!this._options.justTypes) {\n                this.emitCommentLines([\"To parse this JSON:\", \"\"]);\n                this.emitLine(\"//   NSError *error;\");\n                this.forEachTopLevel(\"none\", (t, topLevelName) => {\n                    const fromJsonExpression = t instanceof Type_1.ClassType\n                        ? [\"[\", topLevelName, \" fromJSON:json encoding:NSUTF8Encoding error:&error];\"]\n                        : [topLevelName, \"FromJSON(json, NSUTF8Encoding, &error);\"];\n                    this.emitLine(\"//   \", topLevelName, \" *\", this.variableNameForTopLevel(topLevelName), \" = \", fromJsonExpression);\n                });\n            }\n            this.ensureBlankLine();\n            this.emitLine(`#import <Foundation/Foundation.h>`);\n            this.ensureBlankLine();\n            // Emit @class declarations for top-level array+maps and classes\n            this.forEachNamedType(\"none\", (_, className) => this.emitLine(\"@class \", className, \";\"), (_, enumName) => this.emitLine(\"@class \", enumName, \";\"), () => null);\n            this.ensureBlankLine();\n            this.ensureBlankLine();\n            this.emitLine(\"NS_ASSUME_NONNULL_BEGIN\");\n            this.ensureBlankLine();\n            if (this.haveEnums) {\n                this.emitMark(\"Boxed enums\");\n                this.forEachEnum(\"leading-and-interposing\", (t, n) => this.emitPseudoEnumInterface(t, n));\n            }\n            // Emit interfaces for top-level array+maps and classes\n            this.forEachTopLevel(\"leading-and-interposing\", (t, n) => this.emitNonClassTopLevelTypedef(t, n), t => !(t instanceof Type_1.ClassType));\n            const hasTopLevelNonClassTypes = (0, collection_utils_1.iterableSome)(this.topLevels, ([_, t]) => !(t instanceof Type_1.ClassType));\n            if (!this._options.justTypes && (hasTopLevelNonClassTypes || this._options.marshallingFunctions)) {\n                this.ensureBlankLine();\n                this.emitMark(\"Top-level marshaling functions\");\n                this.forEachTopLevel(\"leading-and-interposing\", (t, n) => this.emitTopLevelFunctionDeclarations(t, n), \n                // Objective-C developers get freaked out by C functions, so we don't\n                // declare them for top-level object types (we always need them for non-object types)\n                t => this._options.marshallingFunctions || !(t instanceof Type_1.ClassType));\n            }\n            this.emitMark(\"Object interfaces\");\n            this.forEachNamedType(\"leading-and-interposing\", (c, className) => this.emitClassInterface(c, className), () => null, () => null);\n            this.ensureBlankLine();\n            this.emitLine(\"NS_ASSUME_NONNULL_END\");\n            this.finishFile();\n        }\n        if (this._options.features.implementation) {\n            this.startFile(filename, extension);\n            this.emitLine(`#import \"${filename}.h\"`);\n            this.ensureBlankLine();\n            if (!this._options.justTypes) {\n                this.ensureBlankLine();\n                this.emitExtraComments(\"Shorthand for simple blocks\");\n                this.emitLine(`#define λ(decl, expr) (^(decl) { return (expr); })`);\n                this.ensureBlankLine();\n                this.emitExtraComments(\"nil → NSNull conversion for JSON dictionaries\");\n                this.emitBlock(\"static id NSNullify(id _Nullable x)\", () => this.emitLine(\"return (x == nil || x == NSNull.null) ? NSNull.null : x;\"));\n                this.ensureBlankLine();\n                this.emitLine(\"NS_ASSUME_NONNULL_BEGIN\");\n                this.ensureBlankLine();\n                // We wouldn't need to emit these private iterfaces if we emitted implementations in forward-order\n                // but the code is more readable and explicit if we do this.\n                if (this._options.extraComments) {\n                    this.emitMark(\"Private model interfaces\");\n                }\n                this.forEachNamedType(\"leading-and-interposing\", (c, className) => this.emitPrivateClassInterface(c, className), () => null, () => null);\n                if (this.haveEnums) {\n                    if (this._options.extraComments) {\n                        this.ensureBlankLine();\n                        this.emitExtraComments(\"These enum-like reference types are needed so that enum\", \"values can be contained by NSArray and NSDictionary.\");\n                        this.ensureBlankLine();\n                    }\n                    this.forEachEnum(\"leading-and-interposing\", (t, n) => this.emitPseudoEnumImplementation(t, n));\n                }\n                this.ensureBlankLine();\n                this.emitMapFunction();\n                this.ensureBlankLine();\n                this.emitMark(\"JSON serialization\");\n                this.forEachTopLevel(\"leading-and-interposing\", (t, n) => this.emitTopLevelFunctions(t, n));\n            }\n            this.forEachNamedType(\"leading-and-interposing\", (c, className) => this.emitClassImplementation(c, className), () => null, () => null);\n            if (!this._options.justTypes) {\n                this.ensureBlankLine();\n                this.emitLine(\"NS_ASSUME_NONNULL_END\");\n            }\n            this.finishFile();\n        }\n    }\n    get needsMap() {\n        // TODO this isn't complete (needs union support, for example)\n        function needsMap(t) {\n            return (t instanceof Type_1.MapType ||\n                t instanceof Type_1.ArrayType ||\n                (t instanceof Type_1.ClassType && (0, collection_utils_1.mapSome)(t.getProperties(), p => needsMap(p.type))));\n        }\n        return (0, collection_utils_1.iterableSome)(this.typeGraph.allTypesUnordered(), needsMap);\n    }\n    emitMapFunction() {\n        if (this.needsMap) {\n            this.emitMultiline(`static id map(id collection, id (^f)(id value)) {\n    id result = nil;\n    if ([collection isKindOfClass:NSArray.class]) {\n        result = [NSMutableArray arrayWithCapacity:[collection count]];\n        for (id x in collection) [result addObject:f(x)];\n    } else if ([collection isKindOfClass:NSDictionary.class]) {\n        result = [NSMutableDictionary dictionaryWithCapacity:[collection count]];\n        for (id key in collection) [result setObject:f([collection objectForKey:key]) forKey:key];\n    }\n    return result;\n}`);\n        }\n    }\n}\nexports.ObjectiveCRenderer = ObjectiveCRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JacksonRenderer = exports.JavaRenderer = exports.javaNameStyle = exports.stringEscape = exports.JavaTargetLanguage = exports.javaOptions = void 0;\nconst Annotation_1 = require(\"../Annotation\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst Naming_1 = require(\"../Naming\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst Source_1 = require(\"../Source\");\nconst Acronyms_1 = require(\"../support/Acronyms\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Support_1 = require(\"../support/Support\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nexports.javaOptions = {\n    useList: new RendererOptions_1.EnumOption(\"array-type\", \"Use T[] or List<T>\", [\n        [\"array\", false],\n        [\"list\", true]\n    ], \"array\"),\n    justTypes: new RendererOptions_1.BooleanOption(\"just-types\", \"Plain types only\", false),\n    dateTimeProvider: new RendererOptions_1.EnumOption(\"datetime-provider\", \"Date time provider type\", [\n        [\"java8\", \"java8\"],\n        [\"legacy\", \"legacy\"]\n    ], \"java8\"),\n    acronymStyle: (0, Acronyms_1.acronymOption)(Acronyms_1.AcronymStyleOptions.Pascal),\n    // FIXME: Do this via a configurable named eventually.\n    packageName: new RendererOptions_1.StringOption(\"package\", \"Generated package name\", \"NAME\", \"io.quicktype\"),\n    lombok: new RendererOptions_1.BooleanOption(\"lombok\", \"Use lombok\", false, \"primary\"),\n    lombokCopyAnnotations: new RendererOptions_1.BooleanOption(\"lombok-copy-annotations\", \"Copy accessor annotations\", true, \"secondary\")\n};\nclass JavaTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor() {\n        super(\"Java\", [\"java\"], \"java\");\n    }\n    getOptions() {\n        return [\n            exports.javaOptions.useList,\n            exports.javaOptions.justTypes,\n            exports.javaOptions.dateTimeProvider,\n            exports.javaOptions.acronymStyle,\n            exports.javaOptions.packageName,\n            exports.javaOptions.lombok,\n            exports.javaOptions.lombokCopyAnnotations\n        ];\n    }\n    get supportsUnionsWithBothNumberTypes() {\n        return true;\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        const options = (0, RendererOptions_1.getOptionValues)(exports.javaOptions, untypedOptionValues);\n        if (options.justTypes) {\n            return new JavaRenderer(this, renderContext, options);\n        }\n        return new JacksonRenderer(this, renderContext, options);\n    }\n    get stringTypeMapping() {\n        const mapping = new Map();\n        mapping.set(\"date\", \"date\");\n        mapping.set(\"time\", \"time\");\n        mapping.set(\"date-time\", \"date-time\");\n        mapping.set(\"uuid\", \"uuid\");\n        return mapping;\n    }\n}\nexports.JavaTargetLanguage = JavaTargetLanguage;\nconst javaKeywords = [\n    \"_\",\n    \"Object\",\n    \"Class\",\n    \"System\",\n    \"Long\",\n    \"Double\",\n    \"Boolean\",\n    \"String\",\n    \"List\",\n    \"Map\",\n    \"UUID\",\n    \"Exception\",\n    \"IOException\",\n    \"Override\",\n    \"abstract\",\n    \"continue\",\n    \"for\",\n    \"new\",\n    \"switch\",\n    \"assert\",\n    \"default\",\n    \"goto\",\n    \"package\",\n    \"synchronized\",\n    \"boolean\",\n    \"do\",\n    \"if\",\n    \"private\",\n    \"this\",\n    \"break\",\n    \"double\",\n    \"implements\",\n    \"protected\",\n    \"throw\",\n    \"byte\",\n    \"else\",\n    \"import\",\n    \"public\",\n    \"throws\",\n    \"case\",\n    \"enum\",\n    \"instanceof\",\n    \"return\",\n    \"transient\",\n    \"catch\",\n    \"extends\",\n    \"int\",\n    \"short\",\n    \"try\",\n    \"char\",\n    \"final\",\n    \"interface\",\n    \"static\",\n    \"void\",\n    \"class\",\n    \"finally\",\n    \"long\",\n    \"strictfp\",\n    \"volatile\",\n    \"const\",\n    \"float\",\n    \"native\",\n    \"super\",\n    \"while\",\n    \"null\",\n    \"false\",\n    \"true\"\n];\nexports.stringEscape = (0, Strings_1.utf16ConcatMap)((0, Strings_1.escapeNonPrintableMapper)(Strings_1.isAscii, Strings_1.standardUnicodeHexEscape));\nfunction isStartCharacter(codePoint) {\n    if (codePoint === 0x5f)\n        return true; // underscore\n    return (0, Strings_1.isAscii)(codePoint) && (0, Strings_1.isLetter)(codePoint);\n}\nfunction isPartCharacter(codePoint) {\n    return isStartCharacter(codePoint) || ((0, Strings_1.isAscii)(codePoint) && (0, Strings_1.isDigit)(codePoint));\n}\nconst legalizeName = (0, Strings_1.utf16LegalizeCharacters)(isPartCharacter);\nfunction javaNameStyle(startWithUpper, upperUnderscore, original, acronymsStyle = Strings_1.allUpperWordStyle) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    return (0, Strings_1.combineWords)(words, legalizeName, upperUnderscore ? Strings_1.allUpperWordStyle : startWithUpper ? Strings_1.firstUpperWordStyle : Strings_1.allLowerWordStyle, upperUnderscore ? Strings_1.allUpperWordStyle : Strings_1.firstUpperWordStyle, upperUnderscore || startWithUpper ? Strings_1.allUpperWordStyle : Strings_1.allLowerWordStyle, acronymsStyle, upperUnderscore ? \"_\" : \"\", isStartCharacter);\n}\nexports.javaNameStyle = javaNameStyle;\nclass JavaDateTimeProvider {\n    constructor(_renderer, _className) {\n        this._renderer = _renderer;\n        this._className = _className;\n        this.shouldEmitDateTimeConverter = true;\n        this.shouldEmitTimeConverter = true;\n        this.shouldEmitDateConverter = true;\n    }\n}\nclass Java8DateTimeProvider extends JavaDateTimeProvider {\n    constructor() {\n        super(...arguments);\n        this.keywords = [\n            \"LocalDate\",\n            \"OffsetDateTime\",\n            \"OffsetTime\",\n            \"ZoneOffset\",\n            \"ZonedDateTime\",\n            \"DateTimeFormatter\",\n            \"DateTimeFormatterBuilder\",\n            \"ChronoField\"\n        ];\n        this.dateTimeImports = [\"java.time.OffsetDateTime\"];\n        this.dateImports = [\"java.time.LocalDate\"];\n        this.timeImports = [\"java.time.OffsetTime\"];\n        this.converterImports = [\n            \"java.time.LocalDate\",\n            \"java.time.OffsetDateTime\",\n            \"java.time.OffsetTime\",\n            \"java.time.ZoneOffset\",\n            \"java.time.ZonedDateTime\",\n            \"java.time.format.DateTimeFormatter\",\n            \"java.time.format.DateTimeFormatterBuilder\",\n            \"java.time.temporal.ChronoField\"\n        ];\n        this.dateTimeType = \"OffsetDateTime\";\n        this.dateType = \"LocalDate\";\n        this.timeType = \"OffsetTime\";\n        this.dateTimeJacksonAnnotations = [];\n        this.dateJacksonAnnotations = [];\n        this.timeJacksonAnnotations = [];\n    }\n    emitDateTimeConverters() {\n        this._renderer.ensureBlankLine();\n        this._renderer.emitLine(\"private static final DateTimeFormatter DATE_TIME_FORMATTER = new DateTimeFormatterBuilder()\");\n        this._renderer.indent(() => this._renderer.indent(() => {\n            this._renderer.emitLine(\".appendOptional(DateTimeFormatter.ISO_DATE_TIME)\");\n            this._renderer.emitLine(\".appendOptional(DateTimeFormatter.ISO_OFFSET_DATE_TIME)\");\n            this._renderer.emitLine(\".appendOptional(DateTimeFormatter.ISO_INSTANT)\");\n            this._renderer.emitLine('.appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss.SX\"))');\n            this._renderer.emitLine('.appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ssX\"))');\n            this._renderer.emitLine('.appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"))');\n            this._renderer.emitLine(\".toFormatter()\");\n            this._renderer.emitLine(\".withZone(ZoneOffset.UTC);\");\n        }));\n        this._renderer.ensureBlankLine();\n        this._renderer.emitBlock(\"public static OffsetDateTime parseDateTimeString(String str)\", () => {\n            this._renderer.emitLine(\"return ZonedDateTime.from(Converter.DATE_TIME_FORMATTER.parse(str)).toOffsetDateTime();\");\n        });\n        this._renderer.ensureBlankLine();\n        this._renderer.emitLine(\"private static final DateTimeFormatter TIME_FORMATTER = new DateTimeFormatterBuilder()\");\n        this._renderer.indent(() => this._renderer.indent(() => {\n            this._renderer.emitLine(\".appendOptional(DateTimeFormatter.ISO_TIME)\");\n            this._renderer.emitLine(\".appendOptional(DateTimeFormatter.ISO_OFFSET_TIME)\");\n            this._renderer.emitLine(\".parseDefaulting(ChronoField.YEAR, 2020)\");\n            this._renderer.emitLine(\".parseDefaulting(ChronoField.MONTH_OF_YEAR, 1)\");\n            this._renderer.emitLine(\".parseDefaulting(ChronoField.DAY_OF_MONTH, 1)\");\n            this._renderer.emitLine(\".toFormatter()\");\n            this._renderer.emitLine(\".withZone(ZoneOffset.UTC);\");\n        }));\n        this._renderer.ensureBlankLine();\n        this._renderer.emitBlock(\"public static OffsetTime parseTimeString(String str)\", () => {\n            this._renderer.emitLine(\"return ZonedDateTime.from(Converter.TIME_FORMATTER.parse(str)).toOffsetDateTime().toOffsetTime();\");\n        });\n    }\n    convertStringToDateTime(variable) {\n        return [this._className, \".parseDateTimeString(\", variable, \")\"];\n    }\n    convertStringToTime(variable) {\n        return [this._className, \".parseTimeString(\", variable, \")\"];\n    }\n    convertStringToDate(variable) {\n        return [\"LocalDate.parse(\", variable, \")\"];\n    }\n    convertDateTimeToString(variable) {\n        return [variable, \".format(java.time.format.DateTimeFormatter.ISO_OFFSET_DATE_TIME)\"];\n    }\n    convertTimeToString(variable) {\n        return [variable, \".format(java.time.format.DateTimeFormatter.ISO_OFFSET_TIME)\"];\n    }\n    convertDateToString(variable) {\n        return [variable, \".format(java.time.format.DateTimeFormatter.ISO_DATE)\"];\n    }\n}\nclass JavaLegacyDateTimeProvider extends JavaDateTimeProvider {\n    constructor() {\n        super(...arguments);\n        this.keywords = [\"SimpleDateFormat\", \"Date\"];\n        this.dateTimeImports = [\"java.util.Date\"];\n        this.dateImports = [\"java.util.Date\"];\n        this.timeImports = [\"java.util.Date\"];\n        this.converterImports = [\"java.util.Date\", \"java.text.SimpleDateFormat\"];\n        this.dateTimeType = \"Date\";\n        this.dateType = \"Date\";\n        this.timeType = \"Date\";\n        this.dateTimeJacksonAnnotations = ['@JsonFormat(pattern = \"yyyy-MM-dd\\'T\\'HH:mm:ssX\", timezone = \"UTC\")'];\n        this.dateJacksonAnnotations = ['@JsonFormat(pattern = \"yyyy-MM-dd\")'];\n        this.timeJacksonAnnotations = ['@JsonFormat(pattern = \"HH:mm:ssX\", timezone = \"UTC\")'];\n        this.shouldEmitTimeConverter = false;\n        this.shouldEmitDateConverter = false;\n    }\n    emitDateTimeConverters() {\n        this._renderer.ensureBlankLine();\n        this._renderer.emitLine(\"private static final String[] DATE_TIME_FORMATS = {\");\n        this._renderer.indent(() => this._renderer.indent(() => {\n            this._renderer.emitLine(\"\\\"yyyy-MM-dd'T'HH:mm:ss.SX\\\",\");\n            this._renderer.emitLine(\"\\\"yyyy-MM-dd'T'HH:mm:ss.S\\\",\");\n            this._renderer.emitLine(\"\\\"yyyy-MM-dd'T'HH:mm:ssX\\\",\");\n            this._renderer.emitLine(\"\\\"yyyy-MM-dd'T'HH:mm:ss\\\",\");\n            this._renderer.emitLine('\"yyyy-MM-dd HH:mm:ss.SX\",');\n            this._renderer.emitLine('\"yyyy-MM-dd HH:mm:ss.S\",');\n            this._renderer.emitLine('\"yyyy-MM-dd HH:mm:ssX\",');\n            this._renderer.emitLine('\"yyyy-MM-dd HH:mm:ss\",');\n            this._renderer.emitLine('\"HH:mm:ss.SZ\",');\n            this._renderer.emitLine('\"HH:mm:ss.S\",');\n            this._renderer.emitLine('\"HH:mm:ssZ\",');\n            this._renderer.emitLine('\"HH:mm:ss\",');\n            this._renderer.emitLine('\"yyyy-MM-dd\",');\n        }));\n        this._renderer.emitLine(\"};\");\n        this._renderer.ensureBlankLine();\n        this._renderer.emitBlock(\"public static Date parseAllDateTimeString(String str)\", () => {\n            this._renderer.emitBlock(\"for (String format : DATE_TIME_FORMATS)\", () => {\n                this._renderer.emitIgnoredTryCatchBlock(() => {\n                    this._renderer.emitLine(\"return new SimpleDateFormat(format).parse(str);\");\n                });\n            });\n            this._renderer.emitLine(\"return null;\");\n        });\n        this._renderer.ensureBlankLine();\n        this._renderer.emitBlock(\"public static String serializeDateTime(Date datetime)\", () => {\n            this._renderer.emitLine(\"return new SimpleDateFormat(\\\"yyyy-MM-dd'T'hh:mm:ssZ\\\").format(datetime);\");\n        });\n        this._renderer.ensureBlankLine();\n        this._renderer.emitBlock(\"public static String serializeDate(Date datetime)\", () => {\n            this._renderer.emitLine('return new SimpleDateFormat(\"yyyy-MM-dd\").format(datetime);');\n        });\n        this._renderer.ensureBlankLine();\n        this._renderer.emitBlock(\"public static String serializeTime(Date datetime)\", () => {\n            this._renderer.emitLine('return new SimpleDateFormat(\"hh:mm:ssZ\").format(datetime);');\n        });\n    }\n    convertStringToDateTime(variable) {\n        return [this._className, \".parseAllDateTimeString(\", variable, \")\"];\n    }\n    convertStringToTime(variable) {\n        return [this._className, \".parseAllDateTimeString(\", variable, \")\"];\n    }\n    convertStringToDate(variable) {\n        return [this._className, \".parseAllDateTimeString(\", variable, \")\"];\n    }\n    convertDateTimeToString(variable) {\n        return [this._className, \".serializeDateTime(\", variable, \")\"];\n    }\n    convertTimeToString(variable) {\n        return [this._className, \".serializeTime(\", variable, \")\"];\n    }\n    convertDateToString(variable) {\n        return [this._className, \".serializeDate(\", variable, \")\"];\n    }\n}\nclass JavaRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _options) {\n        super(targetLanguage, renderContext);\n        this._options = _options;\n        this._gettersAndSettersForPropertyName = new Map();\n        this._haveEmittedLeadingComments = false;\n        this._converterClassname = \"Converter\";\n        this._converterKeywords = [];\n        switch (_options.dateTimeProvider) {\n            default:\n            case \"java8\":\n                this._dateTimeProvider = new Java8DateTimeProvider(this, this._converterClassname);\n                break;\n            case \"legacy\":\n                this._dateTimeProvider = new JavaLegacyDateTimeProvider(this, this._converterClassname);\n                break;\n        }\n    }\n    forbiddenNamesForGlobalNamespace() {\n        const keywords = [\n            ...javaKeywords,\n            ...this._converterKeywords,\n            this._converterClassname,\n            ...this._dateTimeProvider.keywords\n        ];\n        return keywords;\n    }\n    forbiddenForObjectProperties(_c, _className) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    makeNamedTypeNamer() {\n        return this.getNameStyling(\"typeNamingFunction\");\n    }\n    namerForObjectProperty() {\n        return this.getNameStyling(\"propertyNamingFunction\");\n    }\n    makeUnionMemberNamer() {\n        return this.getNameStyling(\"propertyNamingFunction\");\n    }\n    makeEnumCaseNamer() {\n        return this.getNameStyling(\"enumCaseNamingFunction\");\n    }\n    unionNeedsName(u) {\n        return (0, TypeUtils_1.nullableFromUnion)(u) === null;\n    }\n    namedTypeToNameForTopLevel(type) {\n        // If the top-level type doesn't contain any classes or unions\n        // we have to define a class just for the `FromJson` method, in\n        // emitFromJsonForTopLevel.\n        return (0, TypeUtils_1.directlyReachableSingleNamedType)(type);\n    }\n    makeNamesForPropertyGetterAndSetter(_c, _className, _p, _jsonName, name) {\n        const getterName = new Naming_1.DependencyName(this.getNameStyling(\"propertyNamingFunction\"), name.order, lookup => `get_${lookup(name)}`);\n        const setterName = new Naming_1.DependencyName(this.getNameStyling(\"propertyNamingFunction\"), name.order, lookup => `set_${lookup(name)}`);\n        return [getterName, setterName];\n    }\n    makePropertyDependencyNames(c, className, p, jsonName, name) {\n        const getterAndSetterNames = this.makeNamesForPropertyGetterAndSetter(c, className, p, jsonName, name);\n        this._gettersAndSettersForPropertyName.set(name, getterAndSetterNames);\n        return getterAndSetterNames;\n    }\n    getNameStyling(convention) {\n        const styling = {\n            typeNamingFunction: (0, Naming_1.funPrefixNamer)(\"types\", n => javaNameStyle(true, false, n, (0, Acronyms_1.acronymStyle)(this._options.acronymStyle))),\n            propertyNamingFunction: (0, Naming_1.funPrefixNamer)(\"properties\", n => javaNameStyle(false, false, n, (0, Acronyms_1.acronymStyle)(this._options.acronymStyle))),\n            enumCaseNamingFunction: (0, Naming_1.funPrefixNamer)(\"enum-cases\", n => javaNameStyle(true, true, n, (0, Acronyms_1.acronymStyle)(this._options.acronymStyle)))\n        };\n        return styling[convention];\n    }\n    fieldOrMethodName(methodName, topLevelName) {\n        if (this.topLevels.size === 1) {\n            return methodName;\n        }\n        return [topLevelName, (0, Strings_1.capitalize)(methodName)];\n    }\n    methodName(prefix, suffix, topLevelName) {\n        if (this.topLevels.size === 1) {\n            return [prefix, suffix];\n        }\n        return [prefix, topLevelName, suffix];\n    }\n    decoderName(topLevelName) {\n        return this.fieldOrMethodName(\"fromJsonString\", topLevelName);\n    }\n    encoderName(topLevelName) {\n        return this.fieldOrMethodName(\"toJsonString\", topLevelName);\n    }\n    readerGetterName(topLevelName) {\n        return this.methodName(\"get\", \"ObjectReader\", topLevelName);\n    }\n    writerGetterName(topLevelName) {\n        return this.methodName(\"get\", \"ObjectWriter\", topLevelName);\n    }\n    startFile(basename) {\n        (0, Support_1.assert)(this._currentFilename === undefined, \"Previous file wasn't finished\");\n        // FIXME: The filenames should actually be Sourcelikes, too\n        this._currentFilename = `${this.sourcelikeToString(basename)}.java`;\n        // FIXME: Why is this necessary?\n        this.ensureBlankLine();\n        if (!this._haveEmittedLeadingComments && this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n            this.ensureBlankLine();\n            this._haveEmittedLeadingComments = true;\n        }\n    }\n    finishFile() {\n        super.finishFile((0, Support_1.defined)(this._currentFilename));\n        this._currentFilename = undefined;\n    }\n    emitPackageAndImports(imports) {\n        this.emitLine(\"package \", this._options.packageName, \";\");\n        this.ensureBlankLine();\n        for (const pkg of imports) {\n            this.emitLine(\"import \", pkg, \";\");\n        }\n    }\n    emitFileHeader(fileName, imports) {\n        this.startFile(fileName);\n        this.emitPackageAndImports(imports);\n        this.ensureBlankLine();\n    }\n    emitDescriptionBlock(lines) {\n        this.emitCommentLines(lines, { lineStart: \" * \", beforeComment: \"/**\", afterComment: \" */\" });\n    }\n    emitBlock(line, f) {\n        this.emitLine(line, \" {\");\n        this.indent(f);\n        this.emitLine(\"}\");\n    }\n    emitTryCatch(main, handler, exception = \"Exception\") {\n        this.emitLine(\"try {\");\n        this.indent(main);\n        this.emitLine(\"} catch (\", exception, \" ex) {\");\n        this.indent(handler);\n        this.emitLine(\"}\");\n    }\n    emitIgnoredTryCatchBlock(f) {\n        this.emitTryCatch(f, () => this.emitLine(\"// Ignored\"));\n    }\n    javaType(reference, t, withIssues = false) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.anyTypeIssueAnnotation, \"Object\"), _nullType => (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.nullTypeIssueAnnotation, \"Object\"), _boolType => (reference ? \"Boolean\" : \"boolean\"), _integerType => (reference ? \"Long\" : \"long\"), _doubleType => (reference ? \"Double\" : \"double\"), _stringType => \"String\", arrayType => {\n            if (this._options.useList) {\n                return [\"List<\", this.javaType(true, arrayType.items, withIssues), \">\"];\n            }\n            else {\n                return [this.javaType(false, arrayType.items, withIssues), \"[]\"];\n            }\n        }, classType => this.nameForNamedType(classType), mapType => [\"Map<String, \", this.javaType(true, mapType.values, withIssues), \">\"], enumType => this.nameForNamedType(enumType), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null)\n                return this.javaType(true, nullable, withIssues);\n            return this.nameForNamedType(unionType);\n        }, transformedStringType => {\n            if (transformedStringType.kind === \"time\") {\n                return this._dateTimeProvider.timeType;\n            }\n            if (transformedStringType.kind === \"date\") {\n                return this._dateTimeProvider.dateType;\n            }\n            if (transformedStringType.kind === \"date-time\") {\n                return this._dateTimeProvider.dateTimeType;\n            }\n            if (transformedStringType.kind === \"uuid\") {\n                return \"UUID\";\n            }\n            return \"String\";\n        });\n    }\n    javaImport(t) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => [], _nullType => [], _boolType => [], _integerType => [], _doubleType => [], _stringType => [], arrayType => {\n            if (this._options.useList) {\n                return [...this.javaImport(arrayType.items), \"java.util.List\"];\n            }\n            else {\n                return [...this.javaImport(arrayType.items)];\n            }\n        }, _classType => [], mapType => [...this.javaImport(mapType.values), \"java.util.Map\"], _enumType => [], unionType => {\n            const imports = [];\n            unionType.members.forEach(type => this.javaImport(type).forEach(imp => imports.push(imp)));\n            return imports;\n        }, transformedStringType => {\n            if (transformedStringType.kind === \"time\") {\n                return this._dateTimeProvider.timeImports;\n            }\n            if (transformedStringType.kind === \"date\") {\n                return this._dateTimeProvider.dateImports;\n            }\n            if (transformedStringType.kind === \"date-time\") {\n                return this._dateTimeProvider.dateTimeImports;\n            }\n            if (transformedStringType.kind === \"uuid\") {\n                return [\"java.util.UUID\"];\n            }\n            return [];\n        });\n    }\n    javaTypeWithoutGenerics(reference, t) {\n        if (t instanceof Type_1.ArrayType) {\n            if (this._options.useList) {\n                return [\"List\"];\n            }\n            else {\n                return [this.javaTypeWithoutGenerics(false, t.items), \"[]\"];\n            }\n        }\n        else if (t instanceof Type_1.MapType) {\n            return \"Map\";\n        }\n        else if (t instanceof Type_1.UnionType) {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(t);\n            if (nullable !== null)\n                return this.javaTypeWithoutGenerics(true, nullable);\n            return this.nameForNamedType(t);\n        }\n        else {\n            return this.javaType(reference, t);\n        }\n    }\n    emitClassAttributes(_c, _className) {\n        if (this._options.lombok) {\n            this.emitLine(\"@lombok.Data\");\n        }\n    }\n    annotationsForAccessor(_c, _className, _propertyName, _jsonName, _p, _isSetter) {\n        return [];\n    }\n    importsForType(t) {\n        if (t instanceof Type_1.ClassType) {\n            return [];\n        }\n        if (t instanceof Type_1.UnionType) {\n            return [\"java.io.IOException\"];\n        }\n        if (t instanceof Type_1.EnumType) {\n            return [\"java.io.IOException\"];\n        }\n        return (0, Support_1.assertNever)(t);\n    }\n    importsForClass(c) {\n        const imports = [];\n        this.forEachClassProperty(c, \"none\", (_name, _jsonName, p) => {\n            this.javaImport(p.type).forEach(imp => imports.push(imp));\n        });\n        imports.sort();\n        return [...new Set(imports)];\n    }\n    importsForUnionMembers(u) {\n        const imports = [];\n        const [, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(u);\n        this.forEachUnionMember(u, nonNulls, \"none\", null, (_fieldName, t) => {\n            this.javaImport(t).forEach(imp => imports.push(imp));\n        });\n        imports.sort();\n        return [...new Set(imports)];\n    }\n    emitClassDefinition(c, className) {\n        let imports = [...this.importsForType(c), ...this.importsForClass(c)];\n        this.emitFileHeader(className, imports);\n        this.emitDescription(this.descriptionForType(c));\n        this.emitClassAttributes(c, className);\n        this.emitBlock([\"public class \", className], () => {\n            this.forEachClassProperty(c, \"none\", (name, jsonName, p) => {\n                if (this._options.lombok && this._options.lombokCopyAnnotations) {\n                    const getter = this.annotationsForAccessor(c, className, name, jsonName, p, false);\n                    const setter = this.annotationsForAccessor(c, className, name, jsonName, p, true);\n                    if (getter.length !== 0) {\n                        this.emitLine(\"@lombok.Getter(onMethod_ = {\" + getter.join(\", \") + \"})\");\n                    }\n                    if (setter.length !== 0) {\n                        this.emitLine(\"@lombok.Setter(onMethod_ = {\" + setter.join(\", \") + \"})\");\n                    }\n                }\n                this.emitLine(\"private \", this.javaType(false, p.type, true), \" \", name, \";\");\n            });\n            if (!this._options.lombok) {\n                this.forEachClassProperty(c, \"leading-and-interposing\", (name, jsonName, p) => {\n                    this.emitDescription(this.descriptionForClassProperty(c, jsonName));\n                    const [getterName, setterName] = (0, Support_1.defined)(this._gettersAndSettersForPropertyName.get(name));\n                    const rendered = this.javaType(false, p.type);\n                    this.annotationsForAccessor(c, className, name, jsonName, p, false).forEach(annotation => this.emitLine(annotation));\n                    this.emitLine(\"public \", rendered, \" \", getterName, \"() { return \", name, \"; }\");\n                    this.annotationsForAccessor(c, className, name, jsonName, p, true).forEach(annotation => this.emitLine(annotation));\n                    this.emitLine(\"public void \", setterName, \"(\", rendered, \" value) { this.\", name, \" = value; }\");\n                });\n            }\n        });\n        this.finishFile();\n    }\n    unionField(u, t, withIssues = false) {\n        const fieldType = this.javaType(true, t, withIssues);\n        // FIXME: \"Value\" should be part of the name.\n        const fieldName = [this.nameForUnionMember(u, t), \"Value\"];\n        return { fieldType, fieldName };\n    }\n    emitUnionAttributes(_u, _unionName) {\n        // empty\n    }\n    emitUnionSerializer(_u, _unionName) {\n        // empty\n    }\n    emitUnionDefinition(u, unionName) {\n        const imports = [...this.importsForType(u), ...this.importsForUnionMembers(u)];\n        this.emitFileHeader(unionName, imports);\n        this.emitDescription(this.descriptionForType(u));\n        const [, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(u);\n        this.emitUnionAttributes(u, unionName);\n        this.emitBlock([\"public class \", unionName], () => {\n            for (const t of nonNulls) {\n                const { fieldType, fieldName } = this.unionField(u, t, true);\n                this.emitLine(\"public \", fieldType, \" \", fieldName, \";\");\n            }\n            this.emitUnionSerializer(u, unionName);\n        });\n        this.finishFile();\n    }\n    emitEnumSerializationAttributes(_e) {\n        // Empty\n    }\n    emitEnumDeserializationAttributes(_e) {\n        // Empty\n    }\n    emitEnumDefinition(e, enumName) {\n        this.emitFileHeader(enumName, this.importsForType(e));\n        this.emitDescription(this.descriptionForType(e));\n        const caseNames = [];\n        this.forEachEnumCase(e, \"none\", name => {\n            if (caseNames.length > 0)\n                caseNames.push(\", \");\n            caseNames.push(name);\n        });\n        caseNames.push(\";\");\n        this.emitBlock([\"public enum \", enumName], () => {\n            this.emitLine(caseNames);\n            this.ensureBlankLine();\n            this.emitEnumSerializationAttributes(e);\n            this.emitBlock(\"public String toValue()\", () => {\n                this.emitLine(\"switch (this) {\");\n                this.indent(() => {\n                    this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n                        this.emitLine(\"case \", name, ': return \"', (0, exports.stringEscape)(jsonName), '\";');\n                    });\n                });\n                this.emitLine(\"}\");\n                this.emitLine(\"return null;\");\n            });\n            this.ensureBlankLine();\n            this.emitEnumDeserializationAttributes(e);\n            this.emitBlock([\"public static \", enumName, \" forValue(String value) throws IOException\"], () => {\n                this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n                    this.emitLine('if (value.equals(\"', (0, exports.stringEscape)(jsonName), '\")) return ', name, \";\");\n                });\n                this.emitLine('throw new IOException(\"Cannot deserialize ', enumName, '\");');\n            });\n        });\n        this.finishFile();\n    }\n    emitSourceStructure() {\n        this.forEachNamedType(\"leading-and-interposing\", (c, n) => this.emitClassDefinition(c, n), (e, n) => this.emitEnumDefinition(e, n), (u, n) => this.emitUnionDefinition(u, n));\n    }\n}\nexports.JavaRenderer = JavaRenderer;\nclass JacksonRenderer extends JavaRenderer {\n    constructor(targetLanguage, renderContext, options) {\n        super(targetLanguage, renderContext, options);\n        this._converterKeywords = [\n            \"JsonProperty\",\n            \"JsonDeserialize\",\n            \"JsonDeserializer\",\n            \"JsonSerialize\",\n            \"JsonSerializer\",\n            \"JsonParser\",\n            \"JsonProcessingException\",\n            \"DeserializationContext\",\n            \"SerializerProvider\"\n        ];\n    }\n    emitClassAttributes(c, _className) {\n        if (c.getProperties().size === 0)\n            this.emitLine(\"@JsonAutoDetect(fieldVisibility=JsonAutoDetect.Visibility.NONE)\");\n        super.emitClassAttributes(c, _className);\n    }\n    annotationsForAccessor(_c, _className, _propertyName, jsonName, p, _isSetter) {\n        const superAnnotations = super.annotationsForAccessor(_c, _className, _propertyName, jsonName, p, _isSetter);\n        const annotations = ['@JsonProperty(\"' + (0, exports.stringEscape)(jsonName) + '\")'];\n        switch (p.type.kind) {\n            case \"date-time\":\n                this._dateTimeProvider.dateTimeJacksonAnnotations.forEach(annotation => annotations.push(annotation));\n                break;\n            case \"date\":\n                this._dateTimeProvider.dateJacksonAnnotations.forEach(annotation => annotations.push(annotation));\n                break;\n            case \"time\":\n                this._dateTimeProvider.timeJacksonAnnotations.forEach(annotation => annotations.push(annotation));\n                break;\n            default:\n                break;\n        }\n        return [...superAnnotations, ...annotations];\n    }\n    importsForType(t) {\n        if (t instanceof Type_1.ClassType) {\n            const imports = super.importsForType(t);\n            imports.push(\"com.fasterxml.jackson.annotation.*\");\n            return imports;\n        }\n        if (t instanceof Type_1.UnionType) {\n            const imports = super.importsForType(t);\n            imports.push(\"java.io.IOException\", \"com.fasterxml.jackson.core.*\", \"com.fasterxml.jackson.databind.*\", \"com.fasterxml.jackson.databind.annotation.*\");\n            if (this._options.useList) {\n                imports.push(\"com.fasterxml.jackson.core.type.*\");\n            }\n            return imports;\n        }\n        if (t instanceof Type_1.EnumType) {\n            const imports = super.importsForType(t);\n            imports.push(\"com.fasterxml.jackson.annotation.*\");\n            return imports;\n        }\n        return (0, Support_1.assertNever)(t);\n    }\n    emitUnionAttributes(_u, unionName) {\n        this.emitLine(\"@JsonDeserialize(using = \", unionName, \".Deserializer.class)\");\n        this.emitLine(\"@JsonSerialize(using = \", unionName, \".Serializer.class)\");\n    }\n    emitUnionSerializer(u, unionName) {\n        const stringBasedObjects = [\"uuid\", \"time\", \"date\", \"date-time\"];\n        const tokenCase = (tokenType) => {\n            this.emitLine(\"case \", tokenType, \":\");\n        };\n        const emitNullDeserializer = () => {\n            this.indent(() => {\n                tokenCase(\"VALUE_NULL\");\n                this.indent(() => this.emitLine(\"break;\"));\n            });\n        };\n        const emitDeserializerCodeForStringObjects = (fieldName, kind, parseFrom) => {\n            switch (kind) {\n                case \"date\":\n                    this.emitLine(\"value.\", fieldName, \" = \", this._dateTimeProvider.convertStringToDate(parseFrom), \";\");\n                    break;\n                case \"time\":\n                    this.emitLine(\"value.\", fieldName, \" = \", this._dateTimeProvider.convertStringToTime(parseFrom), \";\");\n                    break;\n                case \"date-time\":\n                    this.emitLine(\"value.\", fieldName, \" = \", this._dateTimeProvider.convertStringToDateTime(parseFrom), \";\");\n                    break;\n                case \"uuid\":\n                    this.emitLine(\"value.\", fieldName, \" = UUID.fromString(\", parseFrom, \");\");\n                    break;\n                default:\n                    return (0, Support_1.panic)(\"Requested type isnt an object!\");\n            }\n        };\n        const emitDeserializeType = (t, variableFieldName = \"\") => {\n            const { fieldName } = this.unionField(u, t);\n            const rendered = this.javaTypeWithoutGenerics(true, t);\n            if (this._options.useList && t instanceof Type_1.ArrayType) {\n                this.emitLine(\"value.\", fieldName, \" = jsonParser.readValueAs(new TypeReference<\", rendered, \">() {});\");\n            }\n            else if (stringBasedObjects.some(stringBasedTypeKind => t.kind === stringBasedTypeKind)) {\n                emitDeserializerCodeForStringObjects(fieldName, t.kind, variableFieldName);\n            }\n            else if (t.kind === \"string\") {\n                this.emitLine(\"value.\", fieldName, \" = \", variableFieldName, \";\");\n            }\n            else if (t.kind === \"enum\") {\n                const { fieldType } = this.unionField(u, t, true);\n                this.emitLine(\"value.\", fieldName, \" = \", fieldType, \".forValue(\", variableFieldName, \");\");\n            }\n            else {\n                this.emitLine(\"value.\", fieldName, \" = jsonParser.readValueAs(\", rendered, \".class);\");\n            }\n        };\n        const emitDeserializer = (tokenTypes, kind) => {\n            const t = u.findMember(kind);\n            if (t === undefined)\n                return;\n            this.indent(() => {\n                for (const tokenType of tokenTypes) {\n                    tokenCase(tokenType);\n                }\n                this.indent(() => {\n                    emitDeserializeType(t);\n                    this.emitLine(\"break;\");\n                });\n            });\n        };\n        const emitStringDeserializer = () => {\n            const enumType = u.findMember(\"enum\");\n            const stringType = u.findMember(\"string\");\n            if (stringBasedObjects.every(kind => u.findMember(kind) === undefined) &&\n                stringType === undefined &&\n                enumType === undefined)\n                return;\n            this.indent(() => {\n                tokenCase(\"VALUE_STRING\");\n                this.indent(() => {\n                    const fromVariable = \"string\";\n                    this.emitLine(\"String \" + fromVariable + \" = jsonParser.readValueAs(String.class);\");\n                    stringBasedObjects.forEach(kind => {\n                        const type = u.findMember(kind);\n                        if (type !== undefined) {\n                            this.emitIgnoredTryCatchBlock(() => {\n                                emitDeserializeType(type, fromVariable);\n                            });\n                        }\n                    });\n                    if (enumType !== undefined) {\n                        this.emitIgnoredTryCatchBlock(() => {\n                            emitDeserializeType(enumType, fromVariable);\n                        });\n                    }\n                    // String should be the last one if exists, because it cannot fail, unlike the parsers.\n                    if (stringType !== undefined) {\n                        emitDeserializeType(stringType, fromVariable);\n                    }\n                    this.emitLine(\"break;\");\n                });\n            });\n        };\n        const emitNumberDeserializer = () => {\n            const integerType = u.findMember(\"integer\");\n            const doubleType = u.findMember(\"double\");\n            if (doubleType === undefined && integerType === undefined)\n                return;\n            this.indent(() => {\n                tokenCase(\"VALUE_NUMBER_INT\");\n                if (integerType !== undefined) {\n                    this.indent(() => {\n                        emitDeserializeType(integerType);\n                        this.emitLine(\"break;\");\n                    });\n                }\n                if (doubleType !== undefined) {\n                    tokenCase(\"VALUE_NUMBER_FLOAT\");\n                    this.indent(() => {\n                        emitDeserializeType(doubleType);\n                        this.emitLine(\"break;\");\n                    });\n                }\n            });\n        };\n        const customObjectSerializer = [\"time\", \"date\", \"date-time\"];\n        const serializerCodeForType = (type, fieldName) => {\n            switch (type.kind) {\n                case \"date\":\n                    return this._dateTimeProvider.convertDateToString(fieldName);\n                case \"time\":\n                    return this._dateTimeProvider.convertTimeToString(fieldName);\n                case \"date-time\":\n                    return this._dateTimeProvider.convertDateTimeToString(fieldName);\n                default:\n                    return (0, Support_1.panic)(\"Requested type doesn't have custom serializer code!\");\n            }\n        };\n        const emitSerializeType = (t) => {\n            let { fieldName } = this.unionField(u, t, true);\n            this.emitBlock([\"if (obj.\", fieldName, \" != null)\"], () => {\n                if (customObjectSerializer.some(customSerializerType => t.kind === customSerializerType)) {\n                    this.emitLine(\"jsonGenerator.writeObject(\", serializerCodeForType(t, [\"obj.\", fieldName]), \");\");\n                }\n                else {\n                    this.emitLine(\"jsonGenerator.writeObject(obj.\", fieldName, \");\");\n                }\n                this.emitLine(\"return;\");\n            });\n        };\n        const [maybeNull, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(u);\n        this.ensureBlankLine();\n        this.emitBlock([\"static class Deserializer extends JsonDeserializer<\", unionName, \">\"], () => {\n            this.emitLine(\"@Override\");\n            this.emitBlock([\n                \"public \",\n                unionName,\n                \" deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException, JsonProcessingException\"\n            ], () => {\n                this.emitLine(unionName, \" value = new \", unionName, \"();\");\n                this.emitLine(\"switch (jsonParser.currentToken()) {\");\n                if (maybeNull !== null)\n                    emitNullDeserializer();\n                emitNumberDeserializer();\n                emitDeserializer([\"VALUE_TRUE\", \"VALUE_FALSE\"], \"bool\");\n                emitStringDeserializer();\n                emitDeserializer([\"START_ARRAY\"], \"array\");\n                emitDeserializer([\"START_OBJECT\"], \"class\");\n                emitDeserializer([\"START_OBJECT\"], \"map\");\n                this.indent(() => this.emitLine('default: throw new IOException(\"Cannot deserialize ', unionName, '\");'));\n                this.emitLine(\"}\");\n                this.emitLine(\"return value;\");\n            });\n        });\n        this.ensureBlankLine();\n        this.emitBlock([\"static class Serializer extends JsonSerializer<\", unionName, \">\"], () => {\n            this.emitLine(\"@Override\");\n            this.emitBlock([\n                \"public void serialize(\",\n                unionName,\n                \" obj, JsonGenerator jsonGenerator, SerializerProvider serializerProvider) throws IOException\"\n            ], () => {\n                for (const t of nonNulls) {\n                    emitSerializeType(t);\n                }\n                if (maybeNull !== null) {\n                    this.emitLine(\"jsonGenerator.writeNull();\");\n                }\n                else {\n                    this.emitLine('throw new IOException(\"', unionName, ' must not be null\");');\n                }\n            });\n        });\n    }\n    emitEnumSerializationAttributes(_e) {\n        this.emitLine(\"@JsonValue\");\n    }\n    emitEnumDeserializationAttributes(_e) {\n        this.emitLine(\"@JsonCreator\");\n    }\n    emitOffsetDateTimeConverterModule() {\n        this.emitLine(\"SimpleModule module = new SimpleModule();\");\n        if (this._dateTimeProvider.shouldEmitDateTimeConverter) {\n            this.emitLine(\"module.addDeserializer(\", this._dateTimeProvider.dateTimeType, \".class, new JsonDeserializer<\", this._dateTimeProvider.dateTimeType, \">() {\");\n            this.indent(() => {\n                this.emitLine(\"@Override\");\n                this.emitBlock([\n                    \"public \",\n                    this._dateTimeProvider.dateTimeType,\n                    \" deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) \",\n                    \"throws IOException, JsonProcessingException\"\n                ], () => {\n                    this.emitLine(\"String value = jsonParser.getText();\");\n                    this.emitLine(\"return \", this._dateTimeProvider.convertStringToDateTime(\"value\"), \";\");\n                });\n            });\n            this.emitLine(\"});\");\n        }\n        if (!this._dateTimeProvider.shouldEmitTimeConverter) {\n            this.emitLine(\"module.addDeserializer(\", this._dateTimeProvider.timeType, \".class, new JsonDeserializer<\", this._dateTimeProvider.timeType, \">() {\");\n            this.indent(() => {\n                this.emitLine(\"@Override\");\n                this.emitBlock([\n                    \"public \",\n                    this._dateTimeProvider.timeType,\n                    \" deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) \",\n                    \"throws IOException, JsonProcessingException\"\n                ], () => {\n                    this.emitLine(\"String value = jsonParser.getText();\");\n                    this.emitLine(\"return \", this._dateTimeProvider.convertStringToTime(\"value\"), \";\");\n                });\n            });\n            this.emitLine(\"});\");\n        }\n        if (!this._dateTimeProvider.shouldEmitDateConverter) {\n            this.emitLine(\"module.addDeserializer(\", this._dateTimeProvider.dateType, \".class, new JsonDeserializer<\", this._dateTimeProvider.dateType, \">() {\");\n            this.indent(() => {\n                this.emitLine(\"@Override\");\n                this.emitBlock([\n                    \"public \",\n                    this._dateTimeProvider.dateType,\n                    \" deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) \",\n                    \"throws IOException, JsonProcessingException\"\n                ], () => {\n                    this.emitLine(\"String value = jsonParser.getText();\");\n                    this.emitLine(\"return \", this._dateTimeProvider.convertStringToDate(\"value\"), \";\");\n                });\n            });\n            this.emitLine(\"});\");\n        }\n        this.emitLine(\"mapper.registerModule(module);\");\n    }\n    emitConverterClass() {\n        this.startFile(this._converterClassname);\n        this.emitCommentLines([\n            \"To use this code, add the following Maven dependency to your project:\",\n            \"\",\n            this._options.lombok ? \"    org.projectlombok : lombok : 1.18.2\" : \"\",\n            \"    com.fasterxml.jackson.core     : jackson-databind          : 2.9.0\",\n            this._options.dateTimeProvider === \"java8\"\n                ? \"    com.fasterxml.jackson.datatype : jackson-datatype-jsr310   : 2.9.0\"\n                : \"\",\n            \"\",\n            \"Import this package:\",\n            \"\"\n        ]);\n        this.emitLine(\"//     import \", this._options.packageName, \".Converter;\");\n        this.emitMultiline(`//\n// Then you can deserialize a JSON string with\n//`);\n        this.forEachTopLevel(\"none\", (t, name) => {\n            this.emitLine(\"//     \", this.javaType(false, t), \" data = Converter.\", this.decoderName(name), \"(jsonString);\");\n        });\n        this.ensureBlankLine();\n        const imports = [\n            \"java.io.IOException\",\n            \"com.fasterxml.jackson.databind.*\",\n            \"com.fasterxml.jackson.databind.module.SimpleModule\",\n            \"com.fasterxml.jackson.core.JsonParser\",\n            \"com.fasterxml.jackson.core.JsonProcessingException\",\n            \"java.util.*\"\n        ].concat(this._dateTimeProvider.converterImports);\n        this.emitPackageAndImports(imports);\n        this.ensureBlankLine();\n        this.emitBlock([\"public class Converter\"], () => {\n            this.emitLine(\"// Date-time helpers\");\n            this._dateTimeProvider.emitDateTimeConverters();\n            this.emitLine(\"// Serialize/deserialize helpers\");\n            this.forEachTopLevel(\"leading-and-interposing\", (topLevelType, topLevelName) => {\n                const topLevelTypeRendered = this.javaType(false, topLevelType);\n                this.emitBlock([\n                    \"public static \",\n                    topLevelTypeRendered,\n                    \" \",\n                    this.decoderName(topLevelName),\n                    \"(String json) throws IOException\"\n                ], () => {\n                    this.emitLine(\"return \", this.readerGetterName(topLevelName), \"().readValue(json);\");\n                });\n                this.ensureBlankLine();\n                this.emitBlock([\n                    \"public static String \",\n                    this.encoderName(topLevelName),\n                    \"(\",\n                    topLevelTypeRendered,\n                    \" obj) throws JsonProcessingException\"\n                ], () => {\n                    this.emitLine(\"return \", this.writerGetterName(topLevelName), \"().writeValueAsString(obj);\");\n                });\n            });\n            this.forEachTopLevel(\"leading-and-interposing\", (topLevelType, topLevelName) => {\n                const readerName = this.fieldOrMethodName(\"reader\", topLevelName);\n                const writerName = this.fieldOrMethodName(\"writer\", topLevelName);\n                this.emitLine(\"private static ObjectReader \", readerName, \";\");\n                this.emitLine(\"private static ObjectWriter \", writerName, \";\");\n                this.ensureBlankLine();\n                this.emitBlock([\"private static void \", this.methodName(\"instantiate\", \"Mapper\", topLevelName), \"()\"], () => {\n                    const renderedForClass = this.javaTypeWithoutGenerics(false, topLevelType);\n                    this.emitLine(\"ObjectMapper mapper = new ObjectMapper();\");\n                    this.emitLine(\"mapper.findAndRegisterModules();\");\n                    this.emitLine(\"mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\");\n                    this.emitLine(\"mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);\");\n                    this.emitOffsetDateTimeConverterModule();\n                    this.emitLine(readerName, \" = mapper.readerFor(\", renderedForClass, \".class);\");\n                    this.emitLine(writerName, \" = mapper.writerFor(\", renderedForClass, \".class);\");\n                });\n                this.ensureBlankLine();\n                this.emitBlock([\"private static ObjectReader \", this.readerGetterName(topLevelName), \"()\"], () => {\n                    this.emitLine(\"if (\", readerName, \" == null) \", this.methodName(\"instantiate\", \"Mapper\", topLevelName), \"();\");\n                    this.emitLine(\"return \", readerName, \";\");\n                });\n                this.ensureBlankLine();\n                this.emitBlock([\"private static ObjectWriter \", this.writerGetterName(topLevelName), \"()\"], () => {\n                    this.emitLine(\"if (\", writerName, \" == null) \", this.methodName(\"instantiate\", \"Mapper\", topLevelName), \"();\");\n                    this.emitLine(\"return \", writerName, \";\");\n                });\n            });\n        });\n        this.finishFile();\n    }\n    emitSourceStructure() {\n        this.emitConverterClass();\n        super.emitSourceStructure();\n    }\n}\nexports.JacksonRenderer = JacksonRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertersOption = exports.ConvertersOptions = void 0;\nconst RendererOptions_1 = require(\"../RendererOptions\");\nvar ConvertersOptions;\n(function (ConvertersOptions) {\n    ConvertersOptions[\"TopLevel\"] = \"top-level\";\n    ConvertersOptions[\"AllObjects\"] = \"all-objects\";\n})(ConvertersOptions = exports.ConvertersOptions || (exports.ConvertersOptions = {}));\nfunction convertersOption() {\n    return new RendererOptions_1.EnumOption(\"converters\", \"Which converters to generate (top-level by default)\", [\n        [ConvertersOptions.TopLevel, ConvertersOptions.TopLevel],\n        [ConvertersOptions.AllObjects, ConvertersOptions.AllObjects]\n    ], ConvertersOptions.TopLevel, \"secondary\");\n}\nexports.convertersOption = convertersOption;\n","\"use strict\";\n// Taken from https://github.com/Microsoft/TypeScript\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isES3IdentifierPart = exports.isES3IdentifierStart = void 0;\nfunction lookupInUnicodeMap(code, map) {\n    // Bail out quickly if it couldn't possibly be in the map.\n    if (code < map[0]) {\n        return false;\n    }\n    // Perform binary search in one of the Unicode range maps\n    let lo = 0;\n    let hi = map.length;\n    let mid;\n    while (lo + 1 < hi) {\n        mid = lo + (hi - lo) / 2;\n        // mid has to be even to catch a range's beginning\n        mid -= mid % 2;\n        if (map[mid] <= code && code <= map[mid + 1]) {\n            return true;\n        }\n        if (code < map[mid]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 2;\n        }\n    }\n    return false;\n}\nfunction isES3IdentifierStart(ch) {\n    return ((ch >= 65 /* CharacterCodes.A */ && ch <= 90 /* CharacterCodes.Z */) ||\n        (ch >= 97 /* CharacterCodes.a */ && ch <= 122 /* CharacterCodes.z */) ||\n        ch === 36 /* CharacterCodes.$ */ ||\n        ch === 95 /* CharacterCodes._ */ ||\n        (ch > 127 /* CharacterCodes.maxAsciiCharacter */ && lookupInUnicodeMap(ch, unicodeES3IdentifierStart)));\n}\nexports.isES3IdentifierStart = isES3IdentifierStart;\nfunction isES3IdentifierPart(ch) {\n    return ((ch >= 65 /* CharacterCodes.A */ && ch <= 90 /* CharacterCodes.Z */) ||\n        (ch >= 97 /* CharacterCodes.a */ && ch <= 122 /* CharacterCodes.z */) ||\n        (ch >= 48 /* CharacterCodes._0 */ && ch <= 57 /* CharacterCodes._9 */) ||\n        ch === 36 /* CharacterCodes.$ */ ||\n        ch === 95 /* CharacterCodes._ */ ||\n        (ch > 127 /* CharacterCodes.maxAsciiCharacter */ && lookupInUnicodeMap(ch, unicodeES3IdentifierPart)));\n}\nexports.isES3IdentifierPart = isES3IdentifierPart;\n/*\n    As per ECMAScript Language Specification 3th Edition, Section 7.6: Identifiers\n    IdentifierStart ::\n        Can contain Unicode 3.0.0 categories:\n        Uppercase letter (Lu),\n        Lowercase letter (Ll),\n        Titlecase letter (Lt),\n        Modifier letter (Lm),\n        Other letter (Lo), or\n        Letter number (Nl).\n    IdentifierPart :: =\n        Can contain IdentifierStart + Unicode 3.0.0 categories:\n        Non-spacing mark (Mn),\n        Combining spacing mark (Mc),\n        Decimal number (Nd), or\n        Connector punctuation (Pc).\n    Codepoint ranges for ES3 Identifiers are extracted from the Unicode 3.0.0 specification at:\n    http://www.unicode.org/Public/3.0-Update/UnicodeData-3.0.0.txt\n*/\nconst unicodeES3IdentifierStart = [\n    170, 170, 181, 181, 186, 186, 192, 214, 216, 246, 248, 543, 546, 563, 592, 685, 688, 696, 699, 705, 720, 721, 736,\n    740, 750, 750, 890, 890, 902, 902, 904, 906, 908, 908, 910, 929, 931, 974, 976, 983, 986, 1011, 1024, 1153, 1164,\n    1220, 1223, 1224, 1227, 1228, 1232, 1269, 1272, 1273, 1329, 1366, 1369, 1369, 1377, 1415, 1488, 1514, 1520, 1522,\n    1569, 1594, 1600, 1610, 1649, 1747, 1749, 1749, 1765, 1766, 1786, 1788, 1808, 1808, 1810, 1836, 1920, 1957, 2309,\n    2361, 2365, 2365, 2384, 2384, 2392, 2401, 2437, 2444, 2447, 2448, 2451, 2472, 2474, 2480, 2482, 2482, 2486, 2489,\n    2524, 2525, 2527, 2529, 2544, 2545, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616,\n    2617, 2649, 2652, 2654, 2654, 2674, 2676, 2693, 2699, 2701, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739,\n    2741, 2745, 2749, 2749, 2768, 2768, 2784, 2784, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2870,\n    2873, 2877, 2877, 2908, 2909, 2911, 2913, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2972, 2972, 2974, 2975,\n    2979, 2980, 2984, 2986, 2990, 2997, 2999, 3001, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3123, 3125, 3129, 3168,\n    3169, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3294, 3294, 3296, 3297, 3333, 3340, 3342, 3344,\n    3346, 3368, 3370, 3385, 3424, 3425, 3461, 3478, 3482, 3505, 3507, 3515, 3517, 3517, 3520, 3526, 3585, 3632, 3634,\n    3635, 3648, 3654, 3713, 3714, 3716, 3716, 3719, 3720, 3722, 3722, 3725, 3725, 3732, 3735, 3737, 3743, 3745, 3747,\n    3749, 3749, 3751, 3751, 3754, 3755, 3757, 3760, 3762, 3763, 3773, 3773, 3776, 3780, 3782, 3782, 3804, 3805, 3840,\n    3840, 3904, 3911, 3913, 3946, 3976, 3979, 4096, 4129, 4131, 4135, 4137, 4138, 4176, 4181, 4256, 4293, 4304, 4342,\n    4352, 4441, 4447, 4514, 4520, 4601, 4608, 4614, 4616, 4678, 4680, 4680, 4682, 4685, 4688, 4694, 4696, 4696, 4698,\n    4701, 4704, 4742, 4744, 4744, 4746, 4749, 4752, 4782, 4784, 4784, 4786, 4789, 4792, 4798, 4800, 4800, 4802, 4805,\n    4808, 4814, 4816, 4822, 4824, 4846, 4848, 4878, 4880, 4880, 4882, 4885, 4888, 4894, 4896, 4934, 4936, 4954, 5024,\n    5108, 5121, 5740, 5743, 5750, 5761, 5786, 5792, 5866, 6016, 6067, 6176, 6263, 6272, 6312, 7680, 7835, 7840, 7929,\n    7936, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8025, 8025, 8027, 8027, 8029, 8029, 8031, 8061, 8064,\n    8116, 8118, 8124, 8126, 8126, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180, 8182, 8188,\n    8319, 8319, 8450, 8450, 8455, 8455, 8458, 8467, 8469, 8469, 8473, 8477, 8484, 8484, 8486, 8486, 8488, 8488, 8490,\n    8493, 8495, 8497, 8499, 8505, 8544, 8579, 12293, 12295, 12321, 12329, 12337, 12341, 12344, 12346, 12353, 12436,\n    12445, 12446, 12449, 12538, 12540, 12542, 12549, 12588, 12593, 12686, 12704, 12727, 13312, 19893, 19968, 40869,\n    40960, 42124, 44032, 55203, 63744, 64045, 64256, 64262, 64275, 64279, 64285, 64285, 64287, 64296, 64298, 64310,\n    64312, 64316, 64318, 64318, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829, 64848, 64911, 64914, 64967,\n    65008, 65019, 65136, 65138, 65140, 65140, 65142, 65276, 65313, 65338, 65345, 65370, 65382, 65470, 65474, 65479,\n    65482, 65487, 65490, 65495, 65498, 65500\n];\nconst unicodeES3IdentifierPart = [\n    170, 170, 181, 181, 186, 186, 192, 214, 216, 246, 248, 543, 546, 563, 592, 685, 688, 696, 699, 705, 720, 721, 736,\n    740, 750, 750, 768, 846, 864, 866, 890, 890, 902, 902, 904, 906, 908, 908, 910, 929, 931, 974, 976, 983, 986, 1011,\n    1024, 1153, 1155, 1158, 1164, 1220, 1223, 1224, 1227, 1228, 1232, 1269, 1272, 1273, 1329, 1366, 1369, 1369, 1377,\n    1415, 1425, 1441, 1443, 1465, 1467, 1469, 1471, 1471, 1473, 1474, 1476, 1476, 1488, 1514, 1520, 1522, 1569, 1594,\n    1600, 1621, 1632, 1641, 1648, 1747, 1749, 1756, 1759, 1768, 1770, 1773, 1776, 1788, 1808, 1836, 1840, 1866, 1920,\n    1968, 2305, 2307, 2309, 2361, 2364, 2381, 2384, 2388, 2392, 2403, 2406, 2415, 2433, 2435, 2437, 2444, 2447, 2448,\n    2451, 2472, 2474, 2480, 2482, 2482, 2486, 2489, 2492, 2492, 2494, 2500, 2503, 2504, 2507, 2509, 2519, 2519, 2524,\n    2525, 2527, 2531, 2534, 2545, 2562, 2562, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614,\n    2616, 2617, 2620, 2620, 2622, 2626, 2631, 2632, 2635, 2637, 2649, 2652, 2654, 2654, 2662, 2676, 2689, 2691, 2693,\n    2699, 2701, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739, 2741, 2745, 2748, 2757, 2759, 2761, 2763, 2765,\n    2768, 2768, 2784, 2784, 2790, 2799, 2817, 2819, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2870,\n    2873, 2876, 2883, 2887, 2888, 2891, 2893, 2902, 2903, 2908, 2909, 2911, 2913, 2918, 2927, 2946, 2947, 2949, 2954,\n    2958, 2960, 2962, 2965, 2969, 2970, 2972, 2972, 2974, 2975, 2979, 2980, 2984, 2986, 2990, 2997, 2999, 3001, 3006,\n    3010, 3014, 3016, 3018, 3021, 3031, 3031, 3047, 3055, 3073, 3075, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3123,\n    3125, 3129, 3134, 3140, 3142, 3144, 3146, 3149, 3157, 3158, 3168, 3169, 3174, 3183, 3202, 3203, 3205, 3212, 3214,\n    3216, 3218, 3240, 3242, 3251, 3253, 3257, 3262, 3268, 3270, 3272, 3274, 3277, 3285, 3286, 3294, 3294, 3296, 3297,\n    3302, 3311, 3330, 3331, 3333, 3340, 3342, 3344, 3346, 3368, 3370, 3385, 3390, 3395, 3398, 3400, 3402, 3405, 3415,\n    3415, 3424, 3425, 3430, 3439, 3458, 3459, 3461, 3478, 3482, 3505, 3507, 3515, 3517, 3517, 3520, 3526, 3530, 3530,\n    3535, 3540, 3542, 3542, 3544, 3551, 3570, 3571, 3585, 3642, 3648, 3662, 3664, 3673, 3713, 3714, 3716, 3716, 3719,\n    3720, 3722, 3722, 3725, 3725, 3732, 3735, 3737, 3743, 3745, 3747, 3749, 3749, 3751, 3751, 3754, 3755, 3757, 3769,\n    3771, 3773, 3776, 3780, 3782, 3782, 3784, 3789, 3792, 3801, 3804, 3805, 3840, 3840, 3864, 3865, 3872, 3881, 3893,\n    3893, 3895, 3895, 3897, 3897, 3902, 3911, 3913, 3946, 3953, 3972, 3974, 3979, 3984, 3991, 3993, 4028, 4038, 4038,\n    4096, 4129, 4131, 4135, 4137, 4138, 4140, 4146, 4150, 4153, 4160, 4169, 4176, 4185, 4256, 4293, 4304, 4342, 4352,\n    4441, 4447, 4514, 4520, 4601, 4608, 4614, 4616, 4678, 4680, 4680, 4682, 4685, 4688, 4694, 4696, 4696, 4698, 4701,\n    4704, 4742, 4744, 4744, 4746, 4749, 4752, 4782, 4784, 4784, 4786, 4789, 4792, 4798, 4800, 4800, 4802, 4805, 4808,\n    4814, 4816, 4822, 4824, 4846, 4848, 4878, 4880, 4880, 4882, 4885, 4888, 4894, 4896, 4934, 4936, 4954, 4969, 4977,\n    5024, 5108, 5121, 5740, 5743, 5750, 5761, 5786, 5792, 5866, 6016, 6099, 6112, 6121, 6160, 6169, 6176, 6263, 6272,\n    6313, 7680, 7835, 7840, 7929, 7936, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8025, 8025, 8027, 8027,\n    8029, 8029, 8031, 8061, 8064, 8116, 8118, 8124, 8126, 8126, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160,\n    8172, 8178, 8180, 8182, 8188, 8255, 8256, 8319, 8319, 8400, 8412, 8417, 8417, 8450, 8450, 8455, 8455, 8458, 8467,\n    8469, 8469, 8473, 8477, 8484, 8484, 8486, 8486, 8488, 8488, 8490, 8493, 8495, 8497, 8499, 8505, 8544, 8579, 12293,\n    12295, 12321, 12335, 12337, 12341, 12344, 12346, 12353, 12436, 12441, 12442, 12445, 12446, 12449, 12542, 12549,\n    12588, 12593, 12686, 12704, 12727, 13312, 19893, 19968, 40869, 40960, 42124, 44032, 55203, 63744, 64045, 64256,\n    64262, 64275, 64279, 64285, 64296, 64298, 64310, 64312, 64316, 64318, 64318, 64320, 64321, 64323, 64324, 64326,\n    64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65019, 65056, 65059, 65075, 65076, 65101, 65103, 65136,\n    65138, 65140, 65140, 65142, 65276, 65296, 65305, 65313, 65338, 65343, 65343, 65345, 65370, 65381, 65470, 65474,\n    65479, 65482, 65487, 65490, 65495, 65498, 65500\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JavaScriptRenderer = exports.legalizeName = exports.JavaScriptTargetLanguage = exports.javaScriptOptions = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Acronyms_1 = require(\"../support/Acronyms\");\nconst Converters_1 = require(\"../support/Converters\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Support_1 = require(\"../support/Support\");\nconst Source_1 = require(\"../Source\");\nconst Naming_1 = require(\"../Naming\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst JavaScriptUnicodeMaps_1 = require(\"./JavaScriptUnicodeMaps\");\nexports.javaScriptOptions = {\n    acronymStyle: (0, Acronyms_1.acronymOption)(Acronyms_1.AcronymStyleOptions.Pascal),\n    runtimeTypecheck: new RendererOptions_1.BooleanOption(\"runtime-typecheck\", \"Verify JSON.parse results at runtime\", true),\n    runtimeTypecheckIgnoreUnknownProperties: new RendererOptions_1.BooleanOption(\"runtime-typecheck-ignore-unknown-properties\", \"Ignore unknown properties when verifying at runtime\", false, \"secondary\"),\n    converters: (0, Converters_1.convertersOption)(),\n    rawType: new RendererOptions_1.EnumOption(\"raw-type\", \"Type of raw input (json by default)\", [\n        [\"json\", \"json\"],\n        [\"any\", \"any\"]\n    ], \"json\", \"secondary\")\n};\nclass JavaScriptTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor(displayName = \"JavaScript\", names = [\"javascript\", \"js\", \"jsx\"], extension = \"js\") {\n        super(displayName, names, extension);\n    }\n    getOptions() {\n        return [\n            exports.javaScriptOptions.runtimeTypecheck,\n            exports.javaScriptOptions.runtimeTypecheckIgnoreUnknownProperties,\n            exports.javaScriptOptions.acronymStyle,\n            exports.javaScriptOptions.converters,\n            exports.javaScriptOptions.rawType\n        ];\n    }\n    get stringTypeMapping() {\n        const mapping = new Map();\n        const dateTimeType = \"date-time\";\n        mapping.set(\"date\", dateTimeType);\n        mapping.set(\"date-time\", dateTimeType);\n        return mapping;\n    }\n    get supportsOptionalClassProperties() {\n        return true;\n    }\n    get supportsFullObjectType() {\n        return true;\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        return new JavaScriptRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.javaScriptOptions, untypedOptionValues));\n    }\n}\nexports.JavaScriptTargetLanguage = JavaScriptTargetLanguage;\nexports.legalizeName = (0, Strings_1.utf16LegalizeCharacters)(JavaScriptUnicodeMaps_1.isES3IdentifierPart);\nconst identityNamingFunction = (0, Naming_1.funPrefixNamer)(\"properties\", s => s);\nclass JavaScriptRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _jsOptions) {\n        super(targetLanguage, renderContext);\n        this._jsOptions = _jsOptions;\n    }\n    nameStyle(original, upper) {\n        const acronyms = (0, Acronyms_1.acronymStyle)(this._jsOptions.acronymStyle);\n        const words = (0, Strings_1.splitIntoWords)(original);\n        return (0, Strings_1.combineWords)(words, exports.legalizeName, upper ? Strings_1.firstUpperWordStyle : Strings_1.allLowerWordStyle, Strings_1.firstUpperWordStyle, upper ? s => (0, Strings_1.capitalize)(acronyms(s)) : Strings_1.allLowerWordStyle, acronyms, \"\", JavaScriptUnicodeMaps_1.isES3IdentifierStart);\n    }\n    makeNamedTypeNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"types\", s => this.nameStyle(s, true));\n    }\n    namerForObjectProperty() {\n        return identityNamingFunction;\n    }\n    makeUnionMemberNamer() {\n        return null;\n    }\n    makeEnumCaseNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"enum-cases\", s => this.nameStyle(s, true));\n    }\n    namedTypeToNameForTopLevel(type) {\n        return (0, TypeUtils_1.directlyReachableSingleNamedType)(type);\n    }\n    makeNameForProperty(c, className, p, jsonName, _assignedName) {\n        // Ignore the assigned name\n        return super.makeNameForProperty(c, className, p, jsonName, undefined);\n    }\n    emitDescriptionBlock(lines) {\n        this.emitCommentLines(lines, { lineStart: \" * \", beforeComment: \"/**\", afterComment: \" */\" });\n    }\n    typeMapTypeFor(t) {\n        if ([\"class\", \"object\", \"enum\"].indexOf(t.kind) >= 0) {\n            return ['r(\"', this.nameForNamedType(t), '\")'];\n        }\n        return (0, TypeUtils_1.matchType)(t, _anyType => '\"any\"', _nullType => `null`, _boolType => `true`, _integerType => `0`, _doubleType => `3.14`, _stringType => `\"\"`, arrayType => [\"a(\", this.typeMapTypeFor(arrayType.items), \")\"], _classType => (0, Support_1.panic)(\"We handled this above\"), mapType => [\"m(\", this.typeMapTypeFor(mapType.values), \")\"], _enumType => (0, Support_1.panic)(\"We handled this above\"), unionType => {\n            const children = Array.from(unionType.getChildren()).map((type) => this.typeMapTypeFor(type));\n            return [\"u(\", ...(0, collection_utils_1.arrayIntercalate)(\", \", children), \")\"];\n        }, transformedStringType => {\n            if (transformedStringType.kind === \"date-time\") {\n                return \"Date\";\n            }\n            return `\"\"`;\n        });\n    }\n    typeMapTypeForProperty(p) {\n        const typeMap = this.typeMapTypeFor(p.type);\n        if (!p.isOptional) {\n            return typeMap;\n        }\n        return [\"u(undefined, \", typeMap, \")\"];\n    }\n    emitBlock(source, end, emit) {\n        this.emitLine(source, \"{\");\n        this.indent(emit);\n        this.emitLine(\"}\", end);\n    }\n    emitTypeMap() {\n        const { any: anyAnnotation } = this.typeAnnotations;\n        this.emitBlock(`const typeMap${anyAnnotation} = `, \";\", () => {\n            this.forEachObject(\"none\", (t, name) => {\n                const additionalProperties = t.getAdditionalProperties();\n                const additional = additionalProperties !== undefined ? this.typeMapTypeFor(additionalProperties) : \"false\";\n                this.emitLine('\"', name, '\": o([');\n                this.indent(() => {\n                    this.forEachClassProperty(t, \"none\", (propName, jsonName, property) => {\n                        this.emitLine('{ json: \"', (0, Strings_1.utf16StringEscape)(jsonName), '\", js: \"', (0, Source_1.modifySource)(Strings_1.utf16StringEscape, propName), '\", typ: ', this.typeMapTypeForProperty(property), \" },\");\n                    });\n                });\n                this.emitLine(\"], \", additional, \"),\");\n            });\n            this.forEachEnum(\"none\", (e, name) => {\n                this.emitLine('\"', name, '\": [');\n                this.indent(() => {\n                    this.forEachEnumCase(e, \"none\", (_caseName, jsonName) => {\n                        this.emitLine(`\"${(0, Strings_1.utf16StringEscape)(jsonName)}\",`);\n                    });\n                });\n                this.emitLine(\"],\");\n            });\n        });\n    }\n    deserializerFunctionName(name) {\n        return [\"to\", name];\n    }\n    deserializerFunctionLine(_t, name) {\n        return [\"function \", this.deserializerFunctionName(name), \"(json)\"];\n    }\n    serializerFunctionName(name) {\n        const camelCaseName = (0, Source_1.modifySource)(Strings_1.camelCase, name);\n        return [camelCaseName, \"ToJson\"];\n    }\n    serializerFunctionLine(_t, name) {\n        return [\"function \", this.serializerFunctionName(name), \"(value)\"];\n    }\n    get moduleLine() {\n        return undefined;\n    }\n    get castFunctionLines() {\n        return [\"function cast(val, typ)\", \"function uncast(val, typ)\"];\n    }\n    get typeAnnotations() {\n        return {\n            any: \"\",\n            anyArray: \"\",\n            anyMap: \"\",\n            string: \"\",\n            stringArray: \"\",\n            boolean: \"\",\n            never: \"\"\n        };\n    }\n    emitConvertModuleBody() {\n        const converter = (t, name) => {\n            const typeMap = this.typeMapTypeFor(t);\n            this.emitBlock([this.deserializerFunctionLine(t, name), \" \"], \"\", () => {\n                const parsedJson = this._jsOptions.rawType === \"json\" ? \"JSON.parse(json)\" : \"json\";\n                if (!this._jsOptions.runtimeTypecheck) {\n                    this.emitLine(\"return \", parsedJson, \";\");\n                }\n                else {\n                    this.emitLine(\"return cast(\", parsedJson, \", \", typeMap, \");\");\n                }\n            });\n            this.ensureBlankLine();\n            this.emitBlock([this.serializerFunctionLine(t, name), \" \"], \"\", () => {\n                if (this._jsOptions.rawType === \"json\") {\n                    if (!this._jsOptions.runtimeTypecheck) {\n                        this.emitLine(\"return JSON.stringify(value);\");\n                    }\n                    else {\n                        this.emitLine(\"return JSON.stringify(uncast(value, \", typeMap, \"), null, 2);\");\n                    }\n                }\n                else {\n                    if (!this._jsOptions.runtimeTypecheck) {\n                        this.emitLine(\"return value;\");\n                    }\n                    else {\n                        this.emitLine(\"return uncast(value, \", typeMap, \");\");\n                    }\n                }\n            });\n        };\n        switch (this._jsOptions.converters) {\n            case Converters_1.ConvertersOptions.AllObjects:\n                this.forEachObject(\"interposing\", converter);\n                break;\n            default:\n                this.forEachTopLevel(\"interposing\", converter);\n                break;\n        }\n    }\n    emitConvertModuleHelpers() {\n        if (this._jsOptions.runtimeTypecheck) {\n            const { any: anyAnnotation, anyArray: anyArrayAnnotation, anyMap: anyMapAnnotation, string: stringAnnotation, stringArray: stringArrayAnnotation, never: neverAnnotation } = this.typeAnnotations;\n            this.ensureBlankLine();\n            this\n                .emitMultiline(`function invalidValue(typ${anyAnnotation}, val${anyAnnotation}, key${anyAnnotation}, parent${anyAnnotation} = '')${neverAnnotation} {\n    const prettyTyp = prettyTypeName(typ);\n    const parentText = parent ? \\` on \\${parent}\\` : '';\n    const keyText = key ? \\` for key \"\\${key}\"\\` : '';\n    throw Error(\\`Invalid value\\${keyText}\\${parentText}. Expected \\${prettyTyp} but got \\${JSON.stringify(val)}\\`);\n}\n\nfunction prettyTypeName(typ${anyAnnotation})${stringAnnotation} {\n    if (Array.isArray(typ)) {\n        if (typ.length === 2 && typ[0] === undefined) {\n            return \\`an optional \\${prettyTypeName(typ[1])}\\`;\n        } else {\n            return \\`one of [\\${typ.map(a => { return prettyTypeName(a); }).join(\", \")}]\\`;\n        }\n    } else if (typeof typ === \"object\" && typ.literal !== undefined) {\n        return typ.literal;\n    } else {\n        return typeof typ;\n    }\n}\n\nfunction jsonToJSProps(typ${anyAnnotation})${anyAnnotation} {\n    if (typ.jsonToJS === undefined) {\n        const map${anyAnnotation} = {};\n        typ.props.forEach((p${anyAnnotation}) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ${anyAnnotation})${anyAnnotation} {\n    if (typ.jsToJSON === undefined) {\n        const map${anyAnnotation} = {};\n        typ.props.forEach((p${anyAnnotation}) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val${anyAnnotation}, typ${anyAnnotation}, getProps${anyAnnotation}, key${anyAnnotation} = '', parent${anyAnnotation} = '')${anyAnnotation} {\n    function transformPrimitive(typ${stringAnnotation}, val${anyAnnotation})${anyAnnotation} {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key, parent);\n    }\n\n    function transformUnion(typs${anyArrayAnnotation}, val${anyAnnotation})${anyAnnotation} {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val, key, parent);\n    }\n\n    function transformEnum(cases${stringArrayAnnotation}, val${anyAnnotation})${anyAnnotation} {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases.map(a => { return l(a); }), val, key, parent);\n    }\n\n    function transformArray(typ${anyAnnotation}, val${anyAnnotation})${anyAnnotation} {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(l(\"array\"), val, key, parent);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val${anyAnnotation})${anyAnnotation} {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(l(\"Date\"), val, key, parent);\n        }\n        return d;\n    }\n\n    function transformObject(props${anyMapAnnotation}, additional${anyAnnotation}, val${anyAnnotation})${anyAnnotation} {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(l(ref || \"object\"), val, key, parent);\n        }\n        const result${anyAnnotation} = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, key, ref);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = ${this._jsOptions.runtimeTypecheckIgnoreUnknownProperties\n                ? `val[key]`\n                : `transform(val[key], additional, getProps, key, ref)`};\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n        return invalidValue(typ, val, key, parent);\n    }\n    if (typ === false) return invalidValue(typ, val, key, parent);\n    let ref${anyAnnotation} = undefined;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        ref = typ.ref;\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val, key, parent);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\n${this.castFunctionLines[0]} {\n    return transform(val, typ, jsonToJSProps);\n}\n\n${this.castFunctionLines[1]} {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction l(typ${anyAnnotation}) {\n    return { literal: typ };\n}\n\nfunction a(typ${anyAnnotation}) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs${anyArrayAnnotation}) {\n    return { unionMembers: typs };\n}\n\nfunction o(props${anyArrayAnnotation}, additional${anyAnnotation}) {\n    return { props, additional };\n}\n\nfunction m(additional${anyAnnotation}) {\n    return { props: [], additional };\n}\n\nfunction r(name${stringAnnotation}) {\n    return { ref: name };\n}\n`);\n            this.emitTypeMap();\n        }\n    }\n    emitConvertModule() {\n        this.ensureBlankLine();\n        this.emitMultiline(`// Converts JSON ${this._jsOptions.rawType === \"json\" ? \"strings\" : \"types\"} to/from your types`);\n        if (this._jsOptions.runtimeTypecheck) {\n            this.emitMultiline(`// and asserts the results${this._jsOptions.rawType === \"json\" ? \" of JSON.parse\" : \"\"} at runtime`);\n        }\n        const moduleLine = this.moduleLine;\n        if (moduleLine === undefined) {\n            this.emitConvertModuleBody();\n        }\n        else {\n            this.emitBlock([moduleLine, \" \"], \"\", () => this.emitConvertModuleBody());\n        }\n    }\n    emitTypes() {\n        return;\n    }\n    emitUsageImportComment() {\n        this.emitLine('//   const Convert = require(\"./file\");');\n    }\n    emitUsageComments() {\n        this.emitMultiline(`// To parse this data:\n//`);\n        this.emitUsageImportComment();\n        this.emitLine(\"//\");\n        this.forEachTopLevel(\"none\", (_t, name) => {\n            const camelCaseName = (0, Source_1.modifySource)(Strings_1.camelCase, name);\n            this.emitLine(\"//   const \", camelCaseName, \" = Convert.to\", name, \"(json);\");\n        });\n        if (this._jsOptions.runtimeTypecheck) {\n            this.emitLine(\"//\");\n            this.emitLine(\"// These functions will throw an error if the JSON doesn't\");\n            this.emitLine(\"// match the expected interface, even if the JSON is valid.\");\n        }\n    }\n    emitModuleExports() {\n        this.ensureBlankLine();\n        this.emitBlock(\"module.exports = \", \";\", () => {\n            this.forEachTopLevel(\"none\", (_, name) => {\n                const serializer = this.serializerFunctionName(name);\n                const deserializer = this.deserializerFunctionName(name);\n                this.emitLine('\"', serializer, '\": ', serializer, \",\");\n                this.emitLine('\"', deserializer, '\": ', deserializer, \",\");\n            });\n        });\n    }\n    emitSourceStructure() {\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n        }\n        else {\n            this.emitUsageComments();\n        }\n        this.emitTypes();\n        this.emitConvertModule();\n        this.emitConvertModuleHelpers();\n        this.emitModuleExports();\n    }\n}\nexports.JavaScriptRenderer = JavaScriptRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JavaScriptPropTypesRenderer = exports.JavaScriptPropTypesTargetLanguage = exports.javaScriptPropTypesOptions = void 0;\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst Naming_1 = require(\"../Naming\");\nconst Acronyms_1 = require(\"../support/Acronyms\");\nconst __1 = require(\"..\");\nconst Strings_1 = require(\"../support/Strings\");\nconst JavaScriptUnicodeMaps_1 = require(\"./JavaScriptUnicodeMaps\");\nconst JavaScript_1 = require(\"./JavaScript\");\nconst Converters_1 = require(\"../support/Converters\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst collection_utils_1 = require(\"collection-utils\");\nconst Type_1 = require(\"../Type\");\nexports.javaScriptPropTypesOptions = {\n    acronymStyle: (0, Acronyms_1.acronymOption)(Acronyms_1.AcronymStyleOptions.Pascal),\n    converters: (0, Converters_1.convertersOption)(),\n    moduleSystem: new RendererOptions_1.EnumOption(\"module-system\", \"Which module system to use\", [\n        [\"common-js\", false],\n        [\"es6\", true]\n    ], \"es6\")\n};\nclass JavaScriptPropTypesTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    getOptions() {\n        return [exports.javaScriptPropTypesOptions.acronymStyle, exports.javaScriptPropTypesOptions.converters];\n    }\n    constructor(displayName = \"JavaScript PropTypes\", names = [\"javascript-prop-types\"], extension = \"js\") {\n        super(displayName, names, extension);\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        return new JavaScriptPropTypesRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.javaScriptPropTypesOptions, untypedOptionValues));\n    }\n}\nexports.JavaScriptPropTypesTargetLanguage = JavaScriptPropTypesTargetLanguage;\nconst identityNamingFunction = (0, Naming_1.funPrefixNamer)(\"properties\", s => s);\nclass JavaScriptPropTypesRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _jsOptions) {\n        super(targetLanguage, renderContext);\n        this._jsOptions = _jsOptions;\n    }\n    nameStyle(original, upper) {\n        const acronyms = (0, Acronyms_1.acronymStyle)(this._jsOptions.acronymStyle);\n        const words = (0, __1.splitIntoWords)(original);\n        return (0, __1.combineWords)(words, JavaScript_1.legalizeName, upper ? __1.firstUpperWordStyle : Strings_1.allLowerWordStyle, __1.firstUpperWordStyle, upper ? s => (0, __1.capitalize)(acronyms(s)) : Strings_1.allLowerWordStyle, acronyms, \"\", JavaScriptUnicodeMaps_1.isES3IdentifierStart);\n    }\n    makeNamedTypeNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"types\", s => this.nameStyle(s, true));\n    }\n    namerForObjectProperty() {\n        return identityNamingFunction;\n    }\n    makeUnionMemberNamer() {\n        return null;\n    }\n    makeEnumCaseNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"enum-cases\", s => this.nameStyle(s, false));\n    }\n    namedTypeToNameForTopLevel(type) {\n        return (0, TypeUtils_1.directlyReachableSingleNamedType)(type);\n    }\n    makeNameForProperty(c, className, p, jsonName, _assignedName) {\n        // Ignore the assigned name\n        return super.makeNameForProperty(c, className, p, jsonName, undefined);\n    }\n    typeMapTypeFor(t, required = true) {\n        if ([\"class\", \"object\", \"enum\"].indexOf(t.kind) >= 0) {\n            return [\"_\", this.nameForNamedType(t)];\n        }\n        const match = (0, __1.matchType)(t, _anyType => \"PropTypes.any\", _nullType => \"PropTypes.any\", _boolType => \"PropTypes.bool\", _integerType => \"PropTypes.number\", _doubleType => \"PropTypes.number\", _stringType => \"PropTypes.string\", arrayType => [\"PropTypes.arrayOf(\", this.typeMapTypeFor(arrayType.items, false), \")\"], _classType => (0, __1.panic)(\"Should already be handled.\"), _mapType => \"PropTypes.object\", _enumType => (0, __1.panic)(\"Should already be handled.\"), unionType => {\n            const children = Array.from(unionType.getChildren()).map((type) => this.typeMapTypeFor(type, false));\n            return [\"PropTypes.oneOfType([\", ...(0, collection_utils_1.arrayIntercalate)(\", \", children), \"])\"];\n        }, _transformedStringType => {\n            return \"PropTypes.string\";\n        });\n        if (required) {\n            return [match];\n        }\n        return match;\n    }\n    typeMapTypeForProperty(p) {\n        return this.typeMapTypeFor(p.type);\n    }\n    importStatement(lhs, moduleName) {\n        if (this._jsOptions.moduleSystem) {\n            return [\"import \", lhs, \" from \", moduleName, \";\"];\n        }\n        else {\n            return [\"const \", lhs, \" = require(\", moduleName, \");\"];\n        }\n    }\n    emitUsageComments() {\n        // FIXME: Use the correct type name\n        this.emitCommentLines([\n            \"Example usage:\",\n            \"\",\n            this.importStatement(\"{ MyShape }\", \"./myShape.js\"),\n            \"\",\n            \"class MyComponent extends React.Component {\",\n            \"  //\",\n            \"}\",\n            \"\",\n            \"MyComponent.propTypes = {\",\n            \"  input: MyShape\",\n            \"};\"\n        ], { lineStart: \"// \" });\n    }\n    emitBlock(source, end, emit) {\n        this.emitLine(source, \"{\");\n        this.indent(emit);\n        this.emitLine(\"}\", end);\n    }\n    emitImports() {\n        this.ensureBlankLine();\n        this.emitLine(this.importStatement(\"PropTypes\", '\"prop-types\"'));\n    }\n    emitExport(name, value) {\n        if (this._jsOptions.moduleSystem) {\n            this.emitLine(\"export const \", name, \" = \", value, \";\");\n        }\n        else {\n            this.emitLine(\"module.exports = exports = { \", name, \": \", value, \" };\");\n        }\n    }\n    emitTypes() {\n        this.ensureBlankLine();\n        this.forEachObject(\"none\", (_type, name) => {\n            this.emitLine(\"let _\", name, \";\");\n        });\n        this.forEachEnum(\"none\", (enumType, enumName) => {\n            const options = [];\n            this.forEachEnumCase(enumType, \"none\", (name, _jsonName, _position) => {\n                options.push(\"'\");\n                options.push(name);\n                options.push(\"'\");\n                options.push(\", \");\n            });\n            options.pop();\n            this.emitLine([\"const _\", enumName, \" = PropTypes.oneOfType([\", ...options, \"]);\"]);\n        });\n        const order = [];\n        const mapKey = [];\n        const mapValue = [];\n        this.forEachObject(\"none\", (type, name) => {\n            mapKey.push(name);\n            mapValue.push(this.gatherSource(() => this.emitObject(name, type)));\n        });\n        // order these\n        mapKey.forEach((_, index) => {\n            // assume first\n            let ordinal = 0;\n            // pull out all names\n            const source = mapValue[index];\n            const names = source.filter(value => value);\n            // must be behind all these names\n            for (let i = 0; i < names.length; i++) {\n                const depName = names[i];\n                // find this name's ordinal, if it has already been added\n                for (let j = 0; j < order.length; j++) {\n                    const depIndex = order[j];\n                    if (mapKey[depIndex] === depName) {\n                        // this is the index of the dependency, so make sure we come after it\n                        ordinal = Math.max(ordinal, depIndex + 1);\n                    }\n                }\n            }\n            // insert index\n            order.splice(ordinal, 0, index);\n        });\n        // now emit ordered source\n        order.forEach(i => this.emitGatheredSource(mapValue[i]));\n        // now emit top levels\n        this.forEachTopLevel(\"none\", (type, name) => {\n            if (type instanceof Type_1.PrimitiveType) {\n                this.ensureBlankLine();\n                this.emitExport(name, this.typeMapTypeFor(type));\n            }\n            else {\n                if (type.kind === \"array\") {\n                    this.ensureBlankLine();\n                    this.emitExport(name, [\"PropTypes.arrayOf(\", this.typeMapTypeFor(type.items), \")\"]);\n                }\n                else {\n                    this.ensureBlankLine();\n                    this.emitExport(name, [\"_\", name]);\n                }\n            }\n        });\n    }\n    emitObject(name, t) {\n        this.ensureBlankLine();\n        this.emitLine(\"_\", name, \" = PropTypes.shape({\");\n        this.indent(() => {\n            this.forEachClassProperty(t, \"none\", (_, jsonName, property) => {\n                this.emitLine(`\"${(0, Strings_1.utf16StringEscape)(jsonName)}\"`, \": \", this.typeMapTypeForProperty(property), \",\");\n            });\n        });\n        this.emitLine(\"});\");\n    }\n    emitSourceStructure() {\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n        }\n        else {\n            this.emitUsageComments();\n        }\n        this.emitImports();\n        this.emitTypes();\n    }\n}\nexports.JavaScriptPropTypesRenderer = JavaScriptPropTypesRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FlowRenderer = exports.FlowTargetLanguage = exports.TypeScriptRenderer = exports.TypeScriptFlowBaseRenderer = exports.TypeScriptTargetLanguage = exports.TypeScriptFlowBaseTargetLanguage = exports.tsFlowOptions = void 0;\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Source_1 = require(\"../Source\");\nconst Naming_1 = require(\"../Naming\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst JavaScript_1 = require(\"./JavaScript\");\nconst Support_1 = require(\"../support/Support\");\nconst JavaScriptUnicodeMaps_1 = require(\"./JavaScriptUnicodeMaps\");\nexports.tsFlowOptions = Object.assign({}, JavaScript_1.javaScriptOptions, {\n    justTypes: new RendererOptions_1.BooleanOption(\"just-types\", \"Interfaces only\", false),\n    nicePropertyNames: new RendererOptions_1.BooleanOption(\"nice-property-names\", \"Transform property names to be JavaScripty\", false),\n    declareUnions: new RendererOptions_1.BooleanOption(\"explicit-unions\", \"Explicitly name unions\", false),\n    preferUnions: new RendererOptions_1.BooleanOption(\"prefer-unions\", \"Use union type instead of enum\", false),\n    preferTypes: new RendererOptions_1.BooleanOption(\"prefer-types\", \"Use types instead of interfaces\", false),\n    preferConstValues: new RendererOptions_1.BooleanOption(\"prefer-const-values\", \"Use string instead of enum for string enums with single value\", false)\n});\nconst tsFlowTypeAnnotations = {\n    any: \": any\",\n    anyArray: \": any[]\",\n    anyMap: \": { [k: string]: any }\",\n    string: \": string\",\n    stringArray: \": string[]\",\n    boolean: \": boolean\"\n};\nclass TypeScriptFlowBaseTargetLanguage extends JavaScript_1.JavaScriptTargetLanguage {\n    getOptions() {\n        return [\n            exports.tsFlowOptions.justTypes,\n            exports.tsFlowOptions.nicePropertyNames,\n            exports.tsFlowOptions.declareUnions,\n            exports.tsFlowOptions.runtimeTypecheck,\n            exports.tsFlowOptions.runtimeTypecheckIgnoreUnknownProperties,\n            exports.tsFlowOptions.acronymStyle,\n            exports.tsFlowOptions.converters,\n            exports.tsFlowOptions.rawType,\n            exports.tsFlowOptions.preferUnions,\n            exports.tsFlowOptions.preferTypes,\n            exports.tsFlowOptions.preferConstValues\n        ];\n    }\n    get supportsOptionalClassProperties() {\n        return true;\n    }\n}\nexports.TypeScriptFlowBaseTargetLanguage = TypeScriptFlowBaseTargetLanguage;\nclass TypeScriptTargetLanguage extends TypeScriptFlowBaseTargetLanguage {\n    constructor() {\n        super(\"TypeScript\", [\"typescript\", \"ts\", \"tsx\"], \"ts\");\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        return new TypeScriptRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.tsFlowOptions, untypedOptionValues));\n    }\n}\nexports.TypeScriptTargetLanguage = TypeScriptTargetLanguage;\nfunction quotePropertyName(original) {\n    const escaped = (0, Strings_1.utf16StringEscape)(original);\n    const quoted = `\"${escaped}\"`;\n    if (original.length === 0) {\n        return quoted;\n    }\n    else if (!(0, JavaScriptUnicodeMaps_1.isES3IdentifierStart)(original.codePointAt(0))) {\n        return quoted;\n    }\n    else if (escaped !== original) {\n        return quoted;\n    }\n    else if ((0, JavaScript_1.legalizeName)(original) !== original) {\n        return quoted;\n    }\n    else {\n        return original;\n    }\n}\nclass TypeScriptFlowBaseRenderer extends JavaScript_1.JavaScriptRenderer {\n    constructor(targetLanguage, renderContext, _tsFlowOptions) {\n        super(targetLanguage, renderContext, _tsFlowOptions);\n        this._tsFlowOptions = _tsFlowOptions;\n    }\n    namerForObjectProperty() {\n        if (this._tsFlowOptions.nicePropertyNames) {\n            return (0, Naming_1.funPrefixNamer)(\"properties\", s => this.nameStyle(s, false));\n        }\n        else {\n            return super.namerForObjectProperty();\n        }\n    }\n    sourceFor(t) {\n        if (this._tsFlowOptions.preferConstValues && t.kind === \"enum\" && t instanceof Type_1.EnumType && t.cases.size === 1) {\n            const item = t.cases.values().next().value;\n            return (0, Source_1.singleWord)(`\"${(0, Strings_1.utf16StringEscape)(item)}\"`);\n        }\n        if ([\"class\", \"object\", \"enum\"].indexOf(t.kind) >= 0) {\n            return (0, Source_1.singleWord)(this.nameForNamedType(t));\n        }\n        return (0, TypeUtils_1.matchType)(t, _anyType => (0, Source_1.singleWord)(\"any\"), _nullType => (0, Source_1.singleWord)(\"null\"), _boolType => (0, Source_1.singleWord)(\"boolean\"), _integerType => (0, Source_1.singleWord)(\"number\"), _doubleType => (0, Source_1.singleWord)(\"number\"), _stringType => (0, Source_1.singleWord)(\"string\"), arrayType => {\n            const itemType = this.sourceFor(arrayType.items);\n            if ((arrayType.items instanceof Type_1.UnionType && !this._tsFlowOptions.declareUnions) ||\n                arrayType.items instanceof Type_1.ArrayType) {\n                return (0, Source_1.singleWord)([\"Array<\", itemType.source, \">\"]);\n            }\n            else {\n                return (0, Source_1.singleWord)([(0, Source_1.parenIfNeeded)(itemType), \"[]\"]);\n            }\n        }, _classType => (0, Support_1.panic)(\"We handled this above\"), mapType => (0, Source_1.singleWord)([\"{ [key: string]: \", this.sourceFor(mapType.values).source, \" }\"]), _enumType => (0, Support_1.panic)(\"We handled this above\"), unionType => {\n            if (!this._tsFlowOptions.declareUnions || (0, TypeUtils_1.nullableFromUnion)(unionType) !== null) {\n                const children = Array.from(unionType.getChildren()).map(c => (0, Source_1.parenIfNeeded)(this.sourceFor(c)));\n                return (0, Source_1.multiWord)(\" | \", ...children);\n            }\n            else {\n                return (0, Source_1.singleWord)(this.nameForNamedType(unionType));\n            }\n        }, transformedStringType => {\n            if (transformedStringType.kind === \"date-time\") {\n                return (0, Source_1.singleWord)(\"Date\");\n            }\n            return (0, Source_1.singleWord)(\"string\");\n        });\n    }\n    emitClassBlockBody(c) {\n        this.emitPropertyTable(c, (name, _jsonName, p) => {\n            const t = p.type;\n            return [\n                [(0, Source_1.modifySource)(quotePropertyName, name), p.isOptional ? \"?\" : \"\", \": \"],\n                [this.sourceFor(t).source, \";\"]\n            ];\n        });\n        const additionalProperties = c.getAdditionalProperties();\n        if (additionalProperties) {\n            this.emitTable([[\"[property: string]\", \": \", this.sourceFor(additionalProperties).source, \";\"]]);\n        }\n    }\n    emitClass(c, className) {\n        this.emitDescription(this.descriptionForType(c));\n        this.emitClassBlock(c, className);\n    }\n    emitUnion(u, unionName) {\n        if (!this._tsFlowOptions.declareUnions) {\n            return;\n        }\n        this.emitDescription(this.descriptionForType(u));\n        const children = (0, Source_1.multiWord)(\" | \", ...Array.from(u.getChildren()).map(c => (0, Source_1.parenIfNeeded)(this.sourceFor(c))));\n        this.emitLine(\"export type \", unionName, \" = \", children.source, \";\");\n    }\n    emitTypes() {\n        this.forEachNamedType(\"leading-and-interposing\", (c, n) => this.emitClass(c, n), (e, n) => this.emitEnum(e, n), (u, n) => this.emitUnion(u, n));\n    }\n    emitUsageComments() {\n        if (this._tsFlowOptions.justTypes)\n            return;\n        super.emitUsageComments();\n    }\n    deserializerFunctionLine(t, name) {\n        const jsonType = this._tsFlowOptions.rawType === \"json\" ? \"string\" : \"any\";\n        return [\"function to\", name, \"(json: \", jsonType, \"): \", this.sourceFor(t).source];\n    }\n    serializerFunctionLine(t, name) {\n        const camelCaseName = (0, Source_1.modifySource)(Strings_1.camelCase, name);\n        const returnType = this._tsFlowOptions.rawType === \"json\" ? \"string\" : \"any\";\n        return [\"function \", camelCaseName, \"ToJson(value: \", this.sourceFor(t).source, \"): \", returnType];\n    }\n    get moduleLine() {\n        return undefined;\n    }\n    get castFunctionLines() {\n        return [\"function cast<T>(val: any, typ: any): T\", \"function uncast<T>(val: T, typ: any): any\"];\n    }\n    get typeAnnotations() {\n        throw new Error(\"not implemented\");\n    }\n    emitConvertModule() {\n        if (this._tsFlowOptions.justTypes)\n            return;\n        super.emitConvertModule();\n    }\n    emitConvertModuleHelpers() {\n        if (this._tsFlowOptions.justTypes)\n            return;\n        super.emitConvertModuleHelpers();\n    }\n    emitModuleExports() {\n        if (this._tsFlowOptions.justTypes) {\n            return;\n        }\n        else {\n            super.emitModuleExports();\n        }\n    }\n}\nexports.TypeScriptFlowBaseRenderer = TypeScriptFlowBaseRenderer;\nclass TypeScriptRenderer extends TypeScriptFlowBaseRenderer {\n    forbiddenNamesForGlobalNamespace() {\n        return [\"Array\", \"Date\"];\n    }\n    deserializerFunctionLine(t, name) {\n        const jsonType = this._tsFlowOptions.rawType === \"json\" ? \"string\" : \"any\";\n        return [\"public static to\", name, \"(json: \", jsonType, \"): \", this.sourceFor(t).source];\n    }\n    serializerFunctionLine(t, name) {\n        const camelCaseName = (0, Source_1.modifySource)(Strings_1.camelCase, name);\n        const returnType = this._tsFlowOptions.rawType === \"json\" ? \"string\" : \"any\";\n        return [\"public static \", camelCaseName, \"ToJson(value: \", this.sourceFor(t).source, \"): \", returnType];\n    }\n    get moduleLine() {\n        return \"export class Convert\";\n    }\n    get typeAnnotations() {\n        return Object.assign({ never: \": never\" }, tsFlowTypeAnnotations);\n    }\n    emitModuleExports() {\n        return;\n    }\n    emitUsageImportComment() {\n        const topLevelNames = [];\n        this.forEachTopLevel(\"none\", (_t, name) => {\n            topLevelNames.push(\", \", name);\n        }, TypeUtils_1.isNamedType);\n        this.emitLine(\"//   import { Convert\", topLevelNames, ' } from \"./file\";');\n    }\n    emitEnum(e, enumName) {\n        this.emitDescription(this.descriptionForType(e));\n        // enums with only one value are emitted as constants\n        if (this._tsFlowOptions.preferConstValues && e.cases.size === 1)\n            return;\n        if (this._tsFlowOptions.preferUnions) {\n            let items = \"\";\n            e.cases.forEach(item => {\n                if (items === \"\") {\n                    items += `\"${(0, Strings_1.utf16StringEscape)(item)}\"`;\n                    return;\n                }\n                items += ` | \"${(0, Strings_1.utf16StringEscape)(item)}\"`;\n            });\n            this.emitLine(\"export type \", enumName, \" = \", items, \";\");\n        }\n        else {\n            this.emitBlock([\"export enum \", enumName, \" \"], \"\", () => {\n                this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n                    this.emitLine(name, ` = \"${(0, Strings_1.utf16StringEscape)(jsonName)}\",`);\n                });\n            });\n        }\n    }\n    emitClassBlock(c, className) {\n        this.emitBlock(this._tsFlowOptions.preferTypes\n            ? [\"export type \", className, \" = \"]\n            : [\"export interface \", className, \" \"], \"\", () => {\n            this.emitClassBlockBody(c);\n        });\n    }\n}\nexports.TypeScriptRenderer = TypeScriptRenderer;\nclass FlowTargetLanguage extends TypeScriptFlowBaseTargetLanguage {\n    constructor() {\n        super(\"Flow\", [\"flow\"], \"js\");\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        return new FlowRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.tsFlowOptions, untypedOptionValues));\n    }\n}\nexports.FlowTargetLanguage = FlowTargetLanguage;\nclass FlowRenderer extends TypeScriptFlowBaseRenderer {\n    forbiddenNamesForGlobalNamespace() {\n        return [\"Class\", \"Date\", \"Object\", \"String\", \"Array\", \"JSON\", \"Error\"];\n    }\n    get typeAnnotations() {\n        return Object.assign({ never: \"\" }, tsFlowTypeAnnotations);\n    }\n    emitEnum(e, enumName) {\n        this.emitDescription(this.descriptionForType(e));\n        const lines = [];\n        this.forEachEnumCase(e, \"none\", (_, jsonName) => {\n            const maybeOr = lines.length === 0 ? \"  \" : \"| \";\n            lines.push([maybeOr, '\"', (0, Strings_1.utf16StringEscape)(jsonName), '\"']);\n        });\n        (0, Support_1.defined)(lines[lines.length - 1]).push(\";\");\n        this.emitLine(\"export type \", enumName, \" =\");\n        this.indent(() => {\n            for (const line of lines) {\n                this.emitLine(line);\n            }\n        });\n    }\n    emitClassBlock(c, className) {\n        this.emitBlock([\"export type \", className, \" = \"], \";\", () => {\n            this.emitClassBlockBody(c);\n        });\n    }\n    emitSourceStructure() {\n        this.emitLine(\"// @flow\");\n        this.ensureBlankLine();\n        super.emitSourceStructure();\n    }\n}\nexports.FlowRenderer = FlowRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SwiftRenderer = exports.SwiftTargetLanguage = exports.swiftOptions = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Support_1 = require(\"../support/Support\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Naming_1 = require(\"../Naming\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst Source_1 = require(\"../Source\");\nconst Annotation_1 = require(\"../Annotation\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Support_2 = require(\"../support/Support\");\nconst DateTime_1 = require(\"../DateTime\");\nconst Acronyms_1 = require(\"../support/Acronyms\");\nconst MAX_SAMELINE_PROPERTIES = 4;\nexports.swiftOptions = {\n    justTypes: new RendererOptions_1.BooleanOption(\"just-types\", \"Plain types only\", false),\n    convenienceInitializers: new RendererOptions_1.BooleanOption(\"initializers\", \"Generate initializers and mutators\", true),\n    explicitCodingKeys: new RendererOptions_1.BooleanOption(\"coding-keys\", \"Explicit CodingKey values in Codable types\", true),\n    alamofire: new RendererOptions_1.BooleanOption(\"alamofire\", \"Alamofire extensions\", false),\n    namedTypePrefix: new RendererOptions_1.StringOption(\"type-prefix\", \"Prefix for type names\", \"PREFIX\", \"\", \"secondary\"),\n    useClasses: new RendererOptions_1.EnumOption(\"struct-or-class\", \"Structs or classes\", [\n        [\"struct\", false],\n        [\"class\", true]\n    ]),\n    mutableProperties: new RendererOptions_1.BooleanOption(\"mutable-properties\", \"Use var instead of let for object properties\", false),\n    acronymStyle: (0, Acronyms_1.acronymOption)(Acronyms_1.AcronymStyleOptions.Pascal),\n    dense: new RendererOptions_1.EnumOption(\"density\", \"Code density\", [\n        [\"dense\", true],\n        [\"normal\", false]\n    ], \"dense\", \"secondary\"),\n    linux: new RendererOptions_1.BooleanOption(\"support-linux\", \"Support Linux\", false, \"secondary\"),\n    objcSupport: new RendererOptions_1.BooleanOption(\"objective-c-support\", \"Objects inherit from NSObject and @objcMembers is added to classes\", false),\n    optionalEnums: new RendererOptions_1.BooleanOption(\"optional-enums\", \"If no matching case is found enum value is set to null\", false),\n    swift5Support: new RendererOptions_1.BooleanOption(\"swift-5-support\", \"Renders output in a Swift 5 compatible mode\", false),\n    sendable: new RendererOptions_1.BooleanOption(\"sendable\", \"Mark generated models as Sendable\", false),\n    multiFileOutput: new RendererOptions_1.BooleanOption(\"multi-file-output\", \"Renders each top-level object in its own Swift file\", false),\n    accessLevel: new RendererOptions_1.EnumOption(\"access-level\", \"Access level\", [\n        [\"internal\", \"internal\"],\n        [\"public\", \"public\"]\n    ], \"internal\", \"secondary\"),\n    protocol: new RendererOptions_1.EnumOption(\"protocol\", \"Make types implement protocol\", [\n        [\"none\", { equatable: false, hashable: false }],\n        [\"equatable\", { equatable: true, hashable: false }],\n        [\"hashable\", { equatable: false, hashable: true }]\n    ], \"none\", \"secondary\")\n};\n// These are all recognized by Swift as ISO8601 date-times:\n//\n// 2018-08-14T02:45:50+00:00\n// 2018-08-14T02:45:50+00\n// 2018-08-14T02:45:50+1\n// 2018-08-14T02:45:50+1111\n// 2018-08-14T02:45:50+1111:1:33\n// 2018-08-14T02:45:50-00\n// 2018-08-14T02:45:50z\n// 2018-00008-1T002:45:3Z\nconst swiftDateTimeRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+([zZ]|[+-]\\d+(:\\d+)?)$/;\nclass SwiftDateTimeRecognizer extends DateTime_1.DefaultDateTimeRecognizer {\n    isDateTime(str) {\n        return str.match(swiftDateTimeRegex) !== null;\n    }\n}\nclass SwiftTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor() {\n        super(\"Swift\", [\"swift\", \"swift4\"], \"swift\");\n    }\n    getOptions() {\n        return [\n            exports.swiftOptions.justTypes,\n            exports.swiftOptions.useClasses,\n            exports.swiftOptions.dense,\n            exports.swiftOptions.convenienceInitializers,\n            exports.swiftOptions.explicitCodingKeys,\n            exports.swiftOptions.accessLevel,\n            exports.swiftOptions.alamofire,\n            exports.swiftOptions.linux,\n            exports.swiftOptions.namedTypePrefix,\n            exports.swiftOptions.protocol,\n            exports.swiftOptions.acronymStyle,\n            exports.swiftOptions.objcSupport,\n            exports.swiftOptions.optionalEnums,\n            exports.swiftOptions.sendable,\n            exports.swiftOptions.swift5Support,\n            exports.swiftOptions.multiFileOutput,\n            exports.swiftOptions.mutableProperties\n        ];\n    }\n    get stringTypeMapping() {\n        const mapping = new Map();\n        mapping.set(\"date-time\", \"date-time\");\n        return mapping;\n    }\n    get supportsOptionalClassProperties() {\n        return true;\n    }\n    get supportsUnionsWithBothNumberTypes() {\n        return true;\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        return new SwiftRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.swiftOptions, untypedOptionValues));\n    }\n    get dateTimeRecognizer() {\n        return new SwiftDateTimeRecognizer();\n    }\n}\nexports.SwiftTargetLanguage = SwiftTargetLanguage;\nconst keywords = [\n    \"await\",\n    \"associatedtype\",\n    \"class\",\n    \"deinit\",\n    \"enum\",\n    \"extension\",\n    \"fileprivate\",\n    \"func\",\n    \"import\",\n    \"init\",\n    \"inout\",\n    \"internal\",\n    \"let\",\n    \"open\",\n    \"operator\",\n    \"private\",\n    \"protocol\",\n    \"public\",\n    \"static\",\n    \"struct\",\n    \"subscript\",\n    \"typealias\",\n    \"var\",\n    \"break\",\n    \"case\",\n    \"continue\",\n    \"default\",\n    \"defer\",\n    \"do\",\n    \"else\",\n    \"fallthrough\",\n    \"for\",\n    \"guard\",\n    \"if\",\n    \"in\",\n    \"repeat\",\n    \"return\",\n    \"switch\",\n    \"where\",\n    \"while\",\n    \"as\",\n    \"Any\",\n    \"catch\",\n    \"false\",\n    \"is\",\n    \"nil\",\n    \"rethrows\",\n    \"super\",\n    \"self\",\n    \"Self\",\n    \"throw\",\n    \"throws\",\n    \"true\",\n    \"try\",\n    \"_\",\n    \"associativity\",\n    \"convenience\",\n    \"dynamic\",\n    \"didSet\",\n    \"final\",\n    \"get\",\n    \"infix\",\n    \"indirect\",\n    \"lazy\",\n    \"left\",\n    \"mutating\",\n    \"nonmutating\",\n    \"optional\",\n    \"override\",\n    \"postfix\",\n    \"precedence\",\n    \"prefix\",\n    \"Protocol\",\n    \"required\",\n    \"right\",\n    \"set\",\n    \"Type\",\n    \"unowned\",\n    \"weak\",\n    \"willSet\",\n    \"String\",\n    \"Int\",\n    \"Double\",\n    \"Bool\",\n    \"Data\",\n    \"Date\",\n    \"URL\",\n    \"CommandLine\",\n    \"FileHandle\",\n    \"JSONSerialization\",\n    \"checkNull\",\n    \"removeNSNull\",\n    \"nilToNSNull\",\n    \"convertArray\",\n    \"convertOptional\",\n    \"convertDict\",\n    \"convertDouble\",\n    \"jsonString\",\n    \"jsonData\"\n];\nfunction isPartCharacter(codePoint) {\n    return (0, Strings_1.isLetterOrUnderscore)(codePoint) || (0, Strings_1.isNumeric)(codePoint);\n}\nfunction isStartCharacter(codePoint) {\n    return isPartCharacter(codePoint) && !(0, Strings_1.isDigit)(codePoint);\n}\nconst legalizeName = (0, Strings_1.legalizeCharacters)(isPartCharacter);\nfunction swiftNameStyle(prefix, isUpper, original, acronymsStyle = Strings_1.allUpperWordStyle) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    const combined = (0, Strings_1.combineWords)(words, legalizeName, isUpper ? Strings_1.firstUpperWordStyle : Strings_1.allLowerWordStyle, Strings_1.firstUpperWordStyle, isUpper ? Strings_1.allUpperWordStyle : Strings_1.allLowerWordStyle, acronymsStyle, \"\", isStartCharacter);\n    return (0, Strings_1.addPrefixIfNecessary)(prefix, combined);\n}\nfunction unicodeEscape(codePoint) {\n    return \"\\\\u{\" + (0, Strings_1.intToHex)(codePoint, 0) + \"}\";\n}\nconst stringEscape = (0, Strings_1.utf32ConcatMap)((0, Strings_1.escapeNonPrintableMapper)(Strings_1.isPrintable, unicodeEscape));\nclass SwiftRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _options) {\n        super(targetLanguage, renderContext);\n        this._options = _options;\n        this._needAny = false;\n        this._needNull = false;\n        this.emitSupportFunctions4 = () => {\n            this.startFile(\"JSONSchemaSupport\");\n            this.emitLineOnce(\"import Foundation\");\n            this.forEachTopLevel(\"leading\", (t, name) => this.renderTopLevelAlias(t, name), t => this.namedTypeToNameForTopLevel(t) === undefined);\n            if (this._options.convenienceInitializers) {\n                this.ensureBlankLine();\n                this.forEachTopLevel(\"leading-and-interposing\", (t, name) => this.emitTopLevelMapAndArrayConvenienceInitializerExtensions(t, name));\n            }\n            if ((!this._options.justTypes && this._options.convenienceInitializers) || this._options.alamofire) {\n                this.ensureBlankLine();\n                this.emitMark(\"Helper functions for creating encoders and decoders\", true);\n                this.ensureBlankLine();\n                this.emitNewEncoderDecoder();\n            }\n            if (this._options.alamofire) {\n                this.ensureBlankLine();\n                this.emitMark(\"Alamofire response handlers\", true);\n                this.ensureBlankLine();\n                this.emitAlamofireExtension();\n            }\n            // This assumes that this method is called after declarations\n            // are emitted.\n            if (this._needAny || this._needNull) {\n                this.ensureBlankLine();\n                this.emitMark(\"Encode/decode helpers\", true);\n                this.ensureBlankLine();\n                if (this._options.objcSupport) {\n                    this.emitLine(this.objcMembersDeclaration, this.accessLevel, \"class JSONNull: NSObject, Codable {\");\n                }\n                else {\n                    this.emitLine(this.accessLevel, \"class JSONNull: Codable, Hashable {\");\n                }\n                this.ensureBlankLine();\n                this.emitMultiline(`    public static func == (lhs: JSONNull, rhs: JSONNull) -> Bool {\n        return true\n    }`);\n                if (this._options.objcSupport === false) {\n                    this.ensureBlankLine();\n                    this.emitMultiline(`    public var hashValue: Int {\n        return 0\n    }`);\n                    if (this._options.swift5Support) {\n                        this.ensureBlankLine();\n                        this.emitMultiline(`    public func hash(into hasher: inout Hasher) {\n        // No-op\n    }`);\n                    }\n                }\n                this.ensureBlankLine();\n                if (this._options.objcSupport) {\n                    this.emitItem(\"    override \");\n                }\n                else {\n                    this.emitItem(\"    \");\n                }\n                this.emitMultiline(`public init() {}\n    \n    public required init(from decoder: Decoder) throws {\n        let container = try decoder.singleValueContainer()\n        if !container.decodeNil() {\n            throw DecodingError.typeMismatch(JSONNull.self, DecodingError.Context(codingPath: decoder.codingPath, debugDescription: \"Wrong type for JSONNull\"))\n        }\n    }\n    \n    public func encode(to encoder: Encoder) throws {\n        var container = encoder.singleValueContainer()\n        try container.encodeNil()\n    }\n}`);\n            }\n            if (this._needAny) {\n                this.ensureBlankLine();\n                this.emitMultiline(`class JSONCodingKey: CodingKey {\n    let key: String\n    \n    required init?(intValue: Int) {\n        return nil\n    }\n    \n    required init?(stringValue: String) {\n        key = stringValue\n    }\n    \n    var intValue: Int? {\n        return nil\n    }\n    \n    var stringValue: String {\n        return key\n    }\n}`);\n                this.ensureBlankLine();\n                if (this._options.objcSupport) {\n                    this.emitLine(this.objcMembersDeclaration, this.accessLevel, \"class JSONAny: NSObject, Codable {\");\n                }\n                else {\n                    this.emitLine(this.accessLevel, \"class JSONAny: Codable {\");\n                }\n                this.ensureBlankLine();\n                this.emitMultiline(`    ${this.accessLevel}let value: Any\n    \n    static func decodingError(forCodingPath codingPath: [CodingKey]) -> DecodingError {\n        let context = DecodingError.Context(codingPath: codingPath, debugDescription: \"Cannot decode JSONAny\")\n        return DecodingError.typeMismatch(JSONAny.self, context)\n    }\n    \n    static func encodingError(forValue value: Any, codingPath: [CodingKey]) -> EncodingError {\n        let context = EncodingError.Context(codingPath: codingPath, debugDescription: \"Cannot encode JSONAny\")\n        return EncodingError.invalidValue(value, context)\n    }\n\n    static func decode(from container: SingleValueDecodingContainer) throws -> Any {\n        if let value = try? container.decode(Bool.self) {\n            return value\n        }\n        if let value = try? container.decode(Int64.self) {\n            return value\n        }\n        if let value = try? container.decode(Double.self) {\n            return value\n        }\n        if let value = try? container.decode(String.self) {\n            return value\n        }\n        if container.decodeNil() {\n            return JSONNull()\n        }\n        throw decodingError(forCodingPath: container.codingPath)\n    }\n    \n    static func decode(from container: inout UnkeyedDecodingContainer) throws -> Any {\n        if let value = try? container.decode(Bool.self) {\n            return value\n        }\n        if let value = try? container.decode(Int64.self) {\n            return value\n        }\n        if let value = try? container.decode(Double.self) {\n            return value\n        }\n        if let value = try? container.decode(String.self) {\n            return value\n        }\n        if let value = try? container.decodeNil() {\n            if value {\n                return JSONNull()\n            }\n        }\n        if var container = try? container.nestedUnkeyedContainer() {\n            return try decodeArray(from: &container)\n        }\n        if var container = try? container.nestedContainer(keyedBy: JSONCodingKey.self) {\n            return try decodeDictionary(from: &container)\n        }\n        throw decodingError(forCodingPath: container.codingPath)\n    }\n    \n    static func decode(from container: inout KeyedDecodingContainer<JSONCodingKey>, forKey key: JSONCodingKey) throws -> Any {\n        if let value = try? container.decode(Bool.self, forKey: key) {\n            return value\n        }\n        if let value = try? container.decode(Int64.self, forKey: key) {\n            return value\n        }\n        if let value = try? container.decode(Double.self, forKey: key) {\n            return value\n        }\n        if let value = try? container.decode(String.self, forKey: key) {\n            return value\n        }\n        if let value = try? container.decodeNil(forKey: key) {\n            if value {\n                return JSONNull()\n            }\n        }\n        if var container = try? container.nestedUnkeyedContainer(forKey: key) {\n            return try decodeArray(from: &container)\n        }\n        if var container = try? container.nestedContainer(keyedBy: JSONCodingKey.self, forKey: key) {\n            return try decodeDictionary(from: &container)\n        }\n        throw decodingError(forCodingPath: container.codingPath)\n    }\n    \n    static func decodeArray(from container: inout UnkeyedDecodingContainer) throws -> [Any] {\n        var arr: [Any] = []\n        while !container.isAtEnd {\n            let value = try decode(from: &container)\n            arr.append(value)\n        }\n        return arr\n    }\n\n    static func decodeDictionary(from container: inout KeyedDecodingContainer<JSONCodingKey>) throws -> [String: Any] {\n        var dict = [String: Any]()\n        for key in container.allKeys {\n            let value = try decode(from: &container, forKey: key)\n            dict[key.stringValue] = value\n        }\n        return dict\n    }\n    \n    static func encode(to container: inout UnkeyedEncodingContainer, array: [Any]) throws {\n        for value in array {\n            if let value = value as? Bool {\n                try container.encode(value)\n            } else if let value = value as? Int64 {\n                try container.encode(value)\n            } else if let value = value as? Double {\n                try container.encode(value)\n            } else if let value = value as? String {\n                try container.encode(value)\n            } else if value is JSONNull {\n                try container.encodeNil()\n            } else if let value = value as? [Any] {\n                var container = container.nestedUnkeyedContainer()\n                try encode(to: &container, array: value)\n            } else if let value = value as? [String: Any] {\n                var container = container.nestedContainer(keyedBy: JSONCodingKey.self)\n                try encode(to: &container, dictionary: value)\n            } else {\n                throw encodingError(forValue: value, codingPath: container.codingPath)\n            }\n        }\n    }\n    \n    static func encode(to container: inout KeyedEncodingContainer<JSONCodingKey>, dictionary: [String: Any]) throws {\n        for (key, value) in dictionary {\n            let key = JSONCodingKey(stringValue: key)!\n            if let value = value as? Bool {\n                try container.encode(value, forKey: key)\n            } else if let value = value as? Int64 {\n                try container.encode(value, forKey: key)\n            } else if let value = value as? Double {\n                try container.encode(value, forKey: key)\n            } else if let value = value as? String {\n                try container.encode(value, forKey: key)\n            } else if value is JSONNull {\n                try container.encodeNil(forKey: key)\n            } else if let value = value as? [Any] {\n                var container = container.nestedUnkeyedContainer(forKey: key)\n                try encode(to: &container, array: value)\n            } else if let value = value as? [String: Any] {\n                var container = container.nestedContainer(keyedBy: JSONCodingKey.self, forKey: key)\n                try encode(to: &container, dictionary: value)\n            } else {\n                throw encodingError(forValue: value, codingPath: container.codingPath)\n            }\n        }\n    }\n\n    static func encode(to container: inout SingleValueEncodingContainer, value: Any) throws {\n        if let value = value as? Bool {\n            try container.encode(value)\n        } else if let value = value as? Int64 {\n            try container.encode(value)\n        } else if let value = value as? Double {\n            try container.encode(value)\n        } else if let value = value as? String {\n            try container.encode(value)\n        } else if value is JSONNull {\n            try container.encodeNil()\n        } else {\n            throw encodingError(forValue: value, codingPath: container.codingPath)\n        }\n    }\n    \n    public required init(from decoder: Decoder) throws {\n        if var arrayContainer = try? decoder.unkeyedContainer() {\n            self.value = try JSONAny.decodeArray(from: &arrayContainer)\n        } else if var container = try? decoder.container(keyedBy: JSONCodingKey.self) {\n            self.value = try JSONAny.decodeDictionary(from: &container)\n        } else {\n            let container = try decoder.singleValueContainer()\n            self.value = try JSONAny.decode(from: container)\n        }\n    }\n    \n    public func encode(to encoder: Encoder) throws {\n        if let arr = self.value as? [Any] {\n            var container = encoder.unkeyedContainer()\n            try JSONAny.encode(to: &container, array: arr)\n        } else if let dict = self.value as? [String: Any] {\n            var container = encoder.container(keyedBy: JSONCodingKey.self)\n            try JSONAny.encode(to: &container, dictionary: dict)\n        } else {\n            var container = encoder.singleValueContainer()\n            try JSONAny.encode(to: &container, value: self.value)\n        }\n    }\n}`);\n            }\n            this.endFile();\n        };\n    }\n    forbiddenNamesForGlobalNamespace() {\n        if (this._options.alamofire) {\n            return [\"DataRequest\", ...keywords];\n        }\n        return keywords;\n    }\n    forbiddenForObjectProperties(_c, _classNamed) {\n        return { names: [\"fromURL\", \"json\"], includeGlobalForbidden: true };\n    }\n    forbiddenForEnumCases(_e, _enumName) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    forbiddenForUnionMembers(_u, _unionName) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    makeNamedTypeNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"upper\", s => swiftNameStyle(this._options.namedTypePrefix, true, s, (0, Acronyms_1.acronymStyle)(this._options.acronymStyle)));\n    }\n    namerForObjectProperty() {\n        return this.lowerNamingFunction;\n    }\n    makeUnionMemberNamer() {\n        return this.lowerNamingFunction;\n    }\n    makeEnumCaseNamer() {\n        return this.lowerNamingFunction;\n    }\n    isImplicitCycleBreaker(t) {\n        const kind = t.kind;\n        return kind === \"array\" || kind === \"map\";\n    }\n    emitDescriptionBlock(lines) {\n        this.emitCommentLines(lines, { lineStart: \"/// \" });\n    }\n    emitBlock(line, f) {\n        this.emitLine(line, \" {\");\n        this.indent(f);\n        this.emitLine(\"}\");\n    }\n    emitBlockWithAccess(line, f) {\n        this.emitBlock([this.accessLevel, line], f);\n    }\n    justTypesCase(justTypes, notJustTypes) {\n        if (this._options.justTypes)\n            return justTypes;\n        else\n            return notJustTypes;\n    }\n    get lowerNamingFunction() {\n        return (0, Naming_1.funPrefixNamer)(\"lower\", s => swiftNameStyle(\"\", false, s, (0, Acronyms_1.acronymStyle)(this._options.acronymStyle)));\n    }\n    swiftPropertyType(p) {\n        if (p.isOptional || (this._options.optionalEnums && p.type.kind === \"enum\")) {\n            return [this.swiftType(p.type, true, true), \"?\"];\n        }\n        else {\n            return this.swiftType(p.type, true);\n        }\n    }\n    swiftType(t, withIssues = false, noOptional = false) {\n        const optional = noOptional ? \"\" : \"?\";\n        return (0, TypeUtils_1.matchType)(t, _anyType => {\n            this._needAny = true;\n            return (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.anyTypeIssueAnnotation, this.justTypesCase([\"Any\", optional], \"JSONAny\"));\n        }, _nullType => {\n            this._needNull = true;\n            return (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.nullTypeIssueAnnotation, this.justTypesCase(\"NSNull\", [\"JSONNull\", optional]));\n        }, _boolType => \"Bool\", _integerType => \"Int\", _doubleType => \"Double\", _stringType => \"String\", arrayType => [\"[\", this.swiftType(arrayType.items, withIssues), \"]\"], classType => this.nameForNamedType(classType), mapType => [\"[String: \", this.swiftType(mapType.values, withIssues), \"]\"], enumType => this.nameForNamedType(enumType), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null)\n                return [this.swiftType(nullable, withIssues), optional];\n            return this.nameForNamedType(unionType);\n        }, transformedStringType => {\n            if (transformedStringType.kind === \"date-time\") {\n                return \"Date\";\n            }\n            else {\n                return (0, Support_2.panic)(`Transformed string type ${transformedStringType.kind} not supported`);\n            }\n        });\n    }\n    proposedUnionMemberNameForTypeKind(kind) {\n        if (kind === \"enum\") {\n            return \"enumeration\";\n        }\n        if (kind === \"union\") {\n            return \"one_of\";\n        }\n        return null;\n    }\n    renderSingleFileHeaderComments() {\n        this.emitLineOnce(\"// This file was generated from JSON Schema using quicktype, do not modify it directly.\");\n        this.emitLineOnce(\"// To parse the JSON, add this file to your project and do:\");\n        this.emitLineOnce(\"//\");\n        this.forEachTopLevel(\"none\", (t, topLevelName) => {\n            if (this._options.convenienceInitializers && !(t instanceof Type_1.EnumType)) {\n                this.emitLineOnce(\"//   let \", (0, Source_1.modifySource)(Strings_1.camelCase, topLevelName), \" = try \", topLevelName, \"(json)\");\n            }\n            else {\n                this.emitLineOnce(\"//   let \", (0, Source_1.modifySource)(Strings_1.camelCase, topLevelName), \" = \", \"try? JSONDecoder().decode(\", topLevelName, \".self, from: jsonData)\");\n            }\n        });\n    }\n    renderHeader(type, name) {\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n        }\n        else if (!this._options.justTypes) {\n            if (this._options.multiFileOutput) {\n                this.emitLineOnce(\"// This file was generated from JSON Schema using quicktype, do not modify it directly.\");\n                this.emitLineOnce(\"// To parse the JSON, add this file to your project and do:\");\n                this.emitLineOnce(\"//\");\n                if (this._options.convenienceInitializers && !(type instanceof Type_1.EnumType)) {\n                    this.emitLine(\"//   let \", (0, Source_1.modifySource)(Strings_1.camelCase, name), \" = try \", name, \"(json)\");\n                }\n                else {\n                    this.emitLine(\"//   let \", (0, Source_1.modifySource)(Strings_1.camelCase, name), \" = \", \"try? newJSONDecoder().decode(\", name, \".self, from: jsonData)\");\n                }\n            }\n            if (this._options.alamofire) {\n                this.emitLine(\"//\");\n                this.emitLine(\"// To parse values from Alamofire responses:\");\n                this.emitLine(\"//\");\n                this.emitLine(\"//   Alamofire.request(url).response\", name, \" { response in\");\n                this.emitLine(\"//     if let \", (0, Source_1.modifySource)(Strings_1.camelCase, name), \" = response.result.value {\");\n                this.emitLine(\"//       ...\");\n                this.emitLine(\"//     }\");\n                this.emitLine(\"//   }\");\n            }\n            if (this._options.protocol.hashable || this._options.protocol.equatable) {\n                this.emitLine(\"//\");\n                this.emitLine(\"// Hashable or Equatable:\");\n                this.emitLine(\"// The compiler will not be able to synthesize the implementation of Hashable or Equatable\");\n                this.emitLine(\"// for types that require the use of JSONAny, nor will the implementation of Hashable be\");\n                this.emitLine(\"// synthesized for types that have collections (such as arrays or dictionaries).\");\n            }\n        }\n        this.ensureBlankLine();\n        this.emitLineOnce(\"import Foundation\");\n        if (!this._options.justTypes && this._options.alamofire) {\n            this.emitLineOnce(\"import Alamofire\");\n        }\n        if (this._options.optionalEnums) {\n            this.emitLineOnce(\"import OptionallyDecodable // https://github.com/idrougge/OptionallyDecodable\");\n        }\n        this.ensureBlankLine();\n    }\n    renderTopLevelAlias(t, name) {\n        this.emitLine(this.accessLevel, \"typealias \", name, \" = \", this.swiftType(t, true));\n    }\n    getProtocolsArray(kind) {\n        const protocols = [];\n        // [Michael Fey (@MrRooni), 2019-4-24] Technically NSObject isn't a \"protocol\" in this instance, but this felt like the best place to slot in this superclass declaration.\n        const isClass = kind === \"class\";\n        if (isClass && this._options.objcSupport) {\n            protocols.push(\"NSObject\");\n        }\n        if (!this._options.justTypes) {\n            protocols.push(\"Codable\");\n        }\n        if (this._options.protocol.hashable) {\n            protocols.push(\"Hashable\");\n        }\n        if (this._options.protocol.equatable) {\n            protocols.push(\"Equatable\");\n        }\n        if (this._options.sendable && (!this._options.mutableProperties || !isClass) && !this._options.objcSupport) {\n            protocols.push(\"Sendable\");\n        }\n        return protocols;\n    }\n    getProtocolString(kind, baseClass = undefined) {\n        let protocols = this.getProtocolsArray(kind);\n        if (baseClass) {\n            protocols.unshift(baseClass);\n        }\n        return protocols.length > 0 ? \": \" + protocols.join(\", \") : \"\";\n    }\n    getEnumPropertyGroups(c) {\n        let groups = [];\n        let group = [];\n        this.forEachClassProperty(c, \"none\", (name, jsonName) => {\n            const label = stringEscape(jsonName);\n            const redundant = this.sourcelikeToString(name) === label;\n            if (this._options.dense && redundant) {\n                group.push({ name });\n            }\n            else {\n                if (group.length > 0) {\n                    groups.push(group);\n                    group = [];\n                }\n                groups.push([{ name, label }]);\n            }\n        });\n        if (group.length > 0) {\n            groups.push(group);\n        }\n        return groups;\n    }\n    /// Access level with trailing space (e.g. \"public \"), or empty string\n    get accessLevel() {\n        return this._options.accessLevel === \"internal\"\n            ? \"\" // internal is default, so we don't have to emit it\n            : this._options.accessLevel + \" \";\n    }\n    get objcMembersDeclaration() {\n        if (this._options.objcSupport) {\n            return \"@objcMembers \";\n        }\n        return \"\";\n    }\n    /// startFile takes a file name, appends \".swift\" to it and sets it as the current filename.\n    startFile(basename) {\n        if (this._options.multiFileOutput === false) {\n            return;\n        }\n        (0, Support_1.assert)(this._currentFilename === undefined, \"Previous file wasn't finished: \" + this._currentFilename);\n        // FIXME: The filenames should actually be Sourcelikes, too\n        this._currentFilename = `${this.sourcelikeToString(basename)}.swift`;\n        this.initializeEmitContextForFilename(this._currentFilename);\n    }\n    /// endFile pushes the current file name onto the collection of finished files and then resets the current file name. These finished files are used in index.ts to write the output.\n    endFile() {\n        if (this._options.multiFileOutput === false) {\n            return;\n        }\n        this.finishFile((0, Support_1.defined)(this._currentFilename));\n        this._currentFilename = undefined;\n    }\n    propertyLinesDefinition(name, parameter) {\n        const useMutableProperties = this._options.mutableProperties;\n        return [\n            this.accessLevel,\n            useMutableProperties ? \"var \" : \"let \",\n            name,\n            \": \",\n            this.swiftPropertyType(parameter)\n        ];\n    }\n    renderClassDefinition(c, className) {\n        this.startFile(className);\n        this.renderHeader(c, className);\n        this.emitDescription(this.descriptionForType(c));\n        this.emitMark(this.sourcelikeToString(className), true);\n        const isClass = this._options.useClasses || this.isCycleBreakerType(c);\n        const structOrClass = isClass ? \"class\" : \"struct\";\n        if (isClass && this._options.objcSupport) {\n            // [Michael Fey (@MrRooni), 2019-4-24] Swift 5 or greater, must come before the access declaration for the class.\n            this.emitItem(this.objcMembersDeclaration);\n        }\n        this.emitBlockWithAccess([structOrClass, \" \", className, this.getProtocolString(structOrClass)], () => {\n            if (this._options.dense) {\n                let lastProperty = undefined;\n                let lastNames = [];\n                const emitLastProperty = () => {\n                    if (lastProperty === undefined)\n                        return;\n                    const useMutableProperties = this._options.mutableProperties;\n                    let sources = [\n                        [\n                            this._options.optionalEnums && lastProperty.type.kind === \"enum\"\n                                ? `@OptionallyDecodable `\n                                : \"\",\n                            this.accessLevel,\n                            useMutableProperties || (this._options.optionalEnums && lastProperty.type.kind === \"enum\")\n                                ? \"var \"\n                                : \"let \"\n                        ]\n                    ];\n                    lastNames.forEach((n, i) => {\n                        if (i > 0)\n                            sources.push(\", \");\n                        sources.push(n);\n                    });\n                    sources.push(\": \");\n                    sources.push(this.swiftPropertyType(lastProperty));\n                    this.emitLine(sources);\n                    lastProperty = undefined;\n                    lastNames = [];\n                };\n                this.forEachClassProperty(c, \"none\", (name, jsonName, p) => {\n                    const description = this.descriptionForClassProperty(c, jsonName);\n                    if (!p.equals(lastProperty) ||\n                        lastNames.length >= MAX_SAMELINE_PROPERTIES ||\n                        description !== undefined) {\n                        emitLastProperty();\n                    }\n                    if (lastProperty === undefined) {\n                        lastProperty = p;\n                    }\n                    lastNames.push(name);\n                    if (description !== undefined) {\n                        this.emitDescription(description);\n                        emitLastProperty();\n                    }\n                });\n                emitLastProperty();\n            }\n            else {\n                this.forEachClassProperty(c, \"none\", (name, jsonName, p) => {\n                    const description = this.descriptionForClassProperty(c, jsonName);\n                    const propertyLines = this.propertyLinesDefinition(name, p);\n                    this.emitDescription(description);\n                    this.emitLine(propertyLines);\n                });\n            }\n            if (!this._options.justTypes) {\n                const groups = this.getEnumPropertyGroups(c);\n                const allPropertiesRedundant = groups.every(group => {\n                    return group.every(p => p.label === undefined);\n                });\n                if (!allPropertiesRedundant && c.getProperties().size > 0) {\n                    this.ensureBlankLine();\n                    this.emitBlock(\"enum CodingKeys: String, CodingKey\", () => {\n                        for (const group of groups) {\n                            const { name, label } = group[0];\n                            if (this._options.explicitCodingKeys && label !== undefined) {\n                                this.emitLine(\"case \", name, ' = \"', label, '\"');\n                            }\n                            else {\n                                const names = (0, collection_utils_1.arrayIntercalate)(\", \", group.map(p => p.name));\n                                this.emitLine(\"case \", names);\n                            }\n                        }\n                    });\n                }\n            }\n            // this main initializer must be defined within the class\n            // declaration since it assigns let constants\n            if (isClass ||\n                // Public structs need explicit initializers\n                // https://github.com/quicktype/quicktype/issues/899\n                this._options.accessLevel === \"public\") {\n                // Make an initializer that initalizes all fields\n                this.ensureBlankLine();\n                let initProperties = this.initializableProperties(c);\n                let propertiesLines = [];\n                for (let property of initProperties) {\n                    if (propertiesLines.length > 0)\n                        propertiesLines.push(\", \");\n                    propertiesLines.push(property.name, \": \", this.swiftPropertyType(property.parameter));\n                }\n                if (this.propertyCount(c) === 0 && this._options.objcSupport) {\n                    this.emitBlockWithAccess([\"override init()\"], () => {\n                        return \"\";\n                    });\n                }\n                else {\n                    this.emitBlockWithAccess([\"init(\", ...propertiesLines, \")\"], () => {\n                        for (let property of initProperties) {\n                            this.emitLine(\"self.\", property.name, \" = \", property.name);\n                        }\n                    });\n                }\n            }\n        });\n        if (!this._options.justTypes) {\n            // FIXME: We emit only the MARK line for top-level-enum.schema\n            if (this._options.convenienceInitializers) {\n                this.ensureBlankLine();\n                this.emitMark(this.sourcelikeToString(className) + \" convenience initializers and mutators\");\n                this.ensureBlankLine();\n                this.emitConvenienceInitializersExtension(c, className);\n                this.ensureBlankLine();\n            }\n        }\n        this.endFile();\n    }\n    initializableProperties(c) {\n        const properties = [];\n        this.forEachClassProperty(c, \"none\", (name, jsonName, parameter, position) => {\n            const property = { name, jsonName, parameter, position };\n            properties.push(property);\n        });\n        return properties;\n    }\n    emitNewEncoderDecoder() {\n        this.emitBlock(\"func newJSONDecoder() -> JSONDecoder\", () => {\n            this.emitLine(\"let decoder = JSONDecoder()\");\n            if (!this._options.linux) {\n                this.emitBlock(\"if #available(iOS 10.0, OSX 10.12, tvOS 10.0, watchOS 3.0, *)\", () => {\n                    this.emitLine(\"decoder.dateDecodingStrategy = .iso8601\");\n                });\n            }\n            else {\n                this.emitMultiline(`decoder.dateDecodingStrategy = .custom({ (decoder) -> Date in\n    let container = try decoder.singleValueContainer()\n    let dateStr = try container.decode(String.self)\n\n    let formatter = DateFormatter()\n    formatter.calendar = Calendar(identifier: .iso8601)\n    formatter.locale = Locale(identifier: \"en_US_POSIX\")\n    formatter.timeZone = TimeZone(secondsFromGMT: 0)\n    formatter.dateFormat = \"yyyy-MM-dd'T'HH:mm:ss.SSSXXXXX\"\n    if let date = formatter.date(from: dateStr) {\n        return date\n    }\n    formatter.dateFormat = \"yyyy-MM-dd'T'HH:mm:ssXXXXX\"\n    if let date = formatter.date(from: dateStr) {\n        return date\n    }\n    throw DecodingError.typeMismatch(Date.self, DecodingError.Context(codingPath: decoder.codingPath, debugDescription: \"Could not decode date\"))\n})`);\n            }\n            this.emitLine(\"return decoder\");\n        });\n        this.ensureBlankLine();\n        this.emitBlock(\"func newJSONEncoder() -> JSONEncoder\", () => {\n            this.emitLine(\"let encoder = JSONEncoder()\");\n            if (!this._options.linux) {\n                this.emitBlock(\"if #available(iOS 10.0, OSX 10.12, tvOS 10.0, watchOS 3.0, *)\", () => {\n                    this.emitLine(\"encoder.dateEncodingStrategy = .iso8601\");\n                });\n            }\n            else {\n                this.emitMultiline(`let formatter = DateFormatter()\nformatter.calendar = Calendar(identifier: .iso8601)\nformatter.locale = Locale(identifier: \"en_US_POSIX\")\nformatter.timeZone = TimeZone(secondsFromGMT: 0)\nformatter.dateFormat = \"yyyy-MM-dd'T'HH:mm:ssXXXXX\"\nencoder.dateEncodingStrategy = .formatted(formatter)`);\n            }\n            this.emitLine(\"return encoder\");\n        });\n    }\n    emitConvenienceInitializersExtension(c, className) {\n        const isClass = this._options.useClasses || this.isCycleBreakerType(c);\n        const convenience = isClass ? \"convenience \" : \"\";\n        this.emitBlockWithAccess([\"extension \", className], () => {\n            if (isClass) {\n                this.emitBlock(\"convenience init(data: Data) throws\", () => {\n                    if (this.propertyCount(c) > 0) {\n                        this.emitLine(\"let me = try newJSONDecoder().decode(\", this.swiftType(c), \".self, from: data)\");\n                    }\n                    else {\n                        this.emitLine(\"let _ = try newJSONDecoder().decode(\", this.swiftType(c), \".self, from: data)\");\n                    }\n                    let args = [];\n                    this.forEachClassProperty(c, \"none\", name => {\n                        if (args.length > 0)\n                            args.push(\", \");\n                        args.push(name, \": \", \"me.\", name);\n                    });\n                    this.emitLine(\"self.init(\", ...args, \")\");\n                });\n            }\n            else {\n                this.emitBlock(\"init(data: Data) throws\", () => {\n                    this.emitLine(\"self = try newJSONDecoder().decode(\", this.swiftType(c), \".self, from: data)\");\n                });\n            }\n            this.ensureBlankLine();\n            this.emitBlock([convenience, \"init(_ json: String, using encoding: String.Encoding = .utf8) throws\"], () => {\n                this.emitBlock(\"guard let data = json.data(using: encoding) else\", () => {\n                    this.emitLine(`throw NSError(domain: \"JSONDecoding\", code: 0, userInfo: nil)`);\n                });\n                this.emitLine(\"try self.init(data: data)\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock([convenience, `init(fromURL url: URL) throws`], () => {\n                this.emitLine(\"try self.init(data: try Data(contentsOf: url))\");\n            });\n            this.ensureBlankLine();\n            this.emitConvenienceMutator(c, className);\n            // Convenience serializers\n            this.ensureBlankLine();\n            this.emitBlock(`func jsonData() throws -> Data`, () => {\n                this.emitLine(\"return try newJSONEncoder().encode(self)\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock(`func jsonString(encoding: String.Encoding = .utf8) throws -> String?`, () => {\n                this.emitLine(\"return String(data: try self.jsonData(), encoding: encoding)\");\n            });\n        });\n    }\n    renderEnumDefinition(e, enumName) {\n        this.startFile(enumName);\n        this.emitLineOnce(\"import Foundation\");\n        this.ensureBlankLine();\n        this.emitDescription(this.descriptionForType(e));\n        const protocolString = this.getProtocolString(\"enum\", \"String\");\n        if (this._options.justTypes) {\n            this.emitBlockWithAccess([\"enum \", enumName, protocolString], () => {\n                this.forEachEnumCase(e, \"none\", name => {\n                    this.emitLine(\"case \", name);\n                });\n            });\n        }\n        else {\n            this.emitBlockWithAccess([\"enum \", enumName, protocolString], () => {\n                this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n                    this.emitLine(\"case \", name, ' = \"', stringEscape(jsonName), '\"');\n                });\n            });\n        }\n        this.endFile();\n    }\n    renderUnionDefinition(u, unionName) {\n        this.startFile(unionName);\n        this.emitLineOnce(\"import Foundation\");\n        this.ensureBlankLine();\n        function sortBy(t) {\n            const kind = t.kind;\n            if (kind === \"class\")\n                return kind;\n            return \"_\" + kind;\n        }\n        const renderUnionCase = (t) => {\n            this.emitBlock([\"if let x = try? container.decode(\", this.swiftType(t), \".self)\"], () => {\n                this.emitLine(\"self = .\", this.nameForUnionMember(u, t), \"(x)\");\n                this.emitLine(\"return\");\n            });\n        };\n        this.emitDescription(this.descriptionForType(u));\n        const indirect = this.isCycleBreakerType(u) ? \"indirect \" : \"\";\n        const [maybeNull, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(u, sortBy);\n        this.emitBlockWithAccess([indirect, \"enum \", unionName, this.getProtocolString(\"enum\")], () => {\n            this.forEachUnionMember(u, nonNulls, \"none\", null, (name, t) => {\n                this.emitLine(\"case \", name, \"(\", this.swiftType(t), \")\");\n            });\n            if (maybeNull !== null) {\n                this.emitLine(\"case \", this.nameForUnionMember(u, maybeNull));\n            }\n            if (!this._options.justTypes) {\n                this.ensureBlankLine();\n                this.emitBlockWithAccess(\"init(from decoder: Decoder) throws\", () => {\n                    this.emitLine(\"let container = try decoder.singleValueContainer()\");\n                    const boolMember = u.findMember(\"bool\");\n                    if (boolMember !== undefined)\n                        renderUnionCase(boolMember);\n                    const integerMember = u.findMember(\"integer\");\n                    if (integerMember !== undefined)\n                        renderUnionCase(integerMember);\n                    for (const t of nonNulls) {\n                        if (t.kind === \"bool\" || t.kind === \"integer\")\n                            continue;\n                        renderUnionCase(t);\n                    }\n                    if (maybeNull !== null) {\n                        this.emitBlock(\"if container.decodeNil()\", () => {\n                            this.emitLine(\"self = .\", this.nameForUnionMember(u, maybeNull));\n                            this.emitLine(\"return\");\n                        });\n                    }\n                    this.emitDecodingError(unionName);\n                });\n                this.ensureBlankLine();\n                this.emitBlockWithAccess(\"func encode(to encoder: Encoder) throws\", () => {\n                    this.emitLine(\"var container = encoder.singleValueContainer()\");\n                    this.emitLine(\"switch self {\");\n                    this.forEachUnionMember(u, nonNulls, \"none\", null, (name, _) => {\n                        this.emitLine(\"case .\", name, \"(let x):\");\n                        this.indent(() => this.emitLine(\"try container.encode(x)\"));\n                    });\n                    if (maybeNull !== null) {\n                        this.emitLine(\"case .\", this.nameForUnionMember(u, maybeNull), \":\");\n                        this.indent(() => this.emitLine(\"try container.encodeNil()\"));\n                    }\n                    this.emitLine(\"}\");\n                });\n            }\n        });\n        this.endFile();\n    }\n    emitTopLevelMapAndArrayConvenienceInitializerExtensions(t, name) {\n        let extensionSource;\n        if (t instanceof Type_1.ArrayType) {\n            extensionSource = [\"Array where Element == \", name, \".Element\"];\n        }\n        else if (t instanceof Type_1.MapType) {\n            extensionSource = [\"Dictionary where Key == String, Value == \", this.swiftType(t.values)];\n        }\n        else {\n            return;\n        }\n        this.emitBlockWithAccess([\"extension \", extensionSource], () => {\n            this.emitBlock([\"init(data: Data) throws\"], () => {\n                this.emitLine(\"self = try newJSONDecoder().decode(\", name, \".self, from: data)\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock(\"init(_ json: String, using encoding: String.Encoding = .utf8) throws\", () => {\n                this.emitBlock(\"guard let data = json.data(using: encoding) else\", () => {\n                    this.emitLine(`throw NSError(domain: \"JSONDecoding\", code: 0, userInfo: nil)`);\n                });\n                this.emitLine(\"try self.init(data: data)\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock(`init(fromURL url: URL) throws`, () => {\n                this.emitLine(\"try self.init(data: try Data(contentsOf: url))\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock(\"func jsonData() throws -> Data\", () => {\n                this.emitLine(\"return try newJSONEncoder().encode(self)\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock(\"func jsonString(encoding: String.Encoding = .utf8) throws -> String?\", () => {\n                this.emitLine(\"return String(data: try self.jsonData(), encoding: encoding)\");\n            });\n        });\n    }\n    emitDecodingError(name) {\n        this.emitLine(\"throw DecodingError.typeMismatch(\", name, '.self, DecodingError.Context(codingPath: decoder.codingPath, debugDescription: \"Wrong type for ', name, '\"))');\n    }\n    emitConvenienceMutator(c, className) {\n        this.emitLine(\"func with(\");\n        this.indent(() => {\n            this.forEachClassProperty(c, \"none\", (name, _, p, position) => {\n                this.emitLine(name, \": \", this.swiftPropertyType(p), \"? = nil\", position !== \"only\" && position !== \"last\" ? \",\" : \"\");\n            });\n        });\n        this.emitBlock([\") -> \", className], () => {\n            this.emitLine(\"return \", className, \"(\");\n            this.indent(() => {\n                this.forEachClassProperty(c, \"none\", (name, _, _p, position) => {\n                    this.emitLine(name, \": \", name, \" ?? self.\", name, position !== \"only\" && position !== \"last\" ? \",\" : \"\");\n                });\n            });\n            this.emitLine(\")\");\n        });\n    }\n    emitMark(line, horizontalLine = false) {\n        this.emitLine(\"// MARK:\", horizontalLine ? \" - \" : \" \", line);\n    }\n    emitSourceStructure() {\n        if (this._options.multiFileOutput === false) {\n            this.renderSingleFileHeaderComments();\n        }\n        this.forEachNamedType(\"leading-and-interposing\", (c, className) => this.renderClassDefinition(c, className), (e, enumName) => this.renderEnumDefinition(e, enumName), (u, unionName) => this.renderUnionDefinition(u, unionName));\n        if (!this._options.justTypes) {\n            this.emitSupportFunctions4();\n        }\n    }\n    emitAlamofireExtension() {\n        this.ensureBlankLine();\n        this.emitBlockWithAccess(\"extension DataRequest\", () => {\n            this\n                .emitMultiline(`fileprivate func decodableResponseSerializer<T: Decodable>() -> DataResponseSerializer<T> {\n    return DataResponseSerializer { _, response, data, error in\n        guard error == nil else { return .failure(error!) }\n        \n        guard let data = data else {\n            return .failure(AFError.responseSerializationFailed(reason: .inputDataNil))\n        }\n        \n        return Result { try newJSONDecoder().decode(T.self, from: data) }\n    }\n}\n\n@discardableResult\nfileprivate func responseDecodable<T: Decodable>(queue: DispatchQueue? = nil, completionHandler: @escaping (DataResponse<T>) -> Void) -> Self {\n    return response(queue: queue, responseSerializer: decodableResponseSerializer(), completionHandler: completionHandler)\n}`);\n            this.ensureBlankLine();\n            this.forEachTopLevel(\"leading-and-interposing\", (_, name) => {\n                this.emitLine(\"@discardableResult\");\n                this.emitBlock([\n                    \"func response\",\n                    name,\n                    \"(queue: DispatchQueue? = nil, completionHandler: @escaping (DataResponse<\",\n                    name,\n                    \">) -> Void) -> Self\"\n                ], () => {\n                    this.emitLine(`return responseDecodable(queue: queue, completionHandler: completionHandler)`);\n                });\n            });\n        });\n    }\n}\nexports.SwiftRenderer = SwiftRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KotlinXRenderer = exports.KotlinJacksonRenderer = exports.KotlinKlaxonRenderer = exports.KotlinRenderer = exports.KotlinTargetLanguage = exports.kotlinOptions = exports.Framework = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Annotation_1 = require(\"../Annotation\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst Naming_1 = require(\"../Naming\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst Source_1 = require(\"../Source\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Support_1 = require(\"../support/Support\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Acronyms_1 = require(\"../support/Acronyms\");\nvar Framework;\n(function (Framework) {\n    Framework[Framework[\"None\"] = 0] = \"None\";\n    Framework[Framework[\"Jackson\"] = 1] = \"Jackson\";\n    Framework[Framework[\"Klaxon\"] = 2] = \"Klaxon\";\n    Framework[Framework[\"KotlinX\"] = 3] = \"KotlinX\";\n})(Framework = exports.Framework || (exports.Framework = {}));\nexports.kotlinOptions = {\n    framework: new RendererOptions_1.EnumOption(\"framework\", \"Serialization framework\", [\n        [\"just-types\", Framework.None],\n        [\"jackson\", Framework.Jackson],\n        [\"klaxon\", Framework.Klaxon],\n        [\"kotlinx\", Framework.KotlinX]\n    ], \"klaxon\"),\n    acronymStyle: (0, Acronyms_1.acronymOption)(Acronyms_1.AcronymStyleOptions.Pascal),\n    packageName: new RendererOptions_1.StringOption(\"package\", \"Package\", \"PACKAGE\", \"quicktype\")\n};\nclass KotlinTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor() {\n        super(\"Kotlin\", [\"kotlin\"], \"kt\");\n    }\n    getOptions() {\n        return [exports.kotlinOptions.framework, exports.kotlinOptions.acronymStyle, exports.kotlinOptions.packageName];\n    }\n    get supportsOptionalClassProperties() {\n        return true;\n    }\n    get supportsUnionsWithBothNumberTypes() {\n        return true;\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        const options = (0, RendererOptions_1.getOptionValues)(exports.kotlinOptions, untypedOptionValues);\n        switch (options.framework) {\n            case Framework.None:\n                return new KotlinRenderer(this, renderContext, options);\n            case Framework.Jackson:\n                return new KotlinJacksonRenderer(this, renderContext, options);\n            case Framework.Klaxon:\n                return new KotlinKlaxonRenderer(this, renderContext, options);\n            case Framework.KotlinX:\n                return new KotlinXRenderer(this, renderContext, options);\n            default:\n                return (0, Support_1.assertNever)(options.framework);\n        }\n    }\n}\nexports.KotlinTargetLanguage = KotlinTargetLanguage;\nconst keywords = [\n    \"package\",\n    \"as\",\n    \"typealias\",\n    \"class\",\n    \"this\",\n    \"super\",\n    \"val\",\n    \"var\",\n    \"fun\",\n    \"for\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"is\",\n    \"in\",\n    \"throw\",\n    \"return\",\n    \"break\",\n    \"continue\",\n    \"object\",\n    \"if\",\n    \"try\",\n    \"else\",\n    \"while\",\n    \"do\",\n    \"when\",\n    \"interface\",\n    \"typeof\",\n    \"klaxon\",\n    \"toJson\",\n    \"Any\",\n    \"Boolean\",\n    \"Double\",\n    \"Float\",\n    \"Long\",\n    \"Int\",\n    \"Short\",\n    \"System\",\n    \"Byte\",\n    \"String\",\n    \"Array\",\n    \"List\",\n    \"Map\",\n    \"Enum\",\n    \"Class\",\n    \"JsonObject\",\n    \"JsonValue\",\n    \"Converter\",\n    \"Klaxon\"\n];\nfunction isPartCharacter(codePoint) {\n    return (0, Strings_1.isLetterOrUnderscore)(codePoint) || (0, Strings_1.isNumeric)(codePoint);\n}\nfunction isStartCharacter(codePoint) {\n    return isPartCharacter(codePoint) && !(0, Strings_1.isDigit)(codePoint);\n}\nconst legalizeName = (0, Strings_1.legalizeCharacters)(isPartCharacter);\nfunction kotlinNameStyle(isUpper, original, acronymsStyle = Strings_1.allUpperWordStyle) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    return (0, Strings_1.combineWords)(words, legalizeName, isUpper ? Strings_1.firstUpperWordStyle : Strings_1.allLowerWordStyle, Strings_1.firstUpperWordStyle, isUpper ? Strings_1.allUpperWordStyle : Strings_1.allLowerWordStyle, acronymsStyle, \"\", isStartCharacter);\n}\nfunction unicodeEscape(codePoint) {\n    return \"\\\\u\" + (0, Strings_1.intToHex)(codePoint, 4);\n}\nconst _stringEscape = (0, Strings_1.utf32ConcatMap)((0, Strings_1.escapeNonPrintableMapper)(Strings_1.isPrintable, unicodeEscape));\nfunction stringEscape(s) {\n    // \"$this\" is a template string in Kotlin so we have to escape $\n    return _stringEscape(s).replace(/\\$/g, \"\\\\$\");\n}\nclass KotlinRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _kotlinOptions) {\n        super(targetLanguage, renderContext);\n        this._kotlinOptions = _kotlinOptions;\n    }\n    forbiddenNamesForGlobalNamespace() {\n        return keywords;\n    }\n    forbiddenForObjectProperties(_o, _classNamed) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    forbiddenForEnumCases(_e, _enumName) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    forbiddenForUnionMembers(_u, _unionName) {\n        return { names: [], includeGlobalForbidden: false };\n    }\n    topLevelNameStyle(rawName) {\n        return kotlinNameStyle(true, rawName);\n    }\n    makeNamedTypeNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"upper\", s => kotlinNameStyle(true, s, (0, Acronyms_1.acronymStyle)(this._kotlinOptions.acronymStyle)));\n    }\n    namerForObjectProperty() {\n        return (0, Naming_1.funPrefixNamer)(\"lower\", s => kotlinNameStyle(false, s, (0, Acronyms_1.acronymStyle)(this._kotlinOptions.acronymStyle)));\n    }\n    makeUnionMemberNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"upper\", s => kotlinNameStyle(true, s) + \"Value\");\n    }\n    makeEnumCaseNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"upper\", s => kotlinNameStyle(true, s, (0, Acronyms_1.acronymStyle)(this._kotlinOptions.acronymStyle)));\n    }\n    emitDescriptionBlock(lines) {\n        this.emitCommentLines(lines, { lineStart: \" * \", beforeComment: \"/**\", afterComment: \" */\" });\n    }\n    emitBlock(line, f, delimiter = \"curly\") {\n        const [open, close] = delimiter === \"curly\" ? [\"{\", \"}\"] : delimiter === \"paren\" ? [\"(\", \")\"] : [\"{\", \"})\"];\n        this.emitLine(line, \" \", open);\n        this.indent(f);\n        this.emitLine(close);\n    }\n    anySourceType(optional) {\n        return [\"Any\", optional];\n    }\n    // (asarazan): I've broken out the following two functions\n    // because some renderers, such as kotlinx, can cope with `any`, while some get mad.\n    arrayType(arrayType, withIssues = false, _noOptional = false) {\n        return [\"List<\", this.kotlinType(arrayType.items, withIssues), \">\"];\n    }\n    mapType(mapType, withIssues = false, _noOptional = false) {\n        return [\"Map<String, \", this.kotlinType(mapType.values, withIssues), \">\"];\n    }\n    kotlinType(t, withIssues = false, noOptional = false) {\n        const optional = noOptional ? \"\" : \"?\";\n        return (0, TypeUtils_1.matchType)(t, _anyType => {\n            return (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.anyTypeIssueAnnotation, this.anySourceType(optional));\n        }, _nullType => {\n            return (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.nullTypeIssueAnnotation, this.anySourceType(optional));\n        }, _boolType => \"Boolean\", _integerType => \"Long\", _doubleType => \"Double\", _stringType => \"String\", arrayType => this.arrayType(arrayType, withIssues), classType => this.nameForNamedType(classType), mapType => this.mapType(mapType, withIssues), enumType => this.nameForNamedType(enumType), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null)\n                return [this.kotlinType(nullable, withIssues), optional];\n            return this.nameForNamedType(unionType);\n        });\n    }\n    emitUsageHeader() {\n        // To be overridden\n    }\n    emitHeader() {\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n        }\n        else {\n            this.emitUsageHeader();\n        }\n        this.ensureBlankLine();\n        this.emitLine(\"package \", this._kotlinOptions.packageName);\n        this.ensureBlankLine();\n    }\n    emitTopLevelArray(t, name) {\n        const elementType = this.kotlinType(t.items);\n        this.emitLine([\"typealias \", name, \" = ArrayList<\", elementType, \">\"]);\n    }\n    emitTopLevelMap(t, name) {\n        const elementType = this.kotlinType(t.values);\n        this.emitLine([\"typealias \", name, \" = HashMap<String, \", elementType, \">\"]);\n    }\n    emitEmptyClassDefinition(c, className) {\n        this.emitDescription(this.descriptionForType(c));\n        this.emitClassAnnotations(c, className);\n        this.emitLine(\"class \", className, \"()\");\n    }\n    emitClassDefinition(c, className) {\n        if (c.getProperties().size === 0) {\n            this.emitEmptyClassDefinition(c, className);\n            return;\n        }\n        const kotlinType = (p) => {\n            if (p.isOptional) {\n                return [this.kotlinType(p.type, true, true), \"?\"];\n            }\n            else {\n                return this.kotlinType(p.type, true);\n            }\n        };\n        this.emitDescription(this.descriptionForType(c));\n        this.emitClassAnnotations(c, className);\n        this.emitLine(\"data class \", className, \" (\");\n        this.indent(() => {\n            let count = c.getProperties().size;\n            let first = true;\n            this.forEachClassProperty(c, \"none\", (name, jsonName, p) => {\n                const nullable = p.type.kind === \"union\" && (0, TypeUtils_1.nullableFromUnion)(p.type) !== null;\n                const nullableOrOptional = p.isOptional || p.type.kind === \"null\" || nullable;\n                const last = --count === 0;\n                let meta = [];\n                const description = this.descriptionForClassProperty(c, jsonName);\n                if (description !== undefined) {\n                    meta.push(() => this.emitDescription(description));\n                }\n                this.renameAttribute(name, jsonName, !nullableOrOptional, meta);\n                if (meta.length > 0 && !first) {\n                    this.ensureBlankLine();\n                }\n                for (const emit of meta) {\n                    emit();\n                }\n                this.emitLine(\"val \", name, \": \", kotlinType(p), nullableOrOptional ? \" = null\" : \"\", last ? \"\" : \",\");\n                if (meta.length > 0 && !last) {\n                    this.ensureBlankLine();\n                }\n                first = false;\n            });\n        });\n        this.emitClassDefinitionMethods(c, className);\n    }\n    emitClassDefinitionMethods(_c, _className) {\n        this.emitLine(\")\");\n    }\n    emitClassAnnotations(_c, _className) {\n        // to be overridden\n    }\n    renameAttribute(_name, _jsonName, _required, _meta) {\n        // to be overridden\n    }\n    emitEnumDefinition(e, enumName) {\n        this.emitDescription(this.descriptionForType(e));\n        this.emitBlock([\"enum class \", enumName], () => {\n            let count = e.cases.size;\n            this.forEachEnumCase(e, \"none\", name => {\n                this.emitLine(name, --count === 0 ? \"\" : \",\");\n            });\n        });\n    }\n    emitUnionDefinition(u, unionName) {\n        function sortBy(t) {\n            const kind = t.kind;\n            if (kind === \"class\")\n                return kind;\n            return \"_\" + kind;\n        }\n        this.emitDescription(this.descriptionForType(u));\n        const [maybeNull, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(u, sortBy);\n        this.emitClassAnnotations(u, unionName);\n        this.emitBlock([\"sealed class \", unionName], () => {\n            {\n                let table = [];\n                this.forEachUnionMember(u, nonNulls, \"none\", null, (name, t) => {\n                    table.push([\n                        [\"class \", name, \"(val value: \", this.kotlinType(t), \")\"],\n                        [\" : \", unionName, \"()\"]\n                    ]);\n                });\n                if (maybeNull !== null) {\n                    table.push([\n                        [\"class \", this.nameForUnionMember(u, maybeNull), \"()\"],\n                        [\" : \", unionName, \"()\"]\n                    ]);\n                }\n                this.emitTable(table);\n            }\n            this.emitUnionDefinitionMethods(u, nonNulls, maybeNull, unionName);\n        });\n    }\n    emitUnionDefinitionMethods(_u, _nonNulls, _maybeNull, _unionName) {\n        // to be overridden\n    }\n    emitSourceStructure() {\n        this.emitHeader();\n        // Top-level arrays, maps\n        this.forEachTopLevel(\"leading\", (t, name) => {\n            if (t instanceof Type_1.ArrayType) {\n                this.emitTopLevelArray(t, name);\n            }\n            else if (t instanceof Type_1.MapType) {\n                this.emitTopLevelMap(t, name);\n            }\n        });\n        this.forEachNamedType(\"leading-and-interposing\", (c, n) => this.emitClassDefinition(c, n), (e, n) => this.emitEnumDefinition(e, n), (u, n) => this.emitUnionDefinition(u, n));\n    }\n}\nexports.KotlinRenderer = KotlinRenderer;\nclass KotlinKlaxonRenderer extends KotlinRenderer {\n    constructor(targetLanguage, renderContext, _kotlinOptions) {\n        super(targetLanguage, renderContext, _kotlinOptions);\n    }\n    unionMemberFromJsonValue(t, e) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => [e, \".inside\"], _nullType => \"null\", _boolType => [e, \".boolean\"], _integerType => [\"(\", e, \".int?.toLong() ?: \", e, \".longValue)\"], _doubleType => [e, \".double\"], _stringType => [e, \".string\"], arrayType => [e, \".array?.let { klaxon.parseFromJsonArray<\", this.kotlinType(arrayType.items), \">(it) }\"], _classType => [e, \".obj?.let { klaxon.parseFromJsonObject<\", this.kotlinType(t), \">(it) }\"], _mapType => [e, \".obj?.let { klaxon.parseFromJsonObject<\", this.kotlinType(t), \">(it) }\"], enumType => [e, \".string?.let { \", this.kotlinType(enumType), \".fromValue(it) }\"], _unionType => (0, Support_1.mustNotHappen)());\n    }\n    unionMemberJsonValueGuard(t, _e) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => \"is Any\", _nullType => \"null\", _boolType => \"is Boolean\", _integerType => \"is Int, is Long\", _doubleType => \"is Double\", _stringType => \"is String\", _arrayType => \"is JsonArray<*>\", \n        // These could be stricter, but for now we don't allow maps\n        // and objects in the same union\n        _classType => \"is JsonObject\", _mapType => \"is JsonObject\", \n        // This could be stricter, but for now we don't allow strings\n        // and enums in the same union\n        _enumType => \"is String\", _unionType => (0, Support_1.mustNotHappen)());\n    }\n    emitUsageHeader() {\n        this.emitLine(\"// To parse the JSON, install Klaxon and do:\");\n        this.emitLine(\"//\");\n        this.forEachTopLevel(\"none\", (_, name) => {\n            this.emitLine(\"//   val \", (0, Source_1.modifySource)(Strings_1.camelCase, name), \" = \", name, \".fromJson(jsonString)\");\n        });\n    }\n    emitHeader() {\n        super.emitHeader();\n        this.emitLine(\"import com.beust.klaxon.*\");\n        const hasUnions = (0, collection_utils_1.iterableSome)(this.typeGraph.allNamedTypes(), t => t instanceof Type_1.UnionType && (0, TypeUtils_1.nullableFromUnion)(t) === null);\n        const hasEmptyObjects = (0, collection_utils_1.iterableSome)(this.typeGraph.allNamedTypes(), c => c instanceof Type_1.ClassType && c.getProperties().size === 0);\n        if (hasUnions || this.haveEnums || hasEmptyObjects) {\n            this.emitGenericConverter();\n        }\n        let converters = [];\n        if (hasEmptyObjects) {\n            converters.push([[\".convert(JsonObject::class,\"], [\" { it.obj!! },\"], [\" { it.toJsonString() })\"]]);\n        }\n        this.forEachEnum(\"none\", (_, name) => {\n            converters.push([\n                [\".convert(\", name, \"::class,\"],\n                [\" { \", name, \".fromValue(it.string!!) },\"],\n                [' { \"\\\\\"${it.value}\\\\\"\" })']\n            ]);\n        });\n        this.forEachUnion(\"none\", (_, name) => {\n            converters.push([\n                [\".convert(\", name, \"::class,\"],\n                [\" { \", name, \".fromJson(it) },\"],\n                [\" { it.toJson() }, true)\"]\n            ]);\n        });\n        this.ensureBlankLine();\n        this.emitLine(\"private val klaxon = Klaxon()\");\n        if (converters.length > 0) {\n            this.indent(() => this.emitTable(converters));\n        }\n    }\n    emitTopLevelArray(t, name) {\n        const elementType = this.kotlinType(t.items);\n        this.emitBlock([\"class \", name, \"(elements: Collection<\", elementType, \">) : ArrayList<\", elementType, \">(elements)\"], () => {\n            this.emitLine(\"public fun toJson() = klaxon.toJsonString(this)\");\n            this.ensureBlankLine();\n            this.emitBlock(\"companion object\", () => {\n                this.emitLine(\"public fun fromJson(json: String) = \", name, \"(klaxon.parseArray<\", elementType, \">(json)!!)\");\n            });\n        });\n    }\n    emitTopLevelMap(t, name) {\n        const elementType = this.kotlinType(t.values);\n        this.emitBlock([\n            \"class \",\n            name,\n            \"(elements: Map<String, \",\n            elementType,\n            \">) : HashMap<String, \",\n            elementType,\n            \">(elements)\"\n        ], () => {\n            this.emitLine(\"public fun toJson() = klaxon.toJsonString(this)\");\n            this.ensureBlankLine();\n            this.emitBlock(\"companion object\", () => {\n                this.emitBlock([\"public fun fromJson(json: String) = \", name], () => {\n                    this.emitLine(\"klaxon.parseJsonObject(java.io.StringReader(json)) as Map<String, \", elementType, \">\");\n                }, \"paren\");\n            });\n        });\n    }\n    klaxonRenameAttribute(propName, jsonName, ignore = false) {\n        const escapedName = stringEscape(jsonName);\n        const namesDiffer = this.sourcelikeToString(propName) !== escapedName;\n        const properties = [];\n        if (namesDiffer) {\n            properties.push(['name = \"', escapedName, '\"']);\n        }\n        if (ignore) {\n            properties.push(\"ignored = true\");\n        }\n        return properties.length === 0 ? undefined : [\"@Json(\", (0, collection_utils_1.arrayIntercalate)(\", \", properties), \")\"];\n    }\n    emitEmptyClassDefinition(c, className) {\n        this.emitDescription(this.descriptionForType(c));\n        this.emitLine(\"typealias \", className, \" = JsonObject\");\n    }\n    emitClassDefinitionMethods(c, className) {\n        const isTopLevel = (0, collection_utils_1.iterableSome)(this.topLevels, ([_, top]) => top === c);\n        if (isTopLevel) {\n            this.emitBlock(\")\", () => {\n                this.emitLine(\"public fun toJson() = klaxon.toJsonString(this)\");\n                this.ensureBlankLine();\n                this.emitBlock(\"companion object\", () => {\n                    this.emitLine(\"public fun fromJson(json: String) = klaxon.parse<\", className, \">(json)\");\n                });\n            });\n        }\n        else {\n            this.emitLine(\")\");\n        }\n    }\n    renameAttribute(name, jsonName, _required, meta) {\n        const rename = this.klaxonRenameAttribute(name, jsonName);\n        if (rename !== undefined) {\n            meta.push(() => this.emitLine(rename));\n        }\n    }\n    emitEnumDefinition(e, enumName) {\n        this.emitDescription(this.descriptionForType(e));\n        this.emitBlock([\"enum class \", enumName, \"(val value: String)\"], () => {\n            let count = e.cases.size;\n            this.forEachEnumCase(e, \"none\", (name, json) => {\n                this.emitLine(name, `(\"${stringEscape(json)}\")`, --count === 0 ? \";\" : \",\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock(\"companion object\", () => {\n                this.emitBlock([\"public fun fromValue(value: String): \", enumName, \" = when (value)\"], () => {\n                    let table = [];\n                    this.forEachEnumCase(e, \"none\", (name, json) => {\n                        table.push([[`\"${stringEscape(json)}\"`], [\" -> \", name]]);\n                    });\n                    table.push([[\"else\"], [\" -> throw IllegalArgumentException()\"]]);\n                    this.emitTable(table);\n                });\n            });\n        });\n    }\n    emitGenericConverter() {\n        this.ensureBlankLine();\n        this.emitLine(\"private fun <T> Klaxon.convert(k: kotlin.reflect.KClass<*>, fromJson: (JsonValue) -> T, toJson: (T) -> String, isUnion: Boolean = false) =\");\n        this.indent(() => {\n            this.emitLine(\"this.converter(object: Converter {\");\n            this.indent(() => {\n                this.emitLine(`@Suppress(\"UNCHECKED_CAST\")`);\n                this.emitTable([\n                    [\"override fun toJson(value: Any)\", \" = toJson(value as T)\"],\n                    [\"override fun fromJson(jv: JsonValue)\", \" = fromJson(jv) as Any\"],\n                    [\n                        \"override fun canConvert(cls: Class<*>)\",\n                        \" = cls == k.java || (isUnion && cls.superclass == k.java)\"\n                    ]\n                ]);\n            });\n            this.emitLine(\"})\");\n        });\n    }\n    emitUnionDefinitionMethods(u, nonNulls, maybeNull, unionName) {\n        this.ensureBlankLine();\n        this.emitLine(\"public fun toJson(): String = klaxon.toJsonString(when (this) {\");\n        this.indent(() => {\n            let toJsonTable = [];\n            this.forEachUnionMember(u, nonNulls, \"none\", null, name => {\n                toJsonTable.push([[\"is \", name], [\" -> this.value\"]]);\n            });\n            if (maybeNull !== null) {\n                const name = this.nameForUnionMember(u, maybeNull);\n                toJsonTable.push([[\"is \", name], [' -> \"null\"']]);\n            }\n            this.emitTable(toJsonTable);\n        });\n        this.emitLine(\"})\");\n        this.ensureBlankLine();\n        this.emitBlock(\"companion object\", () => {\n            this.emitLine(\"public fun fromJson(jv: JsonValue): \", unionName, \" = when (jv.inside) {\");\n            this.indent(() => {\n                let table = [];\n                this.forEachUnionMember(u, nonNulls, \"none\", null, (name, t) => {\n                    table.push([\n                        [this.unionMemberJsonValueGuard(t, \"jv.inside\")],\n                        [\" -> \", name, \"(\", this.unionMemberFromJsonValue(t, \"jv\"), \"!!)\"]\n                    ]);\n                });\n                if (maybeNull !== null) {\n                    const name = this.nameForUnionMember(u, maybeNull);\n                    table.push([[this.unionMemberJsonValueGuard(maybeNull, \"jv.inside\")], [\" -> \", name, \"()\"]]);\n                }\n                table.push([[\"else\"], [\" -> throw IllegalArgumentException()\"]]);\n                this.emitTable(table);\n            });\n            this.emitLine(\"}\");\n        });\n    }\n}\nexports.KotlinKlaxonRenderer = KotlinKlaxonRenderer;\nclass KotlinJacksonRenderer extends KotlinRenderer {\n    constructor(targetLanguage, renderContext, _kotlinOptions) {\n        super(targetLanguage, renderContext, _kotlinOptions);\n    }\n    unionMemberJsonValueGuard(t, _e) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => \"is Any\", _nullType => \"null\", _boolType => \"is BooleanNode\", _integerType => \"is IntNode, is LongNode\", _doubleType => \"is DoubleNode\", _stringType => \"is TextNode\", _arrayType => \"is ArrayNode\", \n        // These could be stricter, but for now we don't allow maps\n        // and objects in the same union\n        _classType => \"is ObjectNode\", _mapType => \"is ObjectNode\", \n        // This could be stricter, but for now we don't allow strings\n        // and enums in the same union\n        _enumType => \"is TextNode\", _unionType => (0, Support_1.mustNotHappen)());\n    }\n    emitUsageHeader() {\n        this.emitLine(\"// To parse the JSON, install jackson-module-kotlin and do:\");\n        this.emitLine(\"//\");\n        this.forEachTopLevel(\"none\", (_, name) => {\n            this.emitLine(\"//   val \", (0, Source_1.modifySource)(Strings_1.camelCase, name), \" = \", name, \".fromJson(jsonString)\");\n        });\n    }\n    emitHeader() {\n        super.emitHeader();\n        this.emitMultiline(`import com.fasterxml.jackson.annotation.*\nimport com.fasterxml.jackson.core.*\nimport com.fasterxml.jackson.databind.*\nimport com.fasterxml.jackson.databind.deser.std.StdDeserializer\nimport com.fasterxml.jackson.databind.module.SimpleModule\nimport com.fasterxml.jackson.databind.node.*\nimport com.fasterxml.jackson.databind.ser.std.StdSerializer\nimport com.fasterxml.jackson.module.kotlin.*`);\n        const hasUnions = (0, collection_utils_1.iterableSome)(this.typeGraph.allNamedTypes(), t => t instanceof Type_1.UnionType && (0, TypeUtils_1.nullableFromUnion)(t) === null);\n        const hasEmptyObjects = (0, collection_utils_1.iterableSome)(this.typeGraph.allNamedTypes(), c => c instanceof Type_1.ClassType && c.getProperties().size === 0);\n        if (hasUnions || this.haveEnums || hasEmptyObjects) {\n            this.emitGenericConverter();\n        }\n        let converters = [];\n        // if (hasEmptyObjects) {\n        //     converters.push([[\"convert(JsonNode::class,\"], [\" { it },\"], [\" { writeValueAsString(it) })\"]]);\n        // }\n        this.forEachEnum(\"none\", (_, name) => {\n            converters.push([\n                [\"convert(\", name, \"::class,\"],\n                [\" { \", name, \".fromValue(it.asText()) },\"],\n                [' { \"\\\\\"${it.value}\\\\\"\" })']\n            ]);\n        });\n        this.forEachUnion(\"none\", (_, name) => {\n            converters.push([\n                [\"convert(\", name, \"::class,\"],\n                [\" { \", name, \".fromJson(it) },\"],\n                [\" { it.toJson() }, true)\"]\n            ]);\n        });\n        this.ensureBlankLine();\n        this.emitLine(\"val mapper = jacksonObjectMapper().apply {\");\n        this.indent(() => {\n            this.emitLine(\"propertyNamingStrategy = PropertyNamingStrategy.LOWER_CAMEL_CASE\");\n            this.emitLine(\"setSerializationInclusion(JsonInclude.Include.NON_NULL)\");\n        });\n        if (converters.length > 0) {\n            this.indent(() => this.emitTable(converters));\n        }\n        this.emitLine(\"}\");\n    }\n    emitTopLevelArray(t, name) {\n        const elementType = this.kotlinType(t.items);\n        this.emitBlock([\"class \", name, \"(elements: Collection<\", elementType, \">) : ArrayList<\", elementType, \">(elements)\"], () => {\n            this.emitLine(\"fun toJson() = mapper.writeValueAsString(this)\");\n            this.ensureBlankLine();\n            this.emitBlock(\"companion object\", () => {\n                this.emitLine(\"fun fromJson(json: String) = mapper.readValue<\", name, \">(json)\");\n            });\n        });\n    }\n    emitTopLevelMap(t, name) {\n        const elementType = this.kotlinType(t.values);\n        this.emitBlock([\n            \"class \",\n            name,\n            \"(elements: Map<String, \",\n            elementType,\n            \">) : HashMap<String, \",\n            elementType,\n            \">(elements)\"\n        ], () => {\n            this.emitLine(\"fun toJson() = mapper.writeValueAsString(this)\");\n            this.ensureBlankLine();\n            this.emitBlock(\"companion object\", () => {\n                this.emitLine(\"fun fromJson(json: String) = mapper.readValue<\", name, \">(json)\");\n            });\n        });\n    }\n    jacksonRenameAttribute(propName, jsonName, required, ignore = false) {\n        const escapedName = stringEscape(jsonName);\n        const namesDiffer = this.sourcelikeToString(propName) !== escapedName;\n        const properties = [];\n        const isPrefixBool = jsonName.startsWith(\"is\"); // https://github.com/FasterXML/jackson-module-kotlin/issues/80\n        const propertyOpts = [];\n        if (namesDiffer || isPrefixBool) {\n            propertyOpts.push('\"' + escapedName + '\"');\n        }\n        if (required) {\n            propertyOpts.push(\"required=true\");\n        }\n        if (propertyOpts.length > 0) {\n            properties.push([\"@get:JsonProperty(\", (0, collection_utils_1.arrayIntercalate)(\", \", propertyOpts), \")\"]);\n            properties.push([\"@field:JsonProperty(\", (0, collection_utils_1.arrayIntercalate)(\", \", propertyOpts), \")\"]);\n        }\n        if (ignore) {\n            properties.push(\"@get:JsonIgnore\");\n            properties.push(\"@field:JsonIgnore\");\n        }\n        return properties.length === 0 ? undefined : properties;\n    }\n    emitEmptyClassDefinition(c, className) {\n        this.emitDescription(this.descriptionForType(c));\n        this.emitLine(\"typealias \", className, \" = JsonNode\");\n    }\n    emitClassDefinitionMethods(c, className) {\n        const isTopLevel = (0, collection_utils_1.iterableSome)(this.topLevels, ([_, top]) => top === c);\n        if (isTopLevel) {\n            this.emitBlock(\")\", () => {\n                this.emitLine(\"fun toJson() = mapper.writeValueAsString(this)\");\n                this.ensureBlankLine();\n                this.emitBlock(\"companion object\", () => {\n                    this.emitLine(\"fun fromJson(json: String) = mapper.readValue<\", className, \">(json)\");\n                });\n            });\n        }\n        else {\n            this.emitLine(\")\");\n        }\n    }\n    renameAttribute(name, jsonName, required, meta) {\n        const rename = this.jacksonRenameAttribute(name, jsonName, required);\n        if (rename !== undefined) {\n            meta.push(() => this.emitLine(rename));\n        }\n    }\n    emitEnumDefinition(e, enumName) {\n        this.emitDescription(this.descriptionForType(e));\n        this.emitBlock([\"enum class \", enumName, \"(val value: String)\"], () => {\n            let count = e.cases.size;\n            this.forEachEnumCase(e, \"none\", (name, json) => {\n                this.emitLine(name, `(\"${stringEscape(json)}\")`, --count === 0 ? \";\" : \",\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock(\"companion object\", () => {\n                this.emitBlock([\"fun fromValue(value: String): \", enumName, \" = when (value)\"], () => {\n                    let table = [];\n                    this.forEachEnumCase(e, \"none\", (name, json) => {\n                        table.push([[`\"${stringEscape(json)}\"`], [\" -> \", name]]);\n                    });\n                    table.push([[\"else\"], [\" -> throw IllegalArgumentException()\"]]);\n                    this.emitTable(table);\n                });\n            });\n        });\n    }\n    emitGenericConverter() {\n        this.ensureBlankLine();\n        this.emitMultiline(`\n@Suppress(\"UNCHECKED_CAST\")\nprivate fun <T> ObjectMapper.convert(k: kotlin.reflect.KClass<*>, fromJson: (JsonNode) -> T, toJson: (T) -> String, isUnion: Boolean = false) = registerModule(SimpleModule().apply {\n    addSerializer(k.java as Class<T>, object : StdSerializer<T>(k.java as Class<T>) {\n        override fun serialize(value: T, gen: JsonGenerator, provider: SerializerProvider) = gen.writeRawValue(toJson(value))\n    })\n    addDeserializer(k.java as Class<T>, object : StdDeserializer<T>(k.java as Class<T>) {\n        override fun deserialize(p: JsonParser, ctxt: DeserializationContext) = fromJson(p.readValueAsTree())\n    })\n})`);\n    }\n    emitUnionDefinitionMethods(u, nonNulls, maybeNull, unionName) {\n        this.ensureBlankLine();\n        this.emitLine(\"fun toJson(): String = mapper.writeValueAsString(when (this) {\");\n        this.indent(() => {\n            let toJsonTable = [];\n            this.forEachUnionMember(u, nonNulls, \"none\", null, name => {\n                toJsonTable.push([[\"is \", name], [\" -> this.value\"]]);\n            });\n            if (maybeNull !== null) {\n                const name = this.nameForUnionMember(u, maybeNull);\n                toJsonTable.push([[\"is \", name], [' -> \"null\"']]);\n            }\n            this.emitTable(toJsonTable);\n        });\n        this.emitLine(\"})\");\n        this.ensureBlankLine();\n        this.emitBlock(\"companion object\", () => {\n            this.emitLine(\"fun fromJson(jn: JsonNode): \", unionName, \" = when (jn) {\");\n            this.indent(() => {\n                let table = [];\n                this.forEachUnionMember(u, nonNulls, \"none\", null, (name, t) => {\n                    table.push([[this.unionMemberJsonValueGuard(t, \"jn\")], [\" -> \", name, \"(mapper.treeToValue(jn))\"]]);\n                });\n                if (maybeNull !== null) {\n                    const name = this.nameForUnionMember(u, maybeNull);\n                    table.push([[this.unionMemberJsonValueGuard(maybeNull, \"jn\")], [\" -> \", name, \"()\"]]);\n                }\n                table.push([[\"else\"], [\" -> throw IllegalArgumentException()\"]]);\n                this.emitTable(table);\n            });\n            this.emitLine(\"}\");\n        });\n    }\n}\nexports.KotlinJacksonRenderer = KotlinJacksonRenderer;\n/**\n * Currently supports simple classes, enums, and TS string unions (which are also enums).\n * TODO: Union, Any, Top Level Array, Top Level Map\n */\nclass KotlinXRenderer extends KotlinRenderer {\n    constructor(targetLanguage, renderContext, _kotlinOptions) {\n        super(targetLanguage, renderContext, _kotlinOptions);\n    }\n    anySourceType(optional) {\n        return [\"JsonElement\", optional];\n    }\n    arrayType(arrayType, withIssues = false, noOptional = false) {\n        const valType = this.kotlinType(arrayType.items, withIssues, true);\n        const name = this.sourcelikeToString(valType);\n        if (name === \"JsonObject\" || name === \"JsonElement\") {\n            return \"JsonArray\";\n        }\n        return super.arrayType(arrayType, withIssues, noOptional);\n    }\n    mapType(mapType, withIssues = false, noOptional = false) {\n        const valType = this.kotlinType(mapType.values, withIssues, true);\n        const name = this.sourcelikeToString(valType);\n        if (name === \"JsonObject\" || name === \"JsonElement\") {\n            return \"JsonObject\";\n        }\n        return super.mapType(mapType, withIssues, noOptional);\n    }\n    emitTopLevelMap(t, name) {\n        const elementType = this.kotlinType(t.values);\n        if (elementType === \"JsonObject\") {\n            this.emitLine([\"typealias \", name, \" = JsonObject\"]);\n        }\n        else {\n            super.emitTopLevelMap(t, name);\n        }\n    }\n    emitTopLevelArray(t, name) {\n        const elementType = this.kotlinType(t.items);\n        this.emitLine([\"typealias \", name, \" = JsonArray<\", elementType, \">\"]);\n    }\n    emitUsageHeader() {\n        this.emitLine(\"// To parse the JSON, install kotlin's serialization plugin and do:\");\n        this.emitLine(\"//\");\n        const table = [];\n        table.push([\"// val \", \"json\", \" = Json { allowStructuredMapKeys = true }\"]);\n        this.forEachTopLevel(\"none\", (_, name) => {\n            table.push([\n                \"// val \",\n                (0, Source_1.modifySource)(Strings_1.camelCase, name),\n                ` = json.parse(${this.sourcelikeToString(name)}.serializer(), jsonString)`\n            ]);\n        });\n        this.emitTable(table);\n    }\n    emitHeader() {\n        super.emitHeader();\n        this.emitLine(\"import kotlinx.serialization.*\");\n        this.emitLine(\"import kotlinx.serialization.json.*\");\n        this.emitLine(\"import kotlinx.serialization.descriptors.*\");\n        this.emitLine(\"import kotlinx.serialization.encoding.*\");\n    }\n    emitClassAnnotations(_c, _className) {\n        this.emitLine(\"@Serializable\");\n    }\n    renameAttribute(name, jsonName, _required, meta) {\n        const rename = this._rename(name, jsonName);\n        if (rename !== undefined) {\n            meta.push(() => this.emitLine(rename));\n        }\n    }\n    _rename(propName, jsonName) {\n        const escapedName = stringEscape(jsonName);\n        const namesDiffer = this.sourcelikeToString(propName) !== escapedName;\n        if (namesDiffer) {\n            return ['@SerialName(\"', escapedName, '\")'];\n        }\n        return undefined;\n    }\n    emitEnumDefinition(e, enumName) {\n        this.emitDescription(this.descriptionForType(e));\n        this.emitLine([\"@Serializable\"]);\n        this.emitBlock([\"enum class \", enumName, \"(val value: String)\"], () => {\n            let count = e.cases.size;\n            this.forEachEnumCase(e, \"none\", (name, json) => {\n                const jsonEnum = stringEscape(json);\n                this.emitLine(`@SerialName(\"${jsonEnum}\") `, name, `(\"${jsonEnum}\")`, --count === 0 ? \";\" : \",\");\n            });\n        });\n    }\n}\nexports.KotlinXRenderer = KotlinXRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Scala3TargetLanguage = exports.CirceRenderer = exports.Smithy4sRenderer = exports.UpickleRenderer = exports.Scala3Renderer = exports.scala3Options = exports.Framework = void 0;\nconst Annotation_1 = require(\"../Annotation\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst Naming_1 = require(\"../Naming\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst Source_1 = require(\"../Source\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Support_1 = require(\"../support/Support\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nvar Framework;\n(function (Framework) {\n    Framework[Framework[\"None\"] = 0] = \"None\";\n    Framework[Framework[\"Upickle\"] = 1] = \"Upickle\";\n    Framework[Framework[\"Circe\"] = 2] = \"Circe\";\n})(Framework = exports.Framework || (exports.Framework = {}));\nexports.scala3Options = {\n    framework: new RendererOptions_1.EnumOption(\"framework\", \"Serialization framework\", [\n        [\"just-types\", Framework.None],\n        [\"circe\", Framework.Circe],\n        [\"upickle\", Framework.Upickle]\n    ], undefined),\n    packageName: new RendererOptions_1.StringOption(\"package\", \"Package\", \"PACKAGE\", \"quicktype\")\n};\n// Use backticks for param names with symbols\nconst invalidSymbols = [\n    \":\",\n    \"-\",\n    \"+\",\n    \"!\",\n    \"@\",\n    \"#\",\n    \"$\",\n    \"%\",\n    \"^\",\n    \"&\",\n    \"*\",\n    \"(\",\n    \")\",\n    \">\",\n    \"<\",\n    \"/\",\n    \";\",\n    \"'\",\n    '\"',\n    \"{\",\n    \"}\",\n    \":\",\n    \"~\",\n    \"`\",\n    \".\"\n];\nconst keywords = [\n    \"abstract\",\n    \"case\",\n    \"catch\",\n    \"class\",\n    \"def\",\n    \"do\",\n    \"else\",\n    \"enum\",\n    \"extends\",\n    \"export\",\n    \"false\",\n    \"final\",\n    \"finally\",\n    \"for\",\n    \"forSome\",\n    \"if\",\n    \"implicit\",\n    \"import\",\n    \"lazy\",\n    \"match\",\n    \"new\",\n    \"null\",\n    \"object\",\n    \"override\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"return\",\n    \"sealed\",\n    \"super\",\n    \"this\",\n    \"then\",\n    \"throw\",\n    \"trait\",\n    \"try\",\n    \"true\",\n    \"type\",\n    \"val\",\n    \"var\",\n    \"while\",\n    \"with\",\n    \"yield\",\n    \"Any\",\n    \"Boolean\",\n    \"Double\",\n    \"Float\",\n    \"Long\",\n    \"Int\",\n    \"Short\",\n    \"System\",\n    \"Byte\",\n    \"String\",\n    \"Array\",\n    \"List\",\n    \"Map\",\n    \"Enum\"\n];\n/**\n * Check if given parameter name should be wrapped in a backtick\n * @param paramName\n */\nconst shouldAddBacktick = (paramName) => {\n    return (keywords.some(s => paramName === s) ||\n        invalidSymbols.some(s => paramName.includes(s)) ||\n        !isNaN(+parseFloat(paramName)) ||\n        !isNaN(parseInt(paramName.charAt(0))));\n};\nconst wrapOption = (s, optional) => {\n    if (optional) {\n        return \"Option[\" + s + \"]\";\n    }\n    else {\n        return s;\n    }\n};\nfunction isPartCharacter(codePoint) {\n    return (0, Strings_1.isLetterOrUnderscore)(codePoint) || (0, Strings_1.isNumeric)(codePoint);\n}\nfunction isStartCharacter(codePoint) {\n    return isPartCharacter(codePoint) && !(0, Strings_1.isDigit)(codePoint);\n}\nconst legalizeName = (0, Strings_1.legalizeCharacters)(isPartCharacter);\nfunction scalaNameStyle(isUpper, original) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    return (0, Strings_1.combineWords)(words, legalizeName, isUpper ? Strings_1.firstUpperWordStyle : Strings_1.allLowerWordStyle, Strings_1.firstUpperWordStyle, isUpper ? Strings_1.allUpperWordStyle : Strings_1.allLowerWordStyle, Strings_1.allUpperWordStyle, \"\", isStartCharacter);\n}\n/* function unicodeEscape(codePoint: number): string {\n    return \"\\\\u\" + intToHex(codePoint, 4);\n} */\n//const _stringEscape = utf32ConcatMap(escapeNonPrintableMapper(isPrintable, unicodeEscape));\n/* function stringEscape(s: string): string {\n    // \"$this\" is a template string in Kotlin so we have to escape $\n    return _stringEscape(s).replace(/\\$/g, \"\\\\$\");\n} */\nconst upperNamingFunction = (0, Naming_1.funPrefixNamer)(\"upper\", s => scalaNameStyle(true, s));\nconst lowerNamingFunction = (0, Naming_1.funPrefixNamer)(\"lower\", s => scalaNameStyle(false, s));\nclass Scala3Renderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _scalaOptions) {\n        super(targetLanguage, renderContext);\n        this._scalaOptions = _scalaOptions;\n    }\n    forbiddenNamesForGlobalNamespace() {\n        return keywords;\n    }\n    forbiddenForObjectProperties(_, _classNamed) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    forbiddenForEnumCases(_, _enumName) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    forbiddenForUnionMembers(_u, _unionName) {\n        return { names: [], includeGlobalForbidden: false };\n    }\n    topLevelNameStyle(rawName) {\n        return scalaNameStyle(true, rawName);\n    }\n    makeNamedTypeNamer() {\n        return upperNamingFunction;\n    }\n    namerForObjectProperty() {\n        return lowerNamingFunction;\n    }\n    makeUnionMemberNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"upper\", s => scalaNameStyle(true, s) + \"Value\");\n    }\n    makeEnumCaseNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"upper\", s => s.replace(\" \", \"\")); // TODO - add backticks where appropriate\n    }\n    emitDescriptionBlock(lines) {\n        this.emitCommentLines(lines, { lineStart: \" * \", beforeComment: \"/**\", afterComment: \" */\" });\n    }\n    emitBlock(line, f, delimiter = \"curly\") {\n        const [open, close] = delimiter === \"curly\"\n            ? [\"{\", \"}\"]\n            : delimiter === \"paren\"\n                ? [\"(\", \")\"]\n                : delimiter === \"none\"\n                    ? [\"\", \"\"]\n                    : [\"{\", \"})\"];\n        this.emitLine(line, \" \", open);\n        this.indent(f);\n        this.emitLine(close);\n    }\n    anySourceType(optional) {\n        return [wrapOption(\"Any\", optional)];\n    }\n    // (asarazan): I've broken out the following two functions\n    // because some renderers, such as kotlinx, can cope with `any`, while some get mad.\n    arrayType(arrayType, withIssues = false) {\n        return [\"Seq[\", this.scalaType(arrayType.items, withIssues), \"]\"];\n    }\n    mapType(mapType, withIssues = false) {\n        return [\"Map[String, \", this.scalaType(mapType.values, withIssues), \"]\"];\n    }\n    scalaType(t, withIssues = false, noOptional = false) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => {\n            return (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.anyTypeIssueAnnotation, this.anySourceType(!noOptional));\n        }, _nullType => {\n            //return \"None.type\"\n            return (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.nullTypeIssueAnnotation, this.anySourceType(!noOptional));\n        }, _boolType => \"Boolean\", _integerType => \"Long\", _doubleType => \"Double\", _stringType => \"String\", arrayType => this.arrayType(arrayType, withIssues), classType => this.nameForNamedType(classType), mapType => this.mapType(mapType, withIssues), enumType => this.nameForNamedType(enumType), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                if (noOptional) {\n                    return [this.scalaType(nullable, withIssues)];\n                }\n                else {\n                    return [\"Option[\", this.scalaType(nullable, withIssues), \"]\"];\n                }\n            }\n            return this.nameForNamedType(unionType);\n        });\n    }\n    emitUsageHeader() {\n        // To be overridden\n    }\n    emitHeader() {\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n        }\n        else {\n            this.emitUsageHeader();\n        }\n        this.ensureBlankLine();\n        this.emitLine(\"package \", this._scalaOptions.packageName);\n        this.ensureBlankLine();\n    }\n    emitTopLevelArray(t, name) {\n        const elementType = this.scalaType(t.items);\n        this.emitLine([\"type \", name, \" = List[\", elementType, \"]\"]);\n    }\n    emitTopLevelMap(t, name) {\n        const elementType = this.scalaType(t.values);\n        this.emitLine([\"type \", name, \" = Map[String, \", elementType, \"]\"]);\n    }\n    emitEmptyClassDefinition(c, className) {\n        this.emitDescription(this.descriptionForType(c));\n        this.emitLine(\"case class \", className, \"()\");\n    }\n    emitClassDefinition(c, className) {\n        if (c.getProperties().size === 0) {\n            this.emitEmptyClassDefinition(c, className);\n            return;\n        }\n        const scalaType = (p) => {\n            if (p.isOptional) {\n                return [\"Option[\", this.scalaType(p.type, true, true), \"]\"];\n            }\n            else {\n                return this.scalaType(p.type, true);\n            }\n        };\n        this.emitDescription(this.descriptionForType(c));\n        this.emitLine(\"case class \", className, \" (\");\n        this.indent(() => {\n            let count = c.getProperties().size;\n            let first = true;\n            this.forEachClassProperty(c, \"none\", (_, jsonName, p) => {\n                const nullable = p.type.kind === \"union\" && (0, TypeUtils_1.nullableFromUnion)(p.type) !== null;\n                const nullableOrOptional = p.isOptional || p.type.kind === \"null\" || nullable;\n                const last = --count === 0;\n                const meta = [];\n                const description = this.descriptionForClassProperty(c, jsonName);\n                if (description !== undefined) {\n                    meta.push(() => this.emitDescription(description));\n                }\n                if (meta.length > 0 && !first) {\n                    this.ensureBlankLine();\n                }\n                for (const emit of meta) {\n                    emit();\n                }\n                const nameNeedsBackticks = jsonName.endsWith(\"_\") || shouldAddBacktick(jsonName);\n                const nameWithBackticks = nameNeedsBackticks ? \"`\" + jsonName + \"`\" : jsonName;\n                this.emitLine(\"val \", nameWithBackticks, \" : \", scalaType(p), p.isOptional ? \" = None\" : nullableOrOptional ? \" = None\" : \"\", last ? \"\" : \",\");\n                if (meta.length > 0 && !last) {\n                    this.ensureBlankLine();\n                }\n                first = false;\n            });\n        });\n        this.emitClassDefinitionMethods();\n    }\n    emitClassDefinitionMethods() {\n        this.emitLine(\")\");\n    }\n    emitEnumDefinition(e, enumName) {\n        this.emitDescription(this.descriptionForType(e));\n        this.emitBlock([\"enum \", enumName, \" : \"], () => {\n            let count = e.cases.size;\n            if (count > 0) {\n                this.emitItem(\"\\t case \");\n            }\n            this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n                if (!(jsonName == \"\")) {\n                    const backticks = shouldAddBacktick(jsonName) ||\n                        jsonName.includes(\" \") ||\n                        !isNaN(parseInt(jsonName.charAt(0)));\n                    if (backticks) {\n                        this.emitItem(\"`\");\n                    }\n                    this.emitItemOnce([name]);\n                    if (backticks) {\n                        this.emitItem(\"`\");\n                    }\n                    if (--count > 0)\n                        this.emitItem([\",\"]);\n                }\n                else {\n                    --count;\n                }\n            });\n        }, \"none\");\n    }\n    emitUnionDefinition(u, unionName) {\n        function sortBy(t) {\n            const kind = t.kind;\n            if (kind === \"class\")\n                return kind;\n            return \"_\" + kind;\n        }\n        this.emitDescription(this.descriptionForType(u));\n        const [maybeNull, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(u, sortBy);\n        const theTypes = [];\n        this.forEachUnionMember(u, nonNulls, \"none\", null, (_, t) => {\n            theTypes.push(this.scalaType(t));\n        });\n        if (maybeNull !== null) {\n            theTypes.push(this.nameForUnionMember(u, maybeNull));\n        }\n        this.emitItem([\"type \", unionName, \" = \"]);\n        theTypes.forEach((t, i) => {\n            this.emitItem(i === 0 ? t : [\" | \", t]);\n        });\n        this.ensureBlankLine();\n    }\n    emitSourceStructure() {\n        this.emitHeader();\n        // Top-level arrays, maps\n        this.forEachTopLevel(\"leading\", (t, name) => {\n            if (t instanceof Type_1.ArrayType) {\n                this.emitTopLevelArray(t, name);\n            }\n            else if (t instanceof Type_1.MapType) {\n                this.emitTopLevelMap(t, name);\n            }\n        });\n        this.forEachNamedType(\"leading-and-interposing\", (c, n) => this.emitClassDefinition(c, n), (e, n) => this.emitEnumDefinition(e, n), (u, n) => this.emitUnionDefinition(u, n));\n    }\n}\nexports.Scala3Renderer = Scala3Renderer;\nclass UpickleRenderer extends Scala3Renderer {\n    emitClassDefinitionMethods() {\n        this.emitLine(\") derives ReadWriter \");\n    }\n    emitHeader() {\n        super.emitHeader();\n        this.emitLine(\"import upickle.default.*\");\n        this.ensureBlankLine();\n    }\n}\nexports.UpickleRenderer = UpickleRenderer;\nclass Smithy4sRenderer extends Scala3Renderer {\n    emitHeader() {\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n        }\n        else {\n            this.emitUsageHeader();\n        }\n        this.ensureBlankLine();\n        this.emitLine(\"namespace \", this._scalaOptions.packageName);\n        this.ensureBlankLine();\n    }\n    emitTopLevelArray(t, name) {\n        const elementType = this.scalaType(t.items);\n        this.emitLine([\"list \", name, \" { member : \", elementType, \"}\"]);\n    }\n    emitTopLevelMap(t, name) {\n        const elementType = this.scalaType(t.values);\n        this.emitLine([\"map \", name, \" { map[ key : String , value : \", elementType, \"}\"]);\n    }\n    emitEmptyClassDefinition(c, className) {\n        this.emitDescription(this.descriptionForType(c));\n        this.emitLine(\"structure \", className, \"{}\");\n    }\n    emitEnumDefinition(e, enumName) {\n        this.emitDescription(this.descriptionForType(e));\n        this.ensureBlankLine();\n        this.emitItem([\"enum \", enumName, \" { \"]);\n        let count = e.cases.size;\n        this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n            // if (!(jsonName == \"\")) {\n            /*                 const backticks =\n                                shouldAddBacktick(jsonName) ||\n                                jsonName.includes(\" \") ||\n                                !isNaN(parseInt(jsonName.charAt(0)))\n                            if (backticks) {this.emitItem(\"`\")} else  */\n            this.emitLine();\n            this.emitItem([name, ' = \"', jsonName, '\"']);\n            //                if (backticks) {this.emitItem(\"`\")}\n            if (--count > 0)\n                this.emitItem([\",\"]);\n            //} else {\n            //--count\n            //}\n        });\n        this.ensureBlankLine();\n        this.emitItem([\"}\"]);\n    }\n}\nexports.Smithy4sRenderer = Smithy4sRenderer;\nclass CirceRenderer extends Scala3Renderer {\n    constructor() {\n        super(...arguments);\n        this.seenUnionTypes = [];\n    }\n    circeEncoderForType(t, _ = false, noOptional = false, paramName = \"\") {\n        return (0, TypeUtils_1.matchType)(t, _anyType => [\"Encoder.encodeJson(\", paramName, \")\"], _nullType => [\"Encoder.encodeNone(\", paramName, \")\"], _boolType => [\"Encoder.encodeBoolean(\", paramName, \")\"], _integerType => [\"Encoder.encodeLong(\", paramName, \")\"], _doubleType => [\"Encoder.encodeDouble(\", paramName, \")\"], _stringType => [\"Encoder.encodeString(\", paramName, \")\"], arrayType => [\"Encoder.encodeSeq[\", this.scalaType(arrayType.items), \"].apply(\", paramName, \")\"], classType => [\"Encoder.AsObject[\", this.scalaType(classType), \"].apply(\", paramName, \")\"], mapType => [\"Encoder.encodeMap[String,\", this.scalaType(mapType.values), \"].apply(\", paramName, \")\"], _ => [\"Encoder.encodeString(\", paramName, \")\"], unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                if (noOptional) {\n                    return [\"Encoder.AsObject[\", this.nameForNamedType(nullable), \"]\"];\n                }\n                else {\n                    return [\"Encoder.AsObject[Option[\", this.nameForNamedType(nullable), \"]]\"];\n                }\n            }\n            return [\"Encoder.AsObject[\", this.nameForNamedType(unionType), \"]\"];\n        });\n    }\n    emitEmptyClassDefinition(c, className) {\n        this.emitDescription(this.descriptionForType(c));\n        this.ensureBlankLine();\n        this.emitLine(\"case class \", className, \"()  derives Encoder.AsObject, Decoder\");\n    }\n    anySourceType(optional) {\n        return [wrapOption(\"Json\", optional)];\n    }\n    emitClassDefinitionMethods() {\n        this.emitLine(\") derives Encoder.AsObject, Decoder\");\n    }\n    emitEnumDefinition(e, enumName) {\n        this.emitDescription(this.descriptionForType(e));\n        this.ensureBlankLine();\n        this.emitItem([\"type \", enumName, \" = \"]);\n        let count = e.cases.size;\n        this.forEachEnumCase(e, \"none\", (_, jsonName) => {\n            // if (!(jsonName == \"\")) {\n            /*                 const backticks =\n                                shouldAddBacktick(jsonName) ||\n                                jsonName.includes(\" \") ||\n                                !isNaN(parseInt(jsonName.charAt(0)))\n                            if (backticks) {this.emitItem(\"`\")} else  */\n            this.emitItem(['\"', jsonName, '\"']);\n            //                if (backticks) {this.emitItem(\"`\")}\n            if (--count > 0)\n                this.emitItem([\" | \"]);\n            //} else {\n            //--count\n            //}\n        });\n        this.ensureBlankLine();\n    }\n    emitHeader() {\n        super.emitHeader();\n        this.emitLine(\"import scala.util.Try\");\n        this.emitLine(\"import io.circe.syntax._\");\n        this.emitLine(\"import io.circe._\");\n        this.emitLine(\"import cats.syntax.functor._\");\n        this.ensureBlankLine();\n        this.emitLine(\"// For serialising string unions\");\n        this.emitLine(\"given [A <: Singleton](using A <:< String): Decoder[A] = Decoder.decodeString.emapTry(x => Try(x.asInstanceOf[A])) \");\n        this.emitLine(\"given [A <: Singleton](using ev: A <:< String): Encoder[A] = Encoder.encodeString.contramap(ev) \");\n        this.ensureBlankLine();\n        this.emitLine(\"// If a union has a null in, then we'll need this too... \");\n        this.emitLine(\"type NullValue = None.type\");\n    }\n    emitTopLevelArray(t, name) {\n        super.emitTopLevelArray(t, name);\n        const elementType = this.scalaType(t.items);\n        this.emitLine([\n            \"given (using ev : \",\n            elementType,\n            \"): Encoder[Map[String,\",\n            elementType,\n            \"]] = Encoder.encodeMap[String, \",\n            elementType,\n            \"]\"\n        ]);\n    }\n    emitTopLevelMap(t, name) {\n        super.emitTopLevelMap(t, name);\n        const elementType = this.scalaType(t.values);\n        this.ensureBlankLine();\n        this.emitLine([\n            \"given (using ev : \",\n            elementType,\n            \"): Encoder[Map[String, \",\n            elementType,\n            \"]] = Encoder.encodeMap[String, \",\n            elementType,\n            \"]\"\n        ]);\n    }\n    emitUnionDefinition(u, unionName) {\n        function sortBy(t) {\n            const kind = t.kind;\n            if (kind === \"class\")\n                return kind;\n            return \"_\" + kind;\n        }\n        this.emitDescription(this.descriptionForType(u));\n        const [maybeNull, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(u, sortBy);\n        const theTypes = [];\n        this.forEachUnionMember(u, nonNulls, \"none\", null, (_, t) => {\n            theTypes.push(this.scalaType(t));\n        });\n        if (maybeNull !== null) {\n            theTypes.push(this.nameForUnionMember(u, maybeNull));\n        }\n        this.emitItem([\"type \", unionName, \" = \"]);\n        theTypes.forEach((t, i) => {\n            this.emitItem(i === 0 ? t : [\" | \", t]);\n        });\n        const thisUnionType = theTypes.map(x => this.sourcelikeToString(x)).join(\" | \");\n        this.ensureBlankLine();\n        if (!this.seenUnionTypes.some(y => y === thisUnionType)) {\n            this.seenUnionTypes.push(thisUnionType);\n            const sourceLikeTypes = [];\n            this.forEachUnionMember(u, nonNulls, \"none\", null, (_, t) => {\n                sourceLikeTypes.push([this.scalaType(t), t]);\n            });\n            if (maybeNull !== null) {\n                sourceLikeTypes.push([this.nameForUnionMember(u, maybeNull), maybeNull]);\n            }\n            this.emitLine([\"given Decoder[\", unionName, \"] = {\"]);\n            this.indent(() => {\n                this.emitLine([\"List[Decoder[\", unionName, \"]](\"]);\n                this.indent(() => {\n                    sourceLikeTypes.forEach(t => {\n                        this.emitLine([\"Decoder[\", t[0], \"].widen,\"]);\n                    });\n                });\n                this.emitLine(\").reduceLeft(_ or _)\");\n            });\n            this.emitLine([\"}\"]);\n            this.ensureBlankLine();\n            this.emitLine([\"given Encoder[\", unionName, \"] = Encoder.instance {\"]);\n            this.indent(() => {\n                sourceLikeTypes.forEach((t, i) => {\n                    const paramTemp = `enc${i.toString()}`;\n                    this.emitLine([\n                        \"case \",\n                        paramTemp,\n                        \" : \",\n                        t[0],\n                        \" => \",\n                        this.circeEncoderForType(t[1], false, false, paramTemp)\n                    ]);\n                });\n            });\n            this.emitLine(\"}\");\n        }\n    }\n}\nexports.CirceRenderer = CirceRenderer;\nclass Scala3TargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor() {\n        super(\"Scala3\", [\"scala3\"], \"scala\");\n    }\n    getOptions() {\n        return [exports.scala3Options.framework, exports.scala3Options.packageName];\n    }\n    get supportsOptionalClassProperties() {\n        return true;\n    }\n    get supportsUnionsWithBothNumberTypes() {\n        return true;\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        const options = (0, RendererOptions_1.getOptionValues)(exports.scala3Options, untypedOptionValues);\n        switch (options.framework) {\n            case Framework.None:\n                return new Scala3Renderer(this, renderContext, options);\n            case Framework.Upickle:\n                return new UpickleRenderer(this, renderContext, options);\n            case Framework.Circe:\n                return new CirceRenderer(this, renderContext, options);\n            default:\n                return (0, Support_1.assertNever)(options.framework);\n        }\n    }\n}\nexports.Scala3TargetLanguage = Scala3TargetLanguage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SmithyTargetLanguage = exports.Smithy4sRenderer = exports.SmithyOptions = exports.Framework = void 0;\nconst Annotation_1 = require(\"../Annotation\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst Naming_1 = require(\"../Naming\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst Source_1 = require(\"../Source\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Support_1 = require(\"../support/Support\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nvar Framework;\n(function (Framework) {\n    Framework[Framework[\"None\"] = 0] = \"None\";\n})(Framework = exports.Framework || (exports.Framework = {}));\nexports.SmithyOptions = {\n    framework: new RendererOptions_1.EnumOption(\"framework\", \"Serialization framework\", [[\"just-types\", Framework.None]], undefined),\n    packageName: new RendererOptions_1.StringOption(\"package\", \"Package\", \"PACKAGE\", \"quicktype\")\n};\n// Use backticks for param names with symbols\nconst invalidSymbols = [\n    \":\",\n    \"-\",\n    \"+\",\n    \"!\",\n    \"@\",\n    \"#\",\n    \"%\",\n    \"^\",\n    \"&\",\n    \"*\",\n    \"(\",\n    \")\",\n    \">\",\n    \"<\",\n    \"/\",\n    \";\",\n    \"'\",\n    '\"',\n    \"{\",\n    \"}\",\n    \":\",\n    \"~\",\n    \"`\",\n    \".\"\n];\nconst keywords = [\n    \"abstract\",\n    \"case\",\n    \"catch\",\n    \"do\",\n    \"else\",\n    \"export\",\n    \"false\",\n    \"final\",\n    \"finally\",\n    \"for\",\n    \"forSome\",\n    \"if\",\n    \"implicit\",\n    \"import\",\n    \"new\",\n    \"override\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"return\",\n    \"sealed\",\n    \"super\",\n    \"this\",\n    \"then\",\n    \"throw\",\n    \"trait\",\n    \"try\",\n    \"true\",\n    \"val\",\n    \"var\",\n    \"while\",\n    \"with\",\n    \"yield\",\n    \"Any\",\n    \"Boolean\",\n    \"Double\",\n    \"Float\",\n    \"Long\",\n    \"Int\",\n    \"Short\",\n    \"System\",\n    \"Byte\",\n    \"String\",\n    \"Array\",\n    \"List\",\n    \"Map\",\n    \"Enum\"\n];\n/**\n * Check if given parameter name should be wrapped in a backtick\n * @param paramName\n */\nconst shouldAddBacktick = (paramName) => {\n    return (keywords.some(s => paramName === s) ||\n        invalidSymbols.some(s => paramName.includes(s)) ||\n        !isNaN(parseFloat(paramName)) ||\n        !isNaN(parseInt(paramName.charAt(0))));\n};\nfunction isPartCharacter(codePoint) {\n    return (0, Strings_1.isLetterOrUnderscore)(codePoint) || (0, Strings_1.isNumeric)(codePoint);\n}\nfunction isStartCharacter(codePoint) {\n    return isPartCharacter(codePoint) && !(0, Strings_1.isDigit)(codePoint);\n}\nconst legalizeName = (0, Strings_1.legalizeCharacters)(isPartCharacter);\nfunction scalaNameStyle(isUpper, original) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    return (0, Strings_1.combineWords)(words, legalizeName, isUpper ? Strings_1.firstUpperWordStyle : Strings_1.allLowerWordStyle, Strings_1.firstUpperWordStyle, isUpper ? Strings_1.allUpperWordStyle : Strings_1.allLowerWordStyle, Strings_1.allUpperWordStyle, \"\", isStartCharacter);\n}\nconst upperNamingFunction = (0, Naming_1.funPrefixNamer)(\"upper\", s => scalaNameStyle(true, s));\nconst lowerNamingFunction = (0, Naming_1.funPrefixNamer)(\"lower\", s => scalaNameStyle(false, s));\nclass Smithy4sRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _scalaOptions) {\n        super(targetLanguage, renderContext);\n        this._scalaOptions = _scalaOptions;\n    }\n    forbiddenNamesForGlobalNamespace() {\n        return keywords;\n    }\n    forbiddenForObjectProperties(_, _classNamed) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    forbiddenForEnumCases(_, _enumName) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    forbiddenForUnionMembers(_u, _unionName) {\n        return { names: [], includeGlobalForbidden: false };\n    }\n    topLevelNameStyle(rawName) {\n        return scalaNameStyle(true, rawName);\n    }\n    makeNamedTypeNamer() {\n        return upperNamingFunction;\n    }\n    namerForObjectProperty() {\n        return lowerNamingFunction;\n    }\n    makeUnionMemberNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"upper\", s => scalaNameStyle(true, s) + \"Value\");\n    }\n    makeEnumCaseNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"upper\", s => s.replace(\" \", \"\")); // TODO - add backticks where appropriate\n    }\n    emitDescriptionBlock(lines) {\n        this.emitCommentLines(lines, { lineStart: \" * \", beforeComment: \"/**\", afterComment: \" */\" });\n    }\n    emitBlock(line, f, delimiter = \"curly\") {\n        const [open, close] = delimiter === \"curly\"\n            ? [\"{\", \"}\"]\n            : delimiter === \"paren\"\n                ? [\"(\", \")\"]\n                : delimiter === \"none\"\n                    ? [\"\", \"\"]\n                    : [\"{\", \"})\"];\n        this.emitLine(line, \" \", open);\n        this.indent(f);\n        this.emitLine(close);\n    }\n    anySourceType(_) {\n        return [\"Document\"];\n    }\n    // (asarazan): I've broken out the following two functions\n    // because some renderers, such as kotlinx, can cope with `any`, while some get mad.\n    arrayType(arrayType, _ = false) {\n        //this.emitTopLevelArray(arrayType, new Name(arrayType.getCombinedName().toString() + \"List\"))\n        return arrayType.getCombinedName().toString() + \"List\";\n    }\n    emitArrayType(_, smithyType) {\n        this.emitLine([\"list \", smithyType, \" { member : \", \"}\"]);\n    }\n    mapType(mapType, _ = false) {\n        return mapType.getCombinedName().toString() + \"Map\";\n        //return [this.scalaType(mapType.values, withIssues), \"Map\"];\n    }\n    scalaType(t, withIssues = false, noOptional = false) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => {\n            return (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.anyTypeIssueAnnotation, this.anySourceType(!noOptional));\n        }, _nullType => {\n            //return \"None.type\"\n            return (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.nullTypeIssueAnnotation, this.anySourceType(!noOptional));\n        }, _boolType => \"Boolean\", _integerType => \"Long\", _doubleType => \"Double\", _stringType => \"String\", arrayType => this.arrayType(arrayType, withIssues), classType => this.nameForNamedType(classType), mapType => this.mapType(mapType, withIssues), enumType => this.nameForNamedType(enumType), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                return [this.scalaType(nullable, withIssues)];\n            }\n            return this.nameForNamedType(unionType);\n        });\n    }\n    emitUsageHeader() {\n        // To be overridden\n    }\n    emitHeader() {\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n        }\n        else {\n            this.emitUsageHeader();\n        }\n        this.ensureBlankLine();\n        this.emitLine('$version: \"2\"');\n        this.emitLine(\"namespace \", this._scalaOptions.packageName);\n        this.ensureBlankLine();\n        this.emitLine(\"document NullValue\");\n        this.ensureBlankLine();\n    }\n    emitTopLevelArray(t, name) {\n        const elementType = this.scalaType(t.items);\n        this.emitLine([\"list \", name, \" { member : \", elementType, \"}\"]);\n    }\n    emitTopLevelMap(t, name) {\n        const elementType = this.scalaType(t.values);\n        this.emitLine([\"map \", name, \" { map[ key : String , value : \", elementType, \"}\"]);\n    }\n    emitEmptyClassDefinition(c, className) {\n        this.emitDescription(this.descriptionForType(c));\n        this.emitLine(\"structure \", className, \"{}\");\n    }\n    emitClassDefinition(c, className) {\n        if (c.getProperties().size === 0) {\n            this.emitEmptyClassDefinition(c, className);\n            return;\n        }\n        const scalaType = (p) => {\n            if (p.isOptional) {\n                return [this.scalaType(p.type, true, true)];\n            }\n            else {\n                return [this.scalaType(p.type, true)];\n            }\n        };\n        const emitLater = [];\n        this.emitDescription(this.descriptionForType(c));\n        this.emitLine(\"structure \", className, \" {\");\n        this.indent(() => {\n            let count = c.getProperties().size;\n            let first = true;\n            this.forEachClassProperty(c, \"none\", (_, jsonName, p) => {\n                const nullable = p.type.kind === \"union\" && (0, TypeUtils_1.nullableFromUnion)(p.type) !== null;\n                const nullableOrOptional = p.isOptional || p.type.kind === \"null\" || nullable;\n                const last = --count === 0;\n                const meta = [];\n                const laterType = p.type.kind === \"array\" || p.type.kind === \"map\";\n                if (laterType) {\n                    emitLater.push(p);\n                }\n                const description = this.descriptionForClassProperty(c, jsonName);\n                if (description !== undefined) {\n                    meta.push(() => this.emitDescription(description));\n                }\n                if (meta.length > 0 && !first) {\n                    this.ensureBlankLine();\n                }\n                for (const emit of meta) {\n                    emit();\n                }\n                const nameNeedsBackticks = jsonName.endsWith(\"_\") || shouldAddBacktick(jsonName);\n                const nameWithBackticks = nameNeedsBackticks ? \"`\" + jsonName + \"`\" : jsonName;\n                this.emitLine(p.isOptional ? \"\" : nullableOrOptional ? \"\" : \"@required \", nameWithBackticks, \" : \", scalaType(p), last ? \"\" : \",\");\n                if (meta.length > 0 && !last) {\n                    this.ensureBlankLine();\n                }\n                first = false;\n            });\n        });\n        this.emitClassDefinitionMethods(emitLater);\n    }\n    emitClassDefinitionMethods(arrayTypes) {\n        this.emitLine(\"}\");\n        arrayTypes.forEach(p => {\n            function ignore(_) {\n                return;\n            }\n            (0, TypeUtils_1.matchCompoundType)(p.type, at => {\n                this.emitLine([\n                    \"list \",\n                    this.scalaType(at, true),\n                    \"{ member: \",\n                    this.scalaType(at.items, true),\n                    \"}\"\n                ]);\n            }, ignore, mt => {\n                this.emitLine([\n                    \"map \",\n                    this.scalaType(mt, true),\n                    \"{ key: String , value: \",\n                    this.scalaType(mt.values, true),\n                    \"}\"\n                ]);\n            }, ignore, ignore);\n        });\n    }\n    emitEnumDefinition(e, enumName) {\n        this.emitDescription(this.descriptionForType(e));\n        this.ensureBlankLine();\n        this.emitItem([\"enum \", enumName, \" { \"]);\n        let count = e.cases.size;\n        this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n            // if (!(jsonName == \"\")) {\n            /*                 const backticks =\n                                    shouldAddBacktick(jsonName) ||\n                                    jsonName.includes(\" \") ||\n                                    !isNaN(parseInt(jsonName.charAt(0)))\n                                if (backticks) {this.emitItem(\"`\")} else  */\n            this.emitLine();\n            this.emitItem([name, ' = \"', jsonName, '\"']);\n            //                if (backticks) {this.emitItem(\"`\")}\n            if (--count > 0)\n                this.emitItem([\",\"]);\n            //} else {\n            //--count\n            //}\n        });\n        this.ensureBlankLine();\n        this.emitItem([\"}\"]);\n    }\n    emitUnionDefinition(u, unionName) {\n        function sortBy(t) {\n            const kind = t.kind;\n            if (kind === \"class\")\n                return kind;\n            return \"_\" + kind;\n        }\n        const emitLater = [];\n        this.emitDescription(this.descriptionForType(u));\n        const [maybeNull, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(u, sortBy);\n        const theTypes = [];\n        this.forEachUnionMember(u, nonNulls, \"none\", null, (_, t) => {\n            const laterType = t.kind === \"array\" || t.kind === \"map\";\n            if (laterType) {\n                emitLater.push(t);\n            }\n            theTypes.push(this.scalaType(t));\n        });\n        if (maybeNull !== null) {\n            theTypes.push(this.nameForUnionMember(u, maybeNull));\n        }\n        this.emitLine([\"@untagged union \", unionName, \" { \"]);\n        this.indent(() => {\n            theTypes.forEach((t, i) => {\n                this.emitLine([String.fromCharCode(i + 65), \" : \", t]);\n            });\n        });\n        this.emitLine(\"}\");\n        this.ensureBlankLine();\n        emitLater.forEach(p => {\n            function ignore(_) {\n                return;\n            }\n            (0, TypeUtils_1.matchCompoundType)(p, at => {\n                this.emitLine([\n                    \"list \",\n                    this.scalaType(at, true),\n                    \"{ member: \",\n                    this.scalaType(at.items, true),\n                    \"}\"\n                ]);\n            }, ignore, mt => {\n                this.emitLine([\n                    \"map \",\n                    this.scalaType(mt, true),\n                    \"{ key: String , value: \",\n                    this.scalaType(mt.values, true),\n                    \"}\"\n                ]);\n            }, ignore, ignore);\n        });\n    }\n    emitSourceStructure() {\n        this.emitHeader();\n        // Top-level arrays, maps\n        this.forEachTopLevel(\"leading\", (t, name) => {\n            if (t instanceof Type_1.ArrayType) {\n                this.emitTopLevelArray(t, name);\n            }\n            else if (t instanceof Type_1.MapType) {\n                this.emitTopLevelMap(t, name);\n            }\n        });\n        this.forEachNamedType(\"leading-and-interposing\", (c, n) => this.emitClassDefinition(c, n), (e, n) => this.emitEnumDefinition(e, n), (u, n) => this.emitUnionDefinition(u, n));\n    }\n}\nexports.Smithy4sRenderer = Smithy4sRenderer;\nclass SmithyTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor() {\n        super(\"Smithy\", [\"Smithy\"], \"smithy\");\n    }\n    getOptions() {\n        return [exports.SmithyOptions.framework, exports.SmithyOptions.packageName];\n    }\n    get supportsOptionalClassProperties() {\n        return true;\n    }\n    get supportsUnionsWithBothNumberTypes() {\n        return true;\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        const options = (0, RendererOptions_1.getOptionValues)(exports.SmithyOptions, untypedOptionValues);\n        switch (options.framework) {\n            case Framework.None:\n                return new Smithy4sRenderer(this, renderContext, options);\n            default:\n                return (0, Support_1.assertNever)(options.framework);\n        }\n    }\n}\nexports.SmithyTargetLanguage = SmithyTargetLanguage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElmRenderer = exports.ElmTargetLanguage = exports.elmOptions = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst Naming_1 = require(\"../Naming\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Support_1 = require(\"../support/Support\");\nconst Source_1 = require(\"../Source\");\nconst Annotation_1 = require(\"../Annotation\");\nexports.elmOptions = {\n    justTypes: new RendererOptions_1.BooleanOption(\"just-types\", \"Plain types only\", false),\n    useList: new RendererOptions_1.EnumOption(\"array-type\", \"Use Array or List\", [\n        [\"array\", false],\n        [\"list\", true]\n    ]),\n    // FIXME: Do this via a configurable named eventually.\n    moduleName: new RendererOptions_1.StringOption(\"module\", \"Generated module name\", \"NAME\", \"QuickType\")\n};\nclass ElmTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor() {\n        super(\"Elm\", [\"elm\"], \"elm\");\n    }\n    getOptions() {\n        return [exports.elmOptions.justTypes, exports.elmOptions.moduleName, exports.elmOptions.useList];\n    }\n    get supportsOptionalClassProperties() {\n        return true;\n    }\n    get supportsUnionsWithBothNumberTypes() {\n        return true;\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        return new ElmRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.elmOptions, untypedOptionValues));\n    }\n}\nexports.ElmTargetLanguage = ElmTargetLanguage;\nconst forbiddenNames = [\n    \"if\",\n    \"then\",\n    \"else\",\n    \"case\",\n    \"of\",\n    \"let\",\n    \"in\",\n    \"infix\",\n    \"type\",\n    \"module\",\n    \"where\",\n    \"import\",\n    \"exposing\",\n    \"as\",\n    \"port\",\n    \"int\",\n    \"float\",\n    \"bool\",\n    \"string\",\n    \"Jenc\",\n    \"Jdec\",\n    \"Jpipe\",\n    \"always\",\n    \"identity\",\n    \"Array\",\n    \"List\",\n    \"Dict\",\n    \"Maybe\",\n    \"map\",\n    \"toList\",\n    \"makeArrayEncoder\",\n    \"makeDictEncoder\",\n    \"makeNullableEncoder\",\n    \"Int\",\n    \"True\",\n    \"False\",\n    \"String\",\n    \"Float\"\n];\nconst legalizeName = (0, Strings_1.legalizeCharacters)(cp => (0, Strings_1.isAscii)(cp) && (0, Strings_1.isLetterOrUnderscoreOrDigit)(cp));\nfunction elmNameStyle(original, upper) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    return (0, Strings_1.combineWords)(words, legalizeName, upper ? Strings_1.firstUpperWordStyle : Strings_1.allLowerWordStyle, Strings_1.firstUpperWordStyle, upper ? Strings_1.allUpperWordStyle : Strings_1.allLowerWordStyle, Strings_1.allUpperWordStyle, \"\", Strings_1.isLetterOrUnderscore);\n}\nconst upperNamingFunction = (0, Naming_1.funPrefixNamer)(\"upper\", n => elmNameStyle(n, true));\nconst lowerNamingFunction = (0, Naming_1.funPrefixNamer)(\"lower\", n => elmNameStyle(n, false));\nfunction requiredOrOptional(p) {\n    function optional(fallback) {\n        return { reqOrOpt: \"Jpipe.optional\", fallback };\n    }\n    const t = p.type;\n    if (p.isOptional || (t instanceof Type_1.UnionType && (0, TypeUtils_1.nullableFromUnion)(t) !== null)) {\n        return optional(\" Nothing\");\n    }\n    if (t.kind === \"null\") {\n        return optional(\" ()\");\n    }\n    return { reqOrOpt: \"Jpipe.required\", fallback: \"\" };\n}\nclass ElmRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _options) {\n        super(targetLanguage, renderContext);\n        this._options = _options;\n        this._topLevelDependents = new Map();\n        this._namedTypeDependents = new Map();\n    }\n    forbiddenNamesForGlobalNamespace() {\n        return forbiddenNames;\n    }\n    makeTopLevelDependencyNames(t, topLevelName) {\n        const encoder = new Naming_1.DependencyName(lowerNamingFunction, topLevelName.order, lookup => `${lookup(topLevelName)}_to_string`);\n        let decoder = undefined;\n        if (this.namedTypeToNameForTopLevel(t) === undefined) {\n            decoder = new Naming_1.DependencyName(lowerNamingFunction, topLevelName.order, lookup => lookup(topLevelName));\n        }\n        this._topLevelDependents.set(topLevelName, { encoder, decoder });\n        if (decoder !== undefined) {\n            return [encoder, decoder];\n        }\n        return [encoder];\n    }\n    makeNamedTypeNamer() {\n        return upperNamingFunction;\n    }\n    makeNamedTypeDependencyNames(_, typeName) {\n        const encoder = new Naming_1.DependencyName(lowerNamingFunction, typeName.order, lookup => `encode_${lookup(typeName)}`);\n        const decoder = new Naming_1.DependencyName(lowerNamingFunction, typeName.order, lookup => lookup(typeName));\n        this._namedTypeDependents.set(typeName, { encoder, decoder });\n        return [encoder, decoder];\n    }\n    namerForObjectProperty() {\n        return lowerNamingFunction;\n    }\n    forbiddenForObjectProperties(_c, _className) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    makeUnionMemberNamer() {\n        return upperNamingFunction;\n    }\n    get unionMembersInGlobalNamespace() {\n        return true;\n    }\n    makeEnumCaseNamer() {\n        return upperNamingFunction;\n    }\n    get enumCasesInGlobalNamespace() {\n        return true;\n    }\n    proposeUnionMemberName(u, unionName, fieldType, lookup) {\n        const fieldName = super.proposeUnionMemberName(u, unionName, fieldType, lookup);\n        return `${fieldName}_in_${lookup(unionName)}`;\n    }\n    get commentLineStart() {\n        return \"-- \";\n    }\n    emitDescriptionBlock(lines) {\n        if (lines.length === 1) {\n            this.emitComments([{ customLines: lines, lineStart: \"{-| \", lineEnd: \" -}\" }]);\n        }\n        else {\n            this.emitCommentLines(lines, { firstLineStart: \"{-| \", lineStart: \"\", afterComment: \"-}\" });\n        }\n    }\n    get arrayType() {\n        return this._options.useList ? \"List\" : \"Array\";\n    }\n    elmType(t, noOptional = false) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => (0, Source_1.singleWord)((0, Source_1.annotated)(Annotation_1.anyTypeIssueAnnotation, \"Jdec.Value\")), _nullType => (0, Source_1.singleWord)((0, Source_1.annotated)(Annotation_1.nullTypeIssueAnnotation, \"()\")), _boolType => (0, Source_1.singleWord)(\"Bool\"), _integerType => (0, Source_1.singleWord)(\"Int\"), _doubleType => (0, Source_1.singleWord)(\"Float\"), _stringType => (0, Source_1.singleWord)(\"String\"), arrayType => (0, Source_1.multiWord)(\" \", this.arrayType, (0, Source_1.parenIfNeeded)(this.elmType(arrayType.items))), classType => (0, Source_1.singleWord)(this.nameForNamedType(classType)), mapType => (0, Source_1.multiWord)(\" \", \"Dict String\", (0, Source_1.parenIfNeeded)(this.elmType(mapType.values))), enumType => (0, Source_1.singleWord)(this.nameForNamedType(enumType)), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                const nullableType = this.elmType(nullable);\n                if (noOptional)\n                    return nullableType;\n                return (0, Source_1.multiWord)(\" \", \"Maybe\", (0, Source_1.parenIfNeeded)(nullableType));\n            }\n            return (0, Source_1.singleWord)(this.nameForNamedType(unionType));\n        });\n    }\n    elmProperty(p) {\n        if (p.isOptional) {\n            return (0, Source_1.multiWord)(\" \", \"Maybe\", (0, Source_1.parenIfNeeded)(this.elmType(p.type, true))).source;\n        }\n        else {\n            return this.elmType(p.type).source;\n        }\n    }\n    decoderNameForNamedType(t) {\n        const name = this.nameForNamedType(t);\n        return (0, Support_1.defined)(this._namedTypeDependents.get(name)).decoder;\n    }\n    decoderNameForType(t, noOptional = false) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => (0, Source_1.singleWord)(\"Jdec.value\"), _nullType => (0, Source_1.multiWord)(\" \", \"Jdec.null\", \"()\"), _boolType => (0, Source_1.singleWord)(\"Jdec.bool\"), _integerType => (0, Source_1.singleWord)(\"Jdec.int\"), _doubleType => (0, Source_1.singleWord)(\"Jdec.float\"), _stringType => (0, Source_1.singleWord)(\"Jdec.string\"), arrayType => (0, Source_1.multiWord)(\" \", [\"Jdec.\", (0, Strings_1.decapitalize)(this.arrayType)], (0, Source_1.parenIfNeeded)(this.decoderNameForType(arrayType.items))), classType => (0, Source_1.singleWord)(this.decoderNameForNamedType(classType)), mapType => (0, Source_1.multiWord)(\" \", \"Jdec.dict\", (0, Source_1.parenIfNeeded)(this.decoderNameForType(mapType.values))), enumType => (0, Source_1.singleWord)(this.decoderNameForNamedType(enumType)), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                const nullableDecoder = this.decoderNameForType(nullable);\n                if (noOptional)\n                    return nullableDecoder;\n                return (0, Source_1.multiWord)(\" \", \"Jdec.nullable\", (0, Source_1.parenIfNeeded)(nullableDecoder));\n            }\n            return (0, Source_1.singleWord)(this.decoderNameForNamedType(unionType));\n        });\n    }\n    decoderNameForProperty(p) {\n        if (p.isOptional) {\n            return (0, Source_1.multiWord)(\" \", \"Jdec.nullable\", (0, Source_1.parenIfNeeded)(this.decoderNameForType(p.type, true)));\n        }\n        else {\n            return this.decoderNameForType(p.type);\n        }\n    }\n    encoderNameForNamedType(t) {\n        const name = this.nameForNamedType(t);\n        return (0, Support_1.defined)(this._namedTypeDependents.get(name)).encoder;\n    }\n    encoderNameForType(t, noOptional = false) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => (0, Source_1.singleWord)(\"identity\"), _nullType => (0, Source_1.multiWord)(\" \", \"always\", \"Jenc.null\"), _boolType => (0, Source_1.singleWord)(\"Jenc.bool\"), _integerType => (0, Source_1.singleWord)(\"Jenc.int\"), _doubleType => (0, Source_1.singleWord)(\"Jenc.float\"), _stringType => (0, Source_1.singleWord)(\"Jenc.string\"), arrayType => (0, Source_1.multiWord)(\" \", [\"make\", this.arrayType, \"Encoder\"], (0, Source_1.parenIfNeeded)(this.encoderNameForType(arrayType.items))), classType => (0, Source_1.singleWord)(this.encoderNameForNamedType(classType)), mapType => (0, Source_1.multiWord)(\" \", \"makeDictEncoder\", (0, Source_1.parenIfNeeded)(this.encoderNameForType(mapType.values))), enumType => (0, Source_1.singleWord)(this.encoderNameForNamedType(enumType)), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                const nullableEncoder = this.encoderNameForType(nullable);\n                if (noOptional)\n                    return nullableEncoder;\n                return (0, Source_1.multiWord)(\" \", \"makeNullableEncoder\", (0, Source_1.parenIfNeeded)(nullableEncoder));\n            }\n            return (0, Source_1.singleWord)(this.encoderNameForNamedType(unionType));\n        });\n    }\n    encoderNameForProperty(p) {\n        if (p.isOptional) {\n            return (0, Source_1.multiWord)(\" \", \"makeNullableEncoder\", (0, Source_1.parenIfNeeded)(this.encoderNameForType(p.type, true)));\n        }\n        else {\n            return this.encoderNameForType(p.type);\n        }\n    }\n    emitTopLevelDefinition(t, topLevelName) {\n        this.emitLine(\"type alias \", topLevelName, \" = \", this.elmType(t).source);\n    }\n    emitClassDefinition(c, className) {\n        let description = this.descriptionForType(c);\n        this.forEachClassProperty(c, \"none\", (name, jsonName) => {\n            const propertyDescription = this.descriptionForClassProperty(c, jsonName);\n            if (propertyDescription === undefined)\n                return;\n            if (description === undefined) {\n                description = [];\n            }\n            else {\n                description.push(\"\");\n            }\n            description.push(`${this.sourcelikeToString(name)}:`);\n            description.push(...propertyDescription);\n        });\n        this.emitDescription(description);\n        this.emitLine(\"type alias \", className, \" =\");\n        this.indent(() => {\n            let onFirst = true;\n            this.forEachClassProperty(c, \"none\", (name, _jsonName, p) => {\n                this.emitLine(onFirst ? \"{\" : \",\", \" \", name, \" : \", this.elmProperty(p));\n                onFirst = false;\n            });\n            if (onFirst) {\n                this.emitLine(\"{\");\n            }\n            this.emitLine(\"}\");\n        });\n    }\n    emitEnumDefinition(e, enumName) {\n        this.emitDescription(this.descriptionForType(e));\n        this.emitLine(\"type \", enumName);\n        this.indent(() => {\n            let onFirst = true;\n            this.forEachEnumCase(e, \"none\", name => {\n                const equalsOrPipe = onFirst ? \"=\" : \"|\";\n                this.emitLine(equalsOrPipe, \" \", name);\n                onFirst = false;\n            });\n        });\n    }\n    emitUnionDefinition(u, unionName) {\n        this.emitDescription(this.descriptionForType(u));\n        this.emitLine(\"type \", unionName);\n        this.indent(() => {\n            let onFirst = true;\n            this.forEachUnionMember(u, null, \"none\", null, (constructor, t) => {\n                const equalsOrPipe = onFirst ? \"=\" : \"|\";\n                if (t.kind === \"null\") {\n                    this.emitLine(equalsOrPipe, \" \", constructor);\n                }\n                else {\n                    this.emitLine(equalsOrPipe, \" \", constructor, \" \", (0, Source_1.parenIfNeeded)(this.elmType(t)));\n                }\n                onFirst = false;\n            });\n        });\n    }\n    emitTopLevelFunctions(t, topLevelName) {\n        const { encoder, decoder } = (0, Support_1.defined)(this._topLevelDependents.get(topLevelName));\n        if (this.namedTypeToNameForTopLevel(t) === undefined) {\n            this.emitLine((0, Support_1.defined)(decoder), \" : Jdec.Decoder \", topLevelName);\n            this.emitLine((0, Support_1.defined)(decoder), \" = \", this.decoderNameForType(t).source);\n            this.ensureBlankLine();\n        }\n        this.emitLine(encoder, \" : \", topLevelName, \" -> String\");\n        this.emitLine(encoder, \" r = Jenc.encode 0 (\", this.encoderNameForType(t).source, \" r)\");\n    }\n    emitClassFunctions(c, className) {\n        const decoderName = this.decoderNameForNamedType(c);\n        this.emitLine(decoderName, \" : Jdec.Decoder \", className);\n        this.emitLine(decoderName, \" =\");\n        this.indent(() => {\n            this.emitLine(\"Jpipe.decode \", className);\n            this.indent(() => {\n                this.forEachClassProperty(c, \"none\", (_, jsonName, p) => {\n                    const propDecoder = (0, Source_1.parenIfNeeded)(this.decoderNameForProperty(p));\n                    const { reqOrOpt, fallback } = requiredOrOptional(p);\n                    this.emitLine(\"|> \", reqOrOpt, ' \"', (0, Strings_1.stringEscape)(jsonName), '\" ', propDecoder, fallback);\n                });\n            });\n        });\n        this.ensureBlankLine();\n        const encoderName = this.encoderNameForNamedType(c);\n        this.emitLine(encoderName, \" : \", className, \" -> Jenc.Value\");\n        this.emitLine(encoderName, \" x =\");\n        this.indent(() => {\n            this.emitLine(\"Jenc.object\");\n            this.indent(() => {\n                let onFirst = true;\n                this.forEachClassProperty(c, \"none\", (name, jsonName, p) => {\n                    const bracketOrComma = onFirst ? \"[\" : \",\";\n                    const propEncoder = this.encoderNameForProperty(p).source;\n                    this.emitLine(bracketOrComma, ' (\"', (0, Strings_1.stringEscape)(jsonName), '\", ', propEncoder, \" x.\", name, \")\");\n                    onFirst = false;\n                });\n                if (onFirst) {\n                    this.emitLine(\"[\");\n                }\n                this.emitLine(\"]\");\n            });\n        });\n    }\n    emitEnumFunctions(e, enumName) {\n        const decoderName = this.decoderNameForNamedType(e);\n        this.emitLine(decoderName, \" : Jdec.Decoder \", enumName);\n        this.emitLine(decoderName, \" =\");\n        this.indent(() => {\n            this.emitLine(\"Jdec.string\");\n            this.indent(() => {\n                this.emitLine(\"|> Jdec.andThen (\\\\str ->\");\n                this.indent(() => {\n                    this.emitLine(\"case str of\");\n                    this.indent(() => {\n                        this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n                            this.emitLine('\"', (0, Strings_1.stringEscape)(jsonName), '\" -> Jdec.succeed ', name);\n                        });\n                        this.emitLine('somethingElse -> Jdec.fail <| \"Invalid ', enumName, ': \" ++ somethingElse');\n                    });\n                });\n                this.emitLine(\")\");\n            });\n        });\n        this.ensureBlankLine();\n        const encoderName = this.encoderNameForNamedType(e);\n        this.emitLine(encoderName, \" : \", enumName, \" -> Jenc.Value\");\n        this.emitLine(encoderName, \" x = case x of\");\n        this.indent(() => {\n            this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n                this.emitLine(name, ' -> Jenc.string \"', (0, Strings_1.stringEscape)(jsonName), '\"');\n            });\n        });\n    }\n    emitUnionFunctions(u, unionName) {\n        // We need arrays first, then strings, and integers before doubles.\n        function sortOrder(_, t) {\n            if (t.kind === \"array\") {\n                return \"  array\";\n            }\n            else if (t.kind === \"double\") {\n                return \" xdouble\";\n            }\n            else if (t.isPrimitive()) {\n                return \" \" + t.kind;\n            }\n            return t.kind;\n        }\n        const decoderName = this.decoderNameForNamedType(u);\n        this.emitLine(decoderName, \" : Jdec.Decoder \", unionName);\n        this.emitLine(decoderName, \" =\");\n        this.indent(() => {\n            this.emitLine(\"Jdec.oneOf\");\n            this.indent(() => {\n                let onFirst = true;\n                this.forEachUnionMember(u, null, \"none\", sortOrder, (constructor, t) => {\n                    const bracketOrComma = onFirst ? \"[\" : \",\";\n                    if (t.kind === \"null\") {\n                        this.emitLine(bracketOrComma, \" Jdec.null \", constructor);\n                    }\n                    else {\n                        const decoder = (0, Source_1.parenIfNeeded)(this.decoderNameForType(t));\n                        this.emitLine(bracketOrComma, \" Jdec.map \", constructor, \" \", decoder);\n                    }\n                    onFirst = false;\n                });\n                this.emitLine(\"]\");\n            });\n        });\n        this.ensureBlankLine();\n        const encoderName = this.encoderNameForNamedType(u);\n        this.emitLine(encoderName, \" : \", unionName, \" -> Jenc.Value\");\n        this.emitLine(encoderName, \" x = case x of\");\n        this.indent(() => {\n            this.forEachUnionMember(u, null, \"none\", sortOrder, (constructor, t) => {\n                if (t.kind === \"null\") {\n                    this.emitLine(constructor, \" -> Jenc.null\");\n                }\n                else {\n                    const encoder = this.encoderNameForType(t).source;\n                    this.emitLine(constructor, \" y -> \", encoder, \" y\");\n                }\n            });\n        });\n    }\n    emitSourceStructure() {\n        const exports = [];\n        const topLevelDecoders = [];\n        this.forEachTopLevel(\"none\", (_, name) => {\n            let { encoder, decoder } = (0, Support_1.defined)(this._topLevelDependents.get(name));\n            if (decoder === undefined) {\n                decoder = (0, Support_1.defined)(this._namedTypeDependents.get(name)).decoder;\n            }\n            topLevelDecoders.push(decoder);\n            exports.push(name, encoder, decoder);\n        });\n        this.forEachObject(\"none\", (t, name) => {\n            if (!(0, collection_utils_1.mapContains)(this.topLevels, t))\n                exports.push(name);\n        });\n        this.forEachEnum(\"none\", (t, name) => {\n            if (!(0, collection_utils_1.mapContains)(this.topLevels, t))\n                exports.push([name, \"(..)\"]);\n        });\n        this.forEachUnion(\"none\", (t, name) => {\n            if (!(0, collection_utils_1.mapContains)(this.topLevels, t))\n                exports.push([name, \"(..)\"]);\n        });\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n        }\n        else if (!this._options.justTypes) {\n            this.emitCommentLines([\n                \"To decode the JSON data, add this file to your project, run\",\n                \"\",\n                \"    elm-package install NoRedInk/elm-decode-pipeline\",\n                \"\",\n                \"add these imports\",\n                \"\",\n                \"    import Json.Decode exposing (decodeString)`);\"\n            ]);\n            this.emitLine(\"--     import \", this._options.moduleName, \" exposing (\", (0, collection_utils_1.arrayIntercalate)(\", \", topLevelDecoders), \")\");\n            this.emitMultiline(`--\n-- and you're off to the races with\n--`);\n            this.forEachTopLevel(\"none\", (_, name) => {\n                let { decoder } = (0, Support_1.defined)(this._topLevelDependents.get(name));\n                if (decoder === undefined) {\n                    decoder = (0, Support_1.defined)(this._namedTypeDependents.get(name)).decoder;\n                }\n                this.emitLine(\"--     decodeString \", decoder, \" myJsonString\");\n            });\n        }\n        if (!this._options.justTypes) {\n            this.ensureBlankLine();\n            this.emitLine(\"module \", this._options.moduleName, \" exposing\");\n            this.indent(() => {\n                for (let i = 0; i < exports.length; i++) {\n                    this.emitLine(i === 0 ? \"(\" : \",\", \" \", exports[i]);\n                }\n                this.emitLine(\")\");\n            });\n            this.ensureBlankLine();\n            this.emitMultiline(`import Json.Decode as Jdec\nimport Json.Decode.Pipeline as Jpipe\nimport Json.Encode as Jenc\nimport Dict exposing (Dict, map, toList)`);\n            if (this._options.useList) {\n                this.emitLine(\"import List exposing (map)\");\n            }\n            else {\n                this.emitLine(\"import Array exposing (Array, map)\");\n            }\n        }\n        this.forEachTopLevel(\"leading-and-interposing\", (t, topLevelName) => this.emitTopLevelDefinition(t, topLevelName), t => this.namedTypeToNameForTopLevel(t) === undefined);\n        this.forEachNamedType(\"leading-and-interposing\", (c, className) => this.emitClassDefinition(c, className), (e, enumName) => this.emitEnumDefinition(e, enumName), (u, unionName) => this.emitUnionDefinition(u, unionName));\n        if (this._options.justTypes)\n            return;\n        this.ensureBlankLine();\n        this.emitLine(\"-- decoders and encoders\");\n        this.forEachTopLevel(\"leading-and-interposing\", (t, topLevelName) => this.emitTopLevelFunctions(t, topLevelName));\n        this.forEachNamedType(\"leading-and-interposing\", (c, className) => this.emitClassFunctions(c, className), (e, enumName) => this.emitEnumFunctions(e, enumName), (u, unionName) => this.emitUnionFunctions(u, unionName));\n        this.ensureBlankLine();\n        this.emitLine(\"--- encoder helpers\");\n        this.ensureBlankLine();\n        this.emitLine(\"make\", this.arrayType, \"Encoder : (a -> Jenc.Value) -> \", this.arrayType, \" a -> Jenc.Value\");\n        this.emitLine(\"make\", this.arrayType, \"Encoder f arr =\");\n        this.indent(() => {\n            this.emitLine(\"Jenc.\", (0, Strings_1.decapitalize)(this.arrayType), \" (\", this.arrayType, \".map f arr)\");\n        });\n        this.ensureBlankLine();\n        this.emitMultiline(`makeDictEncoder : (a -> Jenc.Value) -> Dict String a -> Jenc.Value\nmakeDictEncoder f dict =\n    Jenc.object (toList (Dict.map (\\\\k -> f) dict))\n\nmakeNullableEncoder : (a -> Jenc.Value) -> Maybe a -> Jenc.Value\nmakeNullableEncoder f m =\n    case m of\n    Just x -> f x\n    Nothing -> Jenc.null`);\n    }\n}\nexports.ElmRenderer = ElmRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JSONSchemaRenderer = exports.JSONSchemaTargetLanguage = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst Naming_1 = require(\"../Naming\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Support_1 = require(\"../support/Support\");\nconst TypeBuilder_1 = require(\"../TypeBuilder\");\nconst Description_1 = require(\"../attributes/Description\");\nclass JSONSchemaTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor() {\n        super(\"JSON Schema\", [\"schema\", \"json-schema\"], \"schema\");\n    }\n    getOptions() {\n        return [];\n    }\n    get stringTypeMapping() {\n        return (0, TypeBuilder_1.getNoStringTypeMapping)();\n    }\n    get supportsOptionalClassProperties() {\n        return true;\n    }\n    get supportsFullObjectType() {\n        return true;\n    }\n    makeRenderer(renderContext, _untypedOptionValues) {\n        return new JSONSchemaRenderer(this, renderContext);\n    }\n}\nexports.JSONSchemaTargetLanguage = JSONSchemaTargetLanguage;\nconst namingFunction = (0, Naming_1.funPrefixNamer)(\"namer\", jsonNameStyle);\nconst legalizeName = (0, Strings_1.legalizeCharacters)(cp => cp >= 32 && cp < 128 && cp !== 0x2f /* slash */);\nfunction jsonNameStyle(original) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    return (0, Strings_1.combineWords)(words, legalizeName, Strings_1.firstUpperWordStyle, Strings_1.firstUpperWordStyle, Strings_1.allUpperWordStyle, Strings_1.allUpperWordStyle, \"\", _ => true);\n}\nclass JSONSchemaRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    makeNamedTypeNamer() {\n        return namingFunction;\n    }\n    namerForObjectProperty() {\n        return null;\n    }\n    makeUnionMemberNamer() {\n        return null;\n    }\n    makeEnumCaseNamer() {\n        return null;\n    }\n    nameForType(t) {\n        return (0, Support_1.defined)(this.names.get(this.nameForNamedType(t)));\n    }\n    makeOneOf(types) {\n        const first = (0, collection_utils_1.iterableFirst)(types);\n        if (first === undefined) {\n            return (0, Support_1.panic)(\"Must have at least one type for oneOf\");\n        }\n        if (types.size === 1) {\n            return this.schemaForType(first);\n        }\n        return { anyOf: Array.from(types).map((t) => this.schemaForType(t)) };\n    }\n    makeRef(t) {\n        return { $ref: `#/definitions/${this.nameForType(t)}` };\n    }\n    addAttributesToSchema(t, schema) {\n        const attributes = this.typeGraph.attributeStore.attributesForType(t);\n        for (const [kind, attr] of attributes) {\n            kind.addToSchema(schema, t, attr);\n        }\n    }\n    schemaForType(t) {\n        const schema = (0, TypeUtils_1.matchTypeExhaustive)(t, _noneType => {\n            return (0, Support_1.panic)(\"none type should have been replaced\");\n        }, _anyType => ({}), _nullType => ({ type: \"null\" }), _boolType => ({ type: \"boolean\" }), _integerType => ({ type: \"integer\" }), _doubleType => ({ type: \"number\" }), _stringType => ({ type: \"string\" }), arrayType => ({ type: \"array\", items: this.schemaForType(arrayType.items) }), classType => this.makeRef(classType), mapType => this.definitionForObject(mapType, undefined), objectType => this.makeRef(objectType), enumType => this.makeRef(enumType), unionType => {\n            if (this.unionNeedsName(unionType)) {\n                return this.makeRef(unionType);\n            }\n            else {\n                return this.definitionForUnion(unionType);\n            }\n        }, transformedStringType => {\n            const target = Type_1.transformedStringTypeTargetTypeKindsMap.get(transformedStringType.kind);\n            if (target === undefined) {\n                return (0, Support_1.panic)(`Unknown transformed string type ${transformedStringType.kind}`);\n            }\n            return { type: \"string\", format: target.jsonSchema };\n        });\n        if (schema.$ref === undefined) {\n            this.addAttributesToSchema(t, schema);\n        }\n        return schema;\n    }\n    definitionForObject(o, title) {\n        let properties;\n        let required;\n        if (o.getProperties().size === 0) {\n            properties = undefined;\n            required = undefined;\n        }\n        else {\n            const props = {};\n            const req = [];\n            for (const [name, p] of o.getProperties()) {\n                const prop = this.schemaForType(p.type);\n                if (prop.description === undefined) {\n                    (0, Description_1.addDescriptionToSchema)(prop, this.descriptionForClassProperty(o, name));\n                }\n                props[name] = prop;\n                if (!p.isOptional) {\n                    req.push(name);\n                }\n            }\n            properties = props;\n            required = req.sort();\n        }\n        const additional = o.getAdditionalProperties();\n        const additionalProperties = additional !== undefined ? this.schemaForType(additional) : false;\n        const schema = {\n            type: \"object\",\n            additionalProperties,\n            properties,\n            required,\n            title\n        };\n        this.addAttributesToSchema(o, schema);\n        return schema;\n    }\n    definitionForUnion(u, title) {\n        const oneOf = this.makeOneOf(u.sortedMembers);\n        if (title !== undefined) {\n            oneOf.title = title;\n        }\n        this.addAttributesToSchema(u, oneOf);\n        return oneOf;\n    }\n    definitionForEnum(e, title) {\n        const schema = { type: \"string\", enum: Array.from(e.cases), title };\n        this.addAttributesToSchema(e, schema);\n        return schema;\n    }\n    emitSourceStructure() {\n        // FIXME: Find a good way to do multiple top-levels.  Maybe multiple files?\n        const topLevelType = this.topLevels.size === 1 ? this.schemaForType((0, Support_1.defined)((0, collection_utils_1.mapFirst)(this.topLevels))) : {};\n        const schema = Object.assign({ $schema: \"http://json-schema.org/draft-06/schema#\" }, topLevelType);\n        const definitions = {};\n        this.forEachObject(\"none\", (o, name) => {\n            const title = (0, Support_1.defined)(this.names.get(name));\n            definitions[title] = this.definitionForObject(o, title);\n        });\n        this.forEachUnion(\"none\", (u, name) => {\n            if (!this.unionNeedsName(u))\n                return;\n            const title = (0, Support_1.defined)(this.names.get(name));\n            definitions[title] = this.definitionForUnion(u, title);\n        });\n        this.forEachEnum(\"none\", (e, name) => {\n            const title = (0, Support_1.defined)(this.names.get(name));\n            definitions[title] = this.definitionForEnum(e, title);\n        });\n        schema.definitions = definitions;\n        this.emitMultiline(JSON.stringify(schema, undefined, \"    \"));\n    }\n}\nexports.JSONSchemaRenderer = JSONSchemaRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RustRenderer = exports.RustTargetLanguage = exports.rustOptions = exports.Visibility = exports.Density = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Naming_1 = require(\"../Naming\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Source_1 = require(\"../Source\");\nconst Annotation_1 = require(\"../Annotation\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst Support_1 = require(\"../support/Support\");\nvar Density;\n(function (Density) {\n    Density[Density[\"Normal\"] = 0] = \"Normal\";\n    Density[Density[\"Dense\"] = 1] = \"Dense\";\n})(Density = exports.Density || (exports.Density = {}));\nvar Visibility;\n(function (Visibility) {\n    Visibility[Visibility[\"Private\"] = 0] = \"Private\";\n    Visibility[Visibility[\"Crate\"] = 1] = \"Crate\";\n    Visibility[Visibility[\"Public\"] = 2] = \"Public\";\n})(Visibility = exports.Visibility || (exports.Visibility = {}));\nexports.rustOptions = {\n    density: new RendererOptions_1.EnumOption(\"density\", \"Density\", [\n        [\"normal\", Density.Normal],\n        [\"dense\", Density.Dense]\n    ]),\n    visibility: new RendererOptions_1.EnumOption(\"visibility\", \"Field visibility\", [\n        [\"private\", Visibility.Private],\n        [\"crate\", Visibility.Crate],\n        [\"public\", Visibility.Public]\n    ]),\n    deriveDebug: new RendererOptions_1.BooleanOption(\"derive-debug\", \"Derive Debug impl\", false),\n    deriveClone: new RendererOptions_1.BooleanOption(\"derive-clone\", \"Derive Clone impl\", false),\n    derivePartialEq: new RendererOptions_1.BooleanOption(\"derive-partial-eq\", \"Derive PartialEq impl\", false),\n    skipSerializingNone: new RendererOptions_1.BooleanOption(\"skip-serializing-none\", \"Skip serializing empty Option fields\", false),\n    edition2018: new RendererOptions_1.BooleanOption(\"edition-2018\", \"Edition 2018\", true),\n    leadingComments: new RendererOptions_1.BooleanOption(\"leading-comments\", \"Leading Comments\", true)\n};\nconst namingStyles = {\n    snake_case: {\n        regex: /^[a-z][a-z0-9]*(_[a-z0-9]+)*$/,\n        toParts: (name) => name.split(\"_\"),\n        fromParts: (parts) => parts.map(p => p.toLowerCase()).join(\"_\")\n    },\n    SCREAMING_SNAKE_CASE: {\n        regex: /^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$/,\n        toParts: (name) => name.split(\"_\"),\n        fromParts: (parts) => parts.map(p => p.toUpperCase()).join(\"_\")\n    },\n    camelCase: {\n        regex: /^[a-z]+([A-Z0-9][a-z]*)*$/,\n        toParts: (name) => namingStyles.snake_case.toParts(name.replace(/(.)([A-Z])/g, \"$1_$2\")),\n        fromParts: (parts) => parts\n            .map((p, i) => i === 0 ? p.toLowerCase() : p.substring(0, 1).toUpperCase() + p.substring(1).toLowerCase())\n            .join(\"\")\n    },\n    PascalCase: {\n        regex: /^[A-Z][a-z]*([A-Z0-9][a-z]*)*$/,\n        toParts: (name) => namingStyles.snake_case.toParts(name.replace(/(.)([A-Z])/g, \"$1_$2\")),\n        fromParts: (parts) => parts.map(p => p.substring(0, 1).toUpperCase() + p.substring(1).toLowerCase()).join(\"\")\n    },\n    \"kebab-case\": {\n        regex: /^[a-z][a-z0-9]*(-[a-z0-9]+)*$/,\n        toParts: (name) => name.split(\"-\"),\n        fromParts: (parts) => parts.map(p => p.toLowerCase()).join(\"-\")\n    },\n    \"SCREAMING-KEBAB-CASE\": {\n        regex: /^[A-Z][A-Z0-9]*(-[A-Z0-9]+)*$/,\n        toParts: (name) => name.split(\"-\"),\n        fromParts: (parts) => parts.map(p => p.toUpperCase()).join(\"-\")\n    },\n    lowercase: {\n        regex: /^[a-z][a-z0-9]*$/,\n        toParts: (name) => [name],\n        fromParts: (parts) => parts.map(p => p.toLowerCase()).join(\"\")\n    },\n    UPPERCASE: {\n        regex: /^[A-Z][A-Z0-9]*$/,\n        toParts: (name) => [name],\n        fromParts: (parts) => parts.map(p => p.toUpperCase()).join(\"\")\n    }\n};\nclass RustTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    makeRenderer(renderContext, untypedOptionValues) {\n        return new RustRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.rustOptions, untypedOptionValues));\n    }\n    constructor() {\n        super(\"Rust\", [\"rust\", \"rs\", \"rustlang\"], \"rs\");\n    }\n    getOptions() {\n        return [\n            exports.rustOptions.density,\n            exports.rustOptions.visibility,\n            exports.rustOptions.deriveDebug,\n            exports.rustOptions.deriveClone,\n            exports.rustOptions.derivePartialEq,\n            exports.rustOptions.edition2018,\n            exports.rustOptions.leadingComments,\n            exports.rustOptions.skipSerializingNone\n        ];\n    }\n}\nexports.RustTargetLanguage = RustTargetLanguage;\nconst keywords = [\n    \"Serialize\",\n    \"Deserialize\",\n    // Special reserved identifiers used internally for elided lifetimes,\n    // unnamed method parameters, crate root module, error recovery etc.\n    \"{{root}}\",\n    \"$crate\",\n    // Keywords used in the language.\n    \"as\",\n    \"async\",\n    \"box\",\n    \"break\",\n    \"const\",\n    \"continue\",\n    \"crate\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"false\",\n    \"fn\",\n    \"for\",\n    \"if\",\n    \"impl\",\n    \"in\",\n    \"let\",\n    \"loop\",\n    \"match\",\n    \"mod\",\n    \"move\",\n    \"mut\",\n    \"pub\",\n    \"ref\",\n    \"return\",\n    \"self\",\n    \"Self\",\n    \"static\",\n    \"struct\",\n    \"super\",\n    \"trait\",\n    \"true\",\n    \"type\",\n    \"unsafe\",\n    \"use\",\n    \"where\",\n    \"while\",\n    // Keywords reserved for future use.\n    \"abstract\",\n    \"alignof\",\n    \"become\",\n    \"do\",\n    \"final\",\n    \"macro\",\n    \"offsetof\",\n    \"override\",\n    \"priv\",\n    \"proc\",\n    \"pure\",\n    \"sizeof\",\n    \"typeof\",\n    \"unsized\",\n    \"virtual\",\n    \"yield\",\n    // Weak keywords, have special meaning only in specific contexts.\n    \"catch\",\n    \"default\",\n    \"dyn\",\n    \"'static\",\n    \"union\",\n    // Conflict between `std::Option` and potentially generated Option\n    \"option\"\n];\nconst isAsciiLetterOrUnderscoreOrDigit = (codePoint) => {\n    if (!(0, Strings_1.isAscii)(codePoint)) {\n        return false;\n    }\n    return (0, Strings_1.isLetterOrUnderscoreOrDigit)(codePoint);\n};\nconst isAsciiLetterOrUnderscore = (codePoint) => {\n    if (!(0, Strings_1.isAscii)(codePoint)) {\n        return false;\n    }\n    return (0, Strings_1.isLetterOrUnderscore)(codePoint);\n};\nconst legalizeName = (0, Strings_1.legalizeCharacters)(isAsciiLetterOrUnderscoreOrDigit);\nfunction rustStyle(original, isSnakeCase) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    const wordStyle = isSnakeCase ? Strings_1.allLowerWordStyle : Strings_1.firstUpperWordStyle;\n    const combined = (0, Strings_1.combineWords)(words, legalizeName, wordStyle, wordStyle, wordStyle, wordStyle, isSnakeCase ? \"_\" : \"\", isAsciiLetterOrUnderscore);\n    return combined === \"_\" ? \"_underscore\" : combined;\n}\nconst snakeNamingFunction = (0, Naming_1.funPrefixNamer)(\"default\", (original) => rustStyle(original, true));\nconst camelNamingFunction = (0, Naming_1.funPrefixNamer)(\"camel\", (original) => rustStyle(original, false));\nconst standardUnicodeRustEscape = (codePoint) => {\n    if (codePoint <= 0xffff) {\n        return \"\\\\u{\" + (0, Strings_1.intToHex)(codePoint, 4) + \"}\";\n    }\n    else {\n        return \"\\\\u{\" + (0, Strings_1.intToHex)(codePoint, 6) + \"}\";\n    }\n};\nconst rustStringEscape = (0, Strings_1.utf32ConcatMap)((0, Strings_1.escapeNonPrintableMapper)(Strings_1.isPrintable, standardUnicodeRustEscape));\nclass RustRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _options) {\n        super(targetLanguage, renderContext);\n        this._options = _options;\n    }\n    makeNamedTypeNamer() {\n        return camelNamingFunction;\n    }\n    namerForObjectProperty() {\n        return snakeNamingFunction;\n    }\n    makeUnionMemberNamer() {\n        return camelNamingFunction;\n    }\n    makeEnumCaseNamer() {\n        return camelNamingFunction;\n    }\n    forbiddenNamesForGlobalNamespace() {\n        return keywords;\n    }\n    forbiddenForObjectProperties(_c, _className) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    forbiddenForUnionMembers(_u, _unionName) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    forbiddenForEnumCases(_e, _enumName) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    get commentLineStart() {\n        return \"/// \";\n    }\n    nullableRustType(t, withIssues) {\n        return [\"Option<\", this.breakCycle(t, withIssues), \">\"];\n    }\n    isImplicitCycleBreaker(t) {\n        const kind = t.kind;\n        return kind === \"array\" || kind === \"map\";\n    }\n    rustType(t, withIssues = false) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.anyTypeIssueAnnotation, \"Option<serde_json::Value>\"), _nullType => (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.nullTypeIssueAnnotation, \"Option<serde_json::Value>\"), _boolType => \"bool\", _integerType => \"i64\", _doubleType => \"f64\", _stringType => \"String\", arrayType => [\"Vec<\", this.rustType(arrayType.items, withIssues), \">\"], classType => this.nameForNamedType(classType), mapType => [\"HashMap<String, \", this.rustType(mapType.values, withIssues), \">\"], enumType => this.nameForNamedType(enumType), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null)\n                return this.nullableRustType(nullable, withIssues);\n            const [hasNull] = (0, TypeUtils_1.removeNullFromUnion)(unionType);\n            const isCycleBreaker = this.isCycleBreakerType(unionType);\n            const name = isCycleBreaker\n                ? [\"Box<\", this.nameForNamedType(unionType), \">\"]\n                : this.nameForNamedType(unionType);\n            return hasNull !== null ? [\"Option<\", name, \">\"] : name;\n        });\n    }\n    breakCycle(t, withIssues) {\n        const rustType = this.rustType(t, withIssues);\n        const isCycleBreaker = this.isCycleBreakerType(t);\n        return isCycleBreaker ? [\"Box<\", rustType, \">\"] : rustType;\n    }\n    emitRenameAttribute(propName, jsonName, defaultNamingStyle, preferedNamingStyle) {\n        const escapedName = rustStringEscape(jsonName);\n        const name = namingStyles[defaultNamingStyle].fromParts(this.sourcelikeToString(propName).split(\" \"));\n        const styledName = nameToNamingStyle(name, preferedNamingStyle);\n        const namesDiffer = escapedName !== styledName;\n        if (namesDiffer) {\n            this.emitLine('#[serde(rename = \"', escapedName, '\")]');\n        }\n    }\n    emitSkipSerializeNone(t) {\n        if (t instanceof Type_1.UnionType) {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(t);\n            if (nullable !== null)\n                this.emitLine('#[serde(skip_serializing_if = \"Option::is_none\")]');\n        }\n    }\n    get visibility() {\n        if (this._options.visibility === Visibility.Crate) {\n            return \"pub(crate) \";\n        }\n        else if (this._options.visibility === Visibility.Public) {\n            return \"pub \";\n        }\n        return \"\";\n    }\n    emitStructDefinition(c, className) {\n        this.emitDescription(this.descriptionForType(c));\n        this.emitLine(\"#[derive(\", this._options.deriveDebug ? \"Debug, \" : \"\", this._options.deriveClone ? \"Clone, \" : \"\", this._options.derivePartialEq ? \"PartialEq, \" : \"\", \"Serialize, Deserialize)]\");\n        // List the possible naming styles for every class property\n        const propertiesNamingStyles = {};\n        this.forEachClassProperty(c, \"none\", (_name, jsonName, _prop) => {\n            propertiesNamingStyles[jsonName] = listMatchingNamingStyles(jsonName);\n        });\n        // Set the default naming style on the struct\n        const defaultStyle = \"snake_case\";\n        const preferedNamingStyle = getPreferedNamingStyle(Object.values(propertiesNamingStyles).flat(), defaultStyle);\n        if (preferedNamingStyle !== defaultStyle) {\n            this.emitLine(`#[serde(rename_all = \"${preferedNamingStyle}\")]`);\n        }\n        const blankLines = this._options.density === Density.Dense ? \"none\" : \"interposing\";\n        const structBody = () => this.forEachClassProperty(c, blankLines, (name, jsonName, prop) => {\n            this.emitDescription(this.descriptionForClassProperty(c, jsonName));\n            this.emitRenameAttribute(name, jsonName, defaultStyle, preferedNamingStyle);\n            this._options.skipSerializingNone && this.emitSkipSerializeNone(prop.type);\n            this.emitLine(this.visibility, name, \": \", this.breakCycle(prop.type, true), \",\");\n        });\n        this.emitBlock([\"pub struct \", className], structBody);\n    }\n    emitBlock(line, f) {\n        this.emitLine(line, \" {\");\n        this.indent(f);\n        this.emitLine(\"}\");\n    }\n    emitUnion(u, unionName) {\n        const isMaybeWithSingleType = (0, TypeUtils_1.nullableFromUnion)(u);\n        if (isMaybeWithSingleType !== null) {\n            return;\n        }\n        this.emitDescription(this.descriptionForType(u));\n        this.emitLine(\"#[derive(\", this._options.deriveDebug ? \"Debug, \" : \"\", this._options.deriveClone ? \"Clone, \" : \"\", this._options.derivePartialEq ? \"PartialEq, \" : \"\", \"Serialize, Deserialize)]\");\n        this.emitLine(\"#[serde(untagged)]\");\n        const [, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(u);\n        const blankLines = this._options.density === Density.Dense ? \"none\" : \"interposing\";\n        this.emitBlock([\"pub enum \", unionName], () => this.forEachUnionMember(u, nonNulls, blankLines, null, (fieldName, t) => {\n            const rustType = this.breakCycle(t, true);\n            this.emitLine([fieldName, \"(\", rustType, \"),\"]);\n        }));\n    }\n    emitEnumDefinition(e, enumName) {\n        this.emitDescription(this.descriptionForType(e));\n        this.emitLine(\"#[derive(\", this._options.deriveDebug ? \"Debug, \" : \"\", this._options.deriveClone ? \"Clone, \" : \"\", this._options.derivePartialEq ? \"PartialEq, \" : \"\", \"Serialize, Deserialize)]\");\n        // List the possible naming styles for every enum case\n        const enumCasesNamingStyles = {};\n        this.forEachEnumCase(e, \"none\", (_name, jsonName) => {\n            enumCasesNamingStyles[jsonName] = listMatchingNamingStyles(jsonName);\n        });\n        // Set the default naming style on the enum\n        const defaultStyle = \"PascalCase\";\n        const preferedNamingStyle = getPreferedNamingStyle(Object.values(enumCasesNamingStyles).flat(), defaultStyle);\n        if (preferedNamingStyle !== defaultStyle) {\n            this.emitLine(`#[serde(rename_all = \"${preferedNamingStyle}\")]`);\n        }\n        const blankLines = this._options.density === Density.Dense ? \"none\" : \"interposing\";\n        this.emitBlock([\"pub enum \", enumName], () => this.forEachEnumCase(e, blankLines, (name, jsonName) => {\n            this.emitRenameAttribute(name, jsonName, defaultStyle, preferedNamingStyle);\n            this.emitLine([name, \",\"]);\n        }));\n    }\n    emitTopLevelAlias(t, name) {\n        this.emitLine(\"pub type \", name, \" = \", this.rustType(t), \";\");\n    }\n    emitLeadingComments() {\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n            return;\n        }\n        const topLevelName = (0, Support_1.defined)((0, collection_utils_1.mapFirst)(this.topLevels)).getCombinedName();\n        this.emitMultiline(`// Example code that deserializes and serializes the model.\n// extern crate serde;\n// #[macro_use]\n// extern crate serde_derive;\n// extern crate serde_json;\n//\n// use generated_module::${topLevelName};\n//\n// fn main() {\n//     let json = r#\"{\"answer\": 42}\"#;\n//     let model: ${topLevelName} = serde_json::from_str(&json).unwrap();\n// }`);\n    }\n    emitSourceStructure() {\n        if (this._options.leadingComments) {\n            this.emitLeadingComments();\n        }\n        this.ensureBlankLine();\n        if (this._options.edition2018) {\n            this.emitLine(\"use serde::{Serialize, Deserialize};\");\n        }\n        else {\n            this.emitLine(\"extern crate serde_derive;\");\n        }\n        if (this.haveMaps) {\n            this.emitLine(\"use std::collections::HashMap;\");\n        }\n        this.forEachTopLevel(\"leading\", (t, name) => this.emitTopLevelAlias(t, name), t => this.namedTypeToNameForTopLevel(t) === undefined);\n        this.forEachNamedType(\"leading-and-interposing\", (c, name) => this.emitStructDefinition(c, name), (e, name) => this.emitEnumDefinition(e, name), (u, name) => this.emitUnion(u, name));\n    }\n}\nexports.RustRenderer = RustRenderer;\nfunction getPreferedNamingStyle(namingStyleOccurences, defaultStyle) {\n    const occurrences = Object.fromEntries(Object.keys(namingStyles).map(key => [key, 0]));\n    namingStyleOccurences.forEach(style => ++occurrences[style]);\n    const max = Math.max(...Object.values(occurrences));\n    const preferedStyles = Object.entries(occurrences)\n        .filter(([_style, num]) => num === max)\n        .map(([style, _num]) => style);\n    if (preferedStyles.includes(defaultStyle)) {\n        return defaultStyle;\n    }\n    return preferedStyles[0];\n}\nfunction listMatchingNamingStyles(name) {\n    return Object.entries(namingStyles)\n        .filter(([_, { regex }]) => regex.test(name))\n        .map(([namingStyle, _]) => namingStyle);\n}\nfunction nameToNamingStyle(name, style) {\n    if (namingStyles[style].regex.test(name)) {\n        return name;\n    }\n    const fromStyle = listMatchingNamingStyles(name)[0];\n    if (fromStyle === undefined) {\n        return name;\n    }\n    return namingStyles[style].fromParts(namingStyles[fromStyle].toParts(name));\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CrystalRenderer = exports.CrystalTargetLanguage = void 0;\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Naming_1 = require(\"../Naming\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Source_1 = require(\"../Source\");\nconst Annotation_1 = require(\"../Annotation\");\nclass CrystalTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    makeRenderer(renderContext) {\n        return new CrystalRenderer(this, renderContext);\n    }\n    constructor() {\n        super(\"Crystal\", [\"crystal\", \"cr\", \"crystallang\"], \"cr\");\n    }\n    get defaultIndentation() {\n        return \"  \";\n    }\n    getOptions() {\n        return [];\n    }\n}\nexports.CrystalTargetLanguage = CrystalTargetLanguage;\nconst keywords = [\n    \"Any\",\n    \"Array\",\n    \"Atomic\",\n    \"Bool\",\n    \"Channel\",\n    \"Char\",\n    \"Class\",\n    \"Enum\",\n    \"Enumerable\",\n    \"Event\",\n    \"Extern\",\n    \"Exception\",\n    \"File\",\n    \"Float\",\n    \"Float32\",\n    \"Float64\",\n    \"GC\",\n    \"GZip\",\n    \"Hash\",\n    \"HTML\",\n    \"HTTP\",\n    \"Int\",\n    \"Int128\",\n    \"Int16\",\n    \"Int32\",\n    \"Int64\",\n    \"Int8\",\n    \"Iterable\",\n    \"Link\",\n    \"Logger\",\n    \"Math\",\n    \"Mutex\",\n    \"Nil\",\n    \"Number\",\n    \"JSON\",\n    \"IO\",\n    \"Object\",\n    \"Pointer\",\n    \"Proc\",\n    \"Process\",\n    \"Range\",\n    \"Random\",\n    \"Regex\",\n    \"Reference\",\n    \"Set\",\n    \"Signal\",\n    \"Slice\",\n    \"Spec\",\n    \"StaticArray\",\n    \"String\",\n    \"Struct\",\n    \"Symbol\",\n    \"System\",\n    \"TCPServer\",\n    \"TCPSocket\",\n    \"Socket\",\n    \"Tempfile\",\n    \"Termios\",\n    \"Time\",\n    \"Tuple\",\n    \"ThreadLocal\",\n    \"UDPSocket\",\n    \"UInt128\",\n    \"UInt16\",\n    \"UInt32\",\n    \"UInt64\",\n    \"UInt8\",\n    \"Union\",\n    \"UNIXServer\",\n    \"UNIXSocket\",\n    \"UUID\",\n    \"URI\",\n    \"VaList\",\n    \"Value\",\n    \"Void\",\n    \"WeakRef\",\n    \"XML\",\n    \"YAML\",\n    \"Zip\",\n    \"Zlib\",\n    \"abstract\",\n    \"alias\",\n    \"as\",\n    \"as?\",\n    \"asm\",\n    \"begin\",\n    \"break\",\n    \"case\",\n    \"class\",\n    \"def\",\n    \"do\",\n    \"else\",\n    \"elsif\",\n    \"end\",\n    \"ensure\",\n    \"enum\",\n    \"extend\",\n    \"false\",\n    \"for\",\n    \"fun\",\n    \"if\",\n    \"in\",\n    \"include\",\n    \"instance_sizeof\",\n    \"is_a?\",\n    \"lib\",\n    \"macro\",\n    \"module\",\n    \"next\",\n    \"nil\",\n    \"nil?\",\n    \"of\",\n    \"out\",\n    \"pointerof\",\n    \"private\",\n    \"protected\",\n    \"require\",\n    \"rescue\",\n    \"return\",\n    \"select\",\n    \"self\",\n    \"sizeof\",\n    \"struct\",\n    \"super\",\n    \"then\",\n    \"true\",\n    \"type\",\n    \"typeof\",\n    \"uninitialized\",\n    \"union\",\n    \"unless\",\n    \"until\",\n    \"when\",\n    \"while\",\n    \"with\",\n    \"yield\"\n];\nfunction isAsciiLetterOrUnderscoreOrDigit(codePoint) {\n    if (!(0, Strings_1.isAscii)(codePoint)) {\n        return false;\n    }\n    return (0, Strings_1.isLetterOrUnderscoreOrDigit)(codePoint);\n}\nfunction isAsciiLetterOrUnderscore(codePoint) {\n    if (!(0, Strings_1.isAscii)(codePoint)) {\n        return false;\n    }\n    return (0, Strings_1.isLetterOrUnderscore)(codePoint);\n}\nconst legalizeName = (0, Strings_1.legalizeCharacters)(isAsciiLetterOrUnderscoreOrDigit);\nfunction crystalStyle(original, isSnakeCase) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    const wordStyle = isSnakeCase ? Strings_1.allLowerWordStyle : Strings_1.firstUpperWordStyle;\n    const combined = (0, Strings_1.combineWords)(words, legalizeName, wordStyle, wordStyle, wordStyle, wordStyle, isSnakeCase ? \"_\" : \"\", isAsciiLetterOrUnderscore);\n    return combined === \"_\" ? \"_underscore\" : combined;\n}\nconst snakeNamingFunction = (0, Naming_1.funPrefixNamer)(\"default\", (original) => crystalStyle(original, true));\nconst camelNamingFunction = (0, Naming_1.funPrefixNamer)(\"camel\", (original) => crystalStyle(original, false));\nfunction standardUnicodeCrystalEscape(codePoint) {\n    if (codePoint <= 0xffff) {\n        return \"\\\\u{\" + (0, Strings_1.intToHex)(codePoint, 4) + \"}\";\n    }\n    else {\n        return \"\\\\u{\" + (0, Strings_1.intToHex)(codePoint, 6) + \"}\";\n    }\n}\nconst crystalStringEscape = (0, Strings_1.utf32ConcatMap)((0, Strings_1.escapeNonPrintableMapper)(Strings_1.isPrintable, standardUnicodeCrystalEscape));\nclass CrystalRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext) {\n        super(targetLanguage, renderContext);\n    }\n    makeNamedTypeNamer() {\n        return camelNamingFunction;\n    }\n    namerForObjectProperty() {\n        return snakeNamingFunction;\n    }\n    makeUnionMemberNamer() {\n        return camelNamingFunction;\n    }\n    makeEnumCaseNamer() {\n        return camelNamingFunction;\n    }\n    forbiddenNamesForGlobalNamespace() {\n        return keywords;\n    }\n    forbiddenForObjectProperties(_c, _className) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    forbiddenForUnionMembers(_u, _unionName) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    forbiddenForEnumCases(_e, _enumName) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    get commentLineStart() {\n        return \"# \";\n    }\n    nullableCrystalType(t, withIssues) {\n        return [this.crystalType(t, withIssues), \"?\"];\n    }\n    isImplicitCycleBreaker(t) {\n        const kind = t.kind;\n        return kind === \"array\" || kind === \"map\";\n    }\n    crystalType(t, withIssues = false) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.anyTypeIssueAnnotation, \"JSON::Any?\"), _nullType => (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.nullTypeIssueAnnotation, \"Nil\"), _boolType => \"Bool\", _integerType => \"Int32\", _doubleType => \"Float64\", _stringType => \"String\", arrayType => [\"Array(\", this.crystalType(arrayType.items, withIssues), \")\"], classType => this.nameForNamedType(classType), mapType => [\"Hash(String, \", this.crystalType(mapType.values, withIssues), \")\"], _enumType => \"String\", unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null)\n                return this.nullableCrystalType(nullable, withIssues);\n            const [hasNull] = (0, TypeUtils_1.removeNullFromUnion)(unionType);\n            const name = this.nameForNamedType(unionType);\n            return hasNull !== null ? [name, \"?\"] : name;\n        });\n    }\n    breakCycle(t, withIssues) {\n        return this.crystalType(t, withIssues);\n    }\n    emitRenameAttribute(propName, jsonName) {\n        const escapedName = crystalStringEscape(jsonName);\n        const namesDiffer = this.sourcelikeToString(propName) !== escapedName;\n        if (namesDiffer) {\n            this.emitLine('@[JSON::Field(key: \"', escapedName, '\")]');\n        }\n    }\n    emitStructDefinition(c, className) {\n        this.emitDescription(this.descriptionForType(c));\n        const structBody = () => this.forEachClassProperty(c, \"none\", (name, jsonName, prop) => {\n            this.ensureBlankLine();\n            this.emitDescription(this.descriptionForClassProperty(c, jsonName));\n            this.emitRenameAttribute(name, jsonName);\n            this.emitLine(\"property \", name, \" : \", this.crystalType(prop.type, true));\n        });\n        this.emitBlock([\"class \", className], structBody);\n    }\n    emitBlock(line, f) {\n        this.emitLine(line);\n        this.indent(() => {\n            this.emitLine(\"include JSON::Serializable\");\n        });\n        this.ensureBlankLine();\n        this.indent(f);\n        this.emitLine(\"end\");\n    }\n    emitEnum(line, f) {\n        this.emitLine(line);\n        this.indent(f);\n        this.emitLine(\"end\");\n    }\n    emitUnion(u, unionName) {\n        const isMaybeWithSingleType = (0, TypeUtils_1.nullableFromUnion)(u);\n        if (isMaybeWithSingleType !== null) {\n            return;\n        }\n        this.emitDescription(this.descriptionForType(u));\n        const [, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(u);\n        let types = [];\n        this.forEachUnionMember(u, nonNulls, \"none\", null, (_name, t) => {\n            const crystalType = this.breakCycle(t, true);\n            types.push([crystalType]);\n        });\n        this.emitLine([\n            \"alias \",\n            unionName,\n            \" = \",\n            types.map(r => r.map(sl => this.sourcelikeToString(sl))).join(\" | \")\n        ]);\n    }\n    emitTopLevelAlias(t, name) {\n        this.emitLine(\"alias \", name, \" = \", this.crystalType(t));\n    }\n    emitLeadingComments() {\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n            return;\n        }\n    }\n    emitSourceStructure() {\n        this.emitLeadingComments();\n        this.ensureBlankLine();\n        this.emitLine('require \"json\"');\n        this.forEachTopLevel(\"leading\", (t, name) => this.emitTopLevelAlias(t, name), t => this.namedTypeToNameForTopLevel(t) === undefined);\n        this.forEachObject(\"leading-and-interposing\", (c, name) => this.emitStructDefinition(c, name));\n        this.forEachUnion(\"leading-and-interposing\", (u, name) => this.emitUnion(u, name));\n    }\n}\nexports.CrystalRenderer = CrystalRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reservedProperties = exports.globals = exports.keywords = void 0;\nexports.keywords = [\n    \"__ENCODING__\",\n    \"__FILE__\",\n    \"__LINE__\",\n    \"alias\",\n    \"and\",\n    \"begin\",\n    \"BEGIN\",\n    \"break\",\n    \"case\",\n    \"class\",\n    \"def\",\n    \"defined?\",\n    \"do\",\n    \"else\",\n    \"elsif\",\n    \"end\",\n    \"END\",\n    \"ensure\",\n    \"false\",\n    \"for\",\n    \"if\",\n    \"in\",\n    \"module\",\n    \"next\",\n    \"nil\",\n    \"not\",\n    \"or\",\n    \"redo\",\n    \"rescue\",\n    \"retry\",\n    \"return\",\n    \"self\",\n    \"super\",\n    \"then\",\n    \"true\",\n    \"undef\",\n    \"unless\",\n    \"until\",\n    \"when\",\n    \"while\",\n    \"yield\"\n];\nconst globalClasses = [\n    \"ArgumentError\",\n    \"Array\",\n    \"BasicObject\",\n    \"Class\",\n    \"ClosedQueueError\",\n    \"Comparable\",\n    \"Complex\",\n    \"ConditionVariable\",\n    \"Continuation\",\n    \"Data\",\n    \"Date\",\n    \"Dir\",\n    \"ENV\",\n    \"EOFError\",\n    \"Encoding\",\n    \"EncodingError\",\n    \"Enumerable\",\n    \"Enumerator\",\n    \"Errno\",\n    \"Exception\",\n    \"FalseClass\",\n    \"Fiber\",\n    \"FiberError\",\n    \"File\",\n    \"FileTest\",\n    \"Float\",\n    \"FloatDomainError\",\n    \"FrozenError\",\n    \"GC\",\n    \"Hash\",\n    \"IO\",\n    \"IOError\",\n    \"IndexError\",\n    \"Integer\",\n    \"Interrupt\",\n    \"KeyError\",\n    \"LoadError\",\n    \"LocalJumpError\",\n    \"Marshal\",\n    \"MatchData\",\n    \"Math\",\n    \"Method\",\n    \"Module\",\n    \"Mutex\",\n    \"NameError\",\n    \"NilClass\",\n    \"NoMemoryError\",\n    \"NoMethodError\",\n    \"NotImplementedError\",\n    \"Numeric\",\n    \"Object\",\n    \"ObjectSpace\",\n    \"Proc\",\n    \"Process\",\n    \"Queue\",\n    \"Random\",\n    \"Range\",\n    \"RangeError\",\n    \"Rational\",\n    \"Regexp\",\n    \"RegexpError\",\n    \"RubyVM\",\n    \"RuntimeError\",\n    \"ScriptError\",\n    \"SecurityError\",\n    \"Set\",\n    \"Signal\",\n    \"SignalException\",\n    \"SizedQueue\",\n    \"StandardError\",\n    \"StopIteration\",\n    \"String\",\n    \"Struct\",\n    \"Symbol\",\n    \"SyntaxError\",\n    \"SystemCallError\",\n    \"SystemExit\",\n    \"SystemStackError\",\n    \"Thread\",\n    \"ThreadError\",\n    \"ThreadGroup\",\n    \"Time\",\n    \"TracePoint\",\n    \"TrueClass\",\n    \"TypeError\",\n    \"UnboundMethod\",\n    \"UncaughtThrowError\",\n    \"Undefined\",\n    \"UnicodeNormalize\",\n    \"Warning\",\n    \"ZeroDivisionError\"\n];\nconst kernel = [\n    \"__callee__\",\n    \"__dir__\",\n    \"__id__\",\n    \"__method__\",\n    \"__send__\",\n    \"!\",\n    \"!=\",\n    \"!~\",\n    \"<\",\n    \"<=\",\n    \"<=>\",\n    \"==\",\n    \"===\",\n    \"=~\",\n    \">\",\n    \">=\",\n    \"abort\",\n    \"ancestors\",\n    \"at_exit\",\n    \"autoload\",\n    \"autoload?\",\n    \"binding\",\n    \"block_given?\",\n    \"caller\",\n    \"caller_locations\",\n    \"catch\",\n    \"class\",\n    \"class_eval\",\n    \"class_exec\",\n    \"class_variable_defined?\",\n    \"class_variable_get\",\n    \"class_variable_set\",\n    \"class_variables\",\n    \"clone\",\n    \"const_defined?\",\n    \"const_get\",\n    \"const_missing\",\n    \"const_set\",\n    \"constants\",\n    \"define_singleton_method\",\n    \"deprecate_constant\",\n    \"display\",\n    \"dup\",\n    \"enum_for\",\n    \"eql?\",\n    \"equal?\",\n    \"eval\",\n    \"exec\",\n    \"exit\",\n    \"exit!\",\n    \"extend\",\n    \"fail\",\n    \"fork\",\n    \"format\",\n    \"freeze\",\n    \"frozen?\",\n    \"gets\",\n    \"global_variables\",\n    \"hash\",\n    \"include\",\n    \"include?\",\n    \"included_modules\",\n    \"inspect\",\n    \"instance_eval\",\n    \"instance_exec\",\n    \"instance_method\",\n    \"instance_methods\",\n    \"instance_of?\",\n    \"instance_variable_defined?\",\n    \"instance_variable_get\",\n    \"instance_variable_set\",\n    \"instance_variables\",\n    \"is_a?\",\n    \"iterator?\",\n    \"itself\",\n    \"kind_of?\",\n    \"lambda\",\n    \"load\",\n    \"local_variables\",\n    \"loop\",\n    \"method\",\n    \"method_defined?\",\n    \"methods\",\n    \"module_eval\",\n    \"module_exec\",\n    \"name\",\n    \"new\",\n    \"nil?\",\n    \"object_id\",\n    \"open\",\n    \"p\",\n    \"prepend\",\n    \"print\",\n    \"printf\",\n    \"private_class_method\",\n    \"private_constant\",\n    \"private_instance_methods\",\n    \"private_method_defined?\",\n    \"private_methods\",\n    \"proc\",\n    \"protected_instance_methods\",\n    \"protected_method_defined?\",\n    \"protected_methods\",\n    \"public_class_method\",\n    \"public_constant\",\n    \"public_instance_method\",\n    \"public_instance_methods\",\n    \"public_method\",\n    \"public_method_defined?\",\n    \"public_methods\",\n    \"public_send\",\n    \"putc\",\n    \"puts\",\n    \"raise\",\n    \"rand\",\n    \"readline\",\n    \"readlines\",\n    \"remove_class_variable\",\n    \"remove_instance_variable\",\n    \"require\",\n    \"require_relative\",\n    \"respond_to?\",\n    \"select\",\n    \"send\",\n    \"set_trace_func\",\n    \"singleton_class\",\n    \"singleton_class?\",\n    \"singleton_method\",\n    \"singleton_methods\",\n    \"sleep\",\n    \"spawn\",\n    \"sprintf\",\n    \"srand\",\n    \"syscall\",\n    \"system\",\n    \"taint\",\n    \"tainted?\",\n    \"tap\",\n    \"test\",\n    \"throw\",\n    \"to_enum\",\n    \"to_s\",\n    \"trace_var\",\n    \"trap\",\n    \"trust\",\n    \"untaint\",\n    \"untrace_var\",\n    \"untrust\",\n    \"untrusted?\",\n    \"warn\"\n];\nexports.globals = kernel.concat(globalClasses);\nexports.reservedProperties = [\n    \"__id__\",\n    \"__send__\",\n    \"break\",\n    \"call\",\n    \"case\",\n    \"class\",\n    \"clone\",\n    \"constrained_type\",\n    \"constrained?\",\n    \"constrained\",\n    \"constructor\",\n    \"default\",\n    \"define_singleton_method\",\n    \"display\",\n    \"dup\",\n    \"enum_for\",\n    \"enum\",\n    \"extend\",\n    \"freeze\",\n    \"gem\",\n    \"hash\",\n    \"inspect\",\n    \"instance_eval\",\n    \"instance_exec\",\n    \"instance_variable_defined?\",\n    \"instance_variable_get\",\n    \"instance_variable_set\",\n    \"instance_variables\",\n    \"itself\",\n    \"meta\",\n    \"method\",\n    \"methods\",\n    \"next\",\n    \"object_id\",\n    \"optional\",\n    \"options\",\n    \"pristine\",\n    \"private_methods\",\n    \"protected_methods\",\n    \"public_method\",\n    \"public_methods\",\n    \"public_send\",\n    \"remove_instance_variable\",\n    \"rule\",\n    \"safe\",\n    \"self\",\n    \"send\",\n    \"singleton_class\",\n    \"singleton_method\",\n    \"singleton_methods\",\n    \"taint\",\n    \"tap\",\n    \"to_ast\",\n    \"to_enum\",\n    \"to_json\",\n    \"to_s\",\n    \"trust\",\n    \"try\",\n    \"type\",\n    \"untaint\",\n    \"undef\",\n    \"untrust\",\n    \"while\",\n    \"with\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RubyRenderer = exports.RubyTargetLanguage = exports.rubyOptions = exports.Strictness = void 0;\nconst unicode_properties_1 = __importDefault(require(\"unicode-properties\"));\nconst Source_1 = require(\"../../Source\");\nconst Naming_1 = require(\"../../Naming\");\nconst ConvenienceRenderer_1 = require(\"../../ConvenienceRenderer\");\nconst TargetLanguage_1 = require(\"../../TargetLanguage\");\nconst RendererOptions_1 = require(\"../../RendererOptions\");\nconst keywords = __importStar(require(\"./keywords\"));\nconst forbiddenForObjectProperties = Array.from(new Set([...keywords.keywords, ...keywords.reservedProperties]));\nconst Type_1 = require(\"../../Type\");\nconst TypeUtils_1 = require(\"../../TypeUtils\");\nconst Strings_1 = require(\"../../support/Strings\");\nfunction unicodeEscape(codePoint) {\n    return \"\\\\u{\" + (0, Strings_1.intToHex)(codePoint, 0) + \"}\";\n}\nconst stringEscape = (0, Strings_1.utf32ConcatMap)((0, Strings_1.escapeNonPrintableMapper)(Strings_1.isPrintable, unicodeEscape));\nvar Strictness;\n(function (Strictness) {\n    Strictness[\"Strict\"] = \"Strict::\";\n    Strictness[\"Coercible\"] = \"Coercible::\";\n    Strictness[\"None\"] = \"Types::\";\n})(Strictness = exports.Strictness || (exports.Strictness = {}));\nexports.rubyOptions = {\n    justTypes: new RendererOptions_1.BooleanOption(\"just-types\", \"Plain types only\", false),\n    strictness: new RendererOptions_1.EnumOption(\"strictness\", \"Type strictness\", [\n        [\"strict\", Strictness.Strict],\n        [\"coercible\", Strictness.Coercible],\n        [\"none\", Strictness.None]\n    ]),\n    namespace: new RendererOptions_1.StringOption(\"namespace\", \"Specify a wrapping Namespace\", \"NAME\", \"\", \"secondary\")\n};\nclass RubyTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor() {\n        super(\"Ruby\", [\"ruby\"], \"rb\");\n    }\n    getOptions() {\n        return [exports.rubyOptions.justTypes, exports.rubyOptions.strictness, exports.rubyOptions.namespace];\n    }\n    get supportsOptionalClassProperties() {\n        return true;\n    }\n    get defaultIndentation() {\n        return \"  \";\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        return new RubyRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.rubyOptions, untypedOptionValues));\n    }\n}\nexports.RubyTargetLanguage = RubyTargetLanguage;\nconst isStartCharacter = Strings_1.isLetterOrUnderscore;\nfunction isPartCharacter(utf16Unit) {\n    const category = unicode_properties_1.default.getCategory(utf16Unit);\n    return [\"Nd\", \"Pc\", \"Mn\", \"Mc\"].indexOf(category) >= 0 || isStartCharacter(utf16Unit);\n}\nconst legalizeName = (0, Strings_1.legalizeCharacters)(isPartCharacter);\nfunction simpleNameStyle(original, uppercase) {\n    if (/^[0-9]+$/.test(original)) {\n        original = original + \"N\";\n    }\n    const words = (0, Strings_1.splitIntoWords)(original);\n    return (0, Strings_1.combineWords)(words, legalizeName, uppercase ? Strings_1.firstUpperWordStyle : Strings_1.allLowerWordStyle, uppercase ? Strings_1.firstUpperWordStyle : Strings_1.allLowerWordStyle, Strings_1.allUpperWordStyle, Strings_1.allUpperWordStyle, \"\", isStartCharacter);\n}\nfunction memberNameStyle(original) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    return (0, Strings_1.combineWords)(words, legalizeName, Strings_1.allLowerWordStyle, Strings_1.allLowerWordStyle, Strings_1.allLowerWordStyle, Strings_1.allLowerWordStyle, \"_\", isStartCharacter);\n}\nclass RubyRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _options) {\n        super(targetLanguage, renderContext);\n        this._options = _options;\n    }\n    get commentLineStart() {\n        return \"# \";\n    }\n    get needsTypeDeclarationBeforeUse() {\n        return true;\n    }\n    canBeForwardDeclared(t) {\n        return \"class\" === t.kind;\n    }\n    forbiddenNamesForGlobalNamespace() {\n        return keywords.globals.concat([\"Types\", \"JSON\", \"Dry\", \"Constructor\", \"Self\"]);\n    }\n    forbiddenForObjectProperties(_c, _classNamed) {\n        return { names: forbiddenForObjectProperties, includeGlobalForbidden: true };\n    }\n    makeNamedTypeNamer() {\n        return new Naming_1.Namer(\"types\", n => simpleNameStyle(n, true), []);\n    }\n    namerForObjectProperty() {\n        return new Naming_1.Namer(\"properties\", memberNameStyle, []);\n    }\n    makeUnionMemberNamer() {\n        return new Naming_1.Namer(\"properties\", memberNameStyle, []);\n    }\n    makeEnumCaseNamer() {\n        return new Naming_1.Namer(\"enum-cases\", n => simpleNameStyle(n, true), []);\n    }\n    dryType(t, isOptional = false) {\n        const optional = isOptional ? \".optional\" : \"\";\n        return (0, TypeUtils_1.matchType)(t, _anyType => [\"Types::Any\", optional], _nullType => [\"Types::Nil\", optional], _boolType => [\"Types::Bool\", optional], _integerType => [\"Types::Integer\", optional], _doubleType => [\"Types::Double\", optional], _stringType => [\"Types::String\", optional], arrayType => [\"Types.Array(\", this.dryType(arrayType.items), \")\", optional], classType => [this.nameForNamedType(classType), optional], mapType => [\"Types::Hash.meta(of: \", this.dryType(mapType.values), \")\", optional], enumType => [\"Types::\", this.nameForNamedType(enumType), optional], unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                return [this.dryType(nullable), \".optional\"];\n            }\n            return [\"Types.Instance(\", this.nameForNamedType(unionType), \")\", optional];\n        });\n    }\n    exampleUse(t, exp, depth = 6, optional = false) {\n        if (depth-- <= 0) {\n            return exp;\n        }\n        const safeNav = optional ? \"&\" : \"\";\n        return (0, TypeUtils_1.matchType)(t, _anyType => exp, _nullType => [exp, \".nil?\"], _boolType => exp, _integerType => [exp, \".even?\"], _doubleType => exp, _stringType => exp, arrayType => this.exampleUse(arrayType.items, [exp, safeNav, \".first\"], depth), classType => {\n            let info;\n            this.forEachClassProperty(classType, \"none\", (name, _json, prop) => {\n                if ([\"class\", \"map\", \"array\"].indexOf(prop.type.kind) >= 0) {\n                    info = { name, prop };\n                }\n                else if (info === undefined) {\n                    info = { name, prop };\n                }\n            });\n            if (info !== undefined) {\n                return this.exampleUse(info.prop.type, [exp, safeNav, \".\", info.name], depth, info.prop.isOptional);\n            }\n            return exp;\n        }, mapType => this.exampleUse(mapType.values, [exp, safeNav, `[\"…\"]`], depth), enumType => {\n            let name;\n            // FIXME: This is a terrible way to get the first enum case name.\n            this.forEachEnumCase(enumType, \"none\", theName => {\n                if (name === undefined) {\n                    name = theName;\n                }\n            });\n            if (name !== undefined) {\n                return [exp, \" == \", this.nameForNamedType(enumType), \"::\", name];\n            }\n            return exp;\n        }, unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                if ([\"class\", \"map\", \"array\"].indexOf(nullable.kind) >= 0) {\n                    return this.exampleUse(nullable, exp, depth, true);\n                }\n                return [exp, \".nil?\"];\n            }\n            return exp;\n        });\n    }\n    jsonSample(t) {\n        function inner() {\n            if (t instanceof Type_1.ArrayType) {\n                return \"[…]\";\n            }\n            else if (t instanceof Type_1.MapType) {\n                return \"{…}\";\n            }\n            else if (t instanceof Type_1.ClassType) {\n                return \"{…}\";\n            }\n            else {\n                return \"…\";\n            }\n        }\n        return `\"${inner()}\"`;\n    }\n    fromDynamic(t, e, optional = false, castPrimitives = false) {\n        const primitiveCast = [this.dryType(t, optional), \"[\", e, \"]\"];\n        const primitive = castPrimitives ? primitiveCast : e;\n        const safeAccess = optional ? \"&\" : \"\";\n        return (0, TypeUtils_1.matchType)(t, _anyType => primitive, _nullType => primitive, _boolType => primitive, _integerType => primitive, _doubleType => primitive, _stringType => primitive, arrayType => [e, safeAccess, \".map { |x| \", this.fromDynamic(arrayType.items, \"x\", false, true), \" }\"], classType => {\n            const expression = [this.nameForNamedType(classType), \".from_dynamic!(\", e, \")\"];\n            return optional ? [e, \" ? \", expression, \" : nil\"] : expression;\n        }, mapType => [\n            [\"Types::Hash\", optional ? \".optional\" : \"\", \"[\", e, \"]\"],\n            safeAccess,\n            \".map { |k, v| [k, \",\n            this.fromDynamic(mapType.values, \"v\", false, true),\n            \"] }\",\n            safeAccess,\n            \".to_h\"\n        ], enumType => {\n            const expression = [\"Types::\", this.nameForNamedType(enumType), \"[\", e, \"]\"];\n            return optional ? [e, \".nil? ? nil : \", expression] : expression;\n        }, unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                return this.fromDynamic(nullable, e, true);\n            }\n            const expression = [this.nameForNamedType(unionType), \".from_dynamic!(\", e, \")\"];\n            return optional ? [e, \" ? \", expression, \" : nil\"] : expression;\n        });\n    }\n    toDynamic(t, e, optional = false) {\n        if (this.marshalsImplicitlyToDynamic(t)) {\n            return e;\n        }\n        return (0, TypeUtils_1.matchType)(t, _anyType => e, _nullType => e, _boolType => e, _integerType => e, _doubleType => e, _stringType => e, arrayType => [e, optional ? \"&\" : \"\", \".map { |x| \", this.toDynamic(arrayType.items, \"x\"), \" }\"], _classType => [e, optional ? \"&\" : \"\", \".to_dynamic\"], mapType => [e, optional ? \"&\" : \"\", \".map { |k, v| [k, \", this.toDynamic(mapType.values, \"v\"), \"] }.to_h\"], _enumType => e, unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                return this.toDynamic(nullable, e, true);\n            }\n            if (this.marshalsImplicitlyToDynamic(unionType)) {\n                return e;\n            }\n            return [e, optional ? \"&\" : \"\", \".to_dynamic\"];\n        });\n    }\n    marshalsImplicitlyToDynamic(t) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => true, _nullType => true, _boolType => true, _integerType => true, _doubleType => true, _stringType => true, arrayType => this.marshalsImplicitlyToDynamic(arrayType.items), _classType => false, mapType => this.marshalsImplicitlyToDynamic(mapType.values), _enumType => true, unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                return this.marshalsImplicitlyToDynamic(nullable);\n            }\n            return false;\n        });\n    }\n    // This is only to be used to allow class properties to possibly\n    // marshal implicitly. They are allowed to do this because they will\n    // be checked in Dry::Struct.new\n    propertyTypeMarshalsImplicitlyFromDynamic(t) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => true, _nullType => true, _boolType => true, _integerType => true, _doubleType => true, _stringType => true, arrayType => this.propertyTypeMarshalsImplicitlyFromDynamic(arrayType.items), _classType => false, \n        // Map properties must be checked because Dry:Types doesn't have a generic Map\n        _mapType => false, _enumType => true, unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                return this.propertyTypeMarshalsImplicitlyFromDynamic(nullable);\n            }\n            return false;\n        });\n    }\n    emitBlock(source, emit) {\n        this.emitLine(source);\n        this.indent(emit);\n        this.emitLine(\"end\");\n    }\n    emitModule(emit) {\n        const emitModuleInner = (moduleName) => {\n            const [firstModule, ...subModules] = moduleName.split(\"::\");\n            if (subModules.length > 0) {\n                this.emitBlock([\"module \", firstModule], () => {\n                    emitModuleInner(subModules.join(\"::\"));\n                });\n            }\n            else {\n                this.emitBlock([\"module \", moduleName], emit);\n            }\n        };\n        if (this._options.namespace !== undefined && this._options.namespace !== \"\") {\n            emitModuleInner(this._options.namespace);\n        }\n        else {\n            emit();\n        }\n    }\n    emitClass(c, className) {\n        this.emitDescription(this.descriptionForType(c));\n        this.emitBlock([\"class \", className, \" < Dry::Struct\"], () => {\n            let table = [];\n            let count = c.getProperties().size;\n            this.forEachClassProperty(c, \"none\", (name, jsonName, p) => {\n                const last = --count === 0;\n                const description = this.descriptionForClassProperty(c, jsonName);\n                const attribute = [\n                    [\"attribute :\", name, \",\"],\n                    [\" \", this.dryType(p.type), p.isOptional ? \".optional\" : \"\"]\n                ];\n                if (description !== undefined) {\n                    if (table.length > 0) {\n                        this.emitTable(table);\n                        table = [];\n                    }\n                    this.ensureBlankLine();\n                    this.emitDescriptionBlock(description);\n                    this.emitLine(attribute);\n                    if (!last) {\n                        this.ensureBlankLine();\n                    }\n                }\n                else {\n                    table.push(attribute);\n                }\n            });\n            if (table.length > 0) {\n                this.emitTable(table);\n            }\n            if (this._options.justTypes) {\n                return;\n            }\n            this.ensureBlankLine();\n            this.emitBlock([\"def self.from_dynamic!(d)\"], () => {\n                this.emitLine(\"d = Types::Hash[d]\");\n                this.emitLine(\"new(\");\n                this.indent(() => {\n                    const inits = [];\n                    this.forEachClassProperty(c, \"none\", (name, jsonName, p) => {\n                        const dynamic = p.isOptional\n                            ? // If key is not found in hash, this will be nil\n                                `d[\"${stringEscape(jsonName)}\"]`\n                            : // This will raise a runtime error if the key is not found in the hash\n                                `d.fetch(\"${stringEscape(jsonName)}\")`;\n                        if (this.propertyTypeMarshalsImplicitlyFromDynamic(p.type)) {\n                            inits.push([\n                                [name, \": \"],\n                                [dynamic, \",\"]\n                            ]);\n                        }\n                        else {\n                            const expression = this.fromDynamic(p.type, dynamic, p.isOptional);\n                            inits.push([\n                                [name, \": \"],\n                                [expression, \",\"]\n                            ]);\n                        }\n                    });\n                    this.emitTable(inits);\n                });\n                this.emitLine(\")\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock(\"def self.from_json!(json)\", () => {\n                this.emitLine(\"from_dynamic!(JSON.parse(json))\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock([\"def to_dynamic\"], () => {\n                this.emitLine(\"{\");\n                this.indent(() => {\n                    const inits = [];\n                    this.forEachClassProperty(c, \"none\", (name, jsonName, p) => {\n                        const expression = this.toDynamic(p.type, name, p.isOptional);\n                        inits.push([[`\"${stringEscape(jsonName)}\"`], [\" => \", expression, \",\"]]);\n                    });\n                    this.emitTable(inits);\n                });\n                this.emitLine(\"}\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock(\"def to_json(options = nil)\", () => {\n                this.emitLine(\"JSON.generate(to_dynamic, options)\");\n            });\n        });\n    }\n    emitEnum(e, enumName) {\n        this.emitDescription(this.descriptionForType(e));\n        this.emitBlock([\"module \", enumName], () => {\n            const table = [];\n            this.forEachEnumCase(e, \"none\", (name, json) => {\n                table.push([[name], [` = \"${stringEscape(json)}\"`]]);\n            });\n            this.emitTable(table);\n        });\n    }\n    emitUnion(u, unionName) {\n        this.emitDescription(this.descriptionForType(u));\n        this.emitBlock([\"class \", unionName, \" < Dry::Struct\"], () => {\n            const table = [];\n            this.forEachUnionMember(u, u.getChildren(), \"none\", null, (name, t) => {\n                table.push([[\"attribute :\", name, \", \"], [this.dryType(t, true)]]);\n            });\n            this.emitTable(table);\n            if (this._options.justTypes) {\n                return;\n            }\n            this.ensureBlankLine();\n            const [maybeNull, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(u, false);\n            this.emitBlock(\"def self.from_dynamic!(d)\", () => {\n                const memberNames = Array.from(u.getChildren()).map(member => this.nameForUnionMember(u, member));\n                this.forEachUnionMember(u, u.getChildren(), \"none\", null, (name, t) => {\n                    const nilMembers = memberNames\n                        .filter(n => n !== name)\n                        .map(memberName => [\", \", memberName, \": nil\"]);\n                    if (this.propertyTypeMarshalsImplicitlyFromDynamic(t)) {\n                        this.emitBlock([\"if schema[:\", name, \"].right.valid? d\"], () => {\n                            this.emitLine(\"return new(\", name, \": d\", nilMembers, \")\");\n                        });\n                    }\n                    else {\n                        this.emitLine(\"begin\");\n                        this.indent(() => {\n                            this.emitLine(\"value = \", this.fromDynamic(t, \"d\"));\n                            this.emitBlock([\"if schema[:\", name, \"].right.valid? value\"], () => {\n                                this.emitLine(\"return new(\", name, \": value\", nilMembers, \")\");\n                            });\n                        });\n                        this.emitLine(\"rescue\");\n                        this.emitLine(\"end\");\n                    }\n                });\n                this.emitLine(`raise \"Invalid union\"`);\n            });\n            this.ensureBlankLine();\n            this.emitBlock(\"def self.from_json!(json)\", () => {\n                this.emitLine(\"from_dynamic!(JSON.parse(json))\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock(\"def to_dynamic\", () => {\n                let first = true;\n                this.forEachUnionMember(u, nonNulls, \"none\", null, (name, t) => {\n                    this.emitLine(first ? \"if\" : \"elsif\", \" \", name, \" != nil\");\n                    this.indent(() => {\n                        this.emitLine(this.toDynamic(t, name));\n                    });\n                    first = false;\n                });\n                if (maybeNull !== null) {\n                    this.emitLine(\"else\");\n                    this.indent(() => {\n                        this.emitLine(\"nil\");\n                    });\n                }\n                this.emitLine(\"end\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock(\"def to_json(options = nil)\", () => {\n                this.emitLine(\"JSON.generate(to_dynamic, options)\");\n            });\n        });\n    }\n    emitTypesModule() {\n        this.emitBlock([\"module Types\"], () => {\n            this.emitLine(\"include Dry.Types(default: :nominal)\");\n            const declarations = [];\n            if (this._options.strictness !== Strictness.None) {\n                let has = { int: false, nil: false, bool: false, hash: false, string: false, double: false };\n                this.forEachType(t => {\n                    has = {\n                        int: has.int || t.kind === \"integer\",\n                        nil: has.nil || t.kind === \"null\",\n                        bool: has.bool || t.kind === \"bool\",\n                        hash: has.hash || t.kind === \"map\" || t.kind === \"class\",\n                        string: has.string || t.kind === \"string\" || t.kind === \"enum\",\n                        double: has.double || t.kind === \"double\"\n                    };\n                });\n                if (has.int)\n                    declarations.push([[\"Integer\"], [` = ${this._options.strictness}Integer`]]);\n                if (this._options.strictness === Strictness.Strict) {\n                    if (has.nil)\n                        declarations.push([[\"Nil\"], [` = ${this._options.strictness}Nil`]]);\n                }\n                if (has.bool)\n                    declarations.push([[\"Bool\"], [` = ${this._options.strictness}Bool`]]);\n                if (has.hash)\n                    declarations.push([[\"Hash\"], [` = ${this._options.strictness}Hash`]]);\n                if (has.string)\n                    declarations.push([[\"String\"], [` = ${this._options.strictness}String`]]);\n                if (has.double)\n                    declarations.push([\n                        [\"Double\"],\n                        [` = ${this._options.strictness}Float | ${this._options.strictness}Integer`]\n                    ]);\n            }\n            this.forEachEnum(\"none\", (enumType, enumName) => {\n                const cases = [];\n                this.forEachEnumCase(enumType, \"none\", (_name, json) => {\n                    cases.push([cases.length === 0 ? \"\" : \", \", `\"${stringEscape(json)}\"`]);\n                });\n                declarations.push([[enumName], [\" = \", this._options.strictness, \"String.enum(\", ...cases, \")\"]]);\n            });\n            if (declarations.length > 0) {\n                this.ensureBlankLine();\n                this.emitTable(declarations);\n            }\n        });\n    }\n    emitSourceStructure() {\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n        }\n        else if (!this._options.justTypes) {\n            this.emitLine(\"# This code may look unusually verbose for Ruby (and it is), but\");\n            this.emitLine(\"# it performs some subtle and complex validation of JSON data.\");\n            this.emitLine(\"#\");\n            this.emitLine(\"# To parse this JSON, add 'dry-struct' and 'dry-types' gems, then do:\");\n            this.emitLine(\"#\");\n            this.forEachTopLevel(\"none\", (topLevel, name) => {\n                const variable = (0, Source_1.modifySource)(Strings_1.snakeCase, name);\n                this.emitLine(\"#   \", variable, \" = \", name, \".from_json! \", this.jsonSample(topLevel));\n                this.emitLine(\"#   puts \", this.exampleUse(topLevel, variable));\n                this.emitLine(\"#\");\n            });\n            this.emitLine(\"# If from_json! succeeds, the value returned matches the schema.\");\n        }\n        this.ensureBlankLine();\n        this.emitLine(\"require 'json'\");\n        this.emitLine(\"require 'dry-types'\");\n        this.emitLine(\"require 'dry-struct'\");\n        this.ensureBlankLine();\n        this.emitModule(() => {\n            this.emitTypesModule();\n            this.forEachDeclaration(\"leading-and-interposing\", decl => {\n                if (decl.kind === \"forward\") {\n                    this.emitCommentLines([\"(forward declaration)\"]);\n                    this.emitModule(() => {\n                        this.emitLine(\"class \", this.nameForNamedType(decl.type), \" < Dry::Struct; end\");\n                    });\n                }\n            });\n            this.forEachNamedType(\"leading-and-interposing\", (c, n) => this.emitClass(c, n), (e, n) => this.emitEnum(e, n), (u, n) => this.emitUnion(u, n));\n            if (!this._options.justTypes) {\n                this.forEachTopLevel(\"leading-and-interposing\", (topLevel, name) => {\n                    const self = (0, Source_1.modifySource)(Strings_1.snakeCase, name);\n                    // The json gem defines to_json on maps and primitives, so we only need to supply\n                    // it for arrays.\n                    const needsToJsonDefined = \"array\" === topLevel.kind;\n                    const classDeclaration = () => {\n                        this.emitBlock([\"class \", name], () => {\n                            this.emitBlock([\"def self.from_json!(json)\"], () => {\n                                if (needsToJsonDefined) {\n                                    this.emitLine(self, \" = \", this.fromDynamic(topLevel, \"JSON.parse(json, quirks_mode: true)\"));\n                                    this.emitBlock([self, \".define_singleton_method(:to_json) do\"], () => {\n                                        this.emitLine(\"JSON.generate(\", this.toDynamic(topLevel, \"self\"), \")\");\n                                    });\n                                    this.emitLine(self);\n                                }\n                                else {\n                                    this.emitLine(this.fromDynamic(topLevel, \"JSON.parse(json, quirks_mode: true)\"));\n                                }\n                            });\n                        });\n                    };\n                    this.emitModule(() => {\n                        classDeclaration();\n                    });\n                }, t => this.namedTypeToNameForTopLevel(t) === undefined);\n            }\n        });\n    }\n}\nexports.RubyRenderer = RubyRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DartRenderer = exports.DartTargetLanguage = exports.dartOptions = void 0;\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Source_1 = require(\"../Source\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Naming_1 = require(\"../Naming\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst Annotation_1 = require(\"../Annotation\");\nconst Support_1 = require(\"../support/Support\");\nexports.dartOptions = {\n    nullSafety: new RendererOptions_1.BooleanOption(\"null-safety\", \"Null Safety\", true),\n    justTypes: new RendererOptions_1.BooleanOption(\"just-types\", \"Types only\", false),\n    codersInClass: new RendererOptions_1.BooleanOption(\"coders-in-class\", \"Put encoder & decoder in Class\", false),\n    methodNamesWithMap: new RendererOptions_1.BooleanOption(\"from-map\", \"Use method names fromMap() & toMap()\", false, \"secondary\"),\n    requiredProperties: new RendererOptions_1.BooleanOption(\"required-props\", \"Make all properties required\", false),\n    finalProperties: new RendererOptions_1.BooleanOption(\"final-props\", \"Make all properties final\", false),\n    generateCopyWith: new RendererOptions_1.BooleanOption(\"copy-with\", \"Generate CopyWith method\", false),\n    useFreezed: new RendererOptions_1.BooleanOption(\"use-freezed\", \"Generate class definitions with @freezed compatibility\", false, \"secondary\"),\n    useHive: new RendererOptions_1.BooleanOption(\"use-hive\", \"Generate annotations for Hive type adapters\", false, \"secondary\"),\n    useJsonAnnotation: new RendererOptions_1.BooleanOption(\"use-json-annotation\", \"Generate annotations for json_serializable\", false, \"secondary\"),\n    partName: new RendererOptions_1.StringOption(\"part-name\", \"Use this name in `part` directive\", \"NAME\", \"\", \"secondary\")\n};\nclass DartTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor() {\n        super(\"Dart\", [\"dart\"], \"dart\");\n    }\n    getOptions() {\n        return [\n            exports.dartOptions.nullSafety,\n            exports.dartOptions.justTypes,\n            exports.dartOptions.codersInClass,\n            exports.dartOptions.methodNamesWithMap,\n            exports.dartOptions.requiredProperties,\n            exports.dartOptions.finalProperties,\n            exports.dartOptions.generateCopyWith,\n            exports.dartOptions.useFreezed,\n            exports.dartOptions.useHive,\n            exports.dartOptions.useJsonAnnotation,\n            exports.dartOptions.partName\n        ];\n    }\n    get supportsUnionsWithBothNumberTypes() {\n        return true;\n    }\n    get stringTypeMapping() {\n        const mapping = new Map();\n        mapping.set(\"date\", \"date\");\n        mapping.set(\"date-time\", \"date-time\");\n        return mapping;\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        const options = (0, RendererOptions_1.getOptionValues)(exports.dartOptions, untypedOptionValues);\n        return new DartRenderer(this, renderContext, options);\n    }\n}\nexports.DartTargetLanguage = DartTargetLanguage;\nconst keywords = [\n    \"abstract\",\n    \"do\",\n    \"import\",\n    \"super\",\n    \"as\",\n    \"dynamic\",\n    \"in\",\n    \"switch\",\n    \"assert\",\n    \"else\",\n    \"interface\",\n    \"sync*\",\n    \"async\",\n    \"enum\",\n    \"is\",\n    \"this\",\n    \"async*\",\n    \"export\",\n    \"library\",\n    \"throw\",\n    \"await\",\n    \"external\",\n    \"mixin\",\n    \"true\",\n    \"break\",\n    \"extends\",\n    \"new\",\n    \"try\",\n    \"case\",\n    \"factory\",\n    \"null\",\n    \"typedef\",\n    \"catch\",\n    \"false\",\n    \"operator\",\n    \"var\",\n    \"class\",\n    \"final\",\n    \"part\",\n    \"void\",\n    \"const\",\n    \"finally\",\n    \"rethrow\",\n    \"while\",\n    \"continue\",\n    \"for\",\n    \"return\",\n    \"with\",\n    \"covariant\",\n    \"get\",\n    \"set\",\n    \"yield\",\n    \"default\",\n    \"if\",\n    \"static\",\n    \"yield*\",\n    \"deferred\",\n    \"implements\",\n    \"int\",\n    \"double\",\n    \"bool\",\n    \"Map\",\n    \"List\",\n    \"String\",\n    \"File\",\n    \"fromJson\",\n    \"toJson\",\n    \"fromMap\",\n    \"toMap\"\n];\nconst typeNamingFunction = (0, Naming_1.funPrefixNamer)(\"types\", n => dartNameStyle(true, false, n));\nconst propertyNamingFunction = (0, Naming_1.funPrefixNamer)(\"properties\", n => dartNameStyle(false, false, n));\nconst enumCaseNamingFunction = (0, Naming_1.funPrefixNamer)(\"enum-cases\", n => dartNameStyle(true, true, n));\n// Escape the dollar sign, which is used in string interpolation\nconst stringEscape = (0, Strings_1.utf16ConcatMap)((0, Strings_1.escapeNonPrintableMapper)(cp => (0, Strings_1.isPrintable)(cp) && cp !== 0x24, Strings_1.standardUnicodeHexEscape));\nfunction isStartCharacter(codePoint) {\n    if (codePoint === 0x5f)\n        return false; // underscore\n    return (0, Strings_1.isAscii)(codePoint) && (0, Strings_1.isLetter)(codePoint);\n}\nfunction isPartCharacter(codePoint) {\n    return isStartCharacter(codePoint) || ((0, Strings_1.isAscii)(codePoint) && (0, Strings_1.isDigit)(codePoint));\n}\nconst legalizeName = (0, Strings_1.utf16LegalizeCharacters)(isPartCharacter);\n// FIXME: Handle acronyms consistently.  In particular, that means that\n// we have to use namers to produce the getter and setter names - we can't\n// just capitalize and concatenate.\n// https://stackoverflow.com/questions/8277355/naming-convention-for-upper-case-abbreviations\nfunction dartNameStyle(startWithUpper, upperUnderscore, original) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    const firstWordStyle = upperUnderscore\n        ? Strings_1.allUpperWordStyle\n        : startWithUpper\n            ? Strings_1.firstUpperWordStyle\n            : Strings_1.allLowerWordStyle;\n    const restWordStyle = upperUnderscore ? Strings_1.allUpperWordStyle : Strings_1.firstUpperWordStyle;\n    return (0, Strings_1.combineWords)(words, legalizeName, firstWordStyle, restWordStyle, firstWordStyle, restWordStyle, upperUnderscore ? \"_\" : \"\", isStartCharacter);\n}\nclass DartRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _options) {\n        super(targetLanguage, renderContext);\n        this._options = _options;\n        this._gettersAndSettersForPropertyName = new Map();\n        this._needEnumValues = false;\n        this.classCounter = 0;\n        this.classPropertyCounter = 0;\n        this._topLevelDependents = new Map();\n        this._enumValues = new Map();\n    }\n    forbiddenNamesForGlobalNamespace() {\n        return keywords;\n    }\n    forbiddenForObjectProperties(_c, _className) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    makeNamedTypeNamer() {\n        return typeNamingFunction;\n    }\n    namerForObjectProperty() {\n        return propertyNamingFunction;\n    }\n    makeUnionMemberNamer() {\n        return propertyNamingFunction;\n    }\n    makeEnumCaseNamer() {\n        return enumCaseNamingFunction;\n    }\n    unionNeedsName(u) {\n        return (0, TypeUtils_1.nullableFromUnion)(u) === null;\n    }\n    namedTypeToNameForTopLevel(type) {\n        // If the top-level type doesn't contain any classes or unions\n        // we have to define a class just for the `FromJson` method, in\n        // emitFromJsonForTopLevel.\n        return (0, TypeUtils_1.directlyReachableSingleNamedType)(type);\n    }\n    get toJson() {\n        return `to${this._options.methodNamesWithMap ? \"Map\" : \"Json\"}`;\n    }\n    get fromJson() {\n        return `from${this._options.methodNamesWithMap ? \"Map\" : \"Json\"}`;\n    }\n    makeTopLevelDependencyNames(_t, name) {\n        const encoder = new Naming_1.DependencyName(propertyNamingFunction, name.order, lookup => `${lookup(name)}_${this.toJson}`);\n        const decoder = new Naming_1.DependencyName(propertyNamingFunction, name.order, lookup => `${lookup(name)}_${this.fromJson}`);\n        this._topLevelDependents.set(name, { encoder, decoder });\n        return [encoder, decoder];\n    }\n    makeNamesForPropertyGetterAndSetter(_c, _className, _p, _jsonName, name) {\n        const getterName = new Naming_1.DependencyName(propertyNamingFunction, name.order, lookup => `get_${lookup(name)}`);\n        const setterName = new Naming_1.DependencyName(propertyNamingFunction, name.order, lookup => `set_${lookup(name)}`);\n        return [getterName, setterName];\n    }\n    makePropertyDependencyNames(c, className, p, jsonName, name) {\n        const getterAndSetterNames = this.makeNamesForPropertyGetterAndSetter(c, className, p, jsonName, name);\n        this._gettersAndSettersForPropertyName.set(name, getterAndSetterNames);\n        return getterAndSetterNames;\n    }\n    makeNamedTypeDependencyNames(t, name) {\n        if (!(t instanceof Type_1.EnumType))\n            return [];\n        const enumValue = new Naming_1.DependencyName(propertyNamingFunction, name.order, lookup => `${lookup(name)}_values`);\n        this._enumValues.set(t, enumValue);\n        return [enumValue];\n    }\n    emitFileHeader() {\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n        }\n        if (this._options.justTypes)\n            return;\n        if (!this._options.codersInClass) {\n            this.emitLine(\"// To parse this JSON data, do\");\n            this.emitLine(\"//\");\n            this.forEachTopLevel(\"none\", (_t, name) => {\n                const { decoder } = (0, Support_1.defined)(this._topLevelDependents.get(name));\n                this.emitLine(\"//     final \", (0, Source_1.modifySource)(Strings_1.decapitalize, name), \" = \", decoder, \"(jsonString);\");\n            });\n        }\n        this.ensureBlankLine();\n        if (this._options.requiredProperties) {\n            this.emitLine(\"import 'package:meta/meta.dart';\");\n        }\n        if (this._options.useFreezed) {\n            this.emitLine(\"import 'package:freezed_annotation/freezed_annotation.dart';\");\n        }\n        if (this._options.useHive) {\n            this.emitLine(\"import 'package:hive/hive.dart';\");\n        }\n        if (this._options.useJsonAnnotation && !this._options.useFreezed) {\n            // The freezed annotatation import already provides the import for json_annotation\n            this.emitLine(\"import 'package:json_annotation/json_annotation.dart';\");\n        }\n        this.emitLine(\"import 'dart:convert';\");\n        if (this._options.useFreezed || this._options.useHive || this._options.useJsonAnnotation) {\n            this.ensureBlankLine();\n            const optionNameIsEmpty = this._options.partName.length === 0;\n            // FIXME: This should use a `Name`, not `modifySource`\n            const name = (0, Source_1.modifySource)(Strings_1.snakeCase, optionNameIsEmpty ? [...this.topLevels.keys()][0] : this._options.partName);\n            if (this._options.useFreezed) {\n                this.emitLine(\"part '\", name, \".freezed.dart';\");\n            }\n            if (!this._options.justTypes) {\n                this.emitLine(\"part '\", name, \".g.dart';\");\n            }\n        }\n    }\n    emitDescriptionBlock(lines) {\n        this.emitCommentLines(lines, { lineStart: \"///\", beforeComment: \"\" });\n    }\n    emitBlock(line, f) {\n        this.emitLine(line, \" {\");\n        this.indent(f);\n        this.emitLine(\"}\");\n    }\n    dartType(t, withIssues = false, forceNullable = false) {\n        const nullable = forceNullable || (this._options.nullSafety && t.isNullable && !this._options.requiredProperties);\n        const withNullable = (s) => (nullable ? [s, \"?\"] : s);\n        return (0, TypeUtils_1.matchType)(t, _anyType => (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.anyTypeIssueAnnotation, \"dynamic\"), _nullType => (0, Source_1.maybeAnnotated)(withIssues, Annotation_1.nullTypeIssueAnnotation, \"dynamic\"), _boolType => withNullable(\"bool\"), _integerType => withNullable(\"int\"), _doubleType => withNullable(\"double\"), _stringType => withNullable(\"String\"), arrayType => withNullable([\"List<\", this.dartType(arrayType.items, withIssues), \">\"]), classType => withNullable(this.nameForNamedType(classType)), mapType => withNullable([\"Map<String, \", this.dartType(mapType.values, withIssues), \">\"]), enumType => withNullable(this.nameForNamedType(enumType)), unionType => {\n            const maybeNullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (maybeNullable === null) {\n                return \"dynamic\";\n            }\n            return withNullable(this.dartType(maybeNullable, withIssues));\n        }, transformedStringType => {\n            switch (transformedStringType.kind) {\n                case \"date-time\":\n                case \"date\":\n                    return withNullable(\"DateTime\");\n                default:\n                    return withNullable(\"String\");\n            }\n        });\n    }\n    mapList(isNullable, itemType, list, mapper) {\n        if (this._options.nullSafety && isNullable && !this._options.requiredProperties) {\n            return [list, \" == null ? [] : \", \"List<\", itemType, \">.from(\", list, \"!.map((x) => \", mapper, \"))\"];\n        }\n        return [\"List<\", itemType, \">.from(\", list, \".map((x) => \", mapper, \"))\"];\n    }\n    mapMap(isNullable, valueType, map, valueMapper) {\n        if (this._options.nullSafety && isNullable && !this._options.requiredProperties) {\n            return [\"Map.from(\", map, \"!).map((k, v) => MapEntry<String, \", valueType, \">(k, \", valueMapper, \"))\"];\n        }\n        return [\"Map.from(\", map, \").map((k, v) => MapEntry<String, \", valueType, \">(k, \", valueMapper, \"))\"];\n    }\n    mapClass(isNullable, classType, dynamic) {\n        if (this._options.nullSafety && isNullable && !this._options.requiredProperties) {\n            return [\n                dynamic,\n                \" == null ? null : \",\n                this.nameForNamedType(classType),\n                \".\",\n                this.fromJson,\n                \"(\",\n                dynamic,\n                \")\"\n            ];\n        }\n        return [this.nameForNamedType(classType), \".\", this.fromJson, \"(\", dynamic, \")\"];\n    }\n    //If the first time is the unionType type, after nullableFromUnion conversion,\n    //the isNullable property will become false, which is obviously wrong,\n    //so add isNullable property\n    fromDynamicExpression(isNullable = false, t, ...dynamic) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => dynamic, _nullType => dynamic, // FIXME: check null\n        // FIXME: check null\n        _boolType => dynamic, _integerType => dynamic, _doubleType => [dynamic, this._options.nullSafety ? \"?.toDouble()\" : \".toDouble()\"], _stringType => dynamic, arrayType => this.mapList(isNullable || arrayType.isNullable, this.dartType(arrayType.items), dynamic, this.fromDynamicExpression(arrayType.items.isNullable, arrayType.items, \"x\")), classType => this.mapClass(isNullable || classType.isNullable, classType, dynamic), mapType => this.mapMap(mapType.isNullable || isNullable, this.dartType(mapType.values), dynamic, this.fromDynamicExpression(mapType.values.isNullable, mapType.values, \"v\")), enumType => {\n            return [\n                (0, Support_1.defined)(this._enumValues.get(enumType)),\n                \".map[\",\n                dynamic,\n                this._options.nullSafety ? \"]!\" : \"]\"\n            ];\n        }, unionType => {\n            const maybeNullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (maybeNullable === null) {\n                return dynamic;\n            }\n            return this.fromDynamicExpression(unionType.isNullable, maybeNullable, dynamic);\n        }, transformedStringType => {\n            switch (transformedStringType.kind) {\n                case \"date-time\":\n                case \"date\":\n                    if ((transformedStringType.isNullable || isNullable) &&\n                        !this._options.requiredProperties &&\n                        this._options.nullSafety) {\n                        return [dynamic, \" == null ? null : \", \"DateTime.parse(\", dynamic, \")\"];\n                    }\n                    return [\"DateTime.parse(\", dynamic, \")\"];\n                default:\n                    return dynamic;\n            }\n        });\n    }\n    //If the first time is the unionType type, after nullableFromUnion conversion,\n    //the isNullable property will become false, which is obviously wrong,\n    //so add isNullable property\n    toDynamicExpression(isNullable = false, t, ...dynamic) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => dynamic, _nullType => dynamic, _boolType => dynamic, _integerType => dynamic, _doubleType => dynamic, _stringType => dynamic, arrayType => this.mapList(arrayType.isNullable || isNullable, \"dynamic\", dynamic, this.toDynamicExpression(arrayType.items.isNullable, arrayType.items, \"x\")), _classType => {\n            if (this._options.nullSafety &&\n                (_classType.isNullable || isNullable) &&\n                !this._options.requiredProperties) {\n                return [dynamic, \"?.\", this.toJson, \"()\"];\n            }\n            return [dynamic, \".\", this.toJson, \"()\"];\n        }, mapType => this.mapMap(mapType.isNullable || isNullable, \"dynamic\", dynamic, this.toDynamicExpression(mapType.values.isNullable, mapType.values, \"v\")), enumType => {\n            return [(0, Support_1.defined)(this._enumValues.get(enumType)), \".reverse[\", dynamic, \"]\"];\n        }, unionType => {\n            const maybeNullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (maybeNullable === null) {\n                return dynamic;\n            }\n            return this.toDynamicExpression(unionType.isNullable, maybeNullable, dynamic);\n        }, transformedStringType => {\n            switch (transformedStringType.kind) {\n                case \"date-time\":\n                    if (this._options.nullSafety &&\n                        !this._options.requiredProperties &&\n                        (transformedStringType.isNullable || isNullable)) {\n                        return [dynamic, \"?.toIso8601String()\"];\n                    }\n                    return [dynamic, \".toIso8601String()\"];\n                case \"date\":\n                    if (this._options.nullSafety &&\n                        !this._options.requiredProperties &&\n                        (transformedStringType.isNullable || isNullable)) {\n                        return [\n                            '\"${',\n                            dynamic,\n                            \"!.year.toString().padLeft(4, '0')\",\n                            \"}-${\",\n                            dynamic,\n                            \"!.month.toString().padLeft(2, '0')}-${\",\n                            dynamic,\n                            \"!.day.toString().padLeft(2, '0')}\\\"\"\n                        ];\n                    }\n                    return [\n                        '\"${',\n                        dynamic,\n                        \".year.toString().padLeft(4, '0')\",\n                        \"}-${\",\n                        dynamic,\n                        \".month.toString().padLeft(2, '0')}-${\",\n                        dynamic,\n                        \".day.toString().padLeft(2, '0')}\\\"\"\n                    ];\n                default:\n                    return dynamic;\n            }\n        });\n    }\n    _emitEmptyConstructor(className) {\n        this.emitLine(className, \"();\");\n    }\n    _emitConstructor(c, className) {\n        this.emitLine(className, \"({\");\n        this.indent(() => {\n            this.forEachClassProperty(c, \"none\", (name, _, prop) => {\n                const required = this._options.requiredProperties ||\n                    (this._options.nullSafety && (!prop.type.isNullable || !prop.isOptional));\n                this.emitLine(required ? \"required \" : \"\", \"this.\", name, \",\");\n            });\n        });\n        this.emitLine(\"});\");\n        this.ensureBlankLine();\n    }\n    _emitVariables(c) {\n        this.forEachClassProperty(c, \"none\", (name, jsonName, p) => {\n            const description = this.descriptionForClassProperty(c, jsonName);\n            if (description !== undefined) {\n                this.emitDescription(description);\n            }\n            if (this._options.useHive) {\n                this.classPropertyCounter++;\n                this.emitLine(`@HiveField(${this.classPropertyCounter})`);\n            }\n            if (this._options.useJsonAnnotation) {\n                this.classPropertyCounter++;\n                this.emitLine(`@JsonKey(name: \"${jsonName}\")`);\n            }\n            this.emitLine(this._options.finalProperties ? \"final \" : \"\", this.dartType(p.type, true), \" \", name, \";\");\n        });\n    }\n    _emitCopyConstructor(c, className) {\n        this.ensureBlankLine();\n        this.emitLine(className, \" copyWith({\");\n        this.indent(() => {\n            this.forEachClassProperty(c, \"none\", (name, _, _p) => {\n                this.emitLine(this.dartType(_p.type, true, true), \" \", name, \",\");\n            });\n        });\n        this.emitLine(\"}) => \");\n        this.indent(() => {\n            this.emitLine(className, \"(\");\n            this.indent(() => {\n                this.forEachClassProperty(c, \"none\", (name, _, _p) => {\n                    this.emitLine(name, \": \", name, \" ?? \", \"this.\", name, \",\");\n                });\n            });\n            this.emitLine(\");\");\n        });\n    }\n    _emitStringJsonEncoderDecoder(className) {\n        this.ensureBlankLine();\n        this.emitLine(\"factory \", className, \".from\", this._options.methodNamesWithMap ? \"Json\" : \"RawJson\", \"(String str) => \", className, \".\", this.fromJson, \"(json.decode(str));\");\n        this.ensureBlankLine();\n        this.emitLine(\"String \", this._options.methodNamesWithMap ? \"toJson() => \" : \"toRawJson() => \", \"json.encode(\", this.toJson, \"());\");\n    }\n    _emitMapEncoderDecoder(c, className) {\n        this.ensureBlankLine();\n        this.emitLine(\"factory \", className, \".\", this.fromJson, \"(Map<String, dynamic> json) => \", className, \"(\");\n        this.indent(() => {\n            this.forEachClassProperty(c, \"none\", (name, jsonName, property) => {\n                this.emitLine(name, \": \", this.fromDynamicExpression(property.type.isNullable, property.type, 'json[\"', stringEscape(jsonName), '\"]'), \",\");\n            });\n        });\n        this.emitLine(\");\");\n        this.ensureBlankLine();\n        this.emitLine(\"Map<String, dynamic> \", this.toJson, \"() => {\");\n        this.indent(() => {\n            this.forEachClassProperty(c, \"none\", (name, jsonName, property) => {\n                this.emitLine('\"', stringEscape(jsonName), '\": ', this.toDynamicExpression(property.type.isNullable, property.type, name), \",\");\n            });\n        });\n        this.emitLine(\"};\");\n    }\n    emitClassDefinition(c, className) {\n        this.emitDescription(this.descriptionForType(c));\n        if (this._options.useHive) {\n            this.classCounter++;\n            this.emitLine(`@HiveType(typeId: ${this.classCounter})`);\n            this.classPropertyCounter = 0;\n        }\n        if (this._options.useJsonAnnotation) {\n            this.emitLine(`@JsonSerializable()`);\n        }\n        this.emitBlock([\"class \", className], () => {\n            if (c.getProperties().size === 0) {\n                this._emitEmptyConstructor(className);\n            }\n            else {\n                this._emitVariables(c);\n                this.ensureBlankLine();\n                this._emitConstructor(c, className);\n            }\n            if (this._options.generateCopyWith) {\n                this._emitCopyConstructor(c, className);\n            }\n            if (this._options.useJsonAnnotation) {\n                this.ensureBlankLine();\n                this.emitLine(\n                // factory PublicAnswer.fromJson(Map<String, dynamic> json) => _$PublicAnswerFromJson(json);\n                \"factory \", className, \".fromJson(Map<String, dynamic> json) => \", \"_$\", className, \"FromJson(json);\");\n                this.ensureBlankLine();\n                this.emitLine(\n                // Map<String, dynamic> toJson() => _$PublicAnswerToJson(this);\n                \"Map<String, dynamic> toJson() => \", \"_$\", className, \"ToJson(this);\");\n            }\n            else {\n                if (this._options.justTypes)\n                    return;\n                if (this._options.codersInClass) {\n                    this._emitStringJsonEncoderDecoder(className);\n                }\n                this._emitMapEncoderDecoder(c, className);\n            }\n        });\n    }\n    emitFreezedClassDefinition(c, className) {\n        this.emitDescription(this.descriptionForType(c));\n        this.emitLine(\"@freezed\");\n        this.emitBlock([\"class \", className, \" with _$\", className], () => {\n            if (c.getProperties().size === 0) {\n                this.emitLine(\"const factory \", className, \"() = _\", className, \";\");\n            }\n            else {\n                this.emitLine(\"const factory \", className, \"({\");\n                this.indent(() => {\n                    this.forEachClassProperty(c, \"none\", (name, jsonName, prop) => {\n                        const description = this.descriptionForClassProperty(c, jsonName);\n                        if (description !== undefined) {\n                            this.emitDescription(description);\n                        }\n                        const required = this._options.requiredProperties ||\n                            (this._options.nullSafety && (!prop.type.isNullable || !prop.isOptional));\n                        if (this._options.useJsonAnnotation) {\n                            this.classPropertyCounter++;\n                            this.emitLine(`@JsonKey(name: \"${jsonName}\")`);\n                        }\n                        this.emitLine(required ? \"required \" : \"\", this.dartType(prop.type, true), \" \", name, \",\");\n                    });\n                });\n                this.emitLine(\"}) = _\", className, \";\");\n            }\n            if (this._options.justTypes)\n                return;\n            this.ensureBlankLine();\n            this.emitLine(\n            // factory PublicAnswer.fromJson(Map<String, dynamic> json) => _$PublicAnswerFromJson(json);\n            \"factory \", className, \".fromJson(Map<String, dynamic> json) => \", \"_$\", className, \"FromJson(json);\");\n        });\n    }\n    emitEnumDefinition(e, enumName) {\n        this.emitDescription(this.descriptionForType(e));\n        this.emitLine(\"enum \", enumName, \" {\");\n        this.indent(() => {\n            this.forEachEnumCase(e, \"none\", (name, jsonName, pos) => {\n                const comma = pos === \"first\" || pos === \"middle\" ? \",\" : [];\n                if (this._options.useJsonAnnotation) {\n                    this.emitLine('@JsonValue(\"', stringEscape(jsonName), '\")');\n                }\n                this.emitLine(name, comma);\n            });\n        });\n        this.emitLine(\"}\");\n        if (this._options.justTypes)\n            return;\n        this.ensureBlankLine();\n        this.emitLine(\"final \", (0, Support_1.defined)(this._enumValues.get(e)), \" = EnumValues({\");\n        this.indent(() => {\n            this.forEachEnumCase(e, \"none\", (name, jsonName, pos) => {\n                const comma = pos === \"first\" || pos === \"middle\" ? \",\" : [];\n                this.emitLine('\"', stringEscape(jsonName), '\": ', enumName, \".\", name, comma);\n            });\n        });\n        this.emitLine(\"});\");\n        this._needEnumValues = true;\n    }\n    emitEnumValues() {\n        this.ensureBlankLine();\n        this.emitMultiline(`class EnumValues<T> {\n    Map<String, T> map;\n    late Map<T, String> reverseMap;\n\n    EnumValues(this.map);\n\n    Map<T, String> get reverse {\n        reverseMap = map.map((k, v) => MapEntry(v, k));\n        return reverseMap;\n    }\n}`);\n    }\n    _emitTopLvlEncoderDecoder() {\n        this.forEachTopLevel(\"leading-and-interposing\", (t, name) => {\n            const { encoder, decoder } = (0, Support_1.defined)(this._topLevelDependents.get(name));\n            this.emitLine(this.dartType(t), \" \", decoder, \"(String str) => \", this.fromDynamicExpression(t.isNullable, t, \"json.decode(str)\"), \";\");\n            this.ensureBlankLine();\n            this.emitLine(\"String \", encoder, \"(\", this.dartType(t), \" data) => json.encode(\", this.toDynamicExpression(t.isNullable, t, \"data\"), \");\");\n            // this.emitBlock([\"String \", encoder, \"(\", this.dartType(t), \" data)\"], () => {\n            //     this.emitJsonEncoderBlock(t);\n            // });\n        });\n    }\n    emitSourceStructure() {\n        this.emitFileHeader();\n        if (!this._options.justTypes && !this._options.codersInClass) {\n            this._emitTopLvlEncoderDecoder();\n        }\n        this.forEachNamedType(\"leading-and-interposing\", (c, n) => this._options.useFreezed ? this.emitFreezedClassDefinition(c, n) : this.emitClassDefinition(c, n), (e, n) => this.emitEnumDefinition(e, n), (_e, _n) => {\n            // We don't support this yet.\n        });\n        if (this._needEnumValues) {\n            this.emitEnumValues();\n        }\n    }\n}\nexports.DartRenderer = DartRenderer;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JSONPythonRenderer = exports.PythonRenderer = exports.PythonTargetLanguage = exports.pythonOptions = void 0;\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst Type_1 = require(\"../Type\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst Naming_1 = require(\"../Naming\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Support_1 = require(\"../support/Support\");\nconst Source_1 = require(\"../Source\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Transformers_1 = require(\"../Transformers\");\nconst collection_utils_1 = require(\"collection-utils\");\nconst unicode_properties_1 = __importDefault(require(\"unicode-properties\"));\nconst forbiddenTypeNames = [\n    \"Any\",\n    \"True\",\n    \"False\",\n    \"None\",\n    \"Enum\",\n    \"List\",\n    \"Dict\",\n    \"Optional\",\n    \"Union\",\n    \"Iterable\",\n    \"Type\",\n    \"TypeVar\",\n    \"T\",\n    \"EnumT\"\n];\nconst forbiddenPropertyNames = [\n    \"and\",\n    \"as\",\n    \"assert\",\n    \"async\",\n    \"await\",\n    \"bool\",\n    \"break\",\n    \"class\",\n    \"continue\",\n    \"datetime\",\n    \"def\",\n    \"del\",\n    \"dict\",\n    \"elif\",\n    \"else\",\n    \"except\",\n    \"finally\",\n    \"float\",\n    \"for\",\n    \"from\",\n    \"global\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"int\",\n    \"is\",\n    \"lambda\",\n    \"nonlocal\",\n    \"not\",\n    \"or\",\n    \"pass\",\n    \"print\",\n    \"raise\",\n    \"return\",\n    \"self\",\n    \"str\",\n    \"try\",\n    \"while\",\n    \"with\",\n    \"yield\"\n];\nexports.pythonOptions = {\n    features: new RendererOptions_1.EnumOption(\"python-version\", \"Python version\", [\n        [\"3.5\", { typeHints: false, dataClasses: false }],\n        [\"3.6\", { typeHints: true, dataClasses: false }],\n        [\"3.7\", { typeHints: true, dataClasses: true }]\n    ], \"3.6\"),\n    justTypes: new RendererOptions_1.BooleanOption(\"just-types\", \"Classes only\", false),\n    nicePropertyNames: new RendererOptions_1.BooleanOption(\"nice-property-names\", \"Transform property names to be Pythonic\", true)\n};\nclass PythonTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    getOptions() {\n        return [exports.pythonOptions.features, exports.pythonOptions.justTypes, exports.pythonOptions.nicePropertyNames];\n    }\n    get stringTypeMapping() {\n        const mapping = new Map();\n        const dateTimeType = \"date-time\";\n        mapping.set(\"date\", dateTimeType);\n        mapping.set(\"time\", dateTimeType);\n        mapping.set(\"date-time\", dateTimeType);\n        mapping.set(\"uuid\", \"uuid\");\n        mapping.set(\"integer-string\", \"integer-string\");\n        mapping.set(\"bool-string\", \"bool-string\");\n        return mapping;\n    }\n    get supportsUnionsWithBothNumberTypes() {\n        return true;\n    }\n    get supportsOptionalClassProperties() {\n        return false;\n    }\n    needsTransformerForType(t) {\n        if (t instanceof Type_1.UnionType) {\n            return (0, collection_utils_1.iterableSome)(t.members, m => this.needsTransformerForType(m));\n        }\n        return t.kind === \"integer-string\" || t.kind === \"bool-string\";\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        const options = (0, RendererOptions_1.getOptionValues)(exports.pythonOptions, untypedOptionValues);\n        if (options.justTypes) {\n            return new PythonRenderer(this, renderContext, options);\n        }\n        else {\n            return new JSONPythonRenderer(this, renderContext, options);\n        }\n    }\n}\nexports.PythonTargetLanguage = PythonTargetLanguage;\nfunction isNormalizedStartCharacter3(utf16Unit) {\n    // FIXME: add Other_ID_Start - https://docs.python.org/3/reference/lexical_analysis.html#identifiers\n    const category = unicode_properties_1.default.getCategory(utf16Unit);\n    return [\"Lu\", \"Ll\", \"Lt\", \"Lm\", \"Lo\", \"Nl\"].indexOf(category) >= 0;\n}\nfunction isNormalizedPartCharacter3(utf16Unit) {\n    // FIXME: add Other_ID_Continue - https://docs.python.org/3/reference/lexical_analysis.html#identifiers\n    if (isNormalizedStartCharacter3(utf16Unit))\n        return true;\n    const category = unicode_properties_1.default.getCategory(utf16Unit);\n    return [\"Mn\", \"Mc\", \"Nd\", \"Pc\"].indexOf(category) >= 0;\n}\nfunction isStartCharacter3(utf16Unit) {\n    const s = String.fromCharCode(utf16Unit).normalize(\"NFKC\");\n    const l = s.length;\n    if (l === 0 || !isNormalizedStartCharacter3(s.charCodeAt(0)))\n        return false;\n    for (let i = 1; i < l; i++) {\n        if (!isNormalizedPartCharacter3(s.charCodeAt(i)))\n            return false;\n    }\n    return true;\n}\nfunction isPartCharacter3(utf16Unit) {\n    const s = String.fromCharCode(utf16Unit).normalize(\"NFKC\");\n    const l = s.length;\n    for (let i = 0; i < l; i++) {\n        if (!isNormalizedPartCharacter3(s.charCodeAt(i)))\n            return false;\n    }\n    return true;\n}\nconst legalizeName3 = (0, Strings_1.utf16LegalizeCharacters)(isPartCharacter3);\nfunction classNameStyle(original) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    return (0, Strings_1.combineWords)(words, legalizeName3, Strings_1.firstUpperWordStyle, Strings_1.firstUpperWordStyle, Strings_1.allUpperWordStyle, Strings_1.allUpperWordStyle, \"\", isStartCharacter3);\n}\nfunction getWordStyle(uppercase, forceSnakeNameStyle) {\n    if (!forceSnakeNameStyle) {\n        return Strings_1.originalWord;\n    }\n    return uppercase ? Strings_1.allUpperWordStyle : Strings_1.allLowerWordStyle;\n}\nfunction snakeNameStyle(original, uppercase, forceSnakeNameStyle) {\n    const wordStyle = getWordStyle(uppercase, forceSnakeNameStyle);\n    const separator = forceSnakeNameStyle ? \"_\" : \"\";\n    const words = (0, Strings_1.splitIntoWords)(original);\n    return (0, Strings_1.combineWords)(words, legalizeName3, wordStyle, wordStyle, wordStyle, wordStyle, separator, isStartCharacter3);\n}\nclass PythonRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, pyOptions) {\n        super(targetLanguage, renderContext);\n        this.pyOptions = pyOptions;\n        this.imports = new Map();\n        this.declaredTypes = new Set();\n    }\n    forbiddenNamesForGlobalNamespace() {\n        return forbiddenTypeNames;\n    }\n    forbiddenForObjectProperties(_, _classNamed) {\n        return { names: forbiddenPropertyNames, includeGlobalForbidden: false };\n    }\n    makeNamedTypeNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"type\", classNameStyle);\n    }\n    namerForObjectProperty() {\n        return (0, Naming_1.funPrefixNamer)(\"property\", s => snakeNameStyle(s, false, this.pyOptions.nicePropertyNames));\n    }\n    makeUnionMemberNamer() {\n        return null;\n    }\n    makeEnumCaseNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"enum-case\", s => snakeNameStyle(s, true, this.pyOptions.nicePropertyNames));\n    }\n    get commentLineStart() {\n        return \"# \";\n    }\n    emitDescriptionBlock(lines) {\n        if (lines.length === 1) {\n            const docstring = (0, Source_1.modifySource)(content => {\n                if (content.endsWith('\"')) {\n                    return content.slice(0, -1) + '\\\\\"';\n                }\n                return content;\n            }, lines[0]);\n            this.emitComments([{ customLines: [docstring], lineStart: '\"\"\"', lineEnd: '\"\"\"' }]);\n        }\n        else {\n            this.emitCommentLines(lines, {\n                firstLineStart: '\"\"\"',\n                lineStart: \"\",\n                afterComment: '\"\"\"'\n            });\n        }\n    }\n    get needsTypeDeclarationBeforeUse() {\n        return true;\n    }\n    canBeForwardDeclared(t) {\n        const kind = t.kind;\n        return kind === \"class\" || kind === \"enum\";\n    }\n    emitBlock(line, f) {\n        this.emitLine(line);\n        this.indent(f);\n    }\n    string(s) {\n        const openQuote = '\"';\n        return [openQuote, (0, Strings_1.stringEscape)(s), '\"'];\n    }\n    withImport(module, name) {\n        if (this.pyOptions.features.typeHints || module !== \"typing\") {\n            // FIXME: This is ugly.  We should rather not generate that import in the first\n            // place, but right now we just make the type source and then throw it away.  It's\n            // not a performance issue, so it's fine, I just bemoan this special case, and\n            // potential others down the road.\n            (0, collection_utils_1.mapUpdateInto)(this.imports, module, s => (s ? (0, collection_utils_1.setUnionInto)(s, [name]) : new Set([name])));\n        }\n        return name;\n    }\n    withTyping(name) {\n        return this.withImport(\"typing\", name);\n    }\n    namedType(t) {\n        const name = this.nameForNamedType(t);\n        if (this.declaredTypes.has(t))\n            return name;\n        return [\"'\", name, \"'\"];\n    }\n    pythonType(t, _isRootTypeDef = false) {\n        const actualType = (0, Transformers_1.followTargetType)(t);\n        return (0, TypeUtils_1.matchType)(actualType, _anyType => this.withTyping(\"Any\"), _nullType => \"None\", _boolType => \"bool\", _integerType => \"int\", _doubletype => \"float\", _stringType => \"str\", arrayType => [this.withTyping(\"List\"), \"[\", this.pythonType(arrayType.items), \"]\"], classType => this.namedType(classType), mapType => [this.withTyping(\"Dict\"), \"[str, \", this.pythonType(mapType.values), \"]\"], enumType => this.namedType(enumType), unionType => {\n            const [hasNull, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(unionType);\n            const memberTypes = Array.from(nonNulls).map(m => this.pythonType(m));\n            if (hasNull !== null) {\n                let rest = [];\n                if (!this.getAlphabetizeProperties() && this.pyOptions.features.dataClasses && _isRootTypeDef) {\n                    // Only push \"= None\" if this is a root level type def\n                    //   otherwise we may get type defs like List[Optional[int] = None]\n                    //   which are invalid\n                    rest.push(\" = None\");\n                }\n                if (nonNulls.size > 1) {\n                    this.withImport(\"typing\", \"Union\");\n                    return [\n                        this.withTyping(\"Optional\"),\n                        \"[Union[\",\n                        (0, collection_utils_1.arrayIntercalate)(\", \", memberTypes),\n                        \"]]\",\n                        ...rest\n                    ];\n                }\n                else {\n                    return [this.withTyping(\"Optional\"), \"[\", (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(memberTypes)), \"]\", ...rest];\n                }\n            }\n            else {\n                return [this.withTyping(\"Union\"), \"[\", (0, collection_utils_1.arrayIntercalate)(\", \", memberTypes), \"]\"];\n            }\n        }, transformedStringType => {\n            if (transformedStringType.kind === \"date-time\") {\n                return this.withImport(\"datetime\", \"datetime\");\n            }\n            if (transformedStringType.kind === \"uuid\") {\n                return this.withImport(\"uuid\", \"UUID\");\n            }\n            return (0, Support_1.panic)(`Transformed type ${transformedStringType.kind} not supported`);\n        });\n    }\n    declarationLine(t) {\n        if (t instanceof Type_1.ClassType) {\n            return [\"class \", this.nameForNamedType(t), \":\"];\n        }\n        if (t instanceof Type_1.EnumType) {\n            return [\"class \", this.nameForNamedType(t), \"(\", this.withImport(\"enum\", \"Enum\"), \"):\"];\n        }\n        return (0, Support_1.panic)(`Can't declare type ${t.kind}`);\n    }\n    declareType(t, emitter) {\n        this.emitBlock(this.declarationLine(t), () => {\n            this.emitDescription(this.descriptionForType(t));\n            emitter();\n        });\n        this.declaredTypes.add(t);\n    }\n    emitClassMembers(t) {\n        if (this.pyOptions.features.dataClasses)\n            return;\n        const args = [];\n        this.forEachClassProperty(t, \"none\", (name, _, cp) => {\n            args.push([name, this.typeHint(\": \", this.pythonType(cp.type))]);\n        });\n        this.emitBlock([\"def __init__(self, \", (0, collection_utils_1.arrayIntercalate)(\", \", args), \")\", this.typeHint(\" -> None\"), \":\"], () => {\n            if (args.length === 0) {\n                this.emitLine(\"pass\");\n            }\n            else {\n                this.forEachClassProperty(t, \"none\", name => {\n                    this.emitLine(\"self.\", name, \" = \", name);\n                });\n            }\n        });\n    }\n    typeHint(...sl) {\n        if (this.pyOptions.features.typeHints) {\n            return sl;\n        }\n        return [];\n    }\n    typingDecl(name, type) {\n        return [name, this.typeHint(\": \", this.withTyping(type))];\n    }\n    typingReturn(type) {\n        return this.typeHint(\" -> \", this.withTyping(type));\n    }\n    sortClassProperties(properties, propertyNames) {\n        if (this.pyOptions.features.dataClasses) {\n            return (0, collection_utils_1.mapSortBy)(properties, (p) => {\n                return (p.type instanceof Type_1.UnionType && (0, TypeUtils_1.nullableFromUnion)(p.type) != null) || p.isOptional ? 1 : 0;\n            });\n        }\n        else {\n            return super.sortClassProperties(properties, propertyNames);\n        }\n    }\n    emitClass(t) {\n        if (this.pyOptions.features.dataClasses) {\n            this.emitLine(\"@\", this.withImport(\"dataclasses\", \"dataclass\"));\n        }\n        this.declareType(t, () => {\n            if (this.pyOptions.features.typeHints) {\n                if (t.getProperties().size === 0) {\n                    this.emitLine(\"pass\");\n                }\n                else {\n                    this.forEachClassProperty(t, \"none\", (name, jsonName, cp) => {\n                        this.emitLine(name, this.typeHint(\": \", this.pythonType(cp.type, true)));\n                        this.emitDescription(this.descriptionForClassProperty(t, jsonName));\n                    });\n                }\n                this.ensureBlankLine();\n            }\n            this.emitClassMembers(t);\n        });\n    }\n    emitEnum(t) {\n        this.declareType(t, () => {\n            this.forEachEnumCase(t, \"none\", (name, jsonName) => {\n                this.emitLine([name, \" = \", this.string(jsonName)]);\n            });\n        });\n    }\n    emitImports() {\n        this.imports.forEach((names, module) => {\n            this.emitLine(\"from \", module, \" import \", Array.from(names).join(\", \"));\n        });\n    }\n    emitSupportCode() {\n        return;\n    }\n    emitClosingCode() {\n        return;\n    }\n    emitSourceStructure(_givenOutputFilename) {\n        const declarationLines = this.gatherSource(() => {\n            this.forEachNamedType([\"interposing\", 2], (c) => this.emitClass(c), e => this.emitEnum(e), _u => {\n                return;\n            });\n        });\n        const closingLines = this.gatherSource(() => this.emitClosingCode());\n        const supportLines = this.gatherSource(() => this.emitSupportCode());\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n        }\n        this.ensureBlankLine();\n        this.emitImports();\n        this.ensureBlankLine(2);\n        this.emitGatheredSource(supportLines);\n        this.ensureBlankLine(2);\n        this.emitGatheredSource(declarationLines);\n        this.ensureBlankLine(2);\n        this.emitGatheredSource(closingLines);\n    }\n}\nexports.PythonRenderer = PythonRenderer;\nfunction compose(input, f) {\n    if (typeof f === \"function\") {\n        if (input.value !== undefined) {\n            // `input` is a value, so just apply `f` to its source form.\n            return { value: f(makeValue(input)) };\n        }\n        if (input.lambda !== undefined) {\n            // `input` is a lambda, so build `lambda x: f(input(x))`.\n            return { lambda: (0, Source_1.multiWord)(\" \", \"lambda x:\", f([(0, Source_1.parenIfNeeded)(input.lambda), \"(x)\"])), value: undefined };\n        }\n        // `input` is the identify function, so the composition is `lambda x: f(x)`.\n        return { lambda: (0, Source_1.multiWord)(\" \", \"lambda x:\", f(\"x\")), value: undefined };\n    }\n    if (f.value !== undefined) {\n        return (0, Support_1.panic)(\"Cannot compose into a value\");\n    }\n    if (f.lambda === undefined) {\n        // `f` is the identity function, so the result is just `input`.\n        return input;\n    }\n    if (input.value === undefined) {\n        // `input` is a lambda\n        if (input.lambda === undefined) {\n            // `input` is the identity function, so the result is just `f`.\n            return f;\n        }\n        // `input` is a lambda, so the result is `lambda x: f(input(x))`.\n        return {\n            lambda: (0, Source_1.multiWord)(\"\", \"lambda x: \", (0, Source_1.parenIfNeeded)(f.lambda), \"(\", (0, Source_1.parenIfNeeded)(input.lambda), \"(x))\"),\n            value: undefined\n        };\n    }\n    // `input` is a value, so return `f(input)`.\n    return { lambda: f.lambda, value: makeValue(input) };\n}\nconst identity = { value: undefined };\n// If `vol` is a lambda, return it in its source form.  If it's\n// a value, return a `lambda` that returns the value.\nfunction makeLambda(vol) {\n    if (vol.lambda !== undefined) {\n        if (vol.value === undefined) {\n            return vol.lambda;\n        }\n        return (0, Source_1.multiWord)(\"\", \"lambda x: \", (0, Source_1.parenIfNeeded)(vol.lambda), \"(\", vol.value, \")\");\n    }\n    else if (vol.value !== undefined) {\n        return (0, Source_1.multiWord)(\" \", \"lambda x:\", vol.value);\n    }\n    return (0, Source_1.multiWord)(\" \", \"lambda x:\", \"x\");\n}\n// If `vol` is a value, return the value in its source form.\n// Calling this with `vol` being a lambda is not allowed.\nfunction makeValue(vol) {\n    if (vol.value === undefined) {\n        return (0, Support_1.panic)(\"Cannot make value from lambda without value\");\n    }\n    if (vol.lambda !== undefined) {\n        return [(0, Source_1.parenIfNeeded)(vol.lambda), \"(\", vol.value, \")\"];\n    }\n    return vol.value;\n}\nclass JSONPythonRenderer extends PythonRenderer {\n    constructor() {\n        super(...arguments);\n        this._deserializerFunctions = new Set();\n        this._converterNamer = (0, Naming_1.funPrefixNamer)(\"converter\", s => snakeNameStyle(s, false, this.pyOptions.nicePropertyNames));\n        this._topLevelConverterNames = new Map();\n        this._haveTypeVar = false;\n        this._haveEnumTypeVar = false;\n        this._haveDateutil = false;\n    }\n    emitTypeVar(tvar, constraints) {\n        if (!this.pyOptions.features.typeHints) {\n            return;\n        }\n        this.emitLine(tvar, \" = \", this.withTyping(\"TypeVar\"), \"(\", this.string(tvar), constraints, \")\");\n    }\n    typeVar() {\n        this._haveTypeVar = true;\n        // FIXME: This is ugly, but the code that requires the type variables, in\n        // `emitImports` actually runs after imports have been imported.  The proper\n        // solution would be to either allow more complex dependencies, or to\n        // gather-emit the type variable declarations, too.  Unfortunately the\n        // gather-emit is a bit buggy with blank lines, and I can't be bothered to\n        // fix it now.\n        this.withTyping(\"TypeVar\");\n        return \"T\";\n    }\n    enumTypeVar() {\n        this._haveEnumTypeVar = true;\n        // See the comment above.\n        this.withTyping(\"TypeVar\");\n        this.withImport(\"enum\", \"Enum\");\n        return \"EnumT\";\n    }\n    cast(type, v) {\n        if (!this.pyOptions.features.typeHints) {\n            return v;\n        }\n        return [this.withTyping(\"cast\"), \"(\", type, \", \", v, \")\"];\n    }\n    emitNoneConverter() {\n        // FIXME: We can't return the None type here because mypy thinks that means\n        // We're not returning any value, when we're actually returning `None`.\n        this.emitBlock([\"def from_none(\", this.typingDecl(\"x\", \"Any\"), \")\", this.typeHint(\" -> \", this.withTyping(\"Any\")), \":\"], () => {\n            this.emitLine(\"assert x is None\");\n            this.emitLine(\"return x\");\n        });\n    }\n    emitBoolConverter() {\n        this.emitBlock([\"def from_bool(\", this.typingDecl(\"x\", \"Any\"), \")\", this.typeHint(\" -> bool\"), \":\"], () => {\n            this.emitLine(\"assert isinstance(x, bool)\");\n            this.emitLine(\"return x\");\n        });\n    }\n    emitIntConverter() {\n        this.emitBlock([\"def from_int(\", this.typingDecl(\"x\", \"Any\"), \")\", this.typeHint(\" -> int\"), \":\"], () => {\n            this.emitLine(\"assert isinstance(x, int) and not isinstance(x, bool)\");\n            this.emitLine(\"return x\");\n        });\n    }\n    emitFromFloatConverter() {\n        this.emitBlock([\"def from_float(\", this.typingDecl(\"x\", \"Any\"), \")\", this.typeHint(\" -> float\"), \":\"], () => {\n            this.emitLine(\"assert isinstance(x, (float, int)) and not isinstance(x, bool)\");\n            this.emitLine(\"return float(x)\");\n        });\n    }\n    emitToFloatConverter() {\n        this.emitBlock([\"def to_float(\", this.typingDecl(\"x\", \"Any\"), \")\", this.typeHint(\" -> float\"), \":\"], () => {\n            this.emitLine(\"assert isinstance(x, float)\");\n            this.emitLine(\"return x\");\n        });\n    }\n    emitStrConverter() {\n        this.emitBlock([\"def from_str(\", this.typingDecl(\"x\", \"Any\"), \")\", this.typeHint(\" -> str\"), \":\"], () => {\n            const strType = \"str\";\n            this.emitLine(\"assert isinstance(x, \", strType, \")\");\n            this.emitLine(\"return x\");\n        });\n    }\n    emitToEnumConverter() {\n        const tvar = this.enumTypeVar();\n        this.emitBlock([\n            \"def to_enum(c\",\n            this.typeHint(\": \", this.withTyping(\"Type\"), \"[\", tvar, \"]\"),\n            \", \",\n            this.typingDecl(\"x\", \"Any\"),\n            \")\",\n            this.typeHint(\" -> \", tvar),\n            \":\"\n        ], () => {\n            this.emitLine(\"assert isinstance(x, c)\");\n            this.emitLine(\"return x.value\");\n        });\n    }\n    emitListConverter() {\n        const tvar = this.typeVar();\n        this.emitBlock([\n            \"def from_list(f\",\n            this.typeHint(\": \", this.withTyping(\"Callable\"), \"[[\", this.withTyping(\"Any\"), \"], \", tvar, \"]\"),\n            \", \",\n            this.typingDecl(\"x\", \"Any\"),\n            \")\",\n            this.typeHint(\" -> \", this.withTyping(\"List\"), \"[\", tvar, \"]\"),\n            \":\"\n        ], () => {\n            this.emitLine(\"assert isinstance(x, list)\");\n            this.emitLine(\"return [f(y) for y in x]\");\n        });\n    }\n    emitToClassConverter() {\n        const tvar = this.typeVar();\n        this.emitBlock([\n            \"def to_class(c\",\n            this.typeHint(\": \", this.withTyping(\"Type\"), \"[\", tvar, \"]\"),\n            \", \",\n            this.typingDecl(\"x\", \"Any\"),\n            \")\",\n            this.typeHint(\" -> dict\"),\n            \":\"\n        ], () => {\n            this.emitLine(\"assert isinstance(x, c)\");\n            this.emitLine(\"return \", this.cast(this.withTyping(\"Any\"), \"x\"), \".to_dict()\");\n        });\n    }\n    emitDictConverter() {\n        const tvar = this.typeVar();\n        this.emitBlock([\n            \"def from_dict(f\",\n            this.typeHint(\": \", this.withTyping(\"Callable\"), \"[[\", this.withTyping(\"Any\"), \"], \", tvar, \"]\"),\n            \", \",\n            this.typingDecl(\"x\", \"Any\"),\n            \")\",\n            this.typeHint(\" -> \", this.withTyping(\"Dict\"), \"[str, \", tvar, \"]\"),\n            \":\"\n        ], () => {\n            this.emitLine(\"assert isinstance(x, dict)\");\n            this.emitLine(\"return { k: f(v) for (k, v) in x.items() }\");\n        });\n    }\n    // This is not easily idiomatically typeable in Python.  See\n    // https://stackoverflow.com/questions/51066468/computed-types-in-mypy/51084497\n    emitUnionConverter() {\n        this.emitMultiline(`def from_union(fs, x):\n    for f in fs:\n        try:\n            return f(x)\n        except:\n            pass\n    assert False`);\n    }\n    emitFromDatetimeConverter() {\n        this.emitBlock([\n            \"def from_datetime(\",\n            this.typingDecl(\"x\", \"Any\"),\n            \")\",\n            this.typeHint(\" -> \", this.withImport(\"datetime\", \"datetime\")),\n            \":\"\n        ], () => {\n            this._haveDateutil = true;\n            this.emitLine(\"return dateutil.parser.parse(x)\");\n        });\n    }\n    emitFromStringifiedBoolConverter() {\n        this.emitBlock([\"def from_stringified_bool(x\", this.typeHint(\": str\"), \")\", this.typeHint(\" -> bool\"), \":\"], () => {\n            this.emitBlock('if x == \"true\":', () => this.emitLine(\"return True\"));\n            this.emitBlock('if x == \"false\":', () => this.emitLine(\"return False\"));\n            this.emitLine(\"assert False\");\n        });\n    }\n    emitIsTypeConverter() {\n        const tvar = this.typeVar();\n        this.emitBlock([\n            \"def is_type(t\",\n            this.typeHint(\": \", this.withTyping(\"Type\"), \"[\", tvar, \"]\"),\n            \", \",\n            this.typingDecl(\"x\", \"Any\"),\n            \")\",\n            this.typeHint(\" -> \", tvar),\n            \":\"\n        ], () => {\n            this.emitLine(\"assert isinstance(x, t)\");\n            this.emitLine(\"return x\");\n        });\n    }\n    emitConverter(cf) {\n        switch (cf) {\n            case \"none\":\n                return this.emitNoneConverter();\n            case \"bool\":\n                return this.emitBoolConverter();\n            case \"int\":\n                return this.emitIntConverter();\n            case \"from-float\":\n                return this.emitFromFloatConverter();\n            case \"to-float\":\n                return this.emitToFloatConverter();\n            case \"str\":\n                return this.emitStrConverter();\n            case \"to-enum\":\n                return this.emitToEnumConverter();\n            case \"list\":\n                return this.emitListConverter();\n            case \"to-class\":\n                return this.emitToClassConverter();\n            case \"dict\":\n                return this.emitDictConverter();\n            case \"union\":\n                return this.emitUnionConverter();\n            case \"from-datetime\":\n                return this.emitFromDatetimeConverter();\n            case \"from-stringified-bool\":\n                return this.emitFromStringifiedBoolConverter();\n            case \"is-type\":\n                return this.emitIsTypeConverter();\n            default:\n                return (0, Support_1.assertNever)(cf);\n        }\n    }\n    // Return the name of the Python converter function `cf`.\n    conv(cf) {\n        this._deserializerFunctions.add(cf);\n        const name = cf.replace(/-/g, \"_\");\n        if (cf.startsWith(\"from-\") || cf.startsWith(\"to-\") || cf.startsWith(\"is-\"))\n            return name;\n        return [\"from_\", name];\n    }\n    // Applies the converter function to `arg`\n    convFn(cf, arg) {\n        return compose(arg, { lambda: (0, Source_1.singleWord)(this.conv(cf)), value: undefined });\n    }\n    typeObject(t) {\n        const s = (0, TypeUtils_1.matchType)(t, _anyType => undefined, _nullType => \"type(None)\", _boolType => \"bool\", _integerType => \"int\", _doubleType => \"float\", _stringType => \"str\", _arrayType => \"List\", classType => this.nameForNamedType(classType), _mapType => \"dict\", enumType => this.nameForNamedType(enumType), _unionType => undefined, transformedStringType => {\n            if (transformedStringType.kind === \"date-time\") {\n                return this.withImport(\"datetime\", \"datetime\");\n            }\n            if (transformedStringType.kind === \"uuid\") {\n                return this.withImport(\"uuid\", \"UUID\");\n            }\n            return undefined;\n        });\n        if (s === undefined) {\n            return (0, Support_1.panic)(`No type object for ${t.kind}`);\n        }\n        return s;\n    }\n    transformer(inputTransformer, xfer, targetType) {\n        const consume = (consumer, vol) => {\n            if (consumer === undefined) {\n                return vol;\n            }\n            return this.transformer(vol, consumer, targetType);\n        };\n        const isType = (t, valueToCheck) => {\n            return compose(valueToCheck, v => [this.conv(\"is-type\"), \"(\", this.typeObject(t), \", \", v, \")\"]);\n        };\n        if (xfer instanceof Transformers_1.DecodingChoiceTransformer || xfer instanceof Transformers_1.ChoiceTransformer) {\n            const lambdas = xfer.transformers.map(x => makeLambda(this.transformer(identity, x, targetType)).source);\n            return compose(inputTransformer, v => [\n                this.conv(\"union\"),\n                \"([\",\n                (0, collection_utils_1.arrayIntercalate)(\", \", lambdas),\n                \"], \",\n                v,\n                \")\"\n            ]);\n        }\n        else if (xfer instanceof Transformers_1.DecodingTransformer) {\n            const consumer = xfer.consumer;\n            const vol = this.deserializer(inputTransformer, xfer.sourceType);\n            return consume(consumer, vol);\n        }\n        else if (xfer instanceof Transformers_1.EncodingTransformer) {\n            return this.serializer(inputTransformer, xfer.sourceType);\n        }\n        else if (xfer instanceof Transformers_1.UnionInstantiationTransformer) {\n            return inputTransformer;\n        }\n        else if (xfer instanceof Transformers_1.UnionMemberMatchTransformer) {\n            const consumer = xfer.transformer;\n            const vol = isType(xfer.memberType, inputTransformer);\n            return consume(consumer, vol);\n        }\n        else if (xfer instanceof Transformers_1.ParseStringTransformer) {\n            const consumer = xfer.consumer;\n            const immediateTargetType = consumer === undefined ? targetType : consumer.sourceType;\n            let vol;\n            switch (immediateTargetType.kind) {\n                case \"integer\":\n                    vol = compose(inputTransformer, v => [\"int(\", v, \")\"]);\n                    break;\n                case \"bool\":\n                    vol = this.convFn(\"from-stringified-bool\", inputTransformer);\n                    break;\n                case \"enum\":\n                    vol = this.deserializer(inputTransformer, immediateTargetType);\n                    break;\n                case \"date-time\":\n                    vol = this.convFn(\"from-datetime\", inputTransformer);\n                    break;\n                case \"uuid\":\n                    vol = compose(inputTransformer, v => [this.withImport(\"uuid\", \"UUID\"), \"(\", v, \")\"]);\n                    break;\n                default:\n                    return (0, Support_1.panic)(`Parsing of ${immediateTargetType.kind} in a transformer is not supported`);\n            }\n            return consume(consumer, vol);\n        }\n        else if (xfer instanceof Transformers_1.StringifyTransformer) {\n            const consumer = xfer.consumer;\n            let vol;\n            switch (xfer.sourceType.kind) {\n                case \"integer\":\n                    vol = compose(inputTransformer, v => [\"str(\", v, \")\"]);\n                    break;\n                case \"bool\":\n                    vol = compose(inputTransformer, v => [\"str(\", v, \").lower()\"]);\n                    break;\n                case \"enum\":\n                    vol = this.serializer(inputTransformer, xfer.sourceType);\n                    break;\n                case \"date-time\":\n                    vol = compose(inputTransformer, v => [v, \".isoformat()\"]);\n                    break;\n                case \"uuid\":\n                    vol = compose(inputTransformer, v => [\"str(\", v, \")\"]);\n                    break;\n                default:\n                    return (0, Support_1.panic)(`Parsing of ${xfer.sourceType.kind} in a transformer is not supported`);\n            }\n            return consume(consumer, vol);\n        }\n        else {\n            return (0, Support_1.panic)(`Transformer ${xfer.kind} is not supported`);\n        }\n    }\n    // Returns the code to deserialize `value` as type `t`.  If `t` has\n    // an associated transformer, the code for that transformer is\n    // returned.\n    deserializer(value, t) {\n        const xf = (0, Transformers_1.transformationForType)(t);\n        if (xf !== undefined) {\n            return this.transformer(value, xf.transformer, xf.targetType);\n        }\n        return (0, TypeUtils_1.matchType)(t, _anyType => value, _nullType => this.convFn(\"none\", value), _boolType => this.convFn(\"bool\", value), _integerType => this.convFn(\"int\", value), _doubleType => this.convFn(\"from-float\", value), _stringType => this.convFn(\"str\", value), arrayType => compose(value, v => [\n            this.conv(\"list\"),\n            \"(\",\n            makeLambda(this.deserializer(identity, arrayType.items)).source,\n            \", \",\n            v,\n            \")\"\n        ]), classType => compose(value, {\n            lambda: (0, Source_1.singleWord)(this.nameForNamedType(classType), \".from_dict\"),\n            value: undefined\n        }), mapType => compose(value, v => [\n            this.conv(\"dict\"),\n            \"(\",\n            makeLambda(this.deserializer(identity, mapType.values)).source,\n            \", \",\n            v,\n            \")\"\n        ]), enumType => compose(value, { lambda: (0, Source_1.singleWord)(this.nameForNamedType(enumType)), value: undefined }), unionType => {\n            // FIXME: handle via transformers\n            const deserializers = Array.from(unionType.members).map(m => makeLambda(this.deserializer(identity, m)).source);\n            return compose(value, v => [\n                this.conv(\"union\"),\n                \"([\",\n                (0, collection_utils_1.arrayIntercalate)(\", \", deserializers),\n                \"], \",\n                v,\n                \")\"\n            ]);\n        }, transformedStringType => {\n            // FIXME: handle via transformers\n            if (transformedStringType.kind === \"date-time\") {\n                return this.convFn(\"from-datetime\", value);\n            }\n            if (transformedStringType.kind === \"uuid\") {\n                return compose(value, v => [this.withImport(\"uuid\", \"UUID\"), \"(\", v, \")\"]);\n            }\n            return (0, Support_1.panic)(`Transformed type ${transformedStringType.kind} not supported`);\n        });\n    }\n    serializer(value, t) {\n        const xf = (0, Transformers_1.transformationForType)(t);\n        if (xf !== undefined) {\n            const reverse = xf.reverse;\n            return this.transformer(value, reverse.transformer, reverse.targetType);\n        }\n        return (0, TypeUtils_1.matchType)(t, _anyType => value, _nullType => this.convFn(\"none\", value), _boolType => this.convFn(\"bool\", value), _integerType => this.convFn(\"int\", value), _doubleType => this.convFn(\"to-float\", value), _stringType => this.convFn(\"str\", value), arrayType => compose(value, v => [\n            this.conv(\"list\"),\n            \"(\",\n            makeLambda(this.serializer(identity, arrayType.items)).source,\n            \", \",\n            v,\n            \")\"\n        ]), classType => compose(value, v => [this.conv(\"to-class\"), \"(\", this.nameForNamedType(classType), \", \", v, \")\"]), mapType => compose(value, v => [\n            this.conv(\"dict\"),\n            \"(\",\n            makeLambda(this.serializer(identity, mapType.values)).source,\n            \", \",\n            v,\n            \")\"\n        ]), enumType => compose(value, v => [this.conv(\"to-enum\"), \"(\", this.nameForNamedType(enumType), \", \", v, \")\"]), unionType => {\n            const serializers = Array.from(unionType.members).map(m => makeLambda(this.serializer(identity, m)).source);\n            return compose(value, v => [\n                this.conv(\"union\"),\n                \"([\",\n                (0, collection_utils_1.arrayIntercalate)(\", \", serializers),\n                \"], \",\n                v,\n                \")\"\n            ]);\n        }, transformedStringType => {\n            if (transformedStringType.kind === \"date-time\") {\n                return compose(value, v => [v, \".isoformat()\"]);\n            }\n            if (transformedStringType.kind === \"uuid\") {\n                return compose(value, v => [\"str(\", v, \")\"]);\n            }\n            return (0, Support_1.panic)(`Transformed type ${transformedStringType.kind} not supported`);\n        });\n    }\n    emitClassMembers(t) {\n        super.emitClassMembers(t);\n        this.ensureBlankLine();\n        const className = this.nameForNamedType(t);\n        this.emitLine(\"@staticmethod\");\n        this.emitBlock([\"def from_dict(\", this.typingDecl(\"obj\", \"Any\"), \")\", this.typeHint(\" -> \", this.namedType(t)), \":\"], () => {\n            const args = [];\n            this.emitLine(\"assert isinstance(obj, dict)\");\n            this.forEachClassProperty(t, \"none\", (name, jsonName, cp) => {\n                const property = { value: [\"obj.get(\", this.string(jsonName), \")\"] };\n                this.emitLine(name, \" = \", makeValue(this.deserializer(property, cp.type)));\n                args.push(name);\n            });\n            this.emitLine(\"return \", className, \"(\", (0, collection_utils_1.arrayIntercalate)(\", \", args), \")\");\n        });\n        this.ensureBlankLine();\n        this.emitBlock([\"def to_dict(self)\", this.typeHint(\" -> dict\"), \":\"], () => {\n            this.emitLine(\"result\", this.typeHint(\": dict\"), \" = {}\");\n            this.forEachClassProperty(t, \"none\", (name, jsonName, cp) => {\n                const property = { value: [\"self.\", name] };\n                if (cp.isOptional) {\n                    this.emitBlock([\"if self.\", name, \" is not None:\"], () => {\n                        this.emitLine(\"result[\", this.string(jsonName), \"] = \", makeValue(this.serializer(property, cp.type)));\n                    });\n                }\n                else {\n                    this.emitLine(\"result[\", this.string(jsonName), \"] = \", makeValue(this.serializer(property, cp.type)));\n                }\n            });\n            this.emitLine(\"return result\");\n        });\n    }\n    emitImports() {\n        super.emitImports();\n        if (this._haveDateutil) {\n            this.emitLine(\"import dateutil.parser\");\n        }\n        if (!this._haveTypeVar && !this._haveEnumTypeVar)\n            return;\n        this.ensureBlankLine(2);\n        if (this._haveTypeVar) {\n            this.emitTypeVar(this.typeVar(), []);\n        }\n        if (this._haveEnumTypeVar) {\n            this.emitTypeVar(this.enumTypeVar(), [\", bound=\", this.withImport(\"enum\", \"Enum\")]);\n        }\n    }\n    emitSupportCode() {\n        const map = Array.from(this._deserializerFunctions).map(f => [f, f]);\n        this.forEachWithBlankLines(map, [\"interposing\", 2], cf => {\n            this.emitConverter(cf);\n        });\n    }\n    makeTopLevelDependencyNames(_t, topLevelName) {\n        const fromDict = new Naming_1.DependencyName(this._converterNamer, ConvenienceRenderer_1.topLevelNameOrder, l => `${l(topLevelName)}_from_dict`);\n        const toDict = new Naming_1.DependencyName(this._converterNamer, ConvenienceRenderer_1.topLevelNameOrder, l => `${l(topLevelName)}_to_dict`);\n        this._topLevelConverterNames.set(topLevelName, { fromDict, toDict });\n        return [fromDict, toDict];\n    }\n    emitDefaultLeadingComments() {\n        this.ensureBlankLine();\n        if (this._haveDateutil) {\n            this.emitCommentLines([\n                \"This code parses date/times, so please\",\n                \"\",\n                \"    pip install python-dateutil\",\n                \"\"\n            ]);\n        }\n        this.emitCommentLines([\n            \"To use this code, make sure you\",\n            \"\",\n            \"    import json\",\n            \"\",\n            \"and then, to convert JSON from a string, do\",\n            \"\"\n        ]);\n        this.forEachTopLevel(\"none\", (_, name) => {\n            const { fromDict } = (0, Support_1.defined)(this._topLevelConverterNames.get(name));\n            this.emitLine(this.commentLineStart, \"    result = \", fromDict, \"(json.loads(json_string))\");\n        });\n    }\n    emitClosingCode() {\n        this.forEachTopLevel([\"interposing\", 2], (t, name) => {\n            const { fromDict, toDict } = (0, Support_1.defined)(this._topLevelConverterNames.get(name));\n            const pythonType = this.pythonType(t);\n            this.emitBlock([\"def \", fromDict, \"(\", this.typingDecl(\"s\", \"Any\"), \")\", this.typeHint(\" -> \", pythonType), \":\"], () => {\n                this.emitLine(\"return \", makeValue(this.deserializer({ value: \"s\" }, t)));\n            });\n            this.ensureBlankLine(2);\n            this.emitBlock([\"def \", toDict, \"(x\", this.typeHint(\": \", pythonType), \")\", this.typingReturn(\"Any\"), \":\"], () => {\n                this.emitLine(\"return \", makeValue(this.serializer({ value: \"x\" }, t)));\n            });\n        });\n    }\n}\nexports.JSONPythonRenderer = JSONPythonRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PikeRenderer = exports.PikeTargetLanguage = exports.pikeOptions = void 0;\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst Naming_1 = require(\"../Naming\");\nconst Source_1 = require(\"../Source\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Strings_1 = require(\"../support/Strings\");\nexports.pikeOptions = {};\nconst keywords = [\n    \"auto\",\n    \"nomask\",\n    \"final\",\n    \"static\",\n    \"extern\",\n    \"private\",\n    \"local\",\n    \"public\",\n    \"protected\",\n    \"inline\",\n    \"optional\",\n    \"variant\",\n    \"void\",\n    \"mixed\",\n    \"array\",\n    \"__attribute__\",\n    \"__deprecated__\",\n    \"mapping\",\n    \"multiset\",\n    \"object\",\n    \"function\",\n    \"__func__\",\n    \"program\",\n    \"string\",\n    \"float\",\n    \"int\",\n    \"enum\",\n    \"typedef\",\n    \"if\",\n    \"do\",\n    \"for\",\n    \"while\",\n    \"else\",\n    \"foreach\",\n    \"catch\",\n    \"gauge\",\n    \"class\",\n    \"break\",\n    \"case\",\n    \"const\",\n    \"constant\",\n    \"continue\",\n    \"default\",\n    \"import\",\n    \"inherit\",\n    \"lambda\",\n    \"predef\",\n    \"return\",\n    \"sscanf\",\n    \"switch\",\n    \"typeof\",\n    \"global\"\n];\nconst legalizeName = (0, Strings_1.legalizeCharacters)(Strings_1.isLetterOrUnderscoreOrDigit);\nconst enumNamingFunction = (0, Naming_1.funPrefixNamer)(\"enumNamer\", (0, Strings_1.makeNameStyle)(\"upper-underscore\", legalizeName));\nconst namingFunction = (0, Naming_1.funPrefixNamer)(\"genericNamer\", (0, Strings_1.makeNameStyle)(\"underscore\", legalizeName));\nconst namedTypeNamingFunction = (0, Naming_1.funPrefixNamer)(\"typeNamer\", (0, Strings_1.makeNameStyle)(\"pascal\", legalizeName));\nclass PikeTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor() {\n        super(\"Pike\", [\"pike\", \"pikelang\"], \"pmod\");\n    }\n    getOptions() {\n        return [];\n    }\n    makeRenderer(renderContext) {\n        return new PikeRenderer(this, renderContext);\n    }\n}\nexports.PikeTargetLanguage = PikeTargetLanguage;\nclass PikeRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    emitSourceStructure() {\n        this.emitInformationComment();\n        this.ensureBlankLine();\n        this.forEachTopLevel(\"leading\", (t, name) => {\n            this.emitTopLevelTypedef(t, name);\n            this.ensureBlankLine();\n            this.emitTopLevelConverter(t, name);\n            this.ensureBlankLine();\n        }, t => this.namedTypeToNameForTopLevel(t) === undefined);\n        this.ensureBlankLine();\n        this.forEachNamedType(\"leading-and-interposing\", (c, className) => this.emitClassDefinition(c, className), (e, n) => this.emitEnum(e, n), (u, n) => this.emitUnion(u, n));\n    }\n    get enumCasesInGlobalNamespace() {\n        return true;\n    }\n    makeEnumCaseNamer() {\n        return enumNamingFunction;\n    }\n    makeNamedTypeNamer() {\n        return namedTypeNamingFunction;\n    }\n    makeUnionMemberNamer() {\n        return namingFunction;\n    }\n    namerForObjectProperty() {\n        return namingFunction;\n    }\n    forbiddenNamesForGlobalNamespace() {\n        return [...keywords];\n    }\n    forbiddenForObjectProperties(_c, _className) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    forbiddenForEnumCases(_e, _enumName) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    forbiddenForUnionMembers(_u, _unionName) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    sourceFor(t) {\n        if ([\"class\", \"object\", \"enum\"].indexOf(t.kind) >= 0) {\n            return (0, Source_1.singleWord)(this.nameForNamedType(t));\n        }\n        return (0, TypeUtils_1.matchType)(t, _anyType => (0, Source_1.singleWord)(\"mixed\"), _nullType => (0, Source_1.singleWord)(\"mixed\"), _boolType => (0, Source_1.singleWord)(\"bool\"), _integerType => (0, Source_1.singleWord)(\"int\"), _doubleType => (0, Source_1.singleWord)(\"float\"), _stringType => (0, Source_1.singleWord)(\"string\"), arrayType => (0, Source_1.singleWord)([\"array(\", this.sourceFor(arrayType.items).source, \")\"]), _classType => (0, Source_1.singleWord)(this.nameForNamedType(_classType)), mapType => {\n            let valueSource;\n            const v = mapType.values;\n            valueSource = this.sourceFor(v).source;\n            return (0, Source_1.singleWord)([\"mapping(string:\", valueSource, \")\"]);\n        }, _enumType => (0, Source_1.singleWord)(\"enum\"), unionType => {\n            if ((0, TypeUtils_1.nullableFromUnion)(unionType) !== null) {\n                const children = Array.from(unionType.getChildren()).map(c => (0, Source_1.parenIfNeeded)(this.sourceFor(c)));\n                return (0, Source_1.multiWord)(\"|\", ...children);\n            }\n            else {\n                return (0, Source_1.singleWord)(this.nameForNamedType(unionType));\n            }\n        });\n    }\n    emitClassDefinition(c, className) {\n        this.emitDescription(this.descriptionForType(c));\n        this.emitBlock([\"class \", className], () => {\n            this.emitClassMembers(c);\n            this.ensureBlankLine();\n            this.emitEncodingFunction(c);\n        });\n        this.ensureBlankLine();\n        this.emitDecodingFunction(className, c);\n    }\n    emitEnum(e, enumName) {\n        this.emitBlock([e.kind, \" \", enumName], () => {\n            let table = [];\n            this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n                table.push([\n                    [name, ' = \"', (0, Strings_1.stringEscape)(jsonName), '\", '],\n                    ['// json: \"', jsonName, '\"']\n                ]);\n            });\n            this.emitTable(table);\n        });\n    }\n    emitUnion(u, unionName) {\n        const isMaybeWithSingleType = (0, TypeUtils_1.nullableFromUnion)(u);\n        if (isMaybeWithSingleType !== null) {\n            return;\n        }\n        this.emitDescription(this.descriptionForType(u));\n        const [, nonNulls] = (0, TypeUtils_1.removeNullFromUnion)(u);\n        let types = [];\n        this.forEachUnionMember(u, nonNulls, \"none\", null, (_name, t) => {\n            const pikeType = this.sourceFor(t).source;\n            types.push([pikeType]);\n        });\n        this.emitLine([\n            \"typedef \",\n            types.map(r => r.map(sl => this.sourcelikeToString(sl))).join(\"|\"),\n            \" \",\n            unionName,\n            \";\"\n        ]);\n        this.ensureBlankLine();\n        this.emitBlock([unionName, \" \", unionName, \"_from_JSON(mixed json)\"], () => {\n            this.emitLine([\"return json;\"]);\n        });\n    }\n    emitBlock(line, f, opening = \" {\", closing = \"}\") {\n        this.emitLine(line, opening);\n        this.indent(f);\n        this.emitLine(closing);\n    }\n    emitMappingBlock(line, f) {\n        this.emitBlock(line, f, \"([\", \"]);\");\n    }\n    emitClassMembers(c) {\n        let table = [];\n        this.forEachClassProperty(c, \"none\", (name, jsonName, p) => {\n            const pikeType = this.sourceFor(p.type).source;\n            table.push([\n                [pikeType, \" \"],\n                [name, \"; \"],\n                ['// json: \"', jsonName, '\"']\n            ]);\n        });\n        this.emitTable(table);\n    }\n    emitInformationComment() {\n        this.emitCommentLines([\n            \"This source has been automatically generated by quicktype.\",\n            \"( https://github.com/quicktype/quicktype )\",\n            \"\",\n            \"To use this code, simply import it into your project as a Pike module.\",\n            \"To JSON-encode your object, you can pass it to `Standards.JSON.encode`\",\n            \"or call `encode_json` on it.\",\n            \"\",\n            \"To decode a JSON string, first pass it to `Standards.JSON.decode`,\",\n            \"and then pass the result to `<YourClass>_from_JSON`.\",\n            \"It will return an instance of <YourClass>.\",\n            \"Bear in mind that these functions have unexpected behavior,\",\n            \"and will likely throw an error, if the JSON string does not\",\n            \"match the expected interface, even if the JSON itself is valid.\"\n        ], { lineStart: \"// \" });\n    }\n    emitTopLevelTypedef(t, name) {\n        this.emitLine(\"typedef \", this.sourceFor(t).source, \" \", name, \";\");\n    }\n    emitTopLevelConverter(t, name) {\n        this.emitBlock([name, \" \", name, \"_from_JSON(mixed json)\"], () => {\n            if (t instanceof Type_1.PrimitiveType) {\n                this.emitLine([\"return json;\"]);\n            }\n            else if (t instanceof Type_1.ArrayType) {\n                if (t.items instanceof Type_1.PrimitiveType)\n                    this.emitLine([\"return json;\"]);\n                else\n                    this.emitLine([\"return map(json, \", this.sourceFor(t.items).source, \"_from_JSON);\"]);\n            }\n            else if (t instanceof Type_1.MapType) {\n                const type = this.sourceFor(t.values).source;\n                this.emitLine([\"mapping(string:\", type, \") retval = ([]);\"]);\n                let assignmentRval;\n                if (t.values instanceof Type_1.PrimitiveType)\n                    assignmentRval = [\"(\", type, \") v\"];\n                else\n                    assignmentRval = [type, \"_from_JSON(v)\"];\n                this.emitBlock([\"foreach (json; string k; mixed v)\"], () => {\n                    this.emitLine([\"retval[k] = \", assignmentRval, \";\"]);\n                });\n                this.emitLine([\"return retval;\"]);\n            }\n        });\n    }\n    emitEncodingFunction(c) {\n        this.emitBlock([\"string encode_json()\"], () => {\n            this.emitMappingBlock([\"mapping(string:mixed) json = \"], () => {\n                this.forEachClassProperty(c, \"none\", (name, jsonName) => {\n                    this.emitLine(['\"', (0, Strings_1.stringEscape)(jsonName), '\" : ', name, \",\"]);\n                });\n            });\n            this.ensureBlankLine();\n            this.emitLine([\"return Standards.JSON.encode(json);\"]);\n        });\n    }\n    emitDecodingFunction(className, c) {\n        this.emitBlock([className, \" \", className, \"_from_JSON(mixed json)\"], () => {\n            this.emitLine([className, \" retval = \", className, \"();\"]);\n            this.ensureBlankLine();\n            this.forEachClassProperty(c, \"none\", (name, jsonName) => {\n                this.emitLine([\"retval.\", name, ' = json[\"', (0, Strings_1.stringEscape)(jsonName), '\"];']);\n            });\n            this.ensureBlankLine();\n            this.emitLine([\"return retval;\"]);\n        });\n    }\n}\nexports.PikeRenderer = PikeRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HaskellRenderer = exports.HaskellTargetLanguage = exports.haskellOptions = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst Naming_1 = require(\"../Naming\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Source_1 = require(\"../Source\");\nexports.haskellOptions = {\n    justTypes: new RendererOptions_1.BooleanOption(\"just-types\", \"Plain types only\", false),\n    useList: new RendererOptions_1.EnumOption(\"array-type\", \"Use Array or List\", [\n        [\"array\", false],\n        [\"list\", true]\n    ]),\n    moduleName: new RendererOptions_1.StringOption(\"module\", \"Generated module name\", \"NAME\", \"QuickType\")\n};\nclass HaskellTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor() {\n        super(\"Haskell\", [\"haskell\"], \"haskell\");\n    }\n    getOptions() {\n        return [exports.haskellOptions.justTypes, exports.haskellOptions.moduleName, exports.haskellOptions.useList];\n    }\n    get supportsOptionalClassProperties() {\n        return true;\n    }\n    get supportsUnionsWithBothNumberTypes() {\n        return true;\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        return new HaskellRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.haskellOptions, untypedOptionValues));\n    }\n}\nexports.HaskellTargetLanguage = HaskellTargetLanguage;\nconst forbiddenNames = [\n    // reserved keywords\n    \"as\",\n    \"case\",\n    \"class\",\n    \"data\",\n    \"default\",\n    \"deriving\",\n    \"do\",\n    \"else\",\n    \"family\",\n    \"forall\",\n    \"foreign\",\n    \"hiding\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"infix\",\n    \"infixl\",\n    \"infixr\",\n    \"instance\",\n    \"let\",\n    \"of\",\n    \"mdo\",\n    \"module\",\n    \"newtype\",\n    \"proc\",\n    \"qualified\",\n    \"rec\",\n    \"then\",\n    \"type\",\n    \"where\",\n    // in Prelude keywords ...\n    \"id\",\n    \"Array\",\n    \"HashMap\",\n    \"Map\",\n    \"Maybe\",\n    \"Bool\",\n    \"Int\",\n    \"True\",\n    \"False\",\n    \"Enum\",\n    // Aeson types\n    \"encode\",\n    \"decode\",\n    \"text\",\n    \"Text\",\n    \"Value\",\n    \"Object\",\n    \"Result\",\n    \"Series\",\n    \"Error\"\n];\nconst legalizeName = (0, Strings_1.legalizeCharacters)(cp => (0, Strings_1.isAscii)(cp) && (0, Strings_1.isLetterOrUnderscoreOrDigit)(cp));\nfunction haskellNameStyle(original, upper) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    return (0, Strings_1.combineWords)(words, legalizeName, upper ? Strings_1.firstUpperWordStyle : Strings_1.allLowerWordStyle, Strings_1.firstUpperWordStyle, upper ? Strings_1.allUpperWordStyle : Strings_1.allLowerWordStyle, Strings_1.allUpperWordStyle, \"\", Strings_1.isLetterOrUnderscore);\n}\nconst upperNamingFunction = (0, Naming_1.funPrefixNamer)(\"upper\", n => haskellNameStyle(n, true));\nconst lowerNamingFunction = (0, Naming_1.funPrefixNamer)(\"lower\", n => haskellNameStyle(n, false));\nclass HaskellRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _options) {\n        super(targetLanguage, renderContext);\n        this._options = _options;\n    }\n    forbiddenNamesForGlobalNamespace() {\n        return forbiddenNames;\n    }\n    makeNamedTypeNamer() {\n        return upperNamingFunction;\n    }\n    namerForObjectProperty() {\n        return lowerNamingFunction;\n    }\n    forbiddenForObjectProperties(_c, _className) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    makeUnionMemberNamer() {\n        return upperNamingFunction;\n    }\n    get unionMembersInGlobalNamespace() {\n        return true;\n    }\n    makeEnumCaseNamer() {\n        return upperNamingFunction;\n    }\n    get enumCasesInGlobalNamespace() {\n        return true;\n    }\n    proposeUnionMemberName(u, unionName, fieldType, lookup) {\n        const fieldName = super.proposeUnionMemberName(u, unionName, fieldType, lookup);\n        return `${fieldName}_in_${lookup(unionName)}`;\n    }\n    get commentLineStart() {\n        return \"-- \";\n    }\n    emitDescriptionBlock(lines) {\n        if (lines.length === 1) {\n            this.emitComments([{ customLines: lines, lineStart: \"{-| \", lineEnd: \" -}\" }]);\n        }\n        else {\n            this.emitCommentLines(lines, {\n                firstLineStart: \"{-| \",\n                lineStart: \"\",\n                afterComment: \"-}\"\n            });\n        }\n    }\n    haskellType(t, noOptional = false) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => (0, Source_1.multiWord)(\" \", \"Maybe\", \"Text\"), _nullType => (0, Source_1.multiWord)(\" \", \"Maybe\", \"Text\"), _boolType => (0, Source_1.singleWord)(\"Bool\"), _integerType => (0, Source_1.singleWord)(\"Int\"), _doubleType => (0, Source_1.singleWord)(\"Float\"), _stringType => (0, Source_1.singleWord)(\"Text\"), arrayType => {\n            if (this._options.useList) {\n                return (0, Source_1.multiWord)(\"\", \"[\", (0, Source_1.parenIfNeeded)(this.haskellType(arrayType.items)), \"]\");\n            }\n            return (0, Source_1.multiWord)(\" \", \"Vector\", (0, Source_1.parenIfNeeded)(this.haskellType(arrayType.items)));\n        }, classType => (0, Source_1.singleWord)(this.nameForNamedType(classType)), mapType => (0, Source_1.multiWord)(\" \", \"HashMap Text\", (0, Source_1.parenIfNeeded)(this.haskellType(mapType.values))), enumType => (0, Source_1.singleWord)(this.nameForNamedType(enumType)), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                const nullableType = this.haskellType(nullable);\n                if (noOptional)\n                    return nullableType;\n                return (0, Source_1.multiWord)(\" \", \"Maybe\", (0, Source_1.parenIfNeeded)(nullableType));\n            }\n            return (0, Source_1.singleWord)(this.nameForNamedType(unionType));\n        });\n    }\n    haskellProperty(p) {\n        if (p.isOptional) {\n            return (0, Source_1.multiWord)(\" \", \"Maybe\", (0, Source_1.parenIfNeeded)(this.haskellType(p.type, true))).source;\n        }\n        else {\n            return this.haskellType(p.type).source;\n        }\n    }\n    encoderNameForType(t) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => (0, Source_1.singleWord)(\"String\"), _nullType => (0, Source_1.singleWord)(\"Null\"), _boolType => (0, Source_1.singleWord)(\"Bool\"), _integerType => (0, Source_1.singleWord)(\"Number\"), _doubleType => (0, Source_1.singleWord)(\"Number\"), _stringType => (0, Source_1.singleWord)(\"String\"), _arrayType => (0, Source_1.singleWord)(\"Array\"), _classType => (0, Source_1.singleWord)(\"Object\"), _mapType => (0, Source_1.singleWord)(\"Object\"), _enumType => (0, Source_1.singleWord)(\"Object\"), _unionType => (0, Source_1.singleWord)(\"Object\"));\n    }\n    emitTopLevelDefinition(t, topLevelName) {\n        this.emitLine(\"type \", topLevelName, \" = \", this.haskellType(t).source);\n    }\n    emitClassDefinition(c, className) {\n        let description = this.descriptionForType(c);\n        this.forEachClassProperty(c, \"none\", (name, jsonName) => {\n            const propertyDescription = this.descriptionForClassProperty(c, jsonName);\n            if (propertyDescription === undefined)\n                return;\n            if (description === undefined) {\n                description = [];\n            }\n            else {\n                description.push(\"\");\n            }\n            description.push(`${this.sourcelikeToString(name)}:`);\n            description.push(...propertyDescription);\n        });\n        this.emitDescription(description);\n        this.emitLine(\"data \", className, \" = \", className);\n        this.indent(() => {\n            let onFirst = true;\n            this.forEachClassProperty(c, \"none\", (name, _jsonName, p) => {\n                this.emitLine(onFirst ? \"{ \" : \", \", name, className, \" :: \", this.haskellProperty(p));\n                onFirst = false;\n            });\n            if (onFirst) {\n                this.emitLine(\"{\");\n            }\n            this.emitLine(\"} deriving (Show)\");\n        });\n    }\n    emitEnumDefinition(e, enumName) {\n        this.emitDescription(this.descriptionForType(e));\n        this.emitLine(\"data \", enumName);\n        this.indent(() => {\n            let onFirst = true;\n            this.forEachEnumCase(e, \"none\", name => {\n                const equalsOrPipe = onFirst ? \"=\" : \"|\";\n                this.emitLine(equalsOrPipe, \" \", name, enumName);\n                onFirst = false;\n            });\n            this.emitLine(\"deriving (Show)\");\n        });\n    }\n    emitUnionDefinition(u, unionName) {\n        this.emitDescription(this.descriptionForType(u));\n        this.emitLine(\"data \", unionName);\n        this.indent(() => {\n            let onFirst = true;\n            this.forEachUnionMember(u, null, \"none\", null, (constructor, t) => {\n                const equalsOrPipe = onFirst ? \"=\" : \"|\";\n                if (t.kind === \"null\") {\n                    this.emitLine(equalsOrPipe, \" \", constructor);\n                }\n                else {\n                    this.emitLine(equalsOrPipe, \" \", constructor, \" \", (0, Source_1.parenIfNeeded)(this.haskellType(t)));\n                }\n                onFirst = false;\n            });\n            this.emitLine(\"deriving (Show)\");\n        });\n    }\n    emitTopLevelFunctions(topLevelName) {\n        this.emitLine(\"decodeTopLevel :: ByteString -> Maybe \", topLevelName);\n        this.emitLine(\"decodeTopLevel = decode\");\n    }\n    classPropertyLength(c) {\n        let counter = 0;\n        this.forEachClassProperty(c, \"none\", () => {\n            counter += 1;\n        });\n        return counter;\n    }\n    emitClassEncoderInstance(c, className) {\n        let classProperties = [];\n        this.forEachClassProperty(c, \"none\", name => {\n            classProperties.push(\" \");\n            classProperties.push(name);\n            classProperties.push(className);\n        });\n        this.emitLine(\"instance ToJSON \", className, \" where\");\n        this.indent(() => {\n            if (classProperties.length === 0) {\n                this.emitLine(\"toJSON = \\\\_ -> emptyObject\");\n            }\n            else {\n                this.emitLine(\"toJSON (\", className, ...classProperties, \") =\");\n                this.indent(() => {\n                    this.emitLine(\"object\");\n                    let onFirst = true;\n                    this.forEachClassProperty(c, \"none\", (name, jsonName) => {\n                        this.emitLine(onFirst ? \"[ \" : \", \", '\"', (0, Strings_1.stringEscape)(jsonName), '\" .= ', name, className);\n                        onFirst = false;\n                    });\n                    if (onFirst) {\n                        this.emitLine(\"[\");\n                    }\n                    this.emitLine(\"]\");\n                });\n            }\n        });\n    }\n    emitClassDecoderInstance(c, className) {\n        this.emitLine(\"instance FromJSON \", className, \" where\");\n        this.indent(() => {\n            if (this.classPropertyLength(c) === 0) {\n                this.emitLine(\"parseJSON emptyObject = return \", className);\n            }\n            else {\n                this.emitLine(\"parseJSON (Object v) = \", className);\n                this.indent(() => {\n                    let onFirst = true;\n                    this.forEachClassProperty(c, \"none\", (_, jsonName, p) => {\n                        const operator = p.isOptional ? \".:?\" : \".:\";\n                        this.emitLine(onFirst ? \"<$> \" : \"<*> \", \"v \", operator, ' \"', (0, Strings_1.stringEscape)(jsonName), '\"');\n                        onFirst = false;\n                    });\n                });\n            }\n        });\n    }\n    emitClassFunctions(c, className) {\n        this.emitClassEncoderInstance(c, className);\n        this.ensureBlankLine();\n        this.emitClassDecoderInstance(c, className);\n    }\n    emitEnumEncoderInstance(e, enumName) {\n        this.emitLine(\"instance ToJSON \", enumName, \" where\");\n        this.indent(() => {\n            this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n                this.emitLine(\"toJSON \", name, enumName, ' = \"', (0, Strings_1.stringEscape)(jsonName), '\"');\n            });\n        });\n    }\n    emitEnumDecoderInstance(e, enumName) {\n        this.emitLine(\"instance FromJSON \", enumName, \" where\");\n        this.indent(() => {\n            this.emitLine('parseJSON = withText \"', enumName, '\" parseText');\n            this.indent(() => {\n                this.emitLine(\"where\");\n                this.indent(() => {\n                    this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n                        this.emitLine('parseText \"', (0, Strings_1.stringEscape)(jsonName), '\" = return ', name, enumName);\n                    });\n                });\n            });\n        });\n    }\n    emitEnumFunctions(e, enumName) {\n        this.emitEnumEncoderInstance(e, enumName);\n        this.ensureBlankLine();\n        this.emitEnumDecoderInstance(e, enumName);\n    }\n    emitUnionEncoderInstance(u, unionName) {\n        this.emitLine(\"instance ToJSON \", unionName, \" where\");\n        this.indent(() => {\n            this.forEachUnionMember(u, null, \"none\", null, (constructor, t) => {\n                if (t.kind === \"null\") {\n                    this.emitLine(\"toJSON \", constructor, \" = Null\");\n                }\n                else {\n                    this.emitLine(\"toJSON (\", constructor, \" x) = toJSON x\");\n                }\n            });\n        });\n    }\n    emitUnionDecoderInstance(u, unionName) {\n        this.emitLine(\"instance FromJSON \", unionName, \" where\");\n        this.indent(() => {\n            this.forEachUnionMember(u, null, \"none\", null, (constructor, t) => {\n                if (t.kind === \"null\") {\n                    this.emitLine(\"parseJSON Null = return \", constructor);\n                }\n                else {\n                    this.emitLine(\"parseJSON xs@(\", this.encoderNameForType(t).source, \" _) = (fmap \", constructor, \" . parseJSON) xs\");\n                }\n            });\n        });\n    }\n    emitUnionFunctions(u, unionName) {\n        this.emitUnionEncoderInstance(u, unionName);\n        this.ensureBlankLine();\n        this.emitUnionDecoderInstance(u, unionName);\n    }\n    emitLanguageExtensions(ext) {\n        this.emitLine(`{-# LANGUAGE ${ext} #-}`);\n    }\n    emitSourceStructure() {\n        const exports = [];\n        this.forEachTopLevel(\"none\", (_, name) => {\n            exports.push([name, \" (..)\"]);\n        });\n        this.forEachObject(\"none\", (t, name) => {\n            if (!(0, collection_utils_1.mapContains)(this.topLevels, t))\n                exports.push([name, \" (..)\"]);\n        });\n        this.forEachEnum(\"none\", (t, name) => {\n            if (!(0, collection_utils_1.mapContains)(this.topLevels, t))\n                exports.push([name, \" (..)\"]);\n        });\n        this.forEachUnion(\"none\", (t, name) => {\n            if (!(0, collection_utils_1.mapContains)(this.topLevels, t))\n                exports.push([name, \" (..)\"]);\n        });\n        this.emitLanguageExtensions(\"StrictData\");\n        this.emitLanguageExtensions(\"OverloadedStrings\");\n        if (!this._options.justTypes) {\n            this.ensureBlankLine();\n            this.emitLine(\"module \", this._options.moduleName);\n            this.indent(() => {\n                for (let i = 0; i < exports.length; i++) {\n                    this.emitLine(i === 0 ? \"(\" : \",\", \" \", exports[i]);\n                }\n                this.emitLine(\", decodeTopLevel\");\n                this.emitLine(\") where\");\n            });\n            this.ensureBlankLine();\n            this.emitMultiline(`import Data.Aeson\nimport Data.Aeson.Types (emptyObject)\nimport Data.ByteString.Lazy (ByteString)\nimport Data.HashMap.Strict (HashMap)\nimport Data.Text (Text)`);\n            if (this._options.useList) {\n                // this.emitLine(\"import List (map)\");\n            }\n            else {\n                this.emitLine(\"import Data.Vector (Vector)\");\n            }\n        }\n        this.forEachTopLevel(\"leading-and-interposing\", (t, topLevelName) => this.emitTopLevelDefinition(t, topLevelName), t => this.namedTypeToNameForTopLevel(t) === undefined);\n        this.forEachNamedType(\"leading-and-interposing\", (c, className) => this.emitClassDefinition(c, className), (e, enumName) => this.emitEnumDefinition(e, enumName), (u, unionName) => this.emitUnionDefinition(u, unionName));\n        this.forEachTopLevel(\"leading-and-interposing\", (_, topLevelName) => this.emitTopLevelFunctions(topLevelName));\n        this.forEachNamedType(\"leading-and-interposing\", (c, className) => this.emitClassFunctions(c, className), (e, enumName) => this.emitEnumFunctions(e, enumName), (u, unionName) => this.emitUnionFunctions(u, unionName));\n        if (this._options.justTypes)\n            return;\n        this.ensureBlankLine();\n    }\n}\nexports.HaskellRenderer = HaskellRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeScriptZodRenderer = exports.TypeScriptZodTargetLanguage = exports.typeScriptZodOptions = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst Naming_1 = require(\"../Naming\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Acronyms_1 = require(\"../support/Acronyms\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Support_1 = require(\"../support/Support\");\nconst JavaScript_1 = require(\"./JavaScript\");\nexports.typeScriptZodOptions = {\n    justSchema: new RendererOptions_1.BooleanOption(\"just-schema\", \"Schema only\", false)\n};\nclass TypeScriptZodTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    getOptions() {\n        return [];\n    }\n    constructor(displayName = \"TypeScript Zod\", names = [\"typescript-zod\"], extension = \"ts\") {\n        super(displayName, names, extension);\n    }\n    get stringTypeMapping() {\n        const mapping = new Map();\n        const dateTimeType = \"date-time\";\n        mapping.set(\"date-time\", dateTimeType);\n        return mapping;\n    }\n    get supportsOptionalClassProperties() {\n        return true;\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        return new TypeScriptZodRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.typeScriptZodOptions, untypedOptionValues));\n    }\n}\nexports.TypeScriptZodTargetLanguage = TypeScriptZodTargetLanguage;\nclass TypeScriptZodRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _options) {\n        super(targetLanguage, renderContext);\n        this._options = _options;\n    }\n    forbiddenNamesForGlobalNamespace() {\n        return [\"Class\", \"Date\", \"Object\", \"String\", \"Array\", \"JSON\", \"Error\"];\n    }\n    nameStyle(original, upper) {\n        const acronyms = (0, Acronyms_1.acronymStyle)(Acronyms_1.AcronymStyleOptions.Camel);\n        const words = (0, Strings_1.splitIntoWords)(original);\n        return (0, Strings_1.combineWords)(words, JavaScript_1.legalizeName, upper ? Strings_1.firstUpperWordStyle : Strings_1.allLowerWordStyle, Strings_1.firstUpperWordStyle, upper ? s => (0, Strings_1.capitalize)(acronyms(s)) : Strings_1.allLowerWordStyle, acronyms, \"\", Strings_1.isLetterOrUnderscore);\n    }\n    makeNamedTypeNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"types\", s => this.nameStyle(s, true));\n    }\n    makeUnionMemberNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"properties\", s => this.nameStyle(s, true));\n    }\n    namerForObjectProperty() {\n        return (0, Naming_1.funPrefixNamer)(\"properties\", s => this.nameStyle(s, true));\n    }\n    makeEnumCaseNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"enum-cases\", s => this.nameStyle(s, false));\n    }\n    importStatement(lhs, moduleName) {\n        return [\"import \", lhs, \" from \", moduleName, \";\"];\n    }\n    emitImports() {\n        this.ensureBlankLine();\n        this.emitLine(this.importStatement(\"* as z\", '\"zod\"'));\n    }\n    typeMapTypeForProperty(p) {\n        const typeMap = this.typeMapTypeFor(p.type);\n        return p.isOptional ? [typeMap, \".optional()\"] : typeMap;\n    }\n    typeMapTypeFor(t, required = true) {\n        if ([\"class\", \"object\", \"enum\"].indexOf(t.kind) >= 0) {\n            return [this.nameForNamedType(t), \"Schema\"];\n        }\n        const match = (0, TypeUtils_1.matchType)(t, _anyType => \"z.any()\", _nullType => \"z.null()\", _boolType => \"z.boolean()\", _integerType => \"z.number()\", _doubleType => \"z.number()\", _stringType => \"z.string()\", arrayType => [\"z.array(\", this.typeMapTypeFor(arrayType.items, false), \")\"], _classType => (0, Support_1.panic)(\"Should already be handled.\"), _mapType => [\"z.record(z.string(), \", this.typeMapTypeFor(_mapType.values, false), \")\"], _enumType => (0, Support_1.panic)(\"Should already be handled.\"), unionType => {\n            const children = Array.from(unionType.getChildren()).map((type) => this.typeMapTypeFor(type, false));\n            return [\"z.union([\", ...(0, collection_utils_1.arrayIntercalate)(\", \", children), \"])\"];\n        }, _transformedStringType => {\n            if (_transformedStringType.kind === \"date-time\") {\n                return \"z.coerce.date()\";\n            }\n            return \"z.string()\";\n        });\n        if (required) {\n            return [match];\n        }\n        return match;\n    }\n    emitObject(name, t) {\n        this.ensureBlankLine();\n        this.emitLine(\"\\nexport const \", name, \"Schema = \", \"z.object({\");\n        this.indent(() => {\n            this.forEachClassProperty(t, \"none\", (_, jsonName, property) => {\n                this.emitLine(`\"${(0, Strings_1.utf16StringEscape)(jsonName)}\"`, \": \", this.typeMapTypeForProperty(property), \",\");\n            });\n        });\n        this.emitLine(\"});\");\n        if (!this._options.justSchema) {\n            this.emitLine(\"export type \", name, \" = z.infer<typeof \", name, \"Schema>;\");\n        }\n    }\n    emitEnum(e, enumName) {\n        this.ensureBlankLine();\n        this.emitDescription(this.descriptionForType(e));\n        this.emitLine(\"\\nexport const \", enumName, \"Schema = \", \"z.enum([\");\n        this.indent(() => this.forEachEnumCase(e, \"none\", (_, jsonName) => {\n            this.emitLine('\"', (0, Strings_1.stringEscape)(jsonName), '\",');\n        }));\n        this.emitLine(\"]);\");\n        if (!this._options.justSchema) {\n            this.emitLine(\"export type \", enumName, \" = z.infer<typeof \", enumName, \"Schema>;\");\n        }\n    }\n    /** Static function that extracts underlying type refs for types that form part of the\n     * definition of the passed type - used to ensure that these appear in generated source\n     * before types that reference them.\n     *\n     * Primitive types don't need defining and enums are output before other types, hence,\n     * these are ignored.\n     */\n    static extractUnderlyingTyperefs(type) {\n        let typeRefs = [];\n        //Ignore enums and primitives\n        if (!type.isPrimitive() && type.kind != \"enum\") {\n            //need to extract constituent types for unions and intersections (which both extend SetOperationType)\n            //and can ignore the union/intersection itself\n            if (type instanceof Type_1.SetOperationType) {\n                type.members.forEach(member => {\n                    //recurse as the underlying type could itself be a union, instersection or array etc.\n                    typeRefs.push(...TypeScriptZodRenderer.extractUnderlyingTyperefs(member));\n                });\n            }\n            //need to extract additional properties for object, class and map types (which all extend ObjectType)\n            if (type instanceof Type_1.ObjectType) {\n                const addType = type.getAdditionalProperties();\n                if (addType) {\n                    //recurse as the underlying type could itself be a union, instersection or array etc.\n                    typeRefs.push(...TypeScriptZodRenderer.extractUnderlyingTyperefs(addType));\n                }\n            }\n            //need to extract items types for ArrayType\n            if (type instanceof Type_1.ArrayType) {\n                const itemsType = type.items;\n                if (itemsType) {\n                    //recurse as the underlying type could itself be a union, instersection or array etc.\n                    typeRefs.push(...TypeScriptZodRenderer.extractUnderlyingTyperefs(itemsType));\n                }\n            }\n            //Finally return the reference to a class as that will need to be defined (where objects, maps, unions, intersections and arrays do not)\n            if (type instanceof Type_1.ClassType) {\n                typeRefs.push(type.typeRef);\n            }\n        }\n        return typeRefs;\n    }\n    emitSchemas() {\n        this.ensureBlankLine();\n        this.forEachEnum(\"leading-and-interposing\", (u, enumName) => {\n            this.emitEnum(u, enumName);\n        });\n        // All children must be defined before this type to avoid forward references in generated code\n        // Build a model that will tell us if a referenced type has been defined then make multiple\n        // passes over the defined objects to put them into the correct order for output in the\n        // generated sourcecode\n        const order = [];\n        const mapType = [];\n        const mapTypeRef = [];\n        const mapName = [];\n        const mapChildTypeRefs = [];\n        this.forEachObject(\"none\", (type, name) => {\n            mapType.push(type);\n            mapTypeRef.push(type.typeRef);\n            mapName.push(name);\n            const children = type.getChildren();\n            let childTypeRefs = [];\n            children.forEach(child => {\n                childTypeRefs = childTypeRefs.concat(TypeScriptZodRenderer.extractUnderlyingTyperefs(child));\n            });\n            mapChildTypeRefs.push(childTypeRefs);\n        });\n        //Items to process on this pass\n        let indices = [];\n        mapType.forEach((_, index) => {\n            indices.push(index);\n        });\n        //items to process on the next pass\n        let deferredIndices = [];\n        //defensive: make sure we don't loop forever, even complex sets shouldn't require many passes\n        const MAX_PASSES = 999;\n        let passNum = 0;\n        do {\n            indices.forEach(index => {\n                // must be behind all these children\n                const childTypeRefs = mapChildTypeRefs[index];\n                let foundAllChildren = true;\n                childTypeRefs.forEach(childRef => {\n                    //defensive: first check if there is a definition for the referenced type (there should be)\n                    if (mapTypeRef.indexOf(childRef) > -1) {\n                        let found = false;\n                        // find this childs's ordinal, if it has already been added\n                        //faster to go through what we've defined so far than all definitions\n                        for (let j = 0; j < order.length; j++) {\n                            const childIndex = order[j];\n                            if (mapTypeRef[childIndex] === childRef) {\n                                found = true;\n                                break;\n                            }\n                        }\n                        foundAllChildren = foundAllChildren && found;\n                    }\n                    else {\n                        console.error(\"A child type reference was not found amongst all Object definitions! TypeRef: \" + childRef);\n                    }\n                });\n                if (foundAllChildren) {\n                    // insert index into order as we are safe to define this type\n                    order.push(index);\n                }\n                else {\n                    //defer to a subsequent pass as we need to define other types\n                    deferredIndices.push(index);\n                }\n            });\n            indices = deferredIndices;\n            deferredIndices = [];\n            passNum++;\n            if (passNum > MAX_PASSES) {\n                //giving up\n                order.push(...deferredIndices);\n                console.warn(\"Exceeded maximum number of passes when determining output order, output may contain forward references\");\n            }\n        } while (indices.length > 0 && passNum <= MAX_PASSES);\n        // now emit ordered source\n        order.forEach(i => this.emitGatheredSource(this.gatherSource(() => this.emitObject(mapName[i], mapType[i]))));\n    }\n    emitSourceStructure() {\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n        }\n        this.emitImports();\n        this.emitSchemas();\n    }\n}\nexports.TypeScriptZodRenderer = TypeScriptZodRenderer;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PhpRenderer = exports.phpNameStyle = exports.stringEscape = exports.PhpTargetLanguage = exports.phpOptions = void 0;\nconst Annotation_1 = require(\"../Annotation\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nconst Naming_1 = require(\"../Naming\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst Source_1 = require(\"../Source\");\nconst Acronyms_1 = require(\"../support/Acronyms\");\nconst Strings_1 = require(\"../support/Strings\");\nconst Support_1 = require(\"../support/Support\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst _ = __importStar(require(\"lodash\"));\nexports.phpOptions = {\n    withGet: new RendererOptions_1.BooleanOption(\"with-get\", \"Create Getter\", true),\n    fastGet: new RendererOptions_1.BooleanOption(\"fast-get\", \"getter without validation\", false),\n    withSet: new RendererOptions_1.BooleanOption(\"with-set\", \"Create Setter\", false),\n    withClosing: new RendererOptions_1.BooleanOption(\"with-closing\", \"PHP Closing Tag\", false),\n    acronymStyle: (0, Acronyms_1.acronymOption)(Acronyms_1.AcronymStyleOptions.Pascal)\n};\nclass PhpTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    constructor() {\n        super(\"PHP\", [\"php\"], \"php\");\n    }\n    getOptions() {\n        return _.values(exports.phpOptions);\n    }\n    get supportsUnionsWithBothNumberTypes() {\n        return true;\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        const options = (0, RendererOptions_1.getOptionValues)(exports.phpOptions, untypedOptionValues);\n        return new PhpRenderer(this, renderContext, options);\n    }\n    get stringTypeMapping() {\n        const mapping = new Map();\n        mapping.set(\"date\", \"date\"); // TODO is not implemented yet\n        mapping.set(\"time\", \"time\"); // TODO is not implemented yet\n        mapping.set(\"uuid\", \"uuid\"); // TODO is not implemented yet\n        mapping.set(\"date-time\", \"date-time\");\n        return mapping;\n    }\n}\nexports.PhpTargetLanguage = PhpTargetLanguage;\nexports.stringEscape = (0, Strings_1.utf16ConcatMap)((0, Strings_1.escapeNonPrintableMapper)(Strings_1.isAscii, Strings_1.standardUnicodeHexEscape));\nfunction isStartCharacter(codePoint) {\n    if (codePoint === 0x5f)\n        return true; // underscore\n    return (0, Strings_1.isAscii)(codePoint) && (0, Strings_1.isLetter)(codePoint);\n}\nfunction isPartCharacter(codePoint) {\n    return isStartCharacter(codePoint) || ((0, Strings_1.isAscii)(codePoint) && (0, Strings_1.isDigit)(codePoint));\n}\nconst legalizeName = (0, Strings_1.utf16LegalizeCharacters)(isPartCharacter);\nfunction phpNameStyle(startWithUpper, upperUnderscore, original, acronymsStyle = Strings_1.allUpperWordStyle) {\n    const words = (0, Strings_1.splitIntoWords)(original);\n    return (0, Strings_1.combineWords)(words, legalizeName, upperUnderscore ? Strings_1.allUpperWordStyle : startWithUpper ? Strings_1.firstUpperWordStyle : Strings_1.allLowerWordStyle, upperUnderscore ? Strings_1.allUpperWordStyle : Strings_1.firstUpperWordStyle, upperUnderscore || startWithUpper ? Strings_1.allUpperWordStyle : Strings_1.allLowerWordStyle, acronymsStyle, upperUnderscore ? \"_\" : \"\", isStartCharacter);\n}\nexports.phpNameStyle = phpNameStyle;\nclass PhpRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _options) {\n        super(targetLanguage, renderContext);\n        this._options = _options;\n        this._gettersAndSettersForPropertyName = new Map();\n        this._haveEmittedLeadingComments = false;\n        this._converterClassname = \"Converter\";\n        this._converterKeywords = [];\n    }\n    forbiddenForObjectProperties(_c, _className) {\n        return { names: [], includeGlobalForbidden: true };\n    }\n    makeNamedTypeNamer() {\n        return this.getNameStyling(\"typeNamingFunction\");\n    }\n    namerForObjectProperty() {\n        return this.getNameStyling(\"propertyNamingFunction\");\n    }\n    makeUnionMemberNamer() {\n        return this.getNameStyling(\"propertyNamingFunction\");\n    }\n    makeEnumCaseNamer() {\n        return this.getNameStyling(\"enumCaseNamingFunction\");\n    }\n    unionNeedsName(u) {\n        return (0, TypeUtils_1.nullableFromUnion)(u) === null;\n    }\n    namedTypeToNameForTopLevel(type) {\n        return (0, TypeUtils_1.directlyReachableSingleNamedType)(type);\n    }\n    makeNamesForPropertyGetterAndSetter(_c, _className, _p, _jsonName, name) {\n        const getterName = new Naming_1.DependencyName(this.getNameStyling(\"propertyNamingFunction\"), name.order, lookup => `get_${lookup(name)}`);\n        const setterName = new Naming_1.DependencyName(this.getNameStyling(\"propertyNamingFunction\"), name.order, lookup => `set_${lookup(name)}`);\n        const validateName = new Naming_1.DependencyName(this.getNameStyling(\"propertyNamingFunction\"), name.order, lookup => `validate_${lookup(name)}`);\n        const fromName = new Naming_1.DependencyName(this.getNameStyling(\"propertyNamingFunction\"), name.order, lookup => `from_${lookup(name)}`);\n        const toName = new Naming_1.DependencyName(this.getNameStyling(\"propertyNamingFunction\"), name.order, lookup => `to_${lookup(name)}`);\n        const sampleName = new Naming_1.DependencyName(this.getNameStyling(\"propertyNamingFunction\"), name.order, lookup => `sample_${lookup(name)}`);\n        return {\n            getter: getterName,\n            setter: setterName,\n            validate: validateName,\n            from: fromName,\n            to: toName,\n            sample: sampleName\n        };\n    }\n    makePropertyDependencyNames(c, className, p, jsonName, name) {\n        const getterAndSetterNames = this.makeNamesForPropertyGetterAndSetter(c, className, p, jsonName, name);\n        this._gettersAndSettersForPropertyName.set(name, getterAndSetterNames);\n        return [\n            getterAndSetterNames.getter,\n            getterAndSetterNames.setter,\n            getterAndSetterNames.validate,\n            getterAndSetterNames.to,\n            getterAndSetterNames.from,\n            getterAndSetterNames.sample\n        ];\n    }\n    getNameStyling(convention) {\n        const styling = {\n            typeNamingFunction: (0, Naming_1.funPrefixNamer)(\"types\", n => phpNameStyle(true, false, n, (0, Acronyms_1.acronymStyle)(this._options.acronymStyle))),\n            propertyNamingFunction: (0, Naming_1.funPrefixNamer)(\"properties\", n => phpNameStyle(false, false, n, (0, Acronyms_1.acronymStyle)(this._options.acronymStyle))),\n            enumCaseNamingFunction: (0, Naming_1.funPrefixNamer)(\"enum-cases\", n => phpNameStyle(true, true, n, (0, Acronyms_1.acronymStyle)(this._options.acronymStyle)))\n        };\n        return styling[convention];\n    }\n    startFile(_basename) {\n        this.ensureBlankLine();\n        if (!this._haveEmittedLeadingComments && this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n            this.ensureBlankLine();\n            this._haveEmittedLeadingComments = true;\n        }\n    }\n    finishFile() {\n        // empty\n    }\n    emitFileHeader(fileName, _imports) {\n        this.startFile(fileName);\n        this.emitLine(\"// This is a autogenerated file:\", fileName);\n        this.ensureBlankLine();\n    }\n    emitDescriptionBlock(lines) {\n        this.emitCommentLines(lines, { lineStart: \" * \", beforeComment: \"/**\", afterComment: \" */\" });\n    }\n    emitBlock(line, f) {\n        this.emitLine(line, \" {\");\n        this.indent(f);\n        this.emitLine(\"}\");\n    }\n    phpType(_reference, t, isOptional = false, prefix = \"?\", suffix = \"\") {\n        function optionalize(s) {\n            return [isOptional ? prefix : \"\", s, isOptional ? suffix : \"\"];\n        }\n        return (0, TypeUtils_1.matchType)(t, _anyType => (0, Source_1.maybeAnnotated)(isOptional, Annotation_1.anyTypeIssueAnnotation, \"Object\"), _nullType => (0, Source_1.maybeAnnotated)(isOptional, Annotation_1.nullTypeIssueAnnotation, \"Object\"), _boolType => optionalize(\"bool\"), _integerType => optionalize(\"int\"), _doubleType => optionalize(\"float\"), _stringType => optionalize(\"string\"), _arrayType => optionalize(\"array\"), classType => optionalize(this.nameForNamedType(classType)), _mapType => optionalize(\"stdClass\"), enumType => optionalize(this.nameForNamedType(enumType)), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null)\n                return this.phpType(true, nullable, true, prefix, suffix);\n            return this.nameForNamedType(unionType);\n        }, transformedStringType => {\n            if (transformedStringType.kind === \"time\") {\n                throw Error('transformedStringType.kind === \"time\"');\n            }\n            if (transformedStringType.kind === \"date\") {\n                throw Error('transformedStringType.kind === \"date\"');\n            }\n            if (transformedStringType.kind === \"date-time\") {\n                return \"DateTime\";\n            }\n            if (transformedStringType.kind === \"uuid\") {\n                throw Error('transformedStringType.kind === \"uuid\"');\n            }\n            return \"string\";\n        });\n    }\n    phpDocConvertType(className, t) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => \"any\", _nullType => \"null\", _boolType => \"bool\", _integerType => \"int\", _doubleType => \"float\", _stringType => \"string\", arrayType => [this.phpDocConvertType(className, arrayType.items), \"[]\"], _classType => _classType.getCombinedName(), _mapType => \"stdClass\", enumType => this.nameForNamedType(enumType), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                return [this.phpDocConvertType(className, nullable), \"|null\"];\n            }\n            throw Error(\"union are not supported\");\n        }, transformedStringType => {\n            if (transformedStringType.kind === \"date-time\") {\n                return \"DateTime\";\n            }\n            throw Error('transformedStringType.kind === \"unknown\"');\n        });\n    }\n    phpConvertType(className, t) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => \"any\", _nullType => \"null\", _boolType => \"bool\", _integerType => \"int\", _doubleType => \"float\", _stringType => \"string\", _arrayType => \"array\", _classType => \"stdClass\", _mapType => \"stdClass\", _enumType => \"string\", // TODO number this.nameForNamedType(enumType),\n        // TODO number this.nameForNamedType(enumType),\n        unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                return [\"?\", this.phpConvertType(className, nullable)];\n            }\n            throw Error(\"union are not supported\");\n        }, transformedStringType => {\n            if (transformedStringType.kind === \"date-time\") {\n                return \"string\";\n            }\n            throw Error('transformedStringType.kind === \"unknown\"');\n        });\n    }\n    phpToObjConvert(className, t, lhs, args) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => this.emitLine(...lhs, ...args, \"; /*any*/\"), _nullType => this.emitLine(...lhs, ...args, \"; /*null*/\"), _boolType => this.emitLine(...lhs, ...args, \"; /*bool*/\"), _integerType => this.emitLine(...lhs, ...args, \"; /*int*/\"), _doubleType => this.emitLine(...lhs, ...args, \"; /*float*/\"), _stringType => this.emitLine(...lhs, ...args, \"; /*string*/\"), arrayType => {\n            this.emitLine(...lhs, \"array_map(function ($value) {\");\n            this.indent(() => {\n                this.phpToObjConvert(className, arrayType.items, [\"return \"], [\"$value\"]);\n                // this.emitLine(\"return $tmp;\");\n            });\n            this.emitLine(\"}, \", ...args, \");\");\n        }, _classType => this.emitLine(...lhs, ...args, \"->to(); \", \"/*class*/\"), mapType => {\n            this.emitBlock([\"function to($my): stdClass\"], () => {\n                this.emitLine(\"$out = new stdClass();\");\n                this.emitBlock([\"foreach ($my as $k => $v)\"], () => {\n                    this.phpToObjConvert(className, mapType.values, [\"$my->$k = \"], [\"$v\"]);\n                });\n                this.emitLine(\"return $out;\");\n            });\n            this.emitLine(\"return to(\", ...args, \");\");\n        }, enumType => this.emitLine(...lhs, this.nameForNamedType(enumType), \"::to(\", ...args, \"); \", \"/*enum*/\"), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                this.emitLine(\"if (!is_null(\", ...args, \")) {\");\n                this.indent(() => this.phpToObjConvert(className, nullable, lhs, args));\n                this.emitLine(\"} else {\");\n                this.indent(() => this.emitLine(...lhs, \" null;\"));\n                this.emitLine(\"}\");\n                return;\n            }\n            throw Error(\"union are not supported\");\n        }, transformedStringType => {\n            if (transformedStringType.kind === \"date-time\") {\n                this.emitLine(...lhs, ...args, \"->format(DateTimeInterface::ISO8601);\");\n                return;\n            }\n            throw Error('transformedStringType.kind === \"unknown\"');\n        });\n    }\n    transformDateTime(className, attrName, scopeAttrName) {\n        this.emitBlock([\"if (!is_a(\", scopeAttrName, \", 'DateTime'))\"], () => this.emitLine(\"throw new Exception('Attribute Error:\", className, \"::\", attrName, \"');\"));\n        // if (lhs !== undefined) {\n        //     this.emitLine(lhs, \"$tmp;\");\n        // }\n    }\n    phpFromObjConvert(className, t, lhs, args) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => this.emitLine(...lhs, ...args, \"; /*any*/\"), _nullType => this.emitLine(...lhs, ...args, \"; /*null*/\"), _boolType => this.emitLine(...lhs, ...args, \"; /*bool*/\"), _integerType => this.emitLine(...lhs, ...args, \"; /*int*/\"), _doubleType => this.emitLine(...lhs, ...args, \"; /*float*/\"), _stringType => this.emitLine(...lhs, ...args, \"; /*string*/\"), arrayType => {\n            this.emitLine(...lhs, \" array_map(function ($value) {\");\n            this.indent(() => {\n                this.phpFromObjConvert(className, arrayType.items, [\"return \"], [\"$value\"]);\n                // this.emitLine(\"return $tmp;\");\n            });\n            this.emitLine(\"}, \", ...args, \");\");\n        }, classType => this.emitLine(...lhs, this.nameForNamedType(classType), \"::from(\", ...args, \"); \", \"/*class*/\"), mapType => {\n            this.emitBlock([\"function from($my): stdClass\"], () => {\n                this.emitLine(\"$out = new stdClass();\");\n                this.emitBlock([\"foreach ($my as $k => $v)\"], () => {\n                    this.phpFromObjConvert(className, mapType.values, [\"$out->$k = \"], [\"$v\"]);\n                });\n                this.emitLine(\"return $out;\");\n            });\n            this.emitLine(\"return from(\", ...args, \");\");\n        }, enumType => this.emitLine(...lhs, this.nameForNamedType(enumType), \"::from(\", ...args, \"); \", \"/*enum*/\"), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                this.emitLine(\"if (!is_null(\", ...args, \")) {\");\n                this.indent(() => this.phpFromObjConvert(className, nullable, lhs, args));\n                this.emitLine(\"} else {\");\n                this.indent(() => this.emitLine(\"return null;\"));\n                this.emitLine(\"}\");\n                return;\n            }\n            throw Error(\"union are not supported\");\n        }, transformedStringType => {\n            if (transformedStringType.kind === \"date-time\") {\n                this.emitLine(\"$tmp = \", \"DateTime::createFromFormat(DateTimeInterface::ISO8601, \", args, \");\");\n                this.transformDateTime(className, \"\", [\"$tmp\"]);\n                this.emitLine(\"return $tmp;\");\n                return;\n            }\n            throw Error('transformedStringType.kind === \"unknown\"');\n        });\n    }\n    phpSampleConvert(className, t, lhs, args, idx, suffix) {\n        return (0, TypeUtils_1.matchType)(t, _anyType => this.emitLine(...lhs, \"'AnyType::\", className, \"::\", args, \"::\" + idx, \"'\", suffix, \"/*\", \"\" + idx, \":\", args, \"*/\"), _nullType => this.emitLine(...lhs, \"null\", suffix, \" /*\", \"\" + idx, \":\", args, \"*/\"), _boolType => this.emitLine(...lhs, \"true\", suffix, \" /*\", \"\" + idx, \":\", args, \"*/\"), _integerType => this.emitLine(...lhs, \"\" + idx, suffix, \" /*\", \"\" + idx, \":\", args, \"*/\"), _doubleType => this.emitLine(...lhs, \"\" + (idx + idx / 1000), suffix, \" /*\", \"\" + idx, \":\", args, \"*/\"), _stringType => this.emitLine(...lhs, \"'\", className, \"::\", args, \"::\" + idx, \"'\", suffix, \" /*\", \"\" + idx, \":\", args, \"*/\"), arrayType => {\n            this.emitLine(...lhs, \" array(\");\n            this.indent(() => {\n                this.phpSampleConvert(className, arrayType.items, [], [], idx, \"\");\n            });\n            this.emitLine(\"); /* \", \"\" + idx, \":\", args, \"*/\");\n        }, classType => this.emitLine(...lhs, this.nameForNamedType(classType), \"::sample()\", suffix, \" /*\", \"\" + idx, \":\", args, \"*/\"), mapType => {\n            this.emitBlock([\"function sample(): stdClass\"], () => {\n                this.emitLine(\"$out = new stdClass();\");\n                this.phpSampleConvert(className, mapType.values, [\"$out->{'\", className, \"'} = \"], args, idx, \";\");\n                this.emitLine(\"return $out;\");\n            });\n            this.emitLine(\"return sample();\");\n        }, enumType => this.emitLine(...lhs, this.nameForNamedType(enumType), \"::sample()\", suffix, \" /*enum*/\"), unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                this.phpSampleConvert(className, nullable, lhs, args, idx, suffix);\n                return;\n            }\n            throw Error(\"union are not supported:\" + unionType);\n        }, transformedStringType => {\n            if (transformedStringType.kind === \"date-time\") {\n                const x = _.pad(\"\" + (1 + (idx % 31)), 2, \"0\");\n                this.emitLine(...lhs, \"DateTime::createFromFormat(DateTimeInterface::ISO8601, '\", `2020-12-${x}T12:${x}:${x}+00:00`, \"')\", suffix);\n                // this.emitLine(\"return sample();\");\n                return;\n            }\n            throw Error('transformedStringType.kind === \"unknown\"');\n        });\n    }\n    phpValidate(className, t, attrName, scopeAttrName) {\n        const is = (isfn, myT = className) => {\n            this.emitBlock([\"if (!\", isfn, \"(\", scopeAttrName, \"))\"], () => this.emitLine('throw new Exception(\"Attribute Error:', myT, \"::\", attrName, '\");'));\n        };\n        return (0, TypeUtils_1.matchType)(t, _anyType => is(\"defined\"), _nullType => is(\"is_null\"), _boolType => is(\"is_bool\"), _integerType => is(\"is_integer\"), _doubleType => is(\"is_float\"), _stringType => is(\"is_string\"), arrayType => {\n            is(\"is_array\");\n            this.emitLine(\"array_walk(\", scopeAttrName, \", function(\", scopeAttrName, \"_v) {\");\n            this.indent(() => {\n                this.phpValidate(className, arrayType.items, attrName, `${scopeAttrName}_v`);\n            });\n            this.emitLine(\"});\");\n        }, _classType => {\n            this.emitLine(scopeAttrName, \"->validate();\");\n        }, mapType => {\n            this.emitLine(\"foreach (\", scopeAttrName, \" as $k => $v) {\");\n            this.indent(() => {\n                this.phpValidate(className, mapType.values, attrName, \"$v\");\n            });\n            this.emitLine(\"}\");\n        }, enumType => {\n            this.emitLine(this.phpType(false, enumType), \"::to(\", scopeAttrName, \");\");\n        }, unionType => {\n            const nullable = (0, TypeUtils_1.nullableFromUnion)(unionType);\n            if (nullable !== null) {\n                this.emitBlock([\"if (!is_null(\", scopeAttrName, \"))\"], () => {\n                    this.phpValidate(className, nullable, attrName, scopeAttrName);\n                });\n                return;\n            }\n            throw Error(\"not implemented\");\n        }, transformedStringType => {\n            if (transformedStringType.kind === \"date-time\") {\n                this.transformDateTime(className, attrName, [scopeAttrName]);\n                return;\n            }\n            throw Error(`transformedStringType.kind === ${transformedStringType.kind}`);\n        });\n    }\n    emitFromMethod(names, p, className, _name, desc) {\n        this.emitLine(\"/**\");\n        if (desc !== undefined) {\n            this.emitLine(\" * \", desc);\n            this.emitLine(\" *\");\n        }\n        // this.emitLine(\" * @param \", this.phpType(false, p.type, false, \"\", \"|null\"));\n        this.emitLine(\" * @param \", this.phpConvertType(className, p.type), \" $value\");\n        this.emitLine(\" * @throws Exception\");\n        this.emitLine(\" * @return \", this.phpType(false, p.type));\n        this.emitLine(\" */\");\n        this.emitBlock([\n            \"public static function \",\n            names.from,\n            \"(\",\n            this.phpConvertType(className, p.type),\n            \" $value): \",\n            this.phpType(false, p.type)\n        ], () => {\n            this.phpFromObjConvert(className, p.type, [\"return \"], [`$value`]);\n            // this.emitLine(\"return $ret;\");\n        });\n    }\n    emitToMethod(names, p, className, name, desc) {\n        this.emitLine(\"/**\");\n        if (desc !== undefined) {\n            this.emitLine(\" * \", desc);\n            this.emitLine(\" *\");\n        }\n        this.emitLine(\" * @throws Exception\");\n        this.emitLine(\" * @return \", this.phpConvertType(className, p.type));\n        this.emitLine(\" */\");\n        this.emitBlock([\"public function \", names.to, \"(): \", this.phpConvertType(className, p.type)], () => {\n            this.emitBlock([\"if (\", className, \"::\", names.validate, \"($this->\", name, \")) \"], () => {\n                this.phpToObjConvert(className, p.type, [\"return \"], [\"$this->\", name]);\n            });\n            this.emitLine(\"throw new Exception('never get to this \", className, \"::\", name, \"');\");\n        });\n    }\n    emitValidateMethod(names, p, className, name, desc) {\n        this.emitLine(\"/**\");\n        if (desc !== undefined) {\n            this.emitLine(\" * \", desc);\n            this.emitLine(\" *\");\n        }\n        this.emitLine(\" * @param \", this.phpType(false, p.type, false, \"\", \"|null\"));\n        this.emitLine(\" * @return bool\");\n        this.emitLine(\" * @throws Exception\");\n        this.emitLine(\" */\");\n        this.emitBlock([\"public static function \", names.validate, \"(\", this.phpType(false, p.type), \" $value): bool\"], () => {\n            this.phpValidate(className, p.type, name, `$value`);\n            this.emitLine(\"return true;\");\n        });\n    }\n    emitGetMethod(names, p, className, name, desc) {\n        if (this._options.withGet) {\n            this.emitLine(\"/**\");\n            if (desc !== undefined) {\n                this.emitLine(\" * \", desc);\n                this.emitLine(\" *\");\n            }\n            if (!this._options.fastGet) {\n                this.emitLine(` * @throws Exception`);\n            }\n            const rendered = this.phpType(false, p.type);\n            this.emitLine(\" * @return \", rendered);\n            this.emitLine(\" */\");\n            this.emitBlock([\"public function \", names.getter, \"(): \", rendered], () => {\n                if (!this._options.fastGet) {\n                    this.emitBlock([\"if (\", className, \"::\", names.validate, \"($this->\", name, \")) \"], () => {\n                        this.emitLine(\"return $this->\", name, \";\");\n                    });\n                    this.emitLine(\"throw new Exception('never get to \", names.getter, \" \", className, \"::\", name, \"');\");\n                }\n                else {\n                    this.emitLine(\"return $this->\", name, \";\");\n                }\n            });\n        }\n    }\n    emitSetMethod(names, p, className, name, desc) {\n        if (this._options.withSet) {\n            this.emitLine(\"/**\");\n            if (desc !== undefined) {\n                this.emitLine(\" * \", desc);\n                this.emitLine(\" *\");\n            }\n            this.emitLine(\" * @param \", this.phpType(false, p.type, false, \"\", \"|null\"));\n            this.emitLine(` * @throws Exception`);\n            this.emitLine(\" */\");\n            this.emitBlock([\"public function \", names.setter, \"(\", this.phpType(false, p.type), \" $value)\"], () => {\n                this.emitBlock([\"if (\", className, \"::\", names.validate, \"($value)) \"], () => {\n                    this.emitLine(\"$this->\", name, \" = $value;\");\n                });\n            });\n        }\n    }\n    emitSampleMethod(names, p, className, name, desc, idx) {\n        if (this._options.withGet) {\n            this.emitLine(\"/**\");\n            if (desc !== undefined) {\n                this.emitLine(\" * \", desc);\n                this.emitLine(\" *\");\n            }\n            const rendered = this.phpType(false, p.type);\n            this.emitLine(\" * @return \", rendered);\n            this.emitLine(\" */\");\n            this.emitBlock([\"public static function \", names.sample, \"(): \", rendered], () => {\n                this.phpSampleConvert(className, p.type, [\"return \"], [name], idx, \";\");\n            });\n        }\n    }\n    emitClassDefinition(c, className) {\n        this.emitFileHeader(className, []);\n        this.emitBlock([\"class \", className], () => {\n            this.forEachClassProperty(c, \"none\", (name, jsonName, p) => {\n                this.emitLine(\"private \", this.phpType(false, p.type), \" $\", name, \"; // json:\", jsonName, \" \", p.type.isNullable ? \"Optional\" : \"Required\");\n            });\n            this.ensureBlankLine();\n            const comments = [];\n            const args = [];\n            let prefix = \"\";\n            this.forEachClassProperty(c, \"none\", (name, __, p) => {\n                args.push([prefix, this.phpType(false, p.type), \" $\", name]);\n                prefix = \", \";\n                comments.push([\" * @param \", this.phpType(false, p.type, false, \"\", \"|null\"), \" $\", name, \"\\n\"]);\n            });\n            this.emitBlock([\"/**\\n\", ...comments, \" */\\n\", \"public function __construct(\", ...args, \")\"], () => {\n                this.forEachClassProperty(c, \"none\", name => {\n                    this.emitLine(\"$this->\", name, \" = $\", name, \";\");\n                });\n            });\n            let idx = 31;\n            this.forEachClassProperty(c, \"leading-and-interposing\", (name, jsonName, p) => {\n                const desc = this.descriptionForClassProperty(c, jsonName);\n                const names = (0, Support_1.defined)(this._gettersAndSettersForPropertyName.get(name));\n                this.ensureBlankLine();\n                this.emitFromMethod(names, p, className, name, desc);\n                this.ensureBlankLine();\n                this.emitToMethod(names, p, className, name, desc);\n                this.ensureBlankLine();\n                this.emitValidateMethod(names, p, className, name, desc);\n                this.ensureBlankLine();\n                this.emitGetMethod(names, p, className, name, desc);\n                this.ensureBlankLine();\n                this.emitSetMethod(names, p, className, name, desc);\n                this.ensureBlankLine();\n                this.emitSampleMethod(names, p, className, name, desc, idx++);\n            });\n            this.ensureBlankLine();\n            this.emitBlock([\"/**\\n\", ` * @throws Exception\\n`, ` * @return bool\\n`, \" */\\n\", \"public function validate(): bool\"], () => {\n                let lines = [];\n                let p = \"return \";\n                this.forEachClassProperty(c, \"none\", (name, _jsonName, _p) => {\n                    const names = (0, Support_1.defined)(this._gettersAndSettersForPropertyName.get(name));\n                    lines.push([p, className, \"::\", names.validate, \"($this->\", name, \")\"]);\n                    p = \"|| \";\n                });\n                lines.forEach((line, jdx) => {\n                    this.emitLine(...line, lines.length === jdx + 1 ? \";\" : \"\");\n                });\n            });\n            this.ensureBlankLine();\n            this.emitBlock([\n                \"/**\\n\",\n                ` * @return stdClass\\n`,\n                ` * @throws Exception\\n`,\n                \" */\\n\",\n                \"public function to(): stdClass \"\n            ], () => {\n                this.emitLine(\"$out = new stdClass();\");\n                this.forEachClassProperty(c, \"none\", (name, jsonName) => {\n                    const names = (0, Support_1.defined)(this._gettersAndSettersForPropertyName.get(name));\n                    this.emitLine(\"$out->{'\", jsonName, \"'} = $this->\", names.to, \"();\");\n                });\n                this.emitLine(\"return $out;\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock([\n                \"/**\\n\",\n                ` * @param stdClass $obj\\n`,\n                ` * @return `,\n                className,\n                `\\n`,\n                ` * @throws Exception\\n`,\n                \" */\\n\",\n                \"public static function from(stdClass $obj): \",\n                className\n            ], () => {\n                if (this._options.fastGet) {\n                    this.forEachClassProperty(c, \"none\", name => {\n                        const names = (0, Support_1.defined)(this._gettersAndSettersForPropertyName.get(name));\n                        this.emitLine(className, \"::\", names.validate, \"($this->\", name, \", true);\");\n                    });\n                }\n                this.emitLine(\"return new \", className, \"(\");\n                let comma = \" \";\n                this.forEachClassProperty(c, \"none\", (name, jsonName) => {\n                    const names = (0, Support_1.defined)(this._gettersAndSettersForPropertyName.get(name));\n                    this.emitLine(comma, className, \"::\", names.from, \"($obj->{'\", jsonName, \"'})\");\n                    comma = \",\";\n                });\n                this.emitLine(\");\");\n            });\n            this.ensureBlankLine();\n            this.emitBlock([\"/**\\n\", \" * @return \", className, \"\\n\", \" */\\n\", \"public static function sample(): \", className], () => {\n                this.emitLine(\"return new \", className, \"(\");\n                let comma = \" \";\n                this.forEachClassProperty(c, \"none\", name => {\n                    const names = (0, Support_1.defined)(this._gettersAndSettersForPropertyName.get(name));\n                    this.emitLine(comma, className, \"::\", names.sample, \"()\");\n                    comma = \",\";\n                });\n                this.emitLine(\");\");\n            });\n        });\n        this.finishFile();\n    }\n    emitUnionAttributes(_u, _unionName) {\n        // empty\n    }\n    emitUnionSerializer(_u, _unionName) {\n        // empty\n    }\n    emitUnionDefinition(_u, _unionName) {\n        throw Error(\"emitUnionDefinition not implemented\");\n    }\n    emitEnumSerializationAttributes(_e) {\n        // Empty\n    }\n    emitEnumDeserializationAttributes(_e) {\n        // Empty\n    }\n    emitEnumDefinition(e, enumName) {\n        this.emitFileHeader(enumName, []);\n        this.emitDescription(this.descriptionForType(e));\n        const caseNames = [];\n        caseNames.push(\";\");\n        const enumSerdeType = \"string\";\n        this.emitBlock([\"class \", enumName], () => {\n            this.forEachEnumCase(e, \"none\", (name, _jsonName) => {\n                this.emitLine(\"public static \", enumName, \" $\", name, \";\");\n            });\n            this.emitBlock(\"public static function init()\", () => {\n                this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n                    this.emitLine(enumName, \"::$\", name, \" = new \", enumName, \"('\", jsonName, \"');\");\n                });\n            });\n            this.emitLine(\"private \", enumSerdeType, \" $enum;\");\n            this.emitBlock([\"public function __construct(\", enumSerdeType, \" $enum)\"], () => {\n                this.emitLine(\"$this->enum = $enum;\");\n            });\n            this.ensureBlankLine();\n            this.emitEnumSerializationAttributes(e);\n            this.emitBlock([\n                \"/**\\n\",\n                ` * @param `,\n                enumName,\n                `\\n`,\n                ` * @return `,\n                enumSerdeType,\n                `\\n`,\n                ` * @throws Exception\\n`,\n                \" */\\n\",\n                \"public static function to(\",\n                enumName,\n                \" $obj): \",\n                enumSerdeType\n            ], () => {\n                this.emitLine(\"switch ($obj->enum) {\");\n                this.indent(() => {\n                    this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n                        // Todo String or Number\n                        this.emitLine(\"case \", enumName, \"::$\", name, \"->enum: return '\", (0, exports.stringEscape)(jsonName), \"';\");\n                    });\n                });\n                this.emitLine(\"}\");\n                this.emitLine(\"throw new Exception('the give value is not an enum-value.');\");\n            });\n            this.ensureBlankLine();\n            this.emitEnumDeserializationAttributes(e);\n            this.emitBlock([\n                \"/**\\n\",\n                ` * @param mixed\\n`,\n                ` * @return `,\n                enumName,\n                \"\\n\",\n                ` * @throws Exception\\n`,\n                \" */\\n\",\n                \"public static function from($obj): \",\n                enumName\n            ], () => {\n                this.emitLine(\"switch ($obj) {\");\n                this.indent(() => {\n                    this.forEachEnumCase(e, \"none\", (name, jsonName) => {\n                        // Todo String or Enum\n                        this.emitLine(\"case '\", (0, exports.stringEscape)(jsonName), \"': return \", enumName, \"::$\", name, \";\");\n                    });\n                });\n                this.emitLine(\"}\");\n                this.emitLine('throw new Exception(\"Cannot deserialize ', enumName, '\");');\n            });\n            this.ensureBlankLine();\n            this.emitBlock([\"/**\\n\", ` * @return `, enumName, \"\\n\", \" */\\n\", \"public static function sample(): \", enumName], () => {\n                const lines = [];\n                this.forEachEnumCase(e, \"none\", name => {\n                    lines.push([enumName, \"::$\", name]);\n                });\n                this.emitLine(\"return \", lines[0], \";\");\n            });\n        });\n        this.emitLine(enumName, \"::init();\");\n        this.finishFile();\n    }\n    emitSourceStructure(givenFilename) {\n        this.emitLine(\"<?php\");\n        this.forEachNamedType(\"leading-and-interposing\", (c, n) => this.emitClassDefinition(c, n), (e, n) => this.emitEnumDefinition(e, n), (u, n) => this.emitUnionDefinition(u, n));\n        if (this._options.withClosing) {\n            this.emitLine(\"?>\");\n        }\n        super.finishFile((0, Support_1.defined)(givenFilename));\n    }\n}\nexports.PhpRenderer = PhpRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeScriptEffectSchemaRenderer = exports.TypeScriptEffectSchemaTargetLanguage = exports.typeScriptEffectSchemaOptions = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Naming_1 = require(\"../Naming\");\nconst RendererOptions_1 = require(\"../RendererOptions\");\nconst Acronyms_1 = require(\"../support/Acronyms\");\nconst Strings_1 = require(\"../support/Strings\");\nconst TargetLanguage_1 = require(\"../TargetLanguage\");\nconst JavaScript_1 = require(\"./JavaScript\");\nconst Support_1 = require(\"../support/Support\");\nconst ConvenienceRenderer_1 = require(\"../ConvenienceRenderer\");\nexports.typeScriptEffectSchemaOptions = {\n    justSchema: new RendererOptions_1.BooleanOption(\"just-schema\", \"Schema only\", false)\n};\nclass TypeScriptEffectSchemaTargetLanguage extends TargetLanguage_1.TargetLanguage {\n    getOptions() {\n        return [];\n    }\n    constructor(displayName = \"TypeScript Effect Schema\", names = [\"typescript-effect-schema\"], extension = \"ts\") {\n        super(displayName, names, extension);\n    }\n    makeRenderer(renderContext, untypedOptionValues) {\n        return new TypeScriptEffectSchemaRenderer(this, renderContext, (0, RendererOptions_1.getOptionValues)(exports.typeScriptEffectSchemaOptions, untypedOptionValues));\n    }\n}\nexports.TypeScriptEffectSchemaTargetLanguage = TypeScriptEffectSchemaTargetLanguage;\nclass TypeScriptEffectSchemaRenderer extends ConvenienceRenderer_1.ConvenienceRenderer {\n    constructor(targetLanguage, renderContext, _options) {\n        super(targetLanguage, renderContext);\n        this._options = _options;\n    }\n    forbiddenNamesForGlobalNamespace() {\n        return [\"Class\", \"Date\", \"Object\", \"String\", \"Array\", \"JSON\", \"Error\"];\n    }\n    nameStyle(original, upper) {\n        const acronyms = (0, Acronyms_1.acronymStyle)(Acronyms_1.AcronymStyleOptions.Camel);\n        const words = (0, Strings_1.splitIntoWords)(original);\n        return (0, Strings_1.combineWords)(words, JavaScript_1.legalizeName, upper ? Strings_1.firstUpperWordStyle : Strings_1.allLowerWordStyle, Strings_1.firstUpperWordStyle, upper ? s => (0, Strings_1.capitalize)(acronyms(s)) : Strings_1.allLowerWordStyle, acronyms, \"\", Strings_1.isLetterOrUnderscore);\n    }\n    makeNamedTypeNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"types\", s => this.nameStyle(s, true));\n    }\n    makeUnionMemberNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"properties\", s => this.nameStyle(s, true));\n    }\n    namerForObjectProperty() {\n        return (0, Naming_1.funPrefixNamer)(\"properties\", s => this.nameStyle(s, true));\n    }\n    makeEnumCaseNamer() {\n        return (0, Naming_1.funPrefixNamer)(\"enum-cases\", s => this.nameStyle(s, false));\n    }\n    importStatement(lhs, moduleName) {\n        return [\"import \", lhs, \" from \", moduleName, \";\"];\n    }\n    emitImports() {\n        this.ensureBlankLine();\n        this.emitLine(this.importStatement(\"* as S\", '\"@effect/schema/Schema\"'));\n    }\n    typeMapTypeForProperty(p) {\n        const typeMap = this.typeMapTypeFor(p.type);\n        return p.isOptional ? [\"S.optional(\", typeMap, \")\"] : typeMap;\n    }\n    typeMapTypeFor(t, required = true) {\n        if ([\"class\", \"object\", \"enum\"].indexOf(t.kind) >= 0) {\n            return [\"S.lazy(() => \", this.nameForNamedType(t), \")\"];\n        }\n        const match = (0, TypeUtils_1.matchType)(t, _anyType => \"S.any\", _nullType => \"S.null\", _boolType => \"S.boolean\", _integerType => \"S.number\", _doubleType => \"S.number\", _stringType => \"S.string\", arrayType => [\"S.array(\", this.typeMapTypeFor(arrayType.items, false), \")\"], _classType => (0, Support_1.panic)(\"Should already be handled.\"), _mapType => [\"S.record(S.string, \", this.typeMapTypeFor(_mapType.values, false), \")\"], _enumType => (0, Support_1.panic)(\"Should already be handled.\"), unionType => {\n            const children = Array.from(unionType.getChildren()).map((type) => this.typeMapTypeFor(type, false));\n            return [\"S.union(\", ...(0, collection_utils_1.arrayIntercalate)(\", \", children), \")\"];\n        }, _transformedStringType => {\n            return \"S.string\";\n        });\n        if (required) {\n            return [match];\n        }\n        return match;\n    }\n    emitObject(name, t) {\n        this.ensureBlankLine();\n        if (this._options.justSchema) {\n            this.emitLine(\"\\nexport const \", name, \" = S.struct({\");\n        }\n        else {\n            this.emitLine(\"\\nconst \", name, \"_ = S.struct({\");\n        }\n        this.indent(() => {\n            this.forEachClassProperty(t, \"none\", (_, jsonName, property) => {\n                this.emitLine(`\"${(0, Strings_1.utf16StringEscape)(jsonName)}\"`, \": \", this.typeMapTypeForProperty(property), \",\");\n            });\n        });\n        this.emitLine(\"});\");\n        if (!this._options.justSchema) {\n            this.emitLine(\"export interface \", name, \" extends S.Schema.To<typeof \", name, \"_> {}\");\n            this.emitLine(\"export const \", name, \": S.Schema<S.Schema.From<typeof \", name, \"_>, \", name, \"> = \", name, \"_;\");\n        }\n    }\n    emitEnum(e, enumName) {\n        this.ensureBlankLine();\n        this.emitDescription(this.descriptionForType(e));\n        this.emitLine(\"\\nexport const \", enumName, \" = \", \"S.enums({\");\n        this.indent(() => this.forEachEnumCase(e, \"none\", (_, jsonName) => {\n            const name = (0, Strings_1.stringEscape)(jsonName);\n            this.emitLine('\"', name, '\": \"', name, '\",');\n        }));\n        this.emitLine(\"});\");\n        if (!this._options.justSchema) {\n            this.emitLine(\"export type \", enumName, \" = S.Schema.To<typeof \", enumName, \">;\");\n        }\n    }\n    emitSchemas() {\n        this.ensureBlankLine();\n        this.forEachEnum(\"leading-and-interposing\", (u, enumName) => {\n            this.emitEnum(u, enumName);\n        });\n        const order = [];\n        const mapKey = [];\n        const mapValue = [];\n        this.forEachObject(\"none\", (type, name) => {\n            mapKey.push(name);\n            mapValue.push(this.gatherSource(() => this.emitObject(name, type)));\n        });\n        mapKey.forEach((_, index) => {\n            // assume first\n            let ordinal = 0;\n            // pull out all names\n            const source = mapValue[index];\n            const names = source.filter(value => value);\n            // must be behind all these names\n            for (let i = 0; i < names.length; i++) {\n                const depName = names[i];\n                // find this name's ordinal, if it has already been added\n                for (let j = 0; j < order.length; j++) {\n                    const depIndex = order[j];\n                    if (mapKey[depIndex] === depName) {\n                        // this is the index of the dependency, so make sure we come after it\n                        ordinal = Math.max(ordinal, depIndex + 1);\n                    }\n                }\n            }\n            // insert index\n            order.splice(ordinal, 0, index);\n        });\n        // now emit ordered source\n        order.forEach(i => this.emitGatheredSource(mapValue[i]));\n    }\n    emitSourceStructure() {\n        if (this.leadingComments !== undefined) {\n            this.emitComments(this.leadingComments);\n        }\n        this.emitImports();\n        this.emitSchemas();\n    }\n}\nexports.TypeScriptEffectSchemaRenderer = TypeScriptEffectSchemaRenderer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.languageNamed = exports.all = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst CSharp_1 = require(\"./CSharp\");\nconst Golang_1 = require(\"./Golang\");\nconst CJSON_1 = require(\"./CJSON\");\nconst CPlusPlus_1 = require(\"./CPlusPlus\");\nconst Objective_C_1 = require(\"./Objective-C\");\nconst Java_1 = require(\"./Java\");\nconst JavaScript_1 = require(\"./JavaScript\");\nconst JavaScriptPropTypes_1 = require(\"./JavaScriptPropTypes\");\nconst TypeScriptFlow_1 = require(\"./TypeScriptFlow\");\nconst Swift_1 = require(\"./Swift\");\nconst Kotlin_1 = require(\"./Kotlin\");\nconst Scala3_1 = require(\"./Scala3\");\nconst Smithy4s_1 = require(\"./Smithy4s\");\nconst Elm_1 = require(\"./Elm\");\nconst JSONSchema_1 = require(\"./JSONSchema\");\nconst Rust_1 = require(\"./Rust\");\nconst Crystal_1 = require(\"./Crystal\");\nconst ruby_1 = require(\"./ruby\");\nconst Dart_1 = require(\"./Dart\");\nconst Python_1 = require(\"./Python\");\nconst Pike_1 = require(\"./Pike\");\nconst Haskell_1 = require(\"./Haskell\");\nconst TypeScriptZod_1 = require(\"./TypeScriptZod\");\nconst Php_1 = require(\"./Php\");\nconst TypeScriptEffectSchema_1 = require(\"./TypeScriptEffectSchema\");\nexports.all = [\n    new CSharp_1.CSharpTargetLanguage(),\n    new Golang_1.GoTargetLanguage(),\n    new Rust_1.RustTargetLanguage(),\n    new Crystal_1.CrystalTargetLanguage(),\n    new CJSON_1.CJSONTargetLanguage(),\n    new CPlusPlus_1.CPlusPlusTargetLanguage(),\n    new Objective_C_1.ObjectiveCTargetLanguage(),\n    new Java_1.JavaTargetLanguage(),\n    new TypeScriptFlow_1.TypeScriptTargetLanguage(),\n    new JavaScript_1.JavaScriptTargetLanguage(),\n    new JavaScriptPropTypes_1.JavaScriptPropTypesTargetLanguage(),\n    new TypeScriptFlow_1.FlowTargetLanguage(),\n    new Swift_1.SwiftTargetLanguage(),\n    new Scala3_1.Scala3TargetLanguage(),\n    new Smithy4s_1.SmithyTargetLanguage(),\n    new Kotlin_1.KotlinTargetLanguage(),\n    new Elm_1.ElmTargetLanguage(),\n    new JSONSchema_1.JSONSchemaTargetLanguage(),\n    new ruby_1.RubyTargetLanguage(),\n    new Dart_1.DartTargetLanguage(),\n    new Python_1.PythonTargetLanguage(\"Python\", [\"python\", \"py\"], \"py\"),\n    new Pike_1.PikeTargetLanguage(),\n    new Haskell_1.HaskellTargetLanguage(),\n    new TypeScriptZod_1.TypeScriptZodTargetLanguage(),\n    new TypeScriptEffectSchema_1.TypeScriptEffectSchemaTargetLanguage(),\n    new Php_1.PhpTargetLanguage()\n];\nfunction languageNamed(name, targetLanguages) {\n    if (targetLanguages === undefined) {\n        targetLanguages = exports.all;\n    }\n    const maybeTargetLanguage = (0, collection_utils_1.iterableFind)(targetLanguages, l => l.names.indexOf(name) >= 0 || l.displayName === name);\n    if (maybeTargetLanguage !== undefined)\n        return maybeTargetLanguage;\n    return (0, collection_utils_1.iterableFind)(targetLanguages, l => l.extension === name);\n}\nexports.languageNamed = languageNamed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnionBuilder = exports.TypeRefUnionAccumulator = exports.UnionAccumulator = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Type_1 = require(\"./Type\");\nconst TypeUtils_1 = require(\"./TypeUtils\");\nconst TypeAttributes_1 = require(\"./attributes/TypeAttributes\");\nconst Support_1 = require(\"./support/Support\");\nconst StringTypes_1 = require(\"./attributes/StringTypes\");\nfunction addAttributes(accumulatorAttributes, newAttributes) {\n    if (accumulatorAttributes === undefined)\n        return newAttributes;\n    return (0, TypeAttributes_1.combineTypeAttributes)(\"union\", accumulatorAttributes, newAttributes);\n}\nfunction setAttributes(attributeMap, kind, newAttributes) {\n    attributeMap.set(kind, addAttributes(attributeMap.get(kind), newAttributes));\n}\nfunction addAttributesToBuilder(builder, kind, newAttributes) {\n    let arr = builder.get(kind);\n    if (arr === undefined) {\n        arr = [];\n        builder.set(kind, arr);\n    }\n    arr.push(newAttributes);\n}\nfunction buildTypeAttributeMap(builder) {\n    return (0, collection_utils_1.mapMap)(builder, arr => (0, TypeAttributes_1.combineTypeAttributes)(\"union\", arr));\n}\nfunction moveAttributes(map, fromKind, toKind) {\n    const fromAttributes = (0, Support_1.defined)(map.get(fromKind));\n    map.delete(fromKind);\n    setAttributes(map, toKind, fromAttributes);\n}\nclass UnionAccumulator {\n    constructor(_conflateNumbers) {\n        this._conflateNumbers = _conflateNumbers;\n        this._nonStringTypeAttributes = new Map();\n        this._stringTypeAttributes = new Map();\n        this.arrayData = [];\n        this.objectData = [];\n        this._enumCases = new Set();\n        this._lostTypeAttributes = false;\n    }\n    have(kind) {\n        return (this._nonStringTypeAttributes.has(kind) || this._stringTypeAttributes.has(kind));\n    }\n    addNone(_attributes) {\n        // FIXME: Add them to all members?  Or add them to the union, which means we'd have\n        // to change getMemberKinds() to also return the attributes for the union itself,\n        // or add a new method that does that.\n        this._lostTypeAttributes = true;\n    }\n    addAny(attributes) {\n        addAttributesToBuilder(this._nonStringTypeAttributes, \"any\", attributes);\n        this._lostTypeAttributes = true;\n    }\n    addPrimitive(kind, attributes) {\n        (0, Support_1.assert)(kind !== \"any\", \"any must be added with addAny\");\n        addAttributesToBuilder(this._nonStringTypeAttributes, kind, attributes);\n    }\n    addFullStringType(attributes, stringTypes) {\n        let stringTypesAttributes = undefined;\n        if (stringTypes === undefined) {\n            stringTypes = StringTypes_1.stringTypesTypeAttributeKind.tryGetInAttributes(attributes);\n        }\n        else {\n            stringTypesAttributes = StringTypes_1.stringTypesTypeAttributeKind.makeAttributes(stringTypes);\n        }\n        if (stringTypes === undefined) {\n            stringTypes = StringTypes_1.StringTypes.unrestricted;\n            stringTypesAttributes = StringTypes_1.stringTypesTypeAttributeKind.makeAttributes(stringTypes);\n        }\n        const maybeEnumAttributes = this._nonStringTypeAttributes.get(\"enum\");\n        if (stringTypes.isRestricted) {\n            (0, Support_1.assert)(maybeEnumAttributes === undefined, \"We can't add both an enum as well as a restricted string type to a union builder\");\n        }\n        addAttributesToBuilder(this._stringTypeAttributes, \"string\", attributes);\n        if (stringTypesAttributes !== undefined) {\n            addAttributesToBuilder(this._stringTypeAttributes, \"string\", stringTypesAttributes);\n        }\n    }\n    addStringType(kind, attributes, stringTypes) {\n        if (kind === \"string\") {\n            this.addFullStringType(attributes, stringTypes);\n            return;\n        }\n        addAttributesToBuilder(this._stringTypeAttributes, kind, attributes);\n        if (stringTypes !== undefined) {\n            addAttributesToBuilder(this._stringTypeAttributes, kind, StringTypes_1.stringTypesTypeAttributeKind.makeAttributes(stringTypes));\n        }\n    }\n    addArray(t, attributes) {\n        this.arrayData.push(t);\n        addAttributesToBuilder(this._nonStringTypeAttributes, \"array\", attributes);\n    }\n    addObject(t, attributes) {\n        this.objectData.push(t);\n        addAttributesToBuilder(this._nonStringTypeAttributes, \"object\", attributes);\n    }\n    addEnum(cases, attributes) {\n        const maybeStringAttributes = this._stringTypeAttributes.get(\"string\");\n        if (maybeStringAttributes !== undefined) {\n            addAttributesToBuilder(this._stringTypeAttributes, \"string\", attributes);\n            return;\n        }\n        addAttributesToBuilder(this._nonStringTypeAttributes, \"enum\", attributes);\n        (0, collection_utils_1.setUnionInto)(this._enumCases, cases);\n    }\n    addStringCases(cases, attributes) {\n        this.addFullStringType(attributes, StringTypes_1.StringTypes.fromCases(cases));\n    }\n    addStringCase(s, count, attributes) {\n        this.addFullStringType(attributes, StringTypes_1.StringTypes.fromCase(s, count));\n    }\n    get enumCases() {\n        return this._enumCases;\n    }\n    getMemberKinds() {\n        (0, Support_1.assert)(!(this.have(\"enum\") && this.have(\"string\")), \"We can't have both strings and enums in the same union\");\n        let merged = (0, collection_utils_1.mapMerge)(buildTypeAttributeMap(this._nonStringTypeAttributes), buildTypeAttributeMap(this._stringTypeAttributes));\n        if (merged.size === 0) {\n            return new Map([[\"none\", TypeAttributes_1.emptyTypeAttributes]]);\n        }\n        if (this._nonStringTypeAttributes.has(\"any\")) {\n            (0, Support_1.assert)(this._lostTypeAttributes, \"This had to be set when we added 'any'\");\n            const allAttributes = (0, TypeAttributes_1.combineTypeAttributes)(\"union\", Array.from(merged.values()));\n            return new Map([[\"any\", allAttributes]]);\n        }\n        if (this._conflateNumbers && this.have(\"integer\") && this.have(\"double\")) {\n            moveAttributes(merged, \"integer\", \"double\");\n        }\n        if (this.have(\"map\")) {\n            moveAttributes(merged, \"map\", \"class\");\n        }\n        return merged;\n    }\n    get lostTypeAttributes() {\n        return this._lostTypeAttributes;\n    }\n}\nexports.UnionAccumulator = UnionAccumulator;\nclass FauxUnion {\n    getAttributes() {\n        return TypeAttributes_1.emptyTypeAttributes;\n    }\n}\nfunction attributesForTypes(types) {\n    // These two maps are the reverse of each other.  unionsForType is all the unions\n    // that are ancestors of that type, when going from one of the given types, only\n    // following unions.\n    const unionsForType = new Map();\n    const typesForUnion = new Map();\n    // All the unions we've seen, starting from types, stopping when we hit non-unions.\n    const unions = new Set();\n    // All the unions that are equivalent to the single root type.  If more than one type\n    // is given, this will be empty.\n    let unionsEquivalentToRoot = new Set();\n    function traverse(t, path, isEquivalentToRoot) {\n        if (t instanceof Type_1.UnionType) {\n            unions.add(t);\n            if (isEquivalentToRoot) {\n                unionsEquivalentToRoot = unionsEquivalentToRoot.add(t);\n            }\n            isEquivalentToRoot = isEquivalentToRoot && t.members.size === 1;\n            path.push(t);\n            for (const m of t.members) {\n                traverse(m, path, isEquivalentToRoot);\n            }\n            path.pop();\n        }\n        else {\n            (0, collection_utils_1.mapUpdateInto)(unionsForType, t, s => (s === undefined ? new Set(path) : (0, collection_utils_1.setUnionInto)(s, path)));\n            for (const u of path) {\n                (0, collection_utils_1.mapUpdateInto)(typesForUnion, u, s => (s === undefined ? new Set([t]) : s.add(t)));\n            }\n        }\n    }\n    const rootPath = [new FauxUnion()];\n    const typesArray = Array.from(types);\n    for (const t of typesArray) {\n        traverse(t, rootPath, typesArray.length === 1);\n    }\n    const resultAttributes = (0, collection_utils_1.mapMap)(unionsForType, (unionForType, t) => {\n        const singleAncestors = Array.from(unionForType).filter(u => (0, Support_1.defined)(typesForUnion.get(u)).size === 1);\n        (0, Support_1.assert)(singleAncestors.every(u => (0, Support_1.defined)(typesForUnion.get(u)).has(t)), \"We messed up bookkeeping\");\n        const inheritedAttributes = singleAncestors.map(u => u.getAttributes());\n        return (0, TypeAttributes_1.combineTypeAttributes)(\"union\", [t.getAttributes()].concat(inheritedAttributes));\n    });\n    const unionAttributes = Array.from(unions).map(u => {\n        const t = typesForUnion.get(u);\n        if (t !== undefined && t.size === 1) {\n            return TypeAttributes_1.emptyTypeAttributes;\n        }\n        const attributes = u.getAttributes();\n        if (unionsEquivalentToRoot.has(u)) {\n            return attributes;\n        }\n        return (0, TypeAttributes_1.makeTypeAttributesInferred)(attributes);\n    });\n    return [resultAttributes, (0, TypeAttributes_1.combineTypeAttributes)(\"union\", unionAttributes)];\n}\n// FIXME: Move this to UnifyClasses.ts?\nclass TypeRefUnionAccumulator extends UnionAccumulator {\n    // There is a method analogous to this in the IntersectionAccumulator.  It might\n    // make sense to find a common interface.\n    addType(t, attributes) {\n        (0, TypeUtils_1.matchTypeExhaustive)(t, _noneType => this.addNone(attributes), _anyType => this.addAny(attributes), _nullType => this.addPrimitive(\"null\", attributes), _boolType => this.addPrimitive(\"bool\", attributes), _integerType => this.addPrimitive(\"integer\", attributes), _doubleType => this.addPrimitive(\"double\", attributes), _stringType => this.addStringType(\"string\", attributes), arrayType => this.addArray(arrayType.items.typeRef, attributes), classType => this.addObject(classType.typeRef, attributes), mapType => this.addObject(mapType.typeRef, attributes), objectType => this.addObject(objectType.typeRef, attributes), \n        // FIXME: We're not carrying counts, so this is not correct if we do enum\n        // inference.  JSON Schema input uses this case, however, without enum\n        // inference, which is fine, but still a bit ugly.\n        enumType => this.addEnum(enumType.cases, attributes), _unionType => {\n            return (0, Support_1.panic)(\"The unions should have been eliminated in attributesForTypesInUnion\");\n        }, transformedStringType => this.addStringType(transformedStringType.kind, attributes));\n    }\n    addTypes(types) {\n        const [attributesMap, unionAttributes] = attributesForTypes(types);\n        for (const [t, attributes] of attributesMap) {\n            this.addType(t, attributes);\n        }\n        return unionAttributes;\n    }\n}\nexports.TypeRefUnionAccumulator = TypeRefUnionAccumulator;\nclass UnionBuilder {\n    constructor(typeBuilder) {\n        this.typeBuilder = typeBuilder;\n    }\n    makeTypeOfKind(typeProvider, kind, typeAttributes, forwardingRef) {\n        switch (kind) {\n            case \"string\":\n                return this.typeBuilder.getStringType(typeAttributes, undefined, forwardingRef);\n            case \"enum\":\n                return this.typeBuilder.getEnumType(typeAttributes, typeProvider.enumCases, forwardingRef);\n            case \"object\":\n                return this.makeObject(typeProvider.objectData, typeAttributes, forwardingRef);\n            case \"array\":\n                return this.makeArray(typeProvider.arrayData, typeAttributes, forwardingRef);\n            default:\n                if ((0, Type_1.isPrimitiveTypeKind)(kind)) {\n                    return this.typeBuilder.getPrimitiveType(kind, typeAttributes, forwardingRef);\n                }\n                if (kind === \"union\" || kind === \"class\" || kind === \"map\" || kind === \"intersection\") {\n                    return (0, Support_1.panic)(`getMemberKinds() shouldn't return ${kind}`);\n                }\n                return (0, Support_1.assertNever)(kind);\n        }\n    }\n    buildUnion(typeProvider, unique, typeAttributes, forwardingRef) {\n        const kinds = typeProvider.getMemberKinds();\n        if (typeProvider.lostTypeAttributes) {\n            this.typeBuilder.setLostTypeAttributes();\n        }\n        // FIXME: We don't reconstitute type attributes here, so it's possible that\n        // we get type refs for the wrong graphs if the transformation making rewrite\n        // makes unions that have to be unified here.  That's a bug anyway, at least\n        // right now, it's just a very bad way of surfacing that error.\n        if (kinds.size === 1) {\n            const [[kind, memberAttributes]] = Array.from(kinds);\n            const allAttributes = (0, TypeAttributes_1.combineTypeAttributes)(\"union\", typeAttributes, (0, TypeAttributes_1.increaseTypeAttributesDistance)(memberAttributes));\n            const t = this.makeTypeOfKind(typeProvider, kind, allAttributes, forwardingRef);\n            return t;\n        }\n        const union = unique\n            ? this.typeBuilder.getUniqueUnionType(typeAttributes, undefined, forwardingRef)\n            : undefined;\n        const types = [];\n        for (const [kind, memberAttributes] of kinds) {\n            types.push(this.makeTypeOfKind(typeProvider, kind, memberAttributes, undefined));\n        }\n        const typesSet = new Set(types);\n        if (union !== undefined) {\n            this.typeBuilder.setSetOperationMembers(union, typesSet);\n            return union;\n        }\n        else {\n            return this.typeBuilder.getUnionType(typeAttributes, typesSet, forwardingRef);\n        }\n    }\n}\nexports.UnionBuilder = UnionBuilder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unifyTypes = exports.unionBuilderForUnification = exports.UnifyUnionBuilder = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Type_1 = require(\"./Type\");\nconst TypeUtils_1 = require(\"./TypeUtils\");\nconst UnionBuilder_1 = require(\"./UnionBuilder\");\nconst Support_1 = require(\"./support/Support\");\nconst TypeAttributes_1 = require(\"./attributes/TypeAttributes\");\nconst TypeGraph_1 = require(\"./TypeGraph\");\nfunction getCliqueProperties(clique, builder, makePropertyType) {\n    let lostTypeAttributes = false;\n    let propertyNames = new Set();\n    for (const o of clique) {\n        (0, collection_utils_1.setUnionInto)(propertyNames, o.getProperties().keys());\n    }\n    let properties = Array.from(propertyNames).map(name => [name, new Set(), false]);\n    let additionalProperties = undefined;\n    for (const o of clique) {\n        let additional = o.getAdditionalProperties();\n        if (additional !== undefined) {\n            if (additionalProperties === undefined) {\n                additionalProperties = new Set();\n            }\n            if (additional !== undefined) {\n                additionalProperties.add(additional);\n            }\n        }\n        for (let i = 0; i < properties.length; i++) {\n            let [name, types, isOptional] = properties[i];\n            const maybeProperty = o.getProperties().get(name);\n            if (maybeProperty === undefined) {\n                isOptional = true;\n                if (additional !== undefined && additional.kind !== \"any\") {\n                    types.add(additional);\n                }\n            }\n            else {\n                if (maybeProperty.isOptional) {\n                    isOptional = true;\n                }\n                types.add(maybeProperty.type);\n            }\n            properties[i][2] = isOptional;\n        }\n    }\n    const unifiedAdditionalProperties = additionalProperties === undefined ? undefined : makePropertyType(additionalProperties);\n    const unifiedPropertiesArray = properties.map(([name, types, isOptional]) => {\n        return [name, builder.makeClassProperty(makePropertyType(types), isOptional)];\n    });\n    const unifiedProperties = new Map(unifiedPropertiesArray);\n    return [unifiedProperties, unifiedAdditionalProperties, lostTypeAttributes];\n}\nfunction countProperties(clique) {\n    let hasProperties = false;\n    let hasAdditionalProperties = false;\n    let hasNonAnyAdditionalProperties = false;\n    for (const o of clique) {\n        if (o.getProperties().size > 0) {\n            hasProperties = true;\n        }\n        const additional = o.getAdditionalProperties();\n        if (additional !== undefined) {\n            hasAdditionalProperties = true;\n            if (additional.kind !== \"any\") {\n                hasNonAnyAdditionalProperties = true;\n            }\n        }\n    }\n    return { hasProperties, hasAdditionalProperties, hasNonAnyAdditionalProperties };\n}\nclass UnifyUnionBuilder extends UnionBuilder_1.UnionBuilder {\n    constructor(typeBuilder, _makeObjectTypes, _makeClassesFixed, _unifyTypes) {\n        super(typeBuilder);\n        this._makeObjectTypes = _makeObjectTypes;\n        this._makeClassesFixed = _makeClassesFixed;\n        this._unifyTypes = _unifyTypes;\n    }\n    makeObject(objectRefs, typeAttributes, forwardingRef) {\n        const maybeTypeRef = this.typeBuilder.lookupTypeRefs(objectRefs, forwardingRef);\n        if (maybeTypeRef !== undefined) {\n            (0, Support_1.assert)(forwardingRef === undefined || maybeTypeRef === forwardingRef, \"The forwarding ref must be consumed\");\n            this.typeBuilder.addAttributes(maybeTypeRef, typeAttributes);\n            return maybeTypeRef;\n        }\n        if (objectRefs.length === 1) {\n            return this.typeBuilder.reconstituteTypeRef(objectRefs[0], typeAttributes, forwardingRef);\n        }\n        const objectTypes = objectRefs.map(r => (0, TypeUtils_1.assertIsObject)((0, TypeGraph_1.derefTypeRef)(r, this.typeBuilder)));\n        const { hasProperties, hasAdditionalProperties, hasNonAnyAdditionalProperties } = countProperties(objectTypes);\n        if (!this._makeObjectTypes && (hasNonAnyAdditionalProperties || (!hasProperties && hasAdditionalProperties))) {\n            const propertyTypes = new Set();\n            for (const o of objectTypes) {\n                (0, collection_utils_1.setUnionInto)(propertyTypes, Array.from(o.getProperties().values()).map(cp => cp.typeRef));\n            }\n            const additionalPropertyTypes = new Set(objectTypes\n                .filter(o => o.getAdditionalProperties() !== undefined)\n                .map(o => (0, Support_1.defined)(o.getAdditionalProperties()).typeRef));\n            (0, collection_utils_1.setUnionInto)(propertyTypes, additionalPropertyTypes);\n            return this.typeBuilder.getMapType(typeAttributes, this._unifyTypes(Array.from(propertyTypes)));\n        }\n        else {\n            const [properties, additionalProperties, lostTypeAttributes] = getCliqueProperties(objectTypes, this.typeBuilder, types => {\n                (0, Support_1.assert)(types.size > 0, \"Property has no type\");\n                return this._unifyTypes(Array.from(types).map(t => t.typeRef));\n            });\n            if (lostTypeAttributes) {\n                this.typeBuilder.setLostTypeAttributes();\n            }\n            if (this._makeObjectTypes) {\n                return this.typeBuilder.getUniqueObjectType(typeAttributes, properties, additionalProperties, forwardingRef);\n            }\n            else {\n                (0, Support_1.assert)(additionalProperties === undefined, \"We have additional properties but want to make a class\");\n                return this.typeBuilder.getUniqueClassType(typeAttributes, this._makeClassesFixed, properties, forwardingRef);\n            }\n        }\n    }\n    makeArray(arrays, typeAttributes, forwardingRef) {\n        const ref = this.typeBuilder.getArrayType(typeAttributes, this._unifyTypes(arrays), forwardingRef);\n        return ref;\n    }\n}\nexports.UnifyUnionBuilder = UnifyUnionBuilder;\nfunction unionBuilderForUnification(typeBuilder, makeObjectTypes, makeClassesFixed, conflateNumbers) {\n    return new UnifyUnionBuilder(typeBuilder, makeObjectTypes, makeClassesFixed, trefs => unifyTypes(new Set(trefs.map(tref => (0, TypeGraph_1.derefTypeRef)(tref, typeBuilder))), TypeAttributes_1.emptyTypeAttributes, typeBuilder, unionBuilderForUnification(typeBuilder, makeObjectTypes, makeClassesFixed, conflateNumbers), conflateNumbers));\n}\nexports.unionBuilderForUnification = unionBuilderForUnification;\n// typeAttributes must not be reconstituted yet.\n// FIXME: The UnionBuilder might end up not being used.\nfunction unifyTypes(types, typeAttributes, typeBuilder, unionBuilder, conflateNumbers, maybeForwardingRef) {\n    typeAttributes = typeBuilder.reconstituteTypeAttributes(typeAttributes);\n    if (types.size === 0) {\n        return (0, Support_1.panic)(\"Cannot unify empty set of types\");\n    }\n    else if (types.size === 1) {\n        const first = (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(types));\n        if (!(first instanceof Type_1.UnionType)) {\n            return typeBuilder.reconstituteTypeRef(first.typeRef, typeAttributes, maybeForwardingRef);\n        }\n    }\n    const typeRefs = Array.from(types).map(t => t.typeRef);\n    const maybeTypeRef = typeBuilder.lookupTypeRefs(typeRefs, maybeForwardingRef);\n    if (maybeTypeRef !== undefined) {\n        typeBuilder.addAttributes(maybeTypeRef, typeAttributes);\n        return maybeTypeRef;\n    }\n    const accumulator = new UnionBuilder_1.TypeRefUnionAccumulator(conflateNumbers);\n    const nestedAttributes = typeBuilder.reconstituteTypeAttributes(accumulator.addTypes(types));\n    typeAttributes = (0, TypeAttributes_1.combineTypeAttributes)(\"union\", typeAttributes, nestedAttributes);\n    return typeBuilder.withForwardingRef(maybeForwardingRef, forwardingRef => {\n        typeBuilder.registerUnion(typeRefs, forwardingRef);\n        return unionBuilder.buildUnion(accumulator, false, typeAttributes, forwardingRef);\n    });\n}\nexports.unifyTypes = unifyTypes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.combineClasses = void 0;\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Support_1 = require(\"../support/Support\");\nconst UnifyClasses_1 = require(\"../UnifyClasses\");\nconst REQUIRED_OVERLAP = 3 / 4;\n// FIXME: Allow some type combinations to unify, like different enums,\n// enums with strings, integers with doubles, maps with objects of\n// the correct type.\nfunction typeSetsCanBeCombined(s1, s2) {\n    return (0, Type_1.setOperationCasesEqual)(s1, s2, true, (a, b) => a.structurallyCompatible(b, true));\n}\nfunction canBeCombined(c1, c2, onlyWithSameProperties) {\n    const p1 = c1.getProperties();\n    const p2 = c2.getProperties();\n    if (onlyWithSameProperties) {\n        if (p1.size !== p2.size) {\n            return false;\n        }\n    }\n    else {\n        if (p1.size < p2.size * REQUIRED_OVERLAP || p2.size < p1.size * REQUIRED_OVERLAP) {\n            return false;\n        }\n    }\n    let larger;\n    let smaller;\n    if (p1.size > p2.size) {\n        larger = p1;\n        smaller = p2;\n    }\n    else {\n        larger = p2;\n        smaller = p1;\n    }\n    let maxFaults;\n    if (onlyWithSameProperties) {\n        maxFaults = 0;\n    }\n    else {\n        const minOverlap = Math.ceil(larger.size * REQUIRED_OVERLAP);\n        maxFaults = smaller.size - minOverlap;\n    }\n    (0, Support_1.assert)(maxFaults >= 0, \"Max faults negative\");\n    const commonProperties = [];\n    let faults = 0;\n    for (const [name] of smaller) {\n        if (larger.has(name)) {\n            commonProperties.push(name);\n        }\n        else {\n            faults += 1;\n            if (faults > maxFaults)\n                break;\n        }\n    }\n    if (faults > maxFaults)\n        return false;\n    for (const name of commonProperties) {\n        let ts = smaller.get(name);\n        let tl = larger.get(name);\n        if (ts === undefined || tl === undefined) {\n            return (0, Support_1.panic)(`Both classes should have property ${name}`);\n        }\n        const tsCases = (0, TypeUtils_1.nonNullTypeCases)(ts.type);\n        const tlCases = (0, TypeUtils_1.nonNullTypeCases)(tl.type);\n        if (tsCases.size > 0 && tlCases.size > 0 && !typeSetsCanBeCombined(tsCases, tlCases)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction tryAddToClique(c, clique, onlyWithSameProperties) {\n    for (const prototype of clique.prototypes) {\n        if (prototype.structurallyCompatible(c)) {\n            clique.members.push(c);\n            return true;\n        }\n    }\n    for (const prototype of clique.prototypes) {\n        if (canBeCombined(prototype, c, onlyWithSameProperties)) {\n            clique.prototypes.push(c);\n            clique.members.push(c);\n            return true;\n        }\n    }\n    return false;\n}\nfunction findSimilarityCliques(graph, onlyWithSameProperties, includeFixedClasses) {\n    const classCandidates = Array.from(graph.allNamedTypesSeparated().objects).filter(o => o instanceof Type_1.ClassType && (includeFixedClasses || !o.isFixed));\n    const cliques = [];\n    for (const c of classCandidates) {\n        let cliqueIndex = undefined;\n        for (let i = 0; i < cliques.length; i++) {\n            if (tryAddToClique(c, cliques[i], onlyWithSameProperties)) {\n                cliqueIndex = i;\n                break;\n            }\n        }\n        if (cliqueIndex === undefined) {\n            // New clique\n            cliqueIndex = cliques.length;\n            cliques.push({ members: [c], prototypes: [c] });\n        }\n        // Move the clique we just added to to the front, in the hope that\n        // some cliques are more often added to than others, and they'll\n        // move to the front.\n        const tmp = cliques[0];\n        cliques[0] = cliques[cliqueIndex];\n        cliques[cliqueIndex] = tmp;\n    }\n    return cliques.map(clique => clique.members).filter(cl => cl.length > 1);\n}\nfunction combineClasses(ctx, graph, alphabetizeProperties, conflateNumbers, onlyWithSameProperties, debugPrintReconstitution) {\n    const cliques = ctx.time(\"  find similarity cliques\", () => findSimilarityCliques(graph, onlyWithSameProperties, false));\n    function makeCliqueClass(clique, builder, forwardingRef) {\n        (0, Support_1.assert)(clique.size > 0, \"Clique can't be empty\");\n        const attributes = (0, TypeUtils_1.combineTypeAttributesOfTypes)(\"union\", clique);\n        return (0, UnifyClasses_1.unifyTypes)(clique, attributes, builder, (0, UnifyClasses_1.unionBuilderForUnification)(builder, false, false, conflateNumbers), conflateNumbers, forwardingRef);\n    }\n    return graph.rewrite(\"combine classes\", ctx.stringTypeMapping, alphabetizeProperties, cliques, debugPrintReconstitution, makeCliqueClass);\n}\nexports.combineClasses = combineClasses;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodedMarkovChain = void 0;\nexports.encodedMarkovChain = \"\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.test = exports.generate = exports.evaluate = exports.evaluateFull = exports.load = exports.train = void 0;\nconst Support_1 = require(\"./support/Support\");\nconst EncodedMarkovChain_1 = require(\"./EncodedMarkovChain\");\nfunction makeTrie() {\n    const arr = [];\n    for (let i = 0; i < 128; i++) {\n        arr.push(null);\n    }\n    return { count: 0, arr };\n}\nfunction lookup(t, seq, i) {\n    if (i >= seq.length) {\n        return t;\n    }\n    let first = seq.charCodeAt(i);\n    if (first >= 128) {\n        first = 0;\n    }\n    const n = t.arr[first];\n    if (n === null) {\n        return undefined;\n    }\n    if (typeof n === \"object\") {\n        return lookup(n, seq, i + 1);\n    }\n    else {\n        return n / t.count;\n    }\n}\nfunction increment(t, seq, i) {\n    let first = seq.charCodeAt(i);\n    if (first >= 128) {\n        first = 0;\n    }\n    if (i >= seq.length - 1) {\n        if (typeof t !== \"object\") {\n            return (0, Support_1.panic)(\"Malformed trie\");\n        }\n        let n = t.arr[first];\n        if (n === null) {\n            n = 0;\n        }\n        else if (typeof n === \"object\") {\n            return (0, Support_1.panic)(\"Malformed trie\");\n        }\n        t.arr[first] = n + 1;\n        t.count += 1;\n        return;\n    }\n    let st = t.arr[first];\n    if (st === null) {\n        t.arr[first] = st = makeTrie();\n    }\n    if (typeof st !== \"object\") {\n        return (0, Support_1.panic)(\"Malformed trie\");\n    }\n    return increment(st, seq, i + 1);\n}\nfunction train(lines, depth) {\n    const trie = makeTrie();\n    for (const l of lines) {\n        for (let i = depth; i <= l.length; i++) {\n            increment(trie, l.slice(i - depth, i), 0);\n        }\n    }\n    return { trie, depth };\n}\nexports.train = train;\nfunction load() {\n    return JSON.parse((0, Support_1.inflateBase64)(EncodedMarkovChain_1.encodedMarkovChain));\n}\nexports.load = load;\nfunction evaluateFull(mc, word) {\n    const { trie, depth } = mc;\n    if (word.length < depth) {\n        return [1, []];\n    }\n    let p = 1;\n    const scores = [];\n    for (let i = depth; i <= word.length; i++) {\n        let cp = lookup(trie, word.slice(i - depth, i), 0);\n        if (typeof cp === \"object\") {\n            return (0, Support_1.panic)(\"Did we mess up the depth?\");\n        }\n        if (cp === undefined) {\n            cp = 0.0001;\n        }\n        scores.push(cp);\n        p = p * cp;\n    }\n    return [Math.pow(p, 1 / (word.length - depth + 1)), scores];\n}\nexports.evaluateFull = evaluateFull;\nfunction evaluate(mc, word) {\n    return evaluateFull(mc, word)[0];\n}\nexports.evaluate = evaluate;\nfunction randomInt(lower, upper) {\n    const range = upper - lower;\n    return lower + Math.floor(Math.random() * range);\n}\nfunction generate(mc, state, unseenWeight) {\n    (0, Support_1.assert)(state.length === mc.depth - 1, \"State and chain length don't match up\");\n    const t = lookup(mc.trie, state, 0);\n    if (typeof t === \"number\") {\n        return (0, Support_1.panic)(\"Wrong depth?\");\n    }\n    if (t === undefined) {\n        return String.fromCharCode(randomInt(32, 127));\n    }\n    const counts = t.arr.map((x, i) => (x === null ? (i === 0 ? 0 : unseenWeight) : x));\n    let n = 0;\n    for (const c of counts) {\n        n += c;\n    }\n    const r = randomInt(0, n);\n    let sum = 0;\n    for (let i = 0; i < counts.length; i++) {\n        sum += counts[i];\n        if (r < sum) {\n            return String.fromCharCode(i);\n        }\n    }\n    return (0, Support_1.panic)(\"We screwed up bookkeeping, or randomInt\");\n}\nexports.generate = generate;\nfunction testWord(mc, word) {\n    console.log(`\"${word}\": ${evaluate(mc, word)}`);\n}\nfunction test() {\n    const mc = load();\n    testWord(mc, \"url\");\n    testWord(mc, \"json\");\n    testWord(mc, \"my_property\");\n    testWord(mc, \"ordinary\");\n    testWord(mc, \"different\");\n    testWord(mc, \"189512\");\n    testWord(mc, \"2BTZIqw0ntH9MvilQ3ewNY\");\n    testWord(mc, \"0uBTNdNGb2OY5lou41iYL52LcDq2\");\n    testWord(mc, \"-KpqHmWuDOUnr1hmAhxp\");\n    testWord(mc, \"granularity\");\n    testWord(mc, \"coverage\");\n    testWord(mc, \"postingFrequency\");\n    testWord(mc, \"dataFrequency\");\n    testWord(mc, \"units\");\n    testWord(mc, \"datasetOwner\");\n    testWord(mc, \"organization\");\n    testWord(mc, \"timePeriod\");\n    testWord(mc, \"contactInformation\");\n    testWord(mc, \"\\ud83d\\udebe \\ud83c\\udd92 \\ud83c\\udd93 \\ud83c\\udd95 \\ud83c\\udd96 \\ud83c\\udd97 \\ud83c\\udd99 \\ud83c\\udfe7\");\n}\nexports.test = test;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.inferMaps = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Support_1 = require(\"../support/Support\");\nconst UnifyClasses_1 = require(\"../UnifyClasses\");\nconst MarkovChain_1 = require(\"../MarkovChain\");\nconst mapSizeThreshold = 20;\nconst stringMapSizeThreshold = 50;\nlet markovChain = undefined;\nfunction nameProbability(name) {\n    if (markovChain === undefined) {\n        markovChain = (0, MarkovChain_1.load)();\n    }\n    return (0, MarkovChain_1.evaluate)(markovChain, name);\n}\nfunction shouldBeMap(properties) {\n    // Only classes with a certain number of properties are inferred\n    // as maps.\n    const numProperties = properties.size;\n    if (numProperties < 2)\n        return undefined;\n    // If all property names are digit-only, we always make a map, no\n    // questions asked.\n    if ((0, collection_utils_1.iterableEvery)(properties.keys(), n => /^[0-9]+$/.test(n))) {\n        return (0, collection_utils_1.setMap)(properties.values(), cp => cp.type);\n    }\n    // If all properties are strings or null then an object must have at least\n    // `stringMapSizeThreshold` to qualify as a map.\n    if (numProperties < stringMapSizeThreshold &&\n        (0, collection_utils_1.iterableEvery)(properties.values(), cp => (0, Type_1.isPrimitiveStringTypeKind)(cp.type.kind) || cp.type.kind === \"null\")) {\n        return undefined;\n    }\n    if (numProperties < mapSizeThreshold) {\n        const names = Array.from(properties.keys());\n        const probabilities = names.map(nameProbability);\n        const product = probabilities.reduce((a, b) => a * b, 1);\n        const probability = Math.pow(product, 1 / numProperties);\n        // The idea behind this is to have a probability around 0.0025 for\n        // n=1, up to around 1.0 for n=20.  I.e. when we only have a few\n        // properties, they need to look really weird to infer a map, but\n        // when we have more we'll accept more ordinary names.  The details\n        // of the formula are immaterial because I pulled it out of my ass.\n        // FIXME: Use different exponents and start values depending on\n        // the property type kind.  For string properties, for example, we\n        // should be more conservative, with class properties more\n        // aggressive.  An exponent of 6 is probably good for string\n        // properties, and maybe a start value of 0.002, whereas for classes\n        // we want maybe 0.004 and 5, or maybe something even more\n        // trigger-happy.\n        const exponent = 5;\n        const scale = Math.pow(22, exponent);\n        const limit = Math.pow(numProperties + 2, exponent) / scale + (0.0025 - Math.pow(3, exponent) / scale);\n        if (probability > limit)\n            return undefined;\n    }\n    // FIXME: simplify this - it's no longer necessary with the new\n    // class properties.\n    // We need to handle three cases for maps (and the fourth case\n    // where we leave the class as is):\n    //\n    // 1. All property types are null.\n    // 2. Some property types are null or nullable.\n    // 3. No property types are null or nullable.\n    let firstNonNullCases = undefined;\n    const allCases = new Set();\n    let canBeMap = true;\n    // Check that all the property types are the same, modulo nullability.\n    for (const [, p] of properties) {\n        // The set of types first property can be, minus null.\n        const nn = (0, TypeUtils_1.removeNullFromType)(p.type)[1];\n        if (nn.size > 0) {\n            if (firstNonNullCases !== undefined) {\n                // The set of non-null cases for all other properties must\n                // be the the same, otherwise we won't infer a map.\n                if (!(0, Type_1.setOperationCasesEqual)(nn, firstNonNullCases, true, (a, b) => a.structurallyCompatible(b, true))) {\n                    canBeMap = false;\n                    break;\n                }\n            }\n            else {\n                firstNonNullCases = nn;\n            }\n        }\n        allCases.add(p.type);\n    }\n    if (!canBeMap) {\n        return undefined;\n    }\n    return allCases;\n}\nfunction inferMaps(graph, stringTypeMapping, conflateNumbers, debugPrintReconstitution) {\n    function replaceClass(setOfOneClass, builder, forwardingRef) {\n        const c = (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(setOfOneClass));\n        const properties = c.getProperties();\n        const shouldBe = shouldBeMap(properties);\n        if (shouldBe === undefined) {\n            return (0, Support_1.panic)(`We shouldn't be replacing class ${c.getCombinedName()} with a map`);\n        }\n        // Now reconstitute all the types in the new graph.  TypeGraphs are\n        // immutable, so any change in the graph actually means building a new\n        // graph, and the types in the new graph are different objects.\n        // Reconstituting a type means generating the \"same\" type in the new\n        // type graph.  Except we don't get Type objects but TypeRef objects,\n        // which is a type-to-be.\n        return builder.getMapType(c.getAttributes(), (0, UnifyClasses_1.unifyTypes)(shouldBe, c.getAttributes(), builder, (0, UnifyClasses_1.unionBuilderForUnification)(builder, false, false, conflateNumbers), conflateNumbers), forwardingRef);\n    }\n    const classesToReplace = Array.from(graph.allNamedTypesSeparated().objects).filter(o => {\n        if (!(o instanceof Type_1.ClassType))\n            return false;\n        return !o.isFixed && shouldBeMap(o.getProperties()) !== undefined;\n    });\n    return graph.rewrite(\"infer maps\", stringTypeMapping, false, classesToReplace.map(c => [c]), debugPrintReconstitution, replaceClass);\n}\nexports.inferMaps = inferMaps;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gatherNames = void 0;\nconst pluralize = __importStar(require(\"pluralize\"));\nconst collection_utils_1 = require(\"collection-utils\");\nconst Type_1 = require(\"./Type\");\nconst TypeUtils_1 = require(\"./TypeUtils\");\nconst TypeNames_1 = require(\"./attributes/TypeNames\");\nconst Support_1 = require(\"./support/Support\");\nconst Transformers_1 = require(\"./Transformers\");\nclass UniqueQueue {\n    constructor() {\n        this._present = new Set();\n        this._queue = [];\n        this._front = 0;\n    }\n    get size() {\n        return this._queue.length - this._front;\n    }\n    get isEmpty() {\n        return this.size <= 0;\n    }\n    push(v) {\n        if (this._present.has(v))\n            return;\n        this._queue.push(v);\n        this._present.add(v);\n    }\n    unshift() {\n        (0, Support_1.assert)(!this.isEmpty, \"Trying to unshift from an empty queue\");\n        const v = this._queue[this._front];\n        if (v === undefined) {\n            return (0, Support_1.panic)(\"Value should have been present in queue\");\n        }\n        this._queue[this._front] = undefined;\n        this._front += 1;\n        this._present.delete(v);\n        if (this._front > this.size) {\n            this._queue = this._queue.slice(this._front);\n            this._front = 0;\n        }\n        return v;\n    }\n}\n// `gatherNames` infers names from given names and property names.\n//\n// 1. Propagate type and property names down to children.  Let's say\n//    we start with JSON like this, and we name the top-level `TopLevel`:\n//\n//    {\n//      \"foos\": [ [ { \"bar\": 123 } ] ]\n//    }\n//\n//    We use a work-list algorithm to first add the name `TopLevel` to\n//    the outermost class type.  Then we propagate the property name\n//    `foos` to the outer array, which in turn propagates its singular\n//    `foo` to the inner array type.  That tries to singularize `foo`,\n//    but it's already singular, so `foo` is added as a name for the\n//    inner class.  We also then add `bar` to the name of the integer\n//    type.\n//\n// 2. Add \"ancestor\" alternatives and some \"direct\" alternatives.\n//    Direct alternatives are those that don't contain any ancestor\n//    names, whereas ancestor alternatives do. What we do here is add\n//    names of the form `TopLevel_foo` and `TopLevel_foo_class` as\n//    ancestor alternatives to the inner class, and `foo_element` as\n//    a direct alternative, the latter because it's an element in an\n//    array.\n//\n// 3. Add more direct alternatives to the type names.  The reason we're\n//    doing this separately from step 2 is because step 2 only requires\n//    iterating over the types, wheras this step iterates over\n//    ancestor/descendant relationships.  In this case we would add\n//    `TopLevel_class`, and `foo_class` to the outer and inner classes,\n//    respectively.  We do similar stuff for all the other types.\n//\n// 4. For each type, set its inferred names to what we gathered in\n//    step 1, and its alternatives to a union of its direct and ancestor\n//    alternatives, gathered in steps 2 and 3.\nfunction gatherNames(graph, destructive, debugPrint) {\n    function setNames(t, tn) {\n        graph.attributeStore.set(TypeNames_1.namesTypeAttributeKind, t, tn);\n    }\n    if (destructive) {\n        for (const t of graph.allTypesUnordered()) {\n            if (t.hasNames) {\n                setNames(t, t.getNames().clearInferred());\n            }\n        }\n    }\n    const queue = new UniqueQueue();\n    // null means there are too many\n    const namesForType = new Map();\n    function addNames(t, names) {\n        // Always use the type's given names if it has some\n        if (t.hasNames) {\n            const originalNames = t.getNames();\n            if (!originalNames.areInferred) {\n                names = originalNames.names;\n            }\n        }\n        const oldNames = namesForType.get(t);\n        if (oldNames === null)\n            return;\n        let newNames;\n        if (oldNames === undefined) {\n            newNames = names;\n        }\n        else if (names === null) {\n            newNames = null;\n        }\n        else {\n            newNames = (0, collection_utils_1.setUnion)(oldNames, names);\n        }\n        if (newNames !== null && newNames.size >= TypeNames_1.tooManyNamesThreshold) {\n            newNames = null;\n        }\n        namesForType.set(t, newNames);\n        const transformation = (0, Transformers_1.transformationForType)(t);\n        if (transformation !== undefined) {\n            addNames(transformation.targetType, names);\n        }\n        if (oldNames !== undefined && newNames !== null) {\n            if (oldNames.size === newNames.size) {\n                return;\n            }\n        }\n        else if (oldNames === newNames) {\n            return;\n        }\n        queue.push(t);\n    }\n    for (const [name, t] of graph.topLevels) {\n        addNames(t, new Set([name]));\n    }\n    while (!queue.isEmpty) {\n        const t = queue.unshift();\n        const names = (0, Support_1.defined)(namesForType.get(t));\n        if (t instanceof Type_1.ObjectType) {\n            const properties = t.getSortedProperties();\n            for (const [propertyName, property] of properties) {\n                addNames(property.type, new Set([propertyName]));\n            }\n            const values = t.getAdditionalProperties();\n            if (values !== undefined) {\n                addNames(values, names === null ? null : (0, collection_utils_1.setMap)(names, pluralize.singular));\n            }\n        }\n        else {\n            (0, TypeUtils_1.matchCompoundType)(t, arrayType => {\n                addNames(arrayType.items, names === null ? null : (0, collection_utils_1.setMap)(names, pluralize.singular));\n            }, _classType => (0, Support_1.panic)(\"We handled this above\"), _mapType => (0, Support_1.panic)(\"We handled this above\"), _objectType => (0, Support_1.panic)(\"We handled this above\"), unionType => {\n                const members = (0, collection_utils_1.setSortBy)(unionType.members, member => member.kind);\n                for (const memberType of members) {\n                    addNames(memberType, names);\n                }\n            });\n        }\n    }\n    if (debugPrint) {\n        for (const t of graph.allTypesUnordered()) {\n            const names = namesForType.get(t);\n            if (names === undefined)\n                return;\n            const index = t.index;\n            console.log(`${index}: ${names === null ? \"*** too many ***\" : Array.from(names).join(\" \")}`);\n        }\n    }\n    // null means there are too many\n    const directAlternativesForType = new Map();\n    const ancestorAlternativesForType = new Map();\n    const pairsProcessed = new Map();\n    function addAlternatives(existing, alternatives) {\n        if (alternatives.length === 0) {\n            return existing;\n        }\n        if (existing === undefined) {\n            existing = new Set();\n        }\n        existing = (0, collection_utils_1.setUnion)(existing, alternatives);\n        if (existing.size < TypeNames_1.tooManyNamesThreshold) {\n            return existing;\n        }\n        return null;\n    }\n    function processType(ancestor, t, alternativeSuffix) {\n        const names = (0, Support_1.defined)(namesForType.get(t));\n        let processedEntry = pairsProcessed.get(ancestor);\n        if (processedEntry === undefined)\n            processedEntry = new Set();\n        if (processedEntry.has(t))\n            return;\n        processedEntry.add(t);\n        pairsProcessed.set(ancestor, processedEntry);\n        const transformation = (0, Transformers_1.transformationForType)(t);\n        if (transformation !== undefined) {\n            processType(ancestor, transformation.targetType, alternativeSuffix);\n        }\n        let ancestorAlternatives = ancestorAlternativesForType.get(t);\n        let directAlternatives = directAlternativesForType.get(t);\n        if (names === null) {\n            ancestorAlternatives = null;\n            directAlternatives = null;\n        }\n        else {\n            if (ancestor !== undefined && ancestorAlternatives !== null) {\n                const ancestorNames = namesForType.get(ancestor);\n                if (ancestorNames === null) {\n                    ancestorAlternatives = null;\n                }\n                else if (ancestorNames !== undefined) {\n                    const alternatives = [];\n                    for (const name of names) {\n                        alternatives.push(...Array.from(ancestorNames).map(an => `${an}_${name}`));\n                        // FIXME: add alternatives with the suffix here, too?\n                        alternatives.push(...Array.from(ancestorNames).map(an => `${an}_${name}_${t.kind}`));\n                        // FIXME: add alternatives with the suffix here, too?\n                    }\n                    ancestorAlternatives = addAlternatives(ancestorAlternatives, alternatives);\n                }\n            }\n            if (alternativeSuffix !== undefined && directAlternatives !== null) {\n                const alternatives = [];\n                for (const name of names) {\n                    // FIXME: we should only add these for names we couldn't singularize\n                    alternatives.push(`${name}_${alternativeSuffix}`);\n                }\n                directAlternatives = addAlternatives(directAlternatives, alternatives);\n            }\n        }\n        if (ancestorAlternatives !== undefined) {\n            ancestorAlternativesForType.set(t, ancestorAlternatives);\n        }\n        if (directAlternatives !== undefined) {\n            directAlternativesForType.set(t, directAlternatives);\n        }\n        if (t instanceof Type_1.ObjectType) {\n            const properties = t.getSortedProperties();\n            for (const [, property] of properties) {\n                processType(t, property.type, undefined);\n            }\n            const values = t.getAdditionalProperties();\n            if (values !== undefined) {\n                processType(properties.size === 0 ? ancestor : t, values, \"value\");\n            }\n        }\n        else {\n            (0, TypeUtils_1.matchCompoundType)(t, arrayType => {\n                processType(ancestor, arrayType.items, \"element\");\n            }, _classType => (0, Support_1.panic)(\"We handled this above\"), _mapType => (0, Support_1.panic)(\"We handled this above\"), _objectType => (0, Support_1.panic)(\"We handled this above\"), unionType => {\n                const members = (0, collection_utils_1.setSortBy)(unionType.members, member => member.kind);\n                const unionHasGivenName = unionType.hasNames && !unionType.getNames().areInferred;\n                const unionIsAncestor = unionHasGivenName || (0, TypeUtils_1.nullableFromUnion)(unionType) === null;\n                const ancestorForMembers = unionIsAncestor ? unionType : ancestor;\n                for (const memberType of members) {\n                    processType(ancestorForMembers, memberType, undefined);\n                }\n            });\n        }\n    }\n    for (const [, t] of graph.topLevels) {\n        processType(undefined, t, undefined);\n    }\n    for (const t of graph.allTypesUnordered()) {\n        const names = namesForType.get(t);\n        if (names === undefined)\n            continue;\n        if (names === null) {\n            directAlternativesForType.set(t, null);\n            continue;\n        }\n        let alternatives = directAlternativesForType.get(t);\n        if (alternatives === null)\n            continue;\n        if (alternatives === undefined) {\n            alternatives = new Set();\n        }\n        alternatives = (0, collection_utils_1.setUnion)(alternatives, (0, collection_utils_1.setMap)(names, name => `${name}_${t.kind}`));\n        directAlternativesForType.set(t, alternatives);\n    }\n    for (const t of graph.allTypesUnordered()) {\n        const names = namesForType.get(t);\n        if (names === undefined)\n            continue;\n        let typeNames;\n        if (names === null) {\n            typeNames = new TypeNames_1.TooManyTypeNames(1);\n        }\n        else {\n            const ancestorAlternatives = ancestorAlternativesForType.get(t);\n            const directAlternatives = directAlternativesForType.get(t);\n            let alternatives;\n            if (ancestorAlternatives === null && directAlternatives === null) {\n                alternatives = undefined;\n            }\n            else {\n                if (directAlternatives !== null && directAlternatives !== undefined) {\n                    alternatives = directAlternatives;\n                }\n                else {\n                    alternatives = new Set();\n                }\n                if (ancestorAlternatives !== null && ancestorAlternatives !== undefined) {\n                    alternatives = (0, collection_utils_1.setUnion)(alternatives, ancestorAlternatives);\n                }\n            }\n            typeNames = TypeNames_1.TypeNames.makeWithDistance(names, alternatives, destructive ? 1 : 10);\n        }\n        setNames(t, t.hasNames ? t.getNames().add([typeNames]) : typeNames);\n    }\n}\nexports.gatherNames = gatherNames;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expandStrings = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Support_1 = require(\"../support/Support\");\nconst TypeAttributes_1 = require(\"../attributes/TypeAttributes\");\nconst StringTypes_1 = require(\"../attributes/StringTypes\");\nconst MIN_LENGTH_FOR_ENUM = 10;\nconst MIN_LENGTH_FOR_OVERLAP = 5;\nconst REQUIRED_OVERLAP = 3 / 4;\nfunction isOwnEnum({ numValues, cases }) {\n    return numValues >= MIN_LENGTH_FOR_ENUM && cases.size < Math.sqrt(numValues);\n}\nfunction enumCasesOverlap(newCases, existingCases, newAreSubordinate) {\n    const smaller = newAreSubordinate ? newCases.size : Math.min(newCases.size, existingCases.size);\n    const overlap = (0, collection_utils_1.setIntersect)(newCases, existingCases).size;\n    return overlap >= smaller * REQUIRED_OVERLAP;\n}\nfunction isAlwaysEmptyString(cases) {\n    return cases.length === 1 && cases[0] === \"\";\n}\nfunction expandStrings(ctx, graph, inference) {\n    const stringTypeMapping = ctx.stringTypeMapping;\n    const allStrings = Array.from(graph.allTypesUnordered()).filter(t => t.kind === \"string\" && (0, TypeUtils_1.stringTypesForType)(t).isRestricted);\n    function makeEnumInfo(t) {\n        const stringTypes = (0, TypeUtils_1.stringTypesForType)(t);\n        const mappedStringTypes = stringTypes.applyStringTypeMapping(stringTypeMapping);\n        if (!mappedStringTypes.isRestricted)\n            return undefined;\n        const cases = (0, Support_1.defined)(mappedStringTypes.cases);\n        if (cases.size === 0)\n            return undefined;\n        const numValues = (0, collection_utils_1.iterableReduce)(cases.values(), 0, (a, b) => a + b);\n        if (inference !== \"all\") {\n            const keys = Array.from(cases.keys());\n            if (isAlwaysEmptyString(keys))\n                return undefined;\n            const someCaseIsNotNumber = (0, collection_utils_1.iterableSome)(keys, key => /^(\\-|\\+)?[0-9]+(\\.[0-9]+)?$/.test(key) === false);\n            if (!someCaseIsNotNumber)\n                return undefined;\n        }\n        return { cases: new Set(cases.keys()), numValues };\n    }\n    const enumInfos = new Map();\n    const enumSets = [];\n    if (inference !== \"none\") {\n        for (const t of allStrings) {\n            const enumInfo = makeEnumInfo(t);\n            if (enumInfo === undefined)\n                continue;\n            enumInfos.set(t, enumInfo);\n        }\n        function findOverlap(newCases, newAreSubordinate) {\n            return enumSets.findIndex(s => enumCasesOverlap(newCases, s, newAreSubordinate));\n        }\n        // First, make case sets for all the enums that stand on their own.  If\n        // we find some overlap (searching eagerly), make unions.\n        for (const t of Array.from(enumInfos.keys())) {\n            const enumInfo = (0, Support_1.defined)(enumInfos.get(t));\n            const cases = enumInfo.cases;\n            if (inference === \"all\") {\n                enumSets.push(cases);\n            }\n            else {\n                if (!isOwnEnum(enumInfo))\n                    continue;\n                const index = findOverlap(cases, false);\n                if (index >= 0) {\n                    // console.log(\n                    //     `unifying ${JSON.stringify(Array.from(cases))} with ${JSON.stringify(\n                    //         Array.from(enumSets[index])\n                    //     )}`\n                    // );\n                    enumSets[index] = (0, collection_utils_1.setUnion)(enumSets[index], cases);\n                }\n                else {\n                    // console.log(`adding new ${JSON.stringify(Array.from(cases))}`);\n                    enumSets.push(cases);\n                }\n            }\n            // Remove the ones we're done with.\n            enumInfos.delete(t);\n        }\n        if (inference === \"all\") {\n            (0, Support_1.assert)(enumInfos.size === 0);\n        }\n        // Now see if we can unify the rest with some a set we found in the\n        // previous step.\n        for (const [, enumInfo] of enumInfos.entries()) {\n            if (enumInfo.numValues < MIN_LENGTH_FOR_OVERLAP)\n                continue;\n            const index = findOverlap(enumInfo.cases, true);\n            if (index >= 0) {\n                // console.log(\n                //     `late unifying ${JSON.stringify(Array.from(enumInfo.cases))} with ${JSON.stringify(\n                //         Array.from(enumSets[index])\n                //     )}`\n                // );\n                enumSets[index] = (0, collection_utils_1.setUnion)(enumSets[index], enumInfo.cases);\n            }\n        }\n    }\n    function replaceString(group, builder, forwardingRef) {\n        (0, Support_1.assert)(group.size === 1);\n        const t = (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(group));\n        const stringTypes = (0, TypeUtils_1.stringTypesForType)(t);\n        const attributes = (0, collection_utils_1.mapFilter)(t.getAttributes(), a => a !== stringTypes);\n        const mappedStringTypes = stringTypes.applyStringTypeMapping(stringTypeMapping);\n        if (!mappedStringTypes.isRestricted) {\n            return builder.getStringType(attributes, StringTypes_1.StringTypes.unrestricted, forwardingRef);\n        }\n        const setMatches = inference === \"all\" ? collection_utils_1.areEqual : collection_utils_1.setIsSuperset;\n        const types = [];\n        const cases = (0, Support_1.defined)(mappedStringTypes.cases);\n        if (cases.size > 0) {\n            const keys = new Set(cases.keys());\n            const fullCases = enumSets.find(s => setMatches(s, keys));\n            if (inference !== \"none\" && !isAlwaysEmptyString(Array.from(keys)) && fullCases !== undefined) {\n                types.push(builder.getEnumType(TypeAttributes_1.emptyTypeAttributes, fullCases));\n            }\n            else {\n                return builder.getStringType(attributes, StringTypes_1.StringTypes.unrestricted, forwardingRef);\n            }\n        }\n        const transformations = mappedStringTypes.transformations;\n        // FIXME: This is probably wrong, or at least overly conservative.  This is for the case\n        // where some attributes are identity ones, i.e. where we can't merge the primitive types,\n        // like it happens in the line after the `if`.  The case where this occured was with URI\n        // attributes: we had two separate string types with different URI attributes, but because\n        // both are rewritten via `getPrimitiveType` below without any attributes, they end up\n        // being the same string type.\n        if (types.length === 0 && transformations.size === 1) {\n            const kind = (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(transformations));\n            return builder.getPrimitiveType(kind, attributes, forwardingRef);\n        }\n        types.push(...Array.from(transformations).map(k => builder.getPrimitiveType(k)));\n        (0, Support_1.assert)(types.length > 0, \"We got an empty string type\");\n        return builder.getUnionType(attributes, new Set(types), forwardingRef);\n    }\n    return graph.rewrite(\"expand strings\", stringTypeMapping, false, allStrings.map(t => [t]), ctx.debugPrintReconstitution, replaceString);\n}\nexports.expandStrings = expandStrings;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.flattenUnions = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst TypeGraph_1 = require(\"../TypeGraph\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Support_1 = require(\"../support/Support\");\nconst UnifyClasses_1 = require(\"../UnifyClasses\");\nconst Messages_1 = require(\"../Messages\");\nconst TypeAttributes_1 = require(\"../attributes/TypeAttributes\");\nfunction flattenUnions(graph, stringTypeMapping, conflateNumbers, makeObjectTypes, debugPrintReconstitution) {\n    let needsRepeat = false;\n    function replace(types, builder, forwardingRef) {\n        const unionBuilder = new UnifyClasses_1.UnifyUnionBuilder(builder, makeObjectTypes, true, trefs => {\n            (0, Support_1.assert)(trefs.length > 0, \"Must have at least one type to build union\");\n            trefs = trefs.map(tref => builder.reconstituteType((0, TypeGraph_1.derefTypeRef)(tref, graph)));\n            if (trefs.length === 1) {\n                return trefs[0];\n            }\n            needsRepeat = true;\n            return builder.getUnionType(TypeAttributes_1.emptyTypeAttributes, new Set(trefs));\n        });\n        return (0, UnifyClasses_1.unifyTypes)(types, TypeAttributes_1.emptyTypeAttributes, builder, unionBuilder, conflateNumbers, forwardingRef);\n    }\n    const allUnions = (0, collection_utils_1.setFilter)(graph.allTypesUnordered(), t => t instanceof Type_1.UnionType);\n    const nonCanonicalUnions = (0, collection_utils_1.setFilter)(allUnions, u => !u.isCanonical);\n    let foundIntersection = false;\n    const groups = (0, TypeUtils_1.makeGroupsToFlatten)(nonCanonicalUnions, members => {\n        (0, Messages_1.messageAssert)(members.size > 0, \"IRNoEmptyUnions\", {});\n        if (!(0, collection_utils_1.iterableSome)(members, m => m instanceof Type_1.IntersectionType))\n            return true;\n        // FIXME: This is stupid.  `flattenUnions` returns true when no more union\n        // flattening is necessary, but `resolveIntersections` can introduce new\n        // unions that might require flattening, so now `flattenUnions` needs to take\n        // that into account.  Either change `resolveIntersections` such that it\n        // doesn't introduce non-canonical unions (by using `unifyTypes`), or have\n        // some other way to tell whether more work is needed that doesn't require\n        // the two passes to know about each other.\n        foundIntersection = true;\n        return false;\n    });\n    graph = graph.rewrite(\"flatten unions\", stringTypeMapping, false, groups, debugPrintReconstitution, replace);\n    // console.log(`flattened ${nonCanonicalUnions.size} of ${unions.size} unions`);\n    return [graph, !needsRepeat && !foundIntersection];\n}\nexports.flattenUnions = flattenUnions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveIntersections = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst UnionBuilder_1 = require(\"../UnionBuilder\");\nconst Type_1 = require(\"../Type\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Support_1 = require(\"../support/Support\");\nconst TypeAttributes_1 = require(\"../attributes/TypeAttributes\");\nfunction canResolve(t) {\n    const members = (0, TypeUtils_1.setOperationMembersRecursively)(t, undefined)[0];\n    if (members.size <= 1)\n        return true;\n    return (0, collection_utils_1.iterableEvery)(members, m => !(m instanceof Type_1.UnionType) || m.isCanonical);\n}\nfunction attributesForTypes(types) {\n    return (0, collection_utils_1.mapMapEntries)(types.entries(), t => [t.kind, t.getAttributes()]);\n}\nclass IntersectionAccumulator {\n    constructor() {\n        this._primitiveAttributes = new Map();\n        this._arrayAttributes = TypeAttributes_1.emptyTypeAttributes;\n        // We start out with all object types allowed, which means\n        // _additionalPropertyTypes is empty - no restrictions - and\n        // _classProperties is empty - no defined properties so far.\n        //\n        // If _additionalPropertyTypes is undefined, no additional\n        // properties are allowed anymore.  If _classProperties is\n        // undefined, no object types are allowed, in which case\n        // _additionalPropertyTypes must also be undefined;\n        this._objectProperties = new Map();\n        this._objectAttributes = TypeAttributes_1.emptyTypeAttributes;\n        this._additionalPropertyTypes = new Set();\n        this._lostTypeAttributes = false;\n    }\n    updatePrimitiveTypes(members) {\n        const types = (0, collection_utils_1.setFilter)(members, t => (0, Type_1.isPrimitiveTypeKind)(t.kind));\n        const attributes = attributesForTypes(types);\n        (0, collection_utils_1.mapMergeWithInto)(this._primitiveAttributes, (a, b) => (0, TypeAttributes_1.combineTypeAttributes)(\"intersect\", a, b), attributes);\n        const kinds = (0, collection_utils_1.setMap)(types, t => t.kind);\n        if (this._primitiveTypes === undefined) {\n            this._primitiveTypes = new Set(kinds);\n            return;\n        }\n        const haveNumber = (0, collection_utils_1.iterableFind)(this._primitiveTypes, Type_1.isNumberTypeKind) !== undefined &&\n            (0, collection_utils_1.iterableFind)(kinds, Type_1.isNumberTypeKind) !== undefined;\n        this._primitiveTypes = (0, collection_utils_1.setIntersect)(this._primitiveTypes, kinds);\n        if (haveNumber && (0, collection_utils_1.iterableFind)(this._primitiveTypes, Type_1.isNumberTypeKind) === undefined) {\n            // One set has integer, the other has double.  The intersection\n            // of that is integer.\n            this._primitiveTypes = this._primitiveTypes.add(\"integer\");\n        }\n    }\n    updateArrayItemTypes(members) {\n        const maybeArray = (0, collection_utils_1.iterableFind)(members, t => t instanceof Type_1.ArrayType);\n        if (maybeArray === undefined) {\n            this._arrayItemTypes = false;\n            return;\n        }\n        this._arrayAttributes = (0, TypeAttributes_1.combineTypeAttributes)(\"intersect\", this._arrayAttributes, maybeArray.getAttributes());\n        if (this._arrayItemTypes === undefined) {\n            this._arrayItemTypes = new Set();\n        }\n        else if (this._arrayItemTypes !== false) {\n            this._arrayItemTypes.add(maybeArray.items);\n        }\n    }\n    updateObjectProperties(members) {\n        const maybeObject = (0, collection_utils_1.iterableFind)(members, t => t instanceof Type_1.ObjectType);\n        if (maybeObject === undefined) {\n            this._objectProperties = undefined;\n            this._additionalPropertyTypes = undefined;\n            return;\n        }\n        this._objectAttributes = (0, TypeAttributes_1.combineTypeAttributes)(\"intersect\", this._objectAttributes, maybeObject.getAttributes());\n        const objectAdditionalProperties = maybeObject.getAdditionalProperties();\n        if (this._objectProperties === undefined) {\n            (0, Support_1.assert)(this._additionalPropertyTypes === undefined);\n            return;\n        }\n        const allPropertyNames = (0, collection_utils_1.setUnionInto)(new Set(this._objectProperties.keys()), maybeObject.getProperties().keys());\n        for (const name of allPropertyNames) {\n            const existing = (0, Support_1.defined)(this._objectProperties).get(name);\n            const newProperty = maybeObject.getProperties().get(name);\n            if (existing !== undefined && newProperty !== undefined) {\n                const cp = new Type_1.GenericClassProperty(existing.typeData.add(newProperty.type), existing.isOptional && newProperty.isOptional);\n                (0, Support_1.defined)(this._objectProperties).set(name, cp);\n            }\n            else if (existing !== undefined && objectAdditionalProperties !== undefined) {\n                const cp = new Type_1.GenericClassProperty(existing.typeData.add(objectAdditionalProperties), existing.isOptional);\n                (0, Support_1.defined)(this._objectProperties).set(name, cp);\n            }\n            else if (existing !== undefined) {\n                (0, Support_1.defined)(this._objectProperties).delete(name);\n            }\n            else if (newProperty !== undefined && this._additionalPropertyTypes !== undefined) {\n                // FIXME: This is potentially slow\n                const types = new Set(this._additionalPropertyTypes).add(newProperty.type);\n                (0, Support_1.defined)(this._objectProperties).set(name, new Type_1.GenericClassProperty(types, newProperty.isOptional));\n            }\n            else if (newProperty !== undefined) {\n                (0, Support_1.defined)(this._objectProperties).delete(name);\n            }\n            else {\n                return (0, Support_1.mustNotHappen)();\n            }\n        }\n        if (this._additionalPropertyTypes !== undefined && objectAdditionalProperties !== undefined) {\n            this._additionalPropertyTypes.add(objectAdditionalProperties);\n        }\n        else if (this._additionalPropertyTypes !== undefined || objectAdditionalProperties !== undefined) {\n            this._additionalPropertyTypes = undefined;\n            this._lostTypeAttributes = true;\n        }\n    }\n    addUnionSet(members) {\n        this.updatePrimitiveTypes(members);\n        this.updateArrayItemTypes(members);\n        this.updateObjectProperties(members);\n    }\n    addType(t) {\n        let attributes = t.getAttributes();\n        (0, TypeUtils_1.matchTypeExhaustive)(t, _noneType => {\n            return (0, Support_1.panic)(\"There shouldn't be a none type\");\n        }, _anyType => {\n            return (0, Support_1.panic)(\"The any type should have been filtered out in setOperationMembersRecursively\");\n        }, nullType => this.addUnionSet([nullType]), boolType => this.addUnionSet([boolType]), integerType => this.addUnionSet([integerType]), doubleType => this.addUnionSet([doubleType]), stringType => this.addUnionSet([stringType]), arrayType => this.addUnionSet([arrayType]), _classType => (0, Support_1.panic)(\"We should never see class types in intersections\"), _mapType => (0, Support_1.panic)(\"We should never see map types in intersections\"), objectType => this.addUnionSet([objectType]), _enumType => (0, Support_1.panic)(\"We should never see enum types in intersections\"), unionType => {\n            attributes = (0, TypeAttributes_1.combineTypeAttributes)(\"intersect\", [attributes].concat(Array.from(unionType.members).map(m => m.getAttributes())));\n            this.addUnionSet(unionType.members);\n        }, transformedStringType => this.addUnionSet([transformedStringType]));\n        return (0, TypeAttributes_1.makeTypeAttributesInferred)(attributes);\n    }\n    get arrayData() {\n        if (this._arrayItemTypes === undefined || this._arrayItemTypes === false) {\n            return (0, Support_1.panic)(\"This should not be called if the type can't be an array\");\n        }\n        return this._arrayItemTypes;\n    }\n    get objectData() {\n        if (this._objectProperties === undefined) {\n            (0, Support_1.assert)(this._additionalPropertyTypes === undefined);\n            return undefined;\n        }\n        return [this._objectProperties, this._additionalPropertyTypes];\n    }\n    get enumCases() {\n        return (0, Support_1.panic)(\"We don't support enums in intersections\");\n    }\n    getMemberKinds() {\n        const kinds = (0, collection_utils_1.mapMap)((0, Support_1.defined)(this._primitiveTypes).entries(), k => (0, Support_1.defined)(this._primitiveAttributes.get(k)));\n        const maybeDoubleAttributes = this._primitiveAttributes.get(\"double\");\n        // If double was eliminated, add its attributes to integer\n        if (maybeDoubleAttributes !== undefined && !kinds.has(\"double\") && kinds.has(\"integer\")) {\n            // FIXME: How can this ever happen???  Where do we \"eliminate\" double?\n            (0, collection_utils_1.mapUpdateInto)(kinds, \"integer\", a => {\n                return (0, TypeAttributes_1.combineTypeAttributes)(\"intersect\", (0, Support_1.defined)(a), maybeDoubleAttributes);\n            });\n        }\n        if (this._arrayItemTypes !== undefined && this._arrayItemTypes !== false) {\n            kinds.set(\"array\", this._arrayAttributes);\n        }\n        else if (this._arrayAttributes.size > 0) {\n            this._lostTypeAttributes = true;\n        }\n        if (this._objectProperties !== undefined) {\n            kinds.set(\"object\", this._objectAttributes);\n        }\n        else if (this._objectAttributes.size > 0) {\n            this._lostTypeAttributes = true;\n        }\n        return kinds;\n    }\n    get lostTypeAttributes() {\n        return this._lostTypeAttributes;\n    }\n}\nclass IntersectionUnionBuilder extends UnionBuilder_1.UnionBuilder {\n    constructor() {\n        super(...arguments);\n        this._createdNewIntersections = false;\n    }\n    makeIntersection(members, attributes) {\n        const reconstitutedMembers = (0, collection_utils_1.setMap)(members, t => this.typeBuilder.reconstituteTypeRef(t.typeRef));\n        const first = (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(reconstitutedMembers));\n        if (reconstitutedMembers.size === 1) {\n            this.typeBuilder.addAttributes(first, attributes);\n            return first;\n        }\n        this._createdNewIntersections = true;\n        return this.typeBuilder.getUniqueIntersectionType(attributes, reconstitutedMembers);\n    }\n    get createdNewIntersections() {\n        return this._createdNewIntersections;\n    }\n    makeObject(maybeData, typeAttributes, forwardingRef) {\n        if (maybeData === undefined) {\n            return (0, Support_1.panic)(\"Either properties or additional properties must be given to make an object type\");\n        }\n        const [propertyTypes, maybeAdditionalProperties] = maybeData;\n        const properties = (0, collection_utils_1.mapMap)(propertyTypes, cp => this.typeBuilder.makeClassProperty(this.makeIntersection(cp.typeData, TypeAttributes_1.emptyTypeAttributes), cp.isOptional));\n        const additionalProperties = maybeAdditionalProperties === undefined\n            ? undefined\n            : this.makeIntersection(maybeAdditionalProperties, TypeAttributes_1.emptyTypeAttributes);\n        return this.typeBuilder.getUniqueObjectType(typeAttributes, properties, additionalProperties, forwardingRef);\n    }\n    makeArray(arrays, typeAttributes, forwardingRef) {\n        // FIXME: attributes\n        const itemsType = this.makeIntersection(arrays, TypeAttributes_1.emptyTypeAttributes);\n        const tref = this.typeBuilder.getArrayType(typeAttributes, itemsType, forwardingRef);\n        return tref;\n    }\n}\nfunction resolveIntersections(graph, stringTypeMapping, debugPrintReconstitution) {\n    let needsRepeat = false;\n    function replace(types, builder, forwardingRef) {\n        const intersections = (0, collection_utils_1.setFilter)(types, t => t instanceof Type_1.IntersectionType);\n        const [members, intersectionAttributes] = (0, TypeUtils_1.setOperationMembersRecursively)(Array.from(intersections), \"intersect\");\n        if (members.size === 0) {\n            const t = builder.getPrimitiveType(\"any\", intersectionAttributes, forwardingRef);\n            return t;\n        }\n        if (members.size === 1) {\n            return builder.reconstituteType((0, Support_1.defined)((0, collection_utils_1.iterableFirst)(members)), intersectionAttributes, forwardingRef);\n        }\n        const accumulator = new IntersectionAccumulator();\n        const extraAttributes = (0, TypeAttributes_1.makeTypeAttributesInferred)((0, TypeAttributes_1.combineTypeAttributes)(\"intersect\", Array.from(members).map(t => accumulator.addType(t))));\n        const attributes = (0, TypeAttributes_1.combineTypeAttributes)(\"intersect\", intersectionAttributes, extraAttributes);\n        const unionBuilder = new IntersectionUnionBuilder(builder);\n        const tref = unionBuilder.buildUnion(accumulator, true, attributes, forwardingRef);\n        if (unionBuilder.createdNewIntersections) {\n            needsRepeat = true;\n        }\n        return tref;\n    }\n    // FIXME: We need to handle intersections that resolve to the same set of types.\n    // See for example the intersections-nested.schema example.\n    const allIntersections = (0, collection_utils_1.setFilter)(graph.allTypesUnordered(), t => t instanceof Type_1.IntersectionType);\n    const resolvableIntersections = (0, collection_utils_1.setFilter)(allIntersections, canResolve);\n    const groups = (0, TypeUtils_1.makeGroupsToFlatten)(resolvableIntersections, undefined);\n    graph = graph.rewrite(\"resolve intersections\", stringTypeMapping, false, groups, debugPrintReconstitution, replace);\n    // console.log(`resolved ${resolvableIntersections.size} of ${intersections.size} intersections`);\n    return [graph, !needsRepeat && allIntersections.size === resolvableIntersections.size];\n}\nexports.resolveIntersections = resolveIntersections;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.replaceObjectType = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Support_1 = require(\"../support/Support\");\nconst TypeAttributes_1 = require(\"../attributes/TypeAttributes\");\nfunction replaceObjectType(graph, stringTypeMapping, _conflateNumbers, leaveFullObjects, debugPrintReconstitution) {\n    function replace(setOfOneType, builder, forwardingRef) {\n        const o = (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(setOfOneType));\n        const attributes = o.getAttributes();\n        const properties = o.getProperties();\n        const additionalProperties = o.getAdditionalProperties();\n        function reconstituteProperties() {\n            return (0, collection_utils_1.mapMap)(properties, cp => builder.makeClassProperty(builder.reconstituteTypeRef(cp.typeRef), cp.isOptional));\n        }\n        function makeClass() {\n            return builder.getUniqueClassType(attributes, true, reconstituteProperties(), forwardingRef);\n        }\n        function reconstituteAdditionalProperties() {\n            return builder.reconstituteType((0, Support_1.defined)(additionalProperties));\n        }\n        if (additionalProperties === undefined) {\n            return makeClass();\n        }\n        if (properties.size === 0) {\n            return builder.getMapType(attributes, reconstituteAdditionalProperties(), forwardingRef);\n        }\n        if (additionalProperties.kind === \"any\") {\n            // FIXME: Warn that we're losing additional property semantics.\n            builder.setLostTypeAttributes();\n            return makeClass();\n        }\n        // FIXME: Warn that we're losing class semantics.\n        const propertyTypes = (0, collection_utils_1.setMap)(properties.values(), cp => cp.type).add(additionalProperties);\n        let union = builder.lookupTypeRefs(Array.from(propertyTypes).map(t => t.typeRef));\n        if (union === undefined) {\n            const reconstitutedTypes = (0, collection_utils_1.setMap)(propertyTypes, t => builder.reconstituteType(t));\n            union = builder.getUniqueUnionType(TypeAttributes_1.emptyTypeAttributes, new Set(reconstitutedTypes));\n            // This is the direct unification alternative.  Weirdly enough, it is a tiny\n            // bit slower.  It gives the same results.\n            /*\n            union = unifyTypes(\n                propertyTypes,\n                combineTypeAttributes(propertyTypes.toArray().map(t => t.getAttributes())),\n                builder,\n                unionBuilderForUnification(builder, false, false, false, conflateNumbers),\n                conflateNumbers\n            );\n            */\n        }\n        return builder.getMapType(attributes, union, forwardingRef);\n    }\n    const allObjectTypes = (0, collection_utils_1.setFilter)(graph.allTypesUnordered(), t => t.kind === \"object\");\n    const objectTypesToReplace = leaveFullObjects\n        ? (0, collection_utils_1.setFilter)(allObjectTypes, o => o.getProperties().size === 0 || o.getAdditionalProperties() === undefined)\n        : allObjectTypes;\n    const groups = Array.from(objectTypesToReplace).map(t => [t]);\n    return graph.rewrite(\"replace object type\", stringTypeMapping, false, groups, debugPrintReconstitution, replace);\n}\nexports.replaceObjectType = replaceObjectType;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompressedJSONFromString = exports.CompressedJSON = exports.valueTag = exports.makeValue = exports.Tag = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst Support_1 = require(\"../support/Support\");\nconst Type_1 = require(\"../Type\");\nconst StringTypes_1 = require(\"../attributes/StringTypes\");\nvar Tag;\n(function (Tag) {\n    Tag[Tag[\"Null\"] = 0] = \"Null\";\n    Tag[Tag[\"False\"] = 1] = \"False\";\n    Tag[Tag[\"True\"] = 2] = \"True\";\n    Tag[Tag[\"Integer\"] = 3] = \"Integer\";\n    Tag[Tag[\"Double\"] = 4] = \"Double\";\n    Tag[Tag[\"InternedString\"] = 5] = \"InternedString\";\n    Tag[Tag[\"UninternedString\"] = 6] = \"UninternedString\";\n    Tag[Tag[\"Object\"] = 7] = \"Object\";\n    Tag[Tag[\"Array\"] = 8] = \"Array\";\n    Tag[Tag[\"StringFormat\"] = 9] = \"StringFormat\";\n    Tag[Tag[\"TransformedString\"] = 10] = \"TransformedString\";\n})(Tag = exports.Tag || (exports.Tag = {}));\nconst TAG_BITS = 4;\nconst TAG_MASK = (1 << TAG_BITS) - 1;\nfunction makeValue(t, index) {\n    return t | (index << TAG_BITS);\n}\nexports.makeValue = makeValue;\nfunction getIndex(v, tag) {\n    (0, Support_1.assert)(valueTag(v) === tag, \"Trying to get index for value with invalid tag\");\n    return v >> TAG_BITS;\n}\nfunction valueTag(v) {\n    return v & TAG_MASK;\n}\nexports.valueTag = valueTag;\nclass CompressedJSON {\n    constructor(dateTimeRecognizer, handleRefs) {\n        this.dateTimeRecognizer = dateTimeRecognizer;\n        this.handleRefs = handleRefs;\n        this._contextStack = [];\n        this._strings = [];\n        this._stringIndexes = {};\n        this._objects = [];\n        this._arrays = [];\n        this.getObjectForValue = (v) => {\n            return this._objects[getIndex(v, Tag.Object)];\n        };\n        this.getArrayForValue = (v) => {\n            return this._arrays[getIndex(v, Tag.Array)];\n        };\n        this.internArray = (arr) => {\n            const index = this._arrays.length;\n            this._arrays.push(arr);\n            return makeValue(Tag.Array, index);\n        };\n    }\n    parseSync(_input) {\n        return (0, Support_1.panic)(\"parseSync not implemented in CompressedJSON\");\n    }\n    getStringForValue(v) {\n        const tag = valueTag(v);\n        (0, Support_1.assert)(tag === Tag.InternedString || tag === Tag.TransformedString);\n        return this._strings[getIndex(v, tag)];\n    }\n    getStringFormatTypeKind(v) {\n        const kind = this._strings[getIndex(v, Tag.StringFormat)];\n        if (!(0, Type_1.isPrimitiveStringTypeKind)(kind) || kind === \"string\") {\n            return (0, Support_1.panic)(\"Not a transformed string type kind\");\n        }\n        return kind;\n    }\n    get context() {\n        return (0, Support_1.defined)(this._ctx);\n    }\n    internString(s) {\n        if (Object.prototype.hasOwnProperty.call(this._stringIndexes, s)) {\n            return this._stringIndexes[s];\n        }\n        const index = this._strings.length;\n        this._strings.push(s);\n        this._stringIndexes[s] = index;\n        return index;\n    }\n    makeString(s) {\n        const value = makeValue(Tag.InternedString, this.internString(s));\n        (0, Support_1.assert)(typeof value === \"number\", `Interned string value is not a number: ${value}`);\n        return value;\n    }\n    internObject(obj) {\n        const index = this._objects.length;\n        this._objects.push(obj);\n        return makeValue(Tag.Object, index);\n    }\n    get isExpectingRef() {\n        return this._ctx !== undefined && this._ctx.currentKey === \"$ref\";\n    }\n    commitValue(value) {\n        (0, Support_1.assert)(typeof value === \"number\", `CompressedJSON value is not a number: ${value}`);\n        if (this._ctx === undefined) {\n            (0, Support_1.assert)(this._rootValue === undefined, \"Committing value but nowhere to commit to - root value still there.\");\n            this._rootValue = value;\n        }\n        else if (this._ctx.currentObject !== undefined) {\n            if (this._ctx.currentKey === undefined) {\n                return (0, Support_1.panic)(\"Must have key and can't have string when committing\");\n            }\n            this._ctx.currentObject.push(this.makeString(this._ctx.currentKey), value);\n            this._ctx.currentKey = undefined;\n        }\n        else if (this._ctx.currentArray !== undefined) {\n            this._ctx.currentArray.push(value);\n        }\n        else {\n            return (0, Support_1.panic)(\"Committing value but nowhere to commit to\");\n        }\n    }\n    commitNull() {\n        this.commitValue(makeValue(Tag.Null, 0));\n    }\n    commitBoolean(v) {\n        this.commitValue(makeValue(v ? Tag.True : Tag.False, 0));\n    }\n    commitNumber(isDouble) {\n        const numberTag = isDouble ? Tag.Double : Tag.Integer;\n        this.commitValue(makeValue(numberTag, 0));\n    }\n    commitString(s) {\n        let value = undefined;\n        if (this.handleRefs && this.isExpectingRef) {\n            value = this.makeString(s);\n        }\n        else {\n            const format = (0, StringTypes_1.inferTransformedStringTypeKindForString)(s, this.dateTimeRecognizer);\n            if (format !== undefined) {\n                if ((0, Support_1.defined)(Type_1.transformedStringTypeTargetTypeKindsMap.get(format)).attributesProducer !== undefined) {\n                    value = makeValue(Tag.TransformedString, this.internString(s));\n                }\n                else {\n                    value = makeValue(Tag.StringFormat, this.internString(format));\n                }\n            }\n            else if (s.length <= 64) {\n                value = this.makeString(s);\n            }\n            else {\n                value = makeValue(Tag.UninternedString, 0);\n            }\n        }\n        this.commitValue(value);\n    }\n    finish() {\n        const value = this._rootValue;\n        if (value === undefined) {\n            return (0, Support_1.panic)(\"Finished without root document\");\n        }\n        (0, Support_1.assert)(this._ctx === undefined && this._contextStack.length === 0, \"Finished with contexts present\");\n        this._rootValue = undefined;\n        return value;\n    }\n    pushContext() {\n        if (this._ctx !== undefined) {\n            this._contextStack.push(this._ctx);\n        }\n        this._ctx = {\n            currentObject: undefined,\n            currentArray: undefined,\n            currentKey: undefined,\n            currentNumberIsDouble: false\n        };\n    }\n    pushObjectContext() {\n        this.pushContext();\n        (0, Support_1.defined)(this._ctx).currentObject = [];\n    }\n    setPropertyKey(key) {\n        const ctx = this.context;\n        ctx.currentKey = key;\n    }\n    finishObject() {\n        const obj = this.context.currentObject;\n        if (obj === undefined) {\n            return (0, Support_1.panic)(\"Object ended but not started\");\n        }\n        this.popContext();\n        this.commitValue(this.internObject(obj));\n    }\n    pushArrayContext() {\n        this.pushContext();\n        (0, Support_1.defined)(this._ctx).currentArray = [];\n    }\n    finishArray() {\n        const arr = this.context.currentArray;\n        if (arr === undefined) {\n            return (0, Support_1.panic)(\"Array ended but not started\");\n        }\n        this.popContext();\n        this.commitValue(this.internArray(arr));\n    }\n    popContext() {\n        (0, Support_1.assert)(this._ctx !== undefined, \"Popping context when there isn't one\");\n        this._ctx = this._contextStack.pop();\n    }\n    equals(other) {\n        return this === other;\n    }\n    hashCode() {\n        let hashAccumulator = collection_utils_1.hashCodeInit;\n        for (const s of this._strings) {\n            hashAccumulator = (0, collection_utils_1.addHashCode)(hashAccumulator, (0, collection_utils_1.hashString)(s));\n        }\n        for (const s of Object.getOwnPropertyNames(this._stringIndexes).sort()) {\n            hashAccumulator = (0, collection_utils_1.addHashCode)(hashAccumulator, (0, collection_utils_1.hashString)(s));\n            hashAccumulator = (0, collection_utils_1.addHashCode)(hashAccumulator, this._stringIndexes[s]);\n        }\n        for (const o of this._objects) {\n            for (const v of o) {\n                hashAccumulator = (0, collection_utils_1.addHashCode)(hashAccumulator, v);\n            }\n        }\n        for (const o of this._arrays) {\n            for (const v of o) {\n                hashAccumulator = (0, collection_utils_1.addHashCode)(hashAccumulator, v);\n            }\n        }\n        return hashAccumulator;\n    }\n}\nexports.CompressedJSON = CompressedJSON;\nclass CompressedJSONFromString extends CompressedJSON {\n    parse(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.parseSync(input);\n        });\n    }\n    parseSync(input) {\n        const json = JSON.parse(input);\n        this.process(json);\n        return this.finish();\n    }\n    process(json) {\n        if (json === null) {\n            this.commitNull();\n        }\n        else if (typeof json === \"boolean\") {\n            this.commitBoolean(json);\n        }\n        else if (typeof json === \"string\") {\n            this.commitString(json);\n        }\n        else if (typeof json === \"number\") {\n            const isDouble = json !== Math.floor(json) || json < Number.MIN_SAFE_INTEGER || json > Number.MAX_SAFE_INTEGER;\n            this.commitNumber(isDouble);\n        }\n        else if (Array.isArray(json)) {\n            this.pushArrayContext();\n            for (const v of json) {\n                this.process(v);\n            }\n            this.finishArray();\n        }\n        else if (typeof json === \"object\") {\n            this.pushObjectContext();\n            for (const key of Object.getOwnPropertyNames(json)) {\n                this.setPropertyKey(key);\n                this.process(json[key]);\n            }\n            this.finishObject();\n        }\n        else {\n            return (0, Support_1.panic)(\"Invalid JSON object\");\n        }\n    }\n}\nexports.CompressedJSONFromString = CompressedJSONFromString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeInference = void 0;\nconst CompressedJSON_1 = require(\"./CompressedJSON\");\nconst Support_1 = require(\"../support/Support\");\nconst UnionBuilder_1 = require(\"../UnionBuilder\");\nconst Type_1 = require(\"../Type\");\nconst TypeAttributes_1 = require(\"../attributes/TypeAttributes\");\nconst StringTypes_1 = require(\"../attributes/StringTypes\");\nconst TypeGraph_1 = require(\"../TypeGraph\");\nconst Messages_1 = require(\"../Messages\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nfunction forEachArrayInNestedValueArray(va, f) {\n    if (va.length === 0) {\n        return;\n    }\n    if (Array.isArray(va[0])) {\n        for (const x of va) {\n            forEachArrayInNestedValueArray(x, f);\n        }\n    }\n    else {\n        f(va);\n    }\n}\nfunction forEachValueInNestedValueArray(va, f) {\n    forEachArrayInNestedValueArray(va, a => {\n        for (const x of a) {\n            f(x);\n        }\n    });\n}\nclass InferenceUnionBuilder extends UnionBuilder_1.UnionBuilder {\n    constructor(typeBuilder, _typeInference, _fixed) {\n        super(typeBuilder);\n        this._typeInference = _typeInference;\n        this._fixed = _fixed;\n    }\n    makeObject(objects, typeAttributes, forwardingRef) {\n        return this._typeInference.inferClassType(typeAttributes, objects, this._fixed, forwardingRef);\n    }\n    makeArray(arrays, typeAttributes, forwardingRef) {\n        return this.typeBuilder.getArrayType(typeAttributes, this._typeInference.inferType(TypeAttributes_1.emptyTypeAttributes, arrays, this._fixed, forwardingRef));\n    }\n}\nfunction canBeEnumCase(_s) {\n    return true;\n}\nclass TypeInference {\n    constructor(_cjson, _typeBuilder, _inferMaps, _inferEnums) {\n        this._cjson = _cjson;\n        this._typeBuilder = _typeBuilder;\n        this._inferMaps = _inferMaps;\n        this._inferEnums = _inferEnums;\n    }\n    addValuesToAccumulator(valueArray, accumulator) {\n        forEachValueInNestedValueArray(valueArray, value => {\n            const t = (0, CompressedJSON_1.valueTag)(value);\n            switch (t) {\n                case CompressedJSON_1.Tag.Null:\n                    accumulator.addPrimitive(\"null\", TypeAttributes_1.emptyTypeAttributes);\n                    break;\n                case CompressedJSON_1.Tag.False:\n                case CompressedJSON_1.Tag.True:\n                    accumulator.addPrimitive(\"bool\", TypeAttributes_1.emptyTypeAttributes);\n                    break;\n                case CompressedJSON_1.Tag.Integer:\n                    accumulator.addPrimitive(\"integer\", TypeAttributes_1.emptyTypeAttributes);\n                    break;\n                case CompressedJSON_1.Tag.Double:\n                    accumulator.addPrimitive(\"double\", TypeAttributes_1.emptyTypeAttributes);\n                    break;\n                case CompressedJSON_1.Tag.InternedString:\n                    if (this._inferEnums) {\n                        const s = this._cjson.getStringForValue(value);\n                        if (canBeEnumCase(s)) {\n                            accumulator.addStringCase(s, 1, TypeAttributes_1.emptyTypeAttributes);\n                        }\n                        else {\n                            accumulator.addStringType(\"string\", TypeAttributes_1.emptyTypeAttributes);\n                        }\n                    }\n                    else {\n                        accumulator.addStringType(\"string\", TypeAttributes_1.emptyTypeAttributes);\n                    }\n                    break;\n                case CompressedJSON_1.Tag.UninternedString:\n                    accumulator.addStringType(\"string\", TypeAttributes_1.emptyTypeAttributes);\n                    break;\n                case CompressedJSON_1.Tag.Object:\n                    accumulator.addObject(this._cjson.getObjectForValue(value), TypeAttributes_1.emptyTypeAttributes);\n                    break;\n                case CompressedJSON_1.Tag.Array:\n                    accumulator.addArray(this._cjson.getArrayForValue(value), TypeAttributes_1.emptyTypeAttributes);\n                    break;\n                case CompressedJSON_1.Tag.StringFormat: {\n                    const kind = this._cjson.getStringFormatTypeKind(value);\n                    accumulator.addStringType(\"string\", TypeAttributes_1.emptyTypeAttributes, new StringTypes_1.StringTypes(new Map(), new Set([kind])));\n                    break;\n                }\n                case CompressedJSON_1.Tag.TransformedString: {\n                    const s = this._cjson.getStringForValue(value);\n                    const kind = (0, StringTypes_1.inferTransformedStringTypeKindForString)(s, this._cjson.dateTimeRecognizer);\n                    if (kind === undefined) {\n                        return (0, Support_1.panic)(\"TransformedString does not have a kind\");\n                    }\n                    const producer = (0, Support_1.defined)(Type_1.transformedStringTypeTargetTypeKindsMap.get(kind)).attributesProducer;\n                    if (producer === undefined) {\n                        return (0, Support_1.panic)(\"TransformedString does not have attribute producer\");\n                    }\n                    accumulator.addStringType(\"string\", producer(s), new StringTypes_1.StringTypes(new Map(), new Set([kind])));\n                    break;\n                }\n                default:\n                    return (0, Support_1.assertNever)(t);\n            }\n        });\n    }\n    inferType(typeAttributes, valueArray, fixed, forwardingRef) {\n        const accumulator = this.accumulatorForArray(valueArray);\n        return this.makeTypeFromAccumulator(accumulator, typeAttributes, fixed, forwardingRef);\n    }\n    resolveRef(ref, topLevel) {\n        if (!ref.startsWith(\"#/\")) {\n            return (0, Messages_1.messageError)(\"InferenceJSONReferenceNotRooted\", { reference: ref });\n        }\n        const parts = ref.split(\"/\").slice(1);\n        const graph = this._typeBuilder.typeGraph;\n        let tref = topLevel;\n        for (const part of parts) {\n            let t = (0, TypeGraph_1.derefTypeRef)(tref, graph);\n            if (t instanceof Type_1.UnionType) {\n                const nullable = (0, TypeUtils_1.nullableFromUnion)(t);\n                if (nullable === null) {\n                    // FIXME: handle unions\n                    return (0, Messages_1.messageError)(\"InferenceJSONReferenceToUnion\", { reference: ref });\n                }\n                t = nullable;\n            }\n            if (t instanceof Type_1.ClassType) {\n                const cp = t.getProperties().get(part);\n                if (cp === undefined) {\n                    return (0, Messages_1.messageError)(\"InferenceJSONReferenceWrongProperty\", { reference: ref });\n                }\n                tref = cp.typeRef;\n            }\n            else if (t instanceof Type_1.MapType) {\n                tref = t.values.typeRef;\n            }\n            else if (t instanceof Type_1.ArrayType) {\n                if (part.match(\"^[0-9]+$\") === null) {\n                    return (0, Messages_1.messageError)(\"InferenceJSONReferenceInvalidArrayIndex\", { reference: ref });\n                }\n                tref = t.items.typeRef;\n            }\n            else {\n                return (0, Messages_1.messageError)(\"InferenceJSONReferenceWrongProperty\", { reference: ref });\n            }\n        }\n        return tref;\n    }\n    inferTopLevelType(typeAttributes, valueArray, fixed) {\n        (0, Support_1.assert)(this._refIntersections === undefined, \"Didn't reset ref intersections - nested invocations?\");\n        if (this._cjson.handleRefs) {\n            this._refIntersections = [];\n        }\n        const topLevel = this.inferType(typeAttributes, valueArray, fixed);\n        if (this._cjson.handleRefs) {\n            for (const [tref, refs] of (0, Support_1.defined)(this._refIntersections)) {\n                const resolved = refs.map(r => this.resolveRef(r, topLevel));\n                this._typeBuilder.setSetOperationMembers(tref, new Set(resolved));\n            }\n            this._refIntersections = undefined;\n        }\n        return topLevel;\n    }\n    accumulatorForArray(valueArray) {\n        const accumulator = new UnionBuilder_1.UnionAccumulator(true);\n        this.addValuesToAccumulator(valueArray, accumulator);\n        return accumulator;\n    }\n    makeTypeFromAccumulator(accumulator, typeAttributes, fixed, forwardingRef) {\n        const unionBuilder = new InferenceUnionBuilder(this._typeBuilder, this, fixed);\n        return unionBuilder.buildUnion(accumulator, false, typeAttributes, forwardingRef);\n    }\n    inferClassType(typeAttributes, objects, fixed, forwardingRef) {\n        const propertyNames = [];\n        const propertyValues = {};\n        forEachArrayInNestedValueArray(objects, arr => {\n            for (let i = 0; i < arr.length; i += 2) {\n                const key = this._cjson.getStringForValue(arr[i]);\n                const value = arr[i + 1];\n                if (!Object.prototype.hasOwnProperty.call(propertyValues, key)) {\n                    propertyNames.push(key);\n                    propertyValues[key] = [];\n                }\n                propertyValues[key].push(value);\n            }\n        });\n        if (this._cjson.handleRefs && propertyNames.length === 1 && propertyNames[0] === \"$ref\") {\n            const values = propertyValues[\"$ref\"];\n            if (values.every(v => (0, CompressedJSON_1.valueTag)(v) === CompressedJSON_1.Tag.InternedString)) {\n                const allRefs = values.map(v => this._cjson.getStringForValue(v));\n                // FIXME: Add is-ref attribute\n                const tref = this._typeBuilder.getUniqueIntersectionType(typeAttributes, undefined);\n                (0, Support_1.defined)(this._refIntersections).push([tref, allRefs]);\n                return tref;\n            }\n        }\n        if (this._inferMaps && propertyNames.length > 500) {\n            const accumulator = new UnionBuilder_1.UnionAccumulator(true);\n            for (const key of propertyNames) {\n                this.addValuesToAccumulator(propertyValues[key], accumulator);\n            }\n            const values = this.makeTypeFromAccumulator(accumulator, TypeAttributes_1.emptyTypeAttributes, fixed);\n            return this._typeBuilder.getMapType(typeAttributes, values, forwardingRef);\n        }\n        const properties = new Map();\n        for (const key of propertyNames) {\n            const values = propertyValues[key];\n            const t = this.inferType(TypeAttributes_1.emptyTypeAttributes, values, false);\n            const isOptional = values.length < objects.length;\n            properties.set(key, this._typeBuilder.makeClassProperty(t, isOptional));\n        }\n        if (fixed) {\n            return this._typeBuilder.getUniqueClassType(typeAttributes, true, properties, forwardingRef);\n        }\n        else {\n            return this._typeBuilder.getClassType(typeAttributes, properties, forwardingRef);\n        }\n    }\n}\nexports.TypeInference = TypeInference;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InputData = exports.jsonInputForTargetLanguage = exports.JSONInput = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst CompressedJSON_1 = require(\"./CompressedJSON\");\nconst Support_1 = require(\"../support/Support\");\nconst Messages_1 = require(\"../Messages\");\nconst TypeNames_1 = require(\"../attributes/TypeNames\");\nconst Description_1 = require(\"../attributes/Description\");\nconst Inference_1 = require(\"./Inference\");\nconst All_1 = require(\"../language/All\");\nfunction messageParseError(name, description, e) {\n    return (0, Messages_1.messageError)(\"MiscJSONParseError\", {\n        description: (0, collection_utils_1.withDefault)(description, \"input\"),\n        address: name,\n        message: (0, Support_1.errorMessage)(e)\n    });\n}\nclass JSONInput {\n    /* tslint:disable:no-unused-variable */\n    constructor(_compressedJSON) {\n        this._compressedJSON = _compressedJSON;\n        this.kind = \"json\";\n        this.needIR = true;\n        this.needSchemaProcessing = false;\n        this._topLevels = new Map();\n    }\n    addSample(topLevelName, sample) {\n        let topLevel = this._topLevels.get(topLevelName);\n        if (topLevel === undefined) {\n            topLevel = { samples: [], description: undefined };\n            this._topLevels.set(topLevelName, topLevel);\n        }\n        topLevel.samples.push(sample);\n    }\n    setDescription(topLevelName, description) {\n        let topLevel = this._topLevels.get(topLevelName);\n        if (topLevel === undefined) {\n            return (0, Support_1.panic)(\"Trying to set description for a top-level that doesn't exist\");\n        }\n        topLevel.description = description;\n    }\n    addSamples(name, values, description) {\n        for (const value of values) {\n            this.addSample(name, value);\n            if (description !== undefined) {\n                this.setDescription(name, description);\n            }\n        }\n    }\n    addSource(source) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { name, samples, description } = source;\n            try {\n                const values = yield (0, collection_utils_1.arrayMapSync)(samples, (s) => __awaiter(this, void 0, void 0, function* () { return yield this._compressedJSON.parse(s); }));\n                this.addSamples(name, values, description);\n            }\n            catch (e) {\n                return messageParseError(name, description, e);\n            }\n        });\n    }\n    addSourceSync(source) {\n        const { name, samples, description } = source;\n        try {\n            const values = samples.map(s => this._compressedJSON.parseSync(s));\n            this.addSamples(name, values, description);\n        }\n        catch (e) {\n            return messageParseError(name, description, e);\n        }\n    }\n    singleStringSchemaSource() {\n        return undefined;\n    }\n    addTypes(ctx, typeBuilder, inferMaps, inferEnums, fixedTopLevels) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.addTypesSync(ctx, typeBuilder, inferMaps, inferEnums, fixedTopLevels);\n        });\n    }\n    addTypesSync(_ctx, typeBuilder, inferMaps, inferEnums, fixedTopLevels) {\n        const inference = new Inference_1.TypeInference(this._compressedJSON, typeBuilder, inferMaps, inferEnums);\n        for (const [name, { samples, description }] of this._topLevels) {\n            const tref = inference.inferTopLevelType((0, TypeNames_1.makeNamesTypeAttributes)(name, false), samples, fixedTopLevels);\n            typeBuilder.addTopLevel(name, tref);\n            if (description !== undefined) {\n                const attributes = Description_1.descriptionTypeAttributeKind.makeAttributes(new Set([description]));\n                typeBuilder.addAttributes(tref, attributes);\n            }\n        }\n    }\n}\nexports.JSONInput = JSONInput;\nfunction jsonInputForTargetLanguage(targetLanguage, languages, handleJSONRefs = false) {\n    if (typeof targetLanguage === \"string\") {\n        targetLanguage = (0, Support_1.defined)((0, All_1.languageNamed)(targetLanguage, languages));\n    }\n    const compressedJSON = new CompressedJSON_1.CompressedJSONFromString(targetLanguage.dateTimeRecognizer, handleJSONRefs);\n    return new JSONInput(compressedJSON);\n}\nexports.jsonInputForTargetLanguage = jsonInputForTargetLanguage;\nclass InputData {\n    constructor() {\n        // FIXME: Make into a Map, indexed by kind.\n        this._inputs = new Set();\n    }\n    addInput(input) {\n        this._inputs = this._inputs.add(input);\n    }\n    getOrAddInput(kind, makeInput) {\n        let input = (0, collection_utils_1.iterableFind)(this._inputs, i => i.kind === kind);\n        if (input === undefined) {\n            input = makeInput();\n            this.addInput(input);\n        }\n        return input;\n    }\n    addSource(kind, source, makeInput) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const input = this.getOrAddInput(kind, makeInput);\n            yield input.addSource(source);\n        });\n    }\n    addSourceSync(kind, source, makeInput) {\n        const input = this.getOrAddInput(kind, makeInput);\n        input.addSourceSync(source);\n    }\n    addTypes(ctx, typeBuilder, inferMaps, inferEnums, fixedTopLevels) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const input of this._inputs) {\n                yield input.addTypes(ctx, typeBuilder, inferMaps, inferEnums, fixedTopLevels);\n            }\n        });\n    }\n    addTypesSync(ctx, typeBuilder, inferMaps, inferEnums, fixedTopLevels) {\n        for (const input of this._inputs) {\n            input.addTypesSync(ctx, typeBuilder, inferMaps, inferEnums, fixedTopLevels);\n        }\n    }\n    get needIR() {\n        return (0, collection_utils_1.iterableSome)(this._inputs, i => i.needIR);\n    }\n    get needSchemaProcessing() {\n        return (0, collection_utils_1.iterableSome)(this._inputs, i => i.needSchemaProcessing);\n    }\n    singleStringSchemaSource() {\n        const schemaStrings = (0, collection_utils_1.setFilterMap)(this._inputs, i => i.singleStringSchemaSource());\n        if (schemaStrings.size > 1) {\n            return (0, Support_1.panic)(\"We have more than one input with a string schema source\");\n        }\n        return (0, collection_utils_1.iterableFirst)(schemaStrings);\n    }\n}\nexports.InputData = InputData;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.flattenStrings = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst TypeUtils_1 = require(\"../TypeUtils\");\nconst Support_1 = require(\"../support/Support\");\nconst TypeAttributes_1 = require(\"../attributes/TypeAttributes\");\n// A union needs replacing if it contains more than one string type, one of them being\n// a basic string type.\nfunction unionNeedsReplacing(u) {\n    const stringMembers = u.stringTypeMembers;\n    if (stringMembers.size <= 1)\n        return undefined;\n    const stringType = u.findMember(\"string\");\n    if (stringType === undefined)\n        return undefined;\n    (0, Support_1.assert)(!(0, TypeUtils_1.stringTypesForType)(stringType).isRestricted, \"We must only flatten strings if we have no restriced strings\");\n    return stringMembers;\n}\n// Replaces all string types in an enum with the basic string type.\nfunction replaceUnion(group, builder, forwardingRef) {\n    (0, Support_1.assert)(group.size === 1);\n    const u = (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(group));\n    const stringMembers = (0, Support_1.defined)(unionNeedsReplacing(u));\n    const stringAttributes = (0, TypeUtils_1.combineTypeAttributesOfTypes)(\"union\", stringMembers);\n    const types = [];\n    for (const t of u.members) {\n        if (stringMembers.has(t))\n            continue;\n        types.push(builder.reconstituteType(t));\n    }\n    if (types.length === 0) {\n        return builder.getStringType((0, TypeAttributes_1.combineTypeAttributes)(\"union\", stringAttributes, u.getAttributes()), undefined, forwardingRef);\n    }\n    types.push(builder.getStringType(stringAttributes, undefined));\n    return builder.getUnionType(u.getAttributes(), new Set(types), forwardingRef);\n}\nfunction flattenStrings(graph, stringTypeMapping, debugPrintReconstitution) {\n    const allUnions = graph.allNamedTypesSeparated().unions;\n    const unionsToReplace = Array.from(allUnions)\n        .filter(unionNeedsReplacing)\n        .map(t => [t]);\n    return graph.rewrite(\"flatten strings\", stringTypeMapping, false, unionsToReplace, debugPrintReconstitution, replaceUnion);\n}\nexports.flattenStrings = flattenStrings;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeTransformations = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst TypeGraph_1 = require(\"./TypeGraph\");\nconst Type_1 = require(\"./Type\");\nconst Support_1 = require(\"./support/Support\");\nconst Transformers_1 = require(\"./Transformers\");\nconst TypeAttributes_1 = require(\"./attributes/TypeAttributes\");\nconst StringTypes_1 = require(\"./attributes/StringTypes\");\nconst Constraints_1 = require(\"./attributes/Constraints\");\nfunction transformationAttributes(graph, reconstitutedTargetType, transformer, debugPrintTransformations) {\n    const transformation = new Transformers_1.Transformation(graph, reconstitutedTargetType, transformer);\n    if (debugPrintTransformations) {\n        console.log(`transformation for ${(0, TypeGraph_1.typeRefIndex)(reconstitutedTargetType)}:`);\n        transformation.debugPrint();\n        console.log(`reverse:`);\n        transformation.reverse.debugPrint();\n    }\n    return Transformers_1.transformationTypeAttributeKind.makeAttributes(transformation);\n}\nfunction makeEnumTransformer(graph, enumType, stringType, continuation) {\n    const sortedCases = Array.from(enumType.cases).sort();\n    const caseTransformers = sortedCases.map(c => new Transformers_1.StringMatchTransformer(graph, stringType, new Transformers_1.StringProducerTransformer(graph, stringType, continuation, c), c));\n    return new Transformers_1.ChoiceTransformer(graph, stringType, caseTransformers);\n}\nfunction replaceUnion(union, builder, forwardingRef, transformedTypes, debugPrintTransformations) {\n    const graph = builder.typeGraph;\n    (0, Support_1.assert)(union.members.size > 0, \"We can't have empty unions\");\n    // Type attributes that we lost during reconstitution.\n    let additionalAttributes = TypeAttributes_1.emptyTypeAttributes;\n    function reconstituteMember(t) {\n        // Special handling for some transformed string type kinds: The type in\n        // the union must be the target type, so if one already exists, use that\n        // one, otherwise make a new one.\n        if ((0, Type_1.isPrimitiveStringTypeKind)(t.kind)) {\n            const targetTypeKind = (0, Type_1.targetTypeKindForTransformedStringTypeKind)(t.kind);\n            if (targetTypeKind !== undefined) {\n                const targetTypeMember = union.findMember(targetTypeKind);\n                additionalAttributes = (0, TypeAttributes_1.combineTypeAttributes)(\"union\", additionalAttributes, t.getAttributes());\n                if (targetTypeMember !== undefined) {\n                    return builder.reconstituteType(targetTypeMember);\n                }\n                return builder.getPrimitiveType(targetTypeKind);\n            }\n        }\n        return builder.reconstituteType(t);\n    }\n    const reconstitutedMembersByKind = (0, collection_utils_1.mapMapEntries)(union.members.entries(), m => [m.kind, reconstituteMember(m)]);\n    const reconstitutedMemberSet = new Set(reconstitutedMembersByKind.values());\n    const haveUnion = reconstitutedMemberSet.size > 1;\n    if (!haveUnion) {\n        builder.setLostTypeAttributes();\n    }\n    const reconstitutedTargetType = haveUnion\n        ? builder.getUnionType(union.getAttributes(), reconstitutedMemberSet)\n        : (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(reconstitutedMemberSet));\n    function memberForKind(kind) {\n        return (0, Support_1.defined)(reconstitutedMembersByKind.get(kind));\n    }\n    function consumer(memberTypeRef) {\n        if (!haveUnion)\n            return undefined;\n        return new Transformers_1.UnionInstantiationTransformer(graph, memberTypeRef);\n    }\n    function transformerForKind(kind) {\n        const member = union.findMember(kind);\n        if (member === undefined)\n            return undefined;\n        const memberTypeRef = memberForKind(kind);\n        return new Transformers_1.DecodingTransformer(graph, memberTypeRef, consumer(memberTypeRef));\n    }\n    let maybeStringType = undefined;\n    function getStringType() {\n        if (maybeStringType === undefined) {\n            maybeStringType = builder.getStringType(TypeAttributes_1.emptyTypeAttributes, StringTypes_1.StringTypes.unrestricted);\n        }\n        return maybeStringType;\n    }\n    function transformerForStringType(t) {\n        const memberRef = memberForKind(t.kind);\n        if (t.kind === \"string\") {\n            const minMax = (0, Constraints_1.minMaxLengthForType)(t);\n            if (minMax === undefined) {\n                return consumer(memberRef);\n            }\n            const [min, max] = minMax;\n            return new Transformers_1.MinMaxLengthCheckTransformer(graph, getStringType(), consumer(memberRef), min, max);\n        }\n        else if (t instanceof Type_1.EnumType && transformedTypes.has(t)) {\n            return makeEnumTransformer(graph, t, getStringType(), consumer(memberRef));\n        }\n        else {\n            return new Transformers_1.ParseStringTransformer(graph, getStringType(), consumer(memberRef));\n        }\n    }\n    const stringTypes = (0, collection_utils_1.arraySortByInto)(Array.from(union.stringTypeMembers), t => t.kind);\n    let transformerForString;\n    if (stringTypes.length === 0) {\n        transformerForString = undefined;\n    }\n    else if (stringTypes.length === 1) {\n        const t = stringTypes[0];\n        transformerForString = new Transformers_1.DecodingTransformer(graph, getStringType(), transformerForStringType(t));\n    }\n    else {\n        transformerForString = new Transformers_1.DecodingTransformer(graph, getStringType(), new Transformers_1.ChoiceTransformer(graph, getStringType(), stringTypes.map(t => (0, Support_1.defined)(transformerForStringType(t)))));\n    }\n    const transformerForClass = transformerForKind(\"class\");\n    const transformerForMap = transformerForKind(\"map\");\n    (0, Support_1.assert)(transformerForClass === undefined || transformerForMap === undefined, \"Can't have both class and map in a transformed union\");\n    const transformerForObject = transformerForClass !== undefined ? transformerForClass : transformerForMap;\n    const transformer = new Transformers_1.DecodingChoiceTransformer(graph, builder.getPrimitiveType(\"any\"), transformerForKind(\"null\"), transformerForKind(\"integer\"), transformerForKind(\"double\"), transformerForKind(\"bool\"), transformerForString, transformerForKind(\"array\"), transformerForObject);\n    const attributes = transformationAttributes(graph, reconstitutedTargetType, transformer, debugPrintTransformations);\n    return builder.getPrimitiveType(\"any\", (0, TypeAttributes_1.combineTypeAttributes)(\"union\", attributes, additionalAttributes), forwardingRef);\n}\nfunction replaceArray(arrayType, builder, forwardingRef, debugPrintTransformations) {\n    const anyType = builder.getPrimitiveType(\"any\");\n    const anyArrayType = builder.getArrayType(TypeAttributes_1.emptyTypeAttributes, anyType);\n    const reconstitutedItems = builder.reconstituteType(arrayType.items);\n    const transformer = new Transformers_1.ArrayDecodingTransformer(builder.typeGraph, anyArrayType, undefined, reconstitutedItems, new Transformers_1.DecodingTransformer(builder.typeGraph, anyType, undefined));\n    const reconstitutedArray = builder.getArrayType(builder.reconstituteTypeAttributes(arrayType.getAttributes()), reconstitutedItems);\n    const attributes = transformationAttributes(builder.typeGraph, reconstitutedArray, transformer, debugPrintTransformations);\n    return builder.getArrayType(attributes, anyType, forwardingRef);\n}\nfunction replaceEnum(enumType, builder, forwardingRef, debugPrintTransformations) {\n    const stringType = builder.getStringType(TypeAttributes_1.emptyTypeAttributes, StringTypes_1.StringTypes.unrestricted);\n    const transformer = new Transformers_1.DecodingTransformer(builder.typeGraph, stringType, makeEnumTransformer(builder.typeGraph, enumType, stringType));\n    const reconstitutedEnum = builder.getEnumType(enumType.getAttributes(), enumType.cases);\n    const attributes = transformationAttributes(builder.typeGraph, reconstitutedEnum, transformer, debugPrintTransformations);\n    return builder.getStringType(attributes, StringTypes_1.StringTypes.unrestricted, forwardingRef);\n}\nfunction replaceNumber(t, builder, forwardingRef, debugPrintTransformations) {\n    const stringType = builder.getStringType(TypeAttributes_1.emptyTypeAttributes, StringTypes_1.StringTypes.unrestricted);\n    const [min, max] = (0, Support_1.defined)((0, Constraints_1.minMaxValueForType)(t));\n    const transformer = new Transformers_1.DecodingTransformer(builder.typeGraph, stringType, new Transformers_1.MinMaxValueTransformer(builder.typeGraph, stringType, undefined, min, max));\n    const reconstitutedAttributes = builder.reconstituteTypeAttributes(t.getAttributes());\n    const attributes = transformationAttributes(builder.typeGraph, builder.getPrimitiveType(\"double\", reconstitutedAttributes, undefined), transformer, debugPrintTransformations);\n    return builder.getPrimitiveType(\"double\", attributes, forwardingRef);\n}\nfunction replaceString(t, builder, forwardingRef, debugPrintTransformations) {\n    const [min, max] = (0, Support_1.defined)((0, Constraints_1.minMaxLengthForType)(t));\n    const reconstitutedAttributes = builder.reconstituteTypeAttributes(t.getAttributes());\n    const stringType = builder.getStringType(TypeAttributes_1.emptyTypeAttributes, StringTypes_1.StringTypes.unrestricted);\n    const transformer = new Transformers_1.DecodingTransformer(builder.typeGraph, stringType, new Transformers_1.MinMaxLengthCheckTransformer(builder.typeGraph, stringType, undefined, min, max));\n    const attributes = transformationAttributes(builder.typeGraph, builder.getStringType(reconstitutedAttributes, undefined), transformer, debugPrintTransformations);\n    return builder.getStringType(attributes, StringTypes_1.StringTypes.unrestricted, forwardingRef);\n}\nfunction replaceTransformedStringType(t, kind, builder, forwardingRef, debugPrintTransformations) {\n    const reconstitutedAttributes = builder.reconstituteTypeAttributes(t.getAttributes());\n    const targetTypeKind = (0, collection_utils_1.withDefault)((0, Type_1.targetTypeKindForTransformedStringTypeKind)(kind), kind);\n    const stringType = builder.getStringType(TypeAttributes_1.emptyTypeAttributes, StringTypes_1.StringTypes.unrestricted);\n    const transformer = new Transformers_1.DecodingTransformer(builder.typeGraph, stringType, new Transformers_1.ParseStringTransformer(builder.typeGraph, stringType, undefined));\n    const attributes = transformationAttributes(builder.typeGraph, builder.getPrimitiveType(targetTypeKind, reconstitutedAttributes), transformer, debugPrintTransformations);\n    return builder.getStringType(attributes, StringTypes_1.StringTypes.unrestricted, forwardingRef);\n}\nfunction makeTransformations(ctx, graph, targetLanguage) {\n    const transformedTypes = (0, collection_utils_1.setFilter)(graph.allTypesUnordered(), t => {\n        if (targetLanguage.needsTransformerForType(t))\n            return true;\n        if (!(t instanceof Type_1.UnionType))\n            return false;\n        const stringMembers = t.stringTypeMembers;\n        if (stringMembers.size <= 1)\n            return false;\n        return (0, collection_utils_1.iterableSome)(stringMembers, m => targetLanguage.needsTransformerForType(m));\n    });\n    function replace(setOfOneUnion, builder, forwardingRef) {\n        const t = (0, Support_1.defined)((0, collection_utils_1.iterableFirst)(setOfOneUnion));\n        if (t instanceof Type_1.UnionType) {\n            return replaceUnion(t, builder, forwardingRef, transformedTypes, ctx.debugPrintTransformations);\n        }\n        if (t instanceof Type_1.ArrayType) {\n            return replaceArray(t, builder, forwardingRef, ctx.debugPrintTransformations);\n        }\n        if (t instanceof Type_1.EnumType) {\n            return replaceEnum(t, builder, forwardingRef, ctx.debugPrintTransformations);\n        }\n        if (t.kind === \"string\") {\n            return replaceString(t, builder, forwardingRef, ctx.debugPrintTransformations);\n        }\n        if ((0, Type_1.isNumberTypeKind)(t.kind)) {\n            return replaceNumber(t, builder, forwardingRef, ctx.debugPrintTransformations);\n        }\n        if ((0, Type_1.isPrimitiveStringTypeKind)(t.kind)) {\n            return replaceTransformedStringType(t, t.kind, builder, forwardingRef, ctx.debugPrintTransformations);\n        }\n        return (0, Support_1.panic)(`Cannot make transformation for type ${t.kind}`);\n    }\n    const groups = Array.from(transformedTypes).map(t => [t]);\n    return graph.rewrite(\"make-transformations\", ctx.stringTypeMapping, false, groups, ctx.debugPrintReconstitution, replace);\n}\nexports.makeTransformations = makeTransformations;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.quicktype = exports.combineRenderResults = exports.quicktypeMultiFileSync = exports.quicktypeMultiFile = exports.defaultInferenceFlags = exports.inferenceFlags = exports.inferenceFlagNames = exports.inferenceFlagsObject = exports.getTargetLanguage = void 0;\nconst collection_utils_1 = require(\"collection-utils\");\nconst targetLanguages = __importStar(require(\"./language/All\"));\nconst Support_1 = require(\"./support/Support\");\nconst CombineClasses_1 = require(\"./rewrites/CombineClasses\");\nconst InferMaps_1 = require(\"./rewrites/InferMaps\");\nconst TypeBuilder_1 = require(\"./TypeBuilder\");\nconst TypeGraph_1 = require(\"./TypeGraph\");\nconst TypeNames_1 = require(\"./attributes/TypeNames\");\nconst GatherNames_1 = require(\"./GatherNames\");\nconst ExpandStrings_1 = require(\"./rewrites/ExpandStrings\");\nconst FlattenUnions_1 = require(\"./rewrites/FlattenUnions\");\nconst ResolveIntersections_1 = require(\"./rewrites/ResolveIntersections\");\nconst ReplaceObjectType_1 = require(\"./rewrites/ReplaceObjectType\");\nconst Messages_1 = require(\"./Messages\");\nconst Inputs_1 = require(\"./input/Inputs\");\nconst FlattenStrings_1 = require(\"./rewrites/FlattenStrings\");\nconst MakeTransformations_1 = require(\"./MakeTransformations\");\nfunction getTargetLanguage(nameOrInstance) {\n    if (typeof nameOrInstance === \"object\") {\n        return nameOrInstance;\n    }\n    const language = targetLanguages.languageNamed(nameOrInstance);\n    if (language !== undefined) {\n        return language;\n    }\n    return (0, Messages_1.messageError)(\"DriverUnknownOutputLanguage\", { lang: nameOrInstance });\n}\nexports.getTargetLanguage = getTargetLanguage;\nexports.inferenceFlagsObject = {\n    /** Whether to infer map types from JSON data */\n    inferMaps: {\n        description: \"Detect maps\",\n        negationDescription: \"Don't infer maps, always use classes\",\n        explanation: \"Infer maps when object keys look like map keys.\",\n        order: 1\n    },\n    /** Whether to infer enum types from JSON data */\n    inferEnums: {\n        description: \"Detect enums\",\n        negationDescription: \"Don't infer enums, always use strings\",\n        explanation: \"If string values occur within a relatively small domain,\\ninfer them as enum values.\",\n        order: 2\n    },\n    /** Whether to convert UUID strings to UUID objects */\n    inferUuids: {\n        description: \"Detect UUIDs\",\n        negationDescription: \"Don't convert UUIDs to UUID objects\",\n        explanation: \"Detect UUIDs like '123e4567-e89b-12d3-a456-426655440000' (partial support).\",\n        stringType: \"uuid\",\n        order: 3\n    },\n    /** Whether to assume that JSON strings that look like dates are dates */\n    inferDateTimes: {\n        description: \"Detect dates & times\",\n        negationDescription: \"Don't infer dates or times\",\n        explanation: \"Infer dates from strings (partial support).\",\n        stringType: \"date-time\",\n        order: 4\n    },\n    /** Whether to convert stringified integers to integers */\n    inferIntegerStrings: {\n        description: \"Detect integers in strings\",\n        negationDescription: \"Don't convert stringified integers to integers\",\n        explanation: 'Automatically convert stringified integers to integers.\\nFor example, \"1\" is converted to 1.',\n        stringType: \"integer-string\",\n        order: 5\n    },\n    /** Whether to convert stringified booleans to boolean values */\n    inferBooleanStrings: {\n        description: \"Detect booleans in strings\",\n        negationDescription: \"Don't convert stringified booleans to booleans\",\n        explanation: 'Automatically convert stringified booleans to booleans.\\nFor example, \"true\" is converted to true.',\n        stringType: \"bool-string\",\n        order: 6\n    },\n    /** Combine similar classes.  This doesn't apply to classes from a schema, only from inference. */\n    combineClasses: {\n        description: \"Merge similar classes\",\n        negationDescription: \"Don't combine similar classes\",\n        explanation: \"Combine classes with significantly overlapping properties,\\ntreating contingent properties as nullable.\",\n        order: 7\n    },\n    /** Whether to treat $ref as references within JSON */\n    ignoreJsonRefs: {\n        description: \"Don't treat $ref as a reference in JSON\",\n        negationDescription: \"Treat $ref as a reference in JSON\",\n        explanation: \"Like in JSON Schema, allow objects like\\n'{ $ref: \\\"#/foo/bar\\\" }' to refer\\nto another part of the input.\",\n        order: 8\n    }\n};\nexports.inferenceFlagNames = Object.getOwnPropertyNames(exports.inferenceFlagsObject);\nexports.inferenceFlags = exports.inferenceFlagsObject;\nconst defaultOptions = {\n    lang: \"ts\",\n    inputData: new Inputs_1.InputData(),\n    alphabetizeProperties: false,\n    allPropertiesOptional: false,\n    fixedTopLevels: false,\n    noRender: false,\n    leadingComments: undefined,\n    rendererOptions: {},\n    indentation: undefined,\n    outputFilename: \"stdout\",\n    debugPrintGraph: false,\n    checkProvenance: false,\n    debugPrintReconstitution: false,\n    debugPrintGatherNames: false,\n    debugPrintTransformations: false,\n    debugPrintTimes: false,\n    debugPrintSchemaResolving: false\n};\nfunction makeDefaultInferenceFlags() {\n    const flags = {};\n    for (const flag of exports.inferenceFlagNames) {\n        flags[flag] = true;\n    }\n    return flags;\n}\nexports.defaultInferenceFlags = makeDefaultInferenceFlags();\nclass Run {\n    constructor(options) {\n        // We must not overwrite defaults with undefined values, which\n        // we sometimes get.\n        this._options = Object.assign({}, defaultOptions, exports.defaultInferenceFlags);\n        for (const k of Object.getOwnPropertyNames(options)) {\n            const v = options[k];\n            if (v !== undefined) {\n                this._options[k] = v;\n            }\n        }\n    }\n    get stringTypeMapping() {\n        const targetLanguage = getTargetLanguage(this._options.lang);\n        const mapping = new Map(targetLanguage.stringTypeMapping);\n        for (const flag of exports.inferenceFlagNames) {\n            const stringType = exports.inferenceFlags[flag].stringType;\n            if (!this._options[flag] && stringType !== undefined) {\n                mapping.set(stringType, \"string\");\n            }\n        }\n        return mapping;\n    }\n    get debugPrintReconstitution() {\n        return this._options.debugPrintReconstitution === true;\n    }\n    get debugPrintTransformations() {\n        return this._options.debugPrintTransformations;\n    }\n    get debugPrintSchemaResolving() {\n        return this._options.debugPrintSchemaResolving;\n    }\n    timeSync(name, f) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const start = Date.now();\n            const result = yield f();\n            const end = Date.now();\n            if (this._options.debugPrintTimes) {\n                console.log(`${name} took ${end - start}ms`);\n            }\n            return result;\n        });\n    }\n    time(name, f) {\n        const start = Date.now();\n        const result = f();\n        const end = Date.now();\n        if (this._options.debugPrintTimes) {\n            console.log(`${name} took ${end - start}ms`);\n        }\n        return result;\n    }\n    makeGraphInputs() {\n        const targetLanguage = getTargetLanguage(this._options.lang);\n        const stringTypeMapping = this.stringTypeMapping;\n        const conflateNumbers = !targetLanguage.supportsUnionsWithBothNumberTypes;\n        const typeBuilder = new TypeBuilder_1.TypeBuilder(0, stringTypeMapping, this._options.alphabetizeProperties, this._options.allPropertiesOptional, this._options.checkProvenance, false);\n        return { targetLanguage, stringTypeMapping, conflateNumbers, typeBuilder };\n    }\n    makeGraph(allInputs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const graphInputs = this.makeGraphInputs();\n            yield this.timeSync(\"read input\", () => __awaiter(this, void 0, void 0, function* () {\n                return yield allInputs.addTypes(this, graphInputs.typeBuilder, this._options.inferMaps, this._options.inferEnums, this._options.fixedTopLevels);\n            }));\n            return this.processGraph(allInputs, graphInputs);\n        });\n    }\n    makeGraphSync(allInputs) {\n        const graphInputs = this.makeGraphInputs();\n        this.time(\"read input\", () => allInputs.addTypesSync(this, graphInputs.typeBuilder, this._options.inferMaps, this._options.inferEnums, this._options.fixedTopLevels));\n        return this.processGraph(allInputs, graphInputs);\n    }\n    processGraph(allInputs, graphInputs) {\n        const { targetLanguage, stringTypeMapping, conflateNumbers, typeBuilder } = graphInputs;\n        let graph = typeBuilder.finish();\n        if (this._options.debugPrintGraph) {\n            graph.setPrintOnRewrite();\n            graph.printGraph();\n        }\n        const debugPrintReconstitution = this.debugPrintReconstitution;\n        if (typeBuilder.didAddForwardingIntersection || !this._options.ignoreJsonRefs) {\n            this.time(\"remove indirection intersections\", () => (graph = (0, TypeGraph_1.removeIndirectionIntersections)(graph, stringTypeMapping, debugPrintReconstitution)));\n        }\n        let unionsDone = false;\n        if (allInputs.needSchemaProcessing || !this._options.ignoreJsonRefs) {\n            let intersectionsDone = false;\n            do {\n                const graphBeforeRewrites = graph;\n                if (!intersectionsDone) {\n                    this.time(\"resolve intersections\", () => ([graph, intersectionsDone] = (0, ResolveIntersections_1.resolveIntersections)(graph, stringTypeMapping, debugPrintReconstitution)));\n                }\n                if (!unionsDone) {\n                    this.time(\"flatten unions\", () => ([graph, unionsDone] = (0, FlattenUnions_1.flattenUnions)(graph, stringTypeMapping, conflateNumbers, true, debugPrintReconstitution)));\n                }\n                if (graph === graphBeforeRewrites) {\n                    (0, Support_1.assert)(intersectionsDone && unionsDone, \"Graph didn't change but we're not done\");\n                }\n            } while (!intersectionsDone || !unionsDone);\n        }\n        this.time(\"replace object type\", () => (graph = (0, ReplaceObjectType_1.replaceObjectType)(graph, stringTypeMapping, conflateNumbers, targetLanguage.supportsFullObjectType, debugPrintReconstitution)));\n        do {\n            this.time(\"flatten unions\", () => ([graph, unionsDone] = (0, FlattenUnions_1.flattenUnions)(graph, stringTypeMapping, conflateNumbers, false, debugPrintReconstitution)));\n        } while (!unionsDone);\n        if (this._options.combineClasses) {\n            const combinedGraph = this.time(\"combine classes\", () => (0, CombineClasses_1.combineClasses)(this, graph, this._options.alphabetizeProperties, true, false, debugPrintReconstitution));\n            if (combinedGraph === graph) {\n                graph = combinedGraph;\n            }\n            else {\n                this.time(\"combine classes cleanup\", () => (graph = (0, CombineClasses_1.combineClasses)(this, combinedGraph, this._options.alphabetizeProperties, false, true, debugPrintReconstitution)));\n            }\n        }\n        if (this._options.inferMaps) {\n            for (;;) {\n                const newGraph = this.time(\"infer maps\", () => (0, InferMaps_1.inferMaps)(graph, stringTypeMapping, true, debugPrintReconstitution));\n                if (newGraph === graph) {\n                    break;\n                }\n                graph = newGraph;\n            }\n        }\n        const enumInference = allInputs.needSchemaProcessing ? \"all\" : this._options.inferEnums ? \"infer\" : \"none\";\n        this.time(\"expand strings\", () => (graph = (0, ExpandStrings_1.expandStrings)(this, graph, enumInference)));\n        this.time(\"flatten unions\", () => ([graph, unionsDone] = (0, FlattenUnions_1.flattenUnions)(graph, stringTypeMapping, conflateNumbers, false, debugPrintReconstitution)));\n        (0, Support_1.assert)(unionsDone, \"We should only have to flatten unions once after expanding strings\");\n        if (allInputs.needSchemaProcessing) {\n            this.time(\"flatten strings\", () => (graph = (0, FlattenStrings_1.flattenStrings)(graph, stringTypeMapping, debugPrintReconstitution)));\n        }\n        this.time(\"none to any\", () => (graph = (0, TypeGraph_1.noneToAny)(graph, stringTypeMapping, debugPrintReconstitution)));\n        if (!targetLanguage.supportsOptionalClassProperties) {\n            this.time(\"optional to nullable\", () => (graph = (0, TypeGraph_1.optionalToNullable)(graph, stringTypeMapping, debugPrintReconstitution)));\n        }\n        this.time(\"fixed point\", () => (graph = graph.rewriteFixedPoint(false, debugPrintReconstitution)));\n        this.time(\"make transformations\", () => (graph = (0, MakeTransformations_1.makeTransformations)(this, graph, targetLanguage)));\n        this.time(\"flatten unions\", () => ([graph, unionsDone] = (0, FlattenUnions_1.flattenUnions)(graph, stringTypeMapping, conflateNumbers, false, debugPrintReconstitution)));\n        (0, Support_1.assert)(unionsDone, \"We should only have to flatten unions once after making transformations\");\n        // Sometimes we combine classes in ways that will the order come out\n        // differently compared to what it would be from the equivalent schema,\n        // so we always just garbage collect to get a defined order and be done\n        // with it.\n        // FIXME: We don't actually have to do this if any of the above graph\n        // rewrites did anything.  We could just check whether the current graph\n        // is different from the one we started out with.\n        this.time(\"GC\", () => (graph = graph.garbageCollect(this._options.alphabetizeProperties, debugPrintReconstitution)));\n        if (this._options.debugPrintGraph) {\n            console.log(\"\\n# gather names\");\n        }\n        this.time(\"gather names\", () => (0, GatherNames_1.gatherNames)(graph, !allInputs.needSchemaProcessing, this._options.debugPrintGatherNames));\n        if (this._options.debugPrintGraph) {\n            graph.printGraph();\n        }\n        return graph;\n    }\n    makeSimpleTextResult(lines) {\n        return new Map([[this._options.outputFilename, { lines, annotations: [] }]]);\n    }\n    preRun() {\n        // FIXME: This makes quicktype not quite reentrant\n        (0, TypeNames_1.initTypeNames)();\n        const targetLanguage = getTargetLanguage(this._options.lang);\n        const inputData = this._options.inputData;\n        const needIR = inputData.needIR || targetLanguage.names.indexOf(\"schema\") < 0;\n        const schemaString = needIR ? undefined : inputData.singleStringSchemaSource();\n        if (schemaString !== undefined) {\n            const lines = JSON.stringify(JSON.parse(schemaString), undefined, 4).split(\"\\n\");\n            lines.push(\"\");\n            const srr = { lines, annotations: [] };\n            return new Map([[this._options.outputFilename, srr]]);\n        }\n        return [inputData, targetLanguage];\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const preRunResult = this.preRun();\n            if (!Array.isArray(preRunResult)) {\n                return preRunResult;\n            }\n            const [inputData, targetLanguage] = preRunResult;\n            const graph = yield this.makeGraph(inputData);\n            return this.renderGraph(targetLanguage, graph);\n        });\n    }\n    runSync() {\n        const preRunResult = this.preRun();\n        if (!Array.isArray(preRunResult)) {\n            return preRunResult;\n        }\n        const [inputData, targetLanguage] = preRunResult;\n        const graph = this.makeGraphSync(inputData);\n        return this.renderGraph(targetLanguage, graph);\n    }\n    renderGraph(targetLanguage, graph) {\n        if (this._options.noRender) {\n            return this.makeSimpleTextResult([\"Done.\", \"\"]);\n        }\n        return targetLanguage.renderGraphAndSerialize(graph, this._options.outputFilename, this._options.alphabetizeProperties, this._options.leadingComments, this._options.rendererOptions, this._options.indentation);\n    }\n}\n/**\n * Run quicktype and produce one or more output files.\n *\n * @param options Partial options.  For options that are not defined, the\n * defaults will be used.\n */\nfunction quicktypeMultiFile(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield new Run(options).run();\n    });\n}\nexports.quicktypeMultiFile = quicktypeMultiFile;\nfunction quicktypeMultiFileSync(options) {\n    return new Run(options).runSync();\n}\nexports.quicktypeMultiFileSync = quicktypeMultiFileSync;\nfunction offsetLocation(loc, lineOffset) {\n    return { line: loc.line + lineOffset, column: loc.column };\n}\nfunction offsetSpan(span, lineOffset) {\n    return { start: offsetLocation(span.start, lineOffset), end: offsetLocation(span.end, lineOffset) };\n}\n/**\n * Combines a multi-file render result into a single output.  All the files\n * are concatenated and prefixed with a `//`-style comment giving the\n * filename.\n */\nfunction combineRenderResults(result) {\n    if (result.size <= 1) {\n        const first = (0, collection_utils_1.mapFirst)(result);\n        if (first === undefined) {\n            return { lines: [], annotations: [] };\n        }\n        return first;\n    }\n    let lines = [];\n    let annotations = [];\n    for (const [filename, srr] of result) {\n        const offset = lines.length + 2;\n        lines = lines.concat([`// ${filename}`, \"\"], srr.lines);\n        annotations = annotations.concat(srr.annotations.map(ann => ({ annotation: ann.annotation, span: offsetSpan(ann.span, offset) })));\n    }\n    return { lines, annotations };\n}\nexports.combineRenderResults = combineRenderResults;\n/**\n * Run quicktype like `quicktypeMultiFile`, but if there are multiple\n * output files they will all be squashed into one output, with comments at the\n * start of each file.\n *\n * @param options Partial options.  For options that are not defined, the\n * defaults will be used.\n */\nfunction quicktype(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const result = yield quicktypeMultiFile(options);\n        return combineRenderResults(result);\n    });\n}\nexports.quicktype = quicktype;\n","'use strict'\n\n/*\n  This file is a reduced and adapted version of the main lib/internal/per_context/primordials.js file defined at\n\n  https://github.com/nodejs/node/blob/master/lib/internal/per_context/primordials.js\n\n  Don't try to replace with the original file and keep it up to date with the upstream file.\n*/\nmodule.exports = {\n  ArrayIsArray(self) {\n    return Array.isArray(self)\n  },\n  ArrayPrototypeIncludes(self, el) {\n    return self.includes(el)\n  },\n  ArrayPrototypeIndexOf(self, el) {\n    return self.indexOf(el)\n  },\n  ArrayPrototypeJoin(self, sep) {\n    return self.join(sep)\n  },\n  ArrayPrototypeMap(self, fn) {\n    return self.map(fn)\n  },\n  ArrayPrototypePop(self, el) {\n    return self.pop(el)\n  },\n  ArrayPrototypePush(self, el) {\n    return self.push(el)\n  },\n  ArrayPrototypeSlice(self, start, end) {\n    return self.slice(start, end)\n  },\n  Error,\n  FunctionPrototypeCall(fn, thisArgs, ...args) {\n    return fn.call(thisArgs, ...args)\n  },\n  FunctionPrototypeSymbolHasInstance(self, instance) {\n    return Function.prototype[Symbol.hasInstance].call(self, instance)\n  },\n  MathFloor: Math.floor,\n  Number,\n  NumberIsInteger: Number.isInteger,\n  NumberIsNaN: Number.isNaN,\n  NumberMAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER,\n  NumberMIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER,\n  NumberParseInt: Number.parseInt,\n  ObjectDefineProperties(self, props) {\n    return Object.defineProperties(self, props)\n  },\n  ObjectDefineProperty(self, name, prop) {\n    return Object.defineProperty(self, name, prop)\n  },\n  ObjectGetOwnPropertyDescriptor(self, name) {\n    return Object.getOwnPropertyDescriptor(self, name)\n  },\n  ObjectKeys(obj) {\n    return Object.keys(obj)\n  },\n  ObjectSetPrototypeOf(target, proto) {\n    return Object.setPrototypeOf(target, proto)\n  },\n  Promise,\n  PromisePrototypeCatch(self, fn) {\n    return self.catch(fn)\n  },\n  PromisePrototypeThen(self, thenFn, catchFn) {\n    return self.then(thenFn, catchFn)\n  },\n  PromiseReject(err) {\n    return Promise.reject(err)\n  },\n  ReflectApply: Reflect.apply,\n  RegExpPrototypeTest(self, value) {\n    return self.test(value)\n  },\n  SafeSet: Set,\n  String,\n  StringPrototypeSlice(self, start, end) {\n    return self.slice(start, end)\n  },\n  StringPrototypeToLowerCase(self) {\n    return self.toLowerCase()\n  },\n  StringPrototypeToUpperCase(self) {\n    return self.toUpperCase()\n  },\n  StringPrototypeTrim(self) {\n    return self.trim()\n  },\n  Symbol,\n  SymbolFor: Symbol.for,\n  SymbolAsyncIterator: Symbol.asyncIterator,\n  SymbolHasInstance: Symbol.hasInstance,\n  SymbolIterator: Symbol.iterator,\n  TypedArrayPrototypeSet(self, buf, len) {\n    return self.set(buf, len)\n  },\n  Uint8Array\n}\n","'use strict'\n\nconst bufferModule = require('buffer')\nconst AsyncFunction = Object.getPrototypeOf(async function () {}).constructor\nconst Blob = globalThis.Blob || bufferModule.Blob\n/* eslint-disable indent */\nconst isBlob =\n  typeof Blob !== 'undefined'\n    ? function isBlob(b) {\n        // eslint-disable-next-line indent\n        return b instanceof Blob\n      }\n    : function isBlob(b) {\n        return false\n      }\n/* eslint-enable indent */\n\n// This is a simplified version of AggregateError\nclass AggregateError extends Error {\n  constructor(errors) {\n    if (!Array.isArray(errors)) {\n      throw new TypeError(`Expected input to be an Array, got ${typeof errors}`)\n    }\n    let message = ''\n    for (let i = 0; i < errors.length; i++) {\n      message += `    ${errors[i].stack}\\n`\n    }\n    super(message)\n    this.name = 'AggregateError'\n    this.errors = errors\n  }\n}\nmodule.exports = {\n  AggregateError,\n  kEmptyObject: Object.freeze({}),\n  once(callback) {\n    let called = false\n    return function (...args) {\n      if (called) {\n        return\n      }\n      called = true\n      callback.apply(this, args)\n    }\n  },\n  createDeferredPromise: function () {\n    let resolve\n    let reject\n\n    // eslint-disable-next-line promise/param-names\n    const promise = new Promise((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n    return {\n      promise,\n      resolve,\n      reject\n    }\n  },\n  promisify(fn) {\n    return new Promise((resolve, reject) => {\n      fn((err, ...args) => {\n        if (err) {\n          return reject(err)\n        }\n        return resolve(...args)\n      })\n    })\n  },\n  debuglog() {\n    return function () {}\n  },\n  format(format, ...args) {\n    // Simplified version of https://nodejs.org/api/util.html#utilformatformat-args\n    return format.replace(/%([sdifj])/g, function (...[_unused, type]) {\n      const replacement = args.shift()\n      if (type === 'f') {\n        return replacement.toFixed(6)\n      } else if (type === 'j') {\n        return JSON.stringify(replacement)\n      } else if (type === 's' && typeof replacement === 'object') {\n        const ctor = replacement.constructor !== Object ? replacement.constructor.name : ''\n        return `${ctor} {}`.trim()\n      } else {\n        return replacement.toString()\n      }\n    })\n  },\n  inspect(value) {\n    // Vastly simplified version of https://nodejs.org/api/util.html#utilinspectobject-options\n    switch (typeof value) {\n      case 'string':\n        if (value.includes(\"'\")) {\n          if (!value.includes('\"')) {\n            return `\"${value}\"`\n          } else if (!value.includes('`') && !value.includes('${')) {\n            return `\\`${value}\\``\n          }\n        }\n        return `'${value}'`\n      case 'number':\n        if (isNaN(value)) {\n          return 'NaN'\n        } else if (Object.is(value, -0)) {\n          return String(value)\n        }\n        return value\n      case 'bigint':\n        return `${String(value)}n`\n      case 'boolean':\n      case 'undefined':\n        return String(value)\n      case 'object':\n        return '{}'\n    }\n  },\n  types: {\n    isAsyncFunction(fn) {\n      return fn instanceof AsyncFunction\n    },\n    isArrayBufferView(arr) {\n      return ArrayBuffer.isView(arr)\n    }\n  },\n  isBlob\n}\nmodule.exports.promisify.custom = Symbol.for('nodejs.util.promisify.custom')\n","'use strict'\n\nconst { format, inspect, AggregateError: CustomAggregateError } = require('./util')\n\n/*\n  This file is a reduced and adapted version of the main lib/internal/errors.js file defined at\n\n  https://github.com/nodejs/node/blob/master/lib/internal/errors.js\n\n  Don't try to replace with the original file and keep it up to date (starting from E(...) definitions)\n  with the upstream file.\n*/\n\nconst AggregateError = globalThis.AggregateError || CustomAggregateError\nconst kIsNodeError = Symbol('kIsNodeError')\nconst kTypes = [\n  'string',\n  'function',\n  'number',\n  'object',\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function',\n  'Object',\n  'boolean',\n  'bigint',\n  'symbol'\n]\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/\nconst nodeInternalPrefix = '__node_internal_'\nconst codes = {}\nfunction assert(value, message) {\n  if (!value) {\n    throw new codes.ERR_INTERNAL_ASSERTION(message)\n  }\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\nfunction getMessage(key, msg, args) {\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length,\n      // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${msg.length}).`\n    )\n    return msg(...args)\n  }\n  const expectedLength = (msg.match(/%[dfijoOs]/g) || []).length\n  assert(\n    expectedLength === args.length,\n    `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${expectedLength}).`\n  )\n  if (args.length === 0) {\n    return msg\n  }\n  return format(msg, ...args)\n}\nfunction E(code, message, Base) {\n  if (!Base) {\n    Base = Error\n  }\n  class NodeError extends Base {\n    constructor(...args) {\n      super(getMessage(code, message, args))\n    }\n    toString() {\n      return `${this.name} [${code}]: ${this.message}`\n    }\n  }\n  Object.defineProperties(NodeError.prototype, {\n    name: {\n      value: Base.name,\n      writable: true,\n      enumerable: false,\n      configurable: true\n    },\n    toString: {\n      value() {\n        return `${this.name} [${code}]: ${this.message}`\n      },\n      writable: true,\n      enumerable: false,\n      configurable: true\n    }\n  })\n  NodeError.prototype.code = code\n  NodeError.prototype[kIsNodeError] = true\n  codes[code] = NodeError\n}\nfunction hideStackFrames(fn) {\n  // We rename the functions that will be hidden to cut off the stacktrace\n  // at the outermost one\n  const hidden = nodeInternalPrefix + fn.name\n  Object.defineProperty(fn, 'name', {\n    value: hidden\n  })\n  return fn\n}\nfunction aggregateTwoErrors(innerError, outerError) {\n  if (innerError && outerError && innerError !== outerError) {\n    if (Array.isArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      outerError.errors.push(innerError)\n      return outerError\n    }\n    const err = new AggregateError([outerError, innerError], outerError.message)\n    err.code = outerError.code\n    return err\n  }\n  return innerError || outerError\n}\nclass AbortError extends Error {\n  constructor(message = 'The operation was aborted', options = undefined) {\n    if (options !== undefined && typeof options !== 'object') {\n      throw new codes.ERR_INVALID_ARG_TYPE('options', 'Object', options)\n    }\n    super(message, options)\n    this.code = 'ABORT_ERR'\n    this.name = 'AbortError'\n  }\n}\nE('ERR_ASSERTION', '%s', Error)\nE(\n  'ERR_INVALID_ARG_TYPE',\n  (name, expected, actual) => {\n    assert(typeof name === 'string', \"'name' must be a string\")\n    if (!Array.isArray(expected)) {\n      expected = [expected]\n    }\n    let msg = 'The '\n    if (name.endsWith(' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `\n    } else {\n      msg += `\"${name}\" ${name.includes('.') ? 'property' : 'argument'} `\n    }\n    msg += 'must be '\n    const types = []\n    const instances = []\n    const other = []\n    for (const value of expected) {\n      assert(typeof value === 'string', 'All expected entries have to be of type string')\n      if (kTypes.includes(value)) {\n        types.push(value.toLowerCase())\n      } else if (classRegExp.test(value)) {\n        instances.push(value)\n      } else {\n        assert(value !== 'object', 'The value \"object\" should be written as \"Object\"')\n        other.push(value)\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = types.indexOf('object')\n      if (pos !== -1) {\n        types.splice(types, pos, 1)\n        instances.push('Object')\n      }\n    }\n    if (types.length > 0) {\n      switch (types.length) {\n        case 1:\n          msg += `of type ${types[0]}`\n          break\n        case 2:\n          msg += `one of type ${types[0]} or ${types[1]}`\n          break\n        default: {\n          const last = types.pop()\n          msg += `one of type ${types.join(', ')}, or ${last}`\n        }\n      }\n      if (instances.length > 0 || other.length > 0) {\n        msg += ' or '\n      }\n    }\n    if (instances.length > 0) {\n      switch (instances.length) {\n        case 1:\n          msg += `an instance of ${instances[0]}`\n          break\n        case 2:\n          msg += `an instance of ${instances[0]} or ${instances[1]}`\n          break\n        default: {\n          const last = instances.pop()\n          msg += `an instance of ${instances.join(', ')}, or ${last}`\n        }\n      }\n      if (other.length > 0) {\n        msg += ' or '\n      }\n    }\n    switch (other.length) {\n      case 0:\n        break\n      case 1:\n        if (other[0].toLowerCase() !== other[0]) {\n          msg += 'an '\n        }\n        msg += `${other[0]}`\n        break\n      case 2:\n        msg += `one of ${other[0]} or ${other[1]}`\n        break\n      default: {\n        const last = other.pop()\n        msg += `one of ${other.join(', ')}, or ${last}`\n      }\n    }\n    if (actual == null) {\n      msg += `. Received ${actual}`\n    } else if (typeof actual === 'function' && actual.name) {\n      msg += `. Received function ${actual.name}`\n    } else if (typeof actual === 'object') {\n      var _actual$constructor\n      if (\n        (_actual$constructor = actual.constructor) !== null &&\n        _actual$constructor !== undefined &&\n        _actual$constructor.name\n      ) {\n        msg += `. Received an instance of ${actual.constructor.name}`\n      } else {\n        const inspected = inspect(actual, {\n          depth: -1\n        })\n        msg += `. Received ${inspected}`\n      }\n    } else {\n      let inspected = inspect(actual, {\n        colors: false\n      })\n      if (inspected.length > 25) {\n        inspected = `${inspected.slice(0, 25)}...`\n      }\n      msg += `. Received type ${typeof actual} (${inspected})`\n    }\n    return msg\n  },\n  TypeError\n)\nE(\n  'ERR_INVALID_ARG_VALUE',\n  (name, value, reason = 'is invalid') => {\n    let inspected = inspect(value)\n    if (inspected.length > 128) {\n      inspected = inspected.slice(0, 128) + '...'\n    }\n    const type = name.includes('.') ? 'property' : 'argument'\n    return `The ${type} '${name}' ${reason}. Received ${inspected}`\n  },\n  TypeError\n)\nE(\n  'ERR_INVALID_RETURN_VALUE',\n  (input, name, value) => {\n    var _value$constructor\n    const type =\n      value !== null &&\n      value !== undefined &&\n      (_value$constructor = value.constructor) !== null &&\n      _value$constructor !== undefined &&\n      _value$constructor.name\n        ? `instance of ${value.constructor.name}`\n        : `type ${typeof value}`\n    return `Expected ${input} to be returned from the \"${name}\"` + ` function but got ${type}.`\n  },\n  TypeError\n)\nE(\n  'ERR_MISSING_ARGS',\n  (...args) => {\n    assert(args.length > 0, 'At least one arg needs to be specified')\n    let msg\n    const len = args.length\n    args = (Array.isArray(args) ? args : [args]).map((a) => `\"${a}\"`).join(' or ')\n    switch (len) {\n      case 1:\n        msg += `The ${args[0]} argument`\n        break\n      case 2:\n        msg += `The ${args[0]} and ${args[1]} arguments`\n        break\n      default:\n        {\n          const last = args.pop()\n          msg += `The ${args.join(', ')}, and ${last} arguments`\n        }\n        break\n    }\n    return `${msg} must be specified`\n  },\n  TypeError\n)\nE(\n  'ERR_OUT_OF_RANGE',\n  (str, range, input) => {\n    assert(range, 'Missing \"range\" argument')\n    let received\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    } else {\n      received = inspect(input)\n    }\n    return `The value of \"${str}\" is out of range. It must be ${range}. Received ${received}`\n  },\n  RangeError\n)\nE('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times', Error)\nE('ERR_METHOD_NOT_IMPLEMENTED', 'The %s method is not implemented', Error)\nE('ERR_STREAM_ALREADY_FINISHED', 'Cannot call %s after a stream was finished', Error)\nE('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable', Error)\nE('ERR_STREAM_DESTROYED', 'Cannot call %s after a stream was destroyed', Error)\nE('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError)\nE('ERR_STREAM_PREMATURE_CLOSE', 'Premature close', Error)\nE('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF', Error)\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event', Error)\nE('ERR_STREAM_WRITE_AFTER_END', 'write after end', Error)\nE('ERR_UNKNOWN_ENCODING', 'Unknown encoding: %s', TypeError)\nmodule.exports = {\n  AbortError,\n  aggregateTwoErrors: hideStackFrames(aggregateTwoErrors),\n  hideStackFrames,\n  codes\n}\n","/* eslint jsdoc/require-jsdoc: \"error\" */\n\n'use strict'\n\nconst {\n  ArrayIsArray,\n  ArrayPrototypeIncludes,\n  ArrayPrototypeJoin,\n  ArrayPrototypeMap,\n  NumberIsInteger,\n  NumberIsNaN,\n  NumberMAX_SAFE_INTEGER,\n  NumberMIN_SAFE_INTEGER,\n  NumberParseInt,\n  ObjectPrototypeHasOwnProperty,\n  RegExpPrototypeExec,\n  String,\n  StringPrototypeToUpperCase,\n  StringPrototypeTrim\n} = require('../ours/primordials')\nconst {\n  hideStackFrames,\n  codes: { ERR_SOCKET_BAD_PORT, ERR_INVALID_ARG_TYPE, ERR_INVALID_ARG_VALUE, ERR_OUT_OF_RANGE, ERR_UNKNOWN_SIGNAL }\n} = require('../ours/errors')\nconst { normalizeEncoding } = require('../ours/util')\nconst { isAsyncFunction, isArrayBufferView } = require('../ours/util').types\nconst signals = {}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isInt32(value) {\n  return value === (value | 0)\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isUint32(value) {\n  return value === value >>> 0\n}\nconst octalReg = /^[0-7]+$/\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string'\n\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land, but any value higher than 0o777 will result in platform-specific\n * behaviors.\n *\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified, will be returned for invalid values\n * @returns {number}\n */\nfunction parseFileMode(value, name, def) {\n  if (typeof value === 'undefined') {\n    value = def\n  }\n  if (typeof value === 'string') {\n    if (RegExpPrototypeExec(octalReg, value) === null) {\n      throw new ERR_INVALID_ARG_VALUE(name, value, modeDesc)\n    }\n    value = NumberParseInt(value, 8)\n  }\n  validateUint32(value, name)\n  return value\n}\n\n/**\n * @callback validateInteger\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInteger} */\nconst validateInteger = hideStackFrames((value, name, min = NumberMIN_SAFE_INTEGER, max = NumberMAX_SAFE_INTEGER) => {\n  if (typeof value !== 'number') throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  if (!NumberIsInteger(value)) throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  if (value < min || value > max) throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n})\n\n/**\n * @callback validateInt32\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInt32} */\nconst validateInt32 = hideStackFrames((value, name, min = -2147483648, max = 2147483647) => {\n  // The defaults for min and max correspond to the limits of 32-bit integers.\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  }\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n  }\n})\n\n/**\n * @callback validateUint32\n * @param {*} value\n * @param {string} name\n * @param {number|boolean} [positive=false]\n * @returns {asserts value is number}\n */\n\n/** @type {validateUint32} */\nconst validateUint32 = hideStackFrames((value, name, positive = false) => {\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  }\n  const min = positive ? 1 : 0\n  // 2 ** 32 === 4294967296\n  const max = 4294967295\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n  }\n})\n\n/**\n * @callback validateString\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string}\n */\n\n/** @type {validateString} */\nfunction validateString(value, name) {\n  if (typeof value !== 'string') throw new ERR_INVALID_ARG_TYPE(name, 'string', value)\n}\n\n/**\n * @callback validateNumber\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateNumber} */\nfunction validateNumber(value, name, min = undefined, max) {\n  if (typeof value !== 'number') throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  if (\n    (min != null && value < min) ||\n    (max != null && value > max) ||\n    ((min != null || max != null) && NumberIsNaN(value))\n  ) {\n    throw new ERR_OUT_OF_RANGE(\n      name,\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`,\n      value\n    )\n  }\n}\n\n/**\n * @callback validateOneOf\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} oneOf\n */\n\n/** @type {validateOneOf} */\nconst validateOneOf = hideStackFrames((value, name, oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf, value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf, (v) => (typeof v === 'string' ? `'${v}'` : String(v))),\n      ', '\n    )\n    const reason = 'must be one of: ' + allowed\n    throw new ERR_INVALID_ARG_VALUE(name, value, reason)\n  }\n})\n\n/**\n * @callback validateBoolean\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean}\n */\n\n/** @type {validateBoolean} */\nfunction validateBoolean(value, name) {\n  if (typeof value !== 'boolean') throw new ERR_INVALID_ARG_TYPE(name, 'boolean', value)\n}\n\n/**\n * @param {any} options\n * @param {string} key\n * @param {boolean} defaultValue\n * @returns {boolean}\n */\nfunction getOwnPropertyValueOrDefault(options, key, defaultValue) {\n  return options == null || !ObjectPrototypeHasOwnProperty(options, key) ? defaultValue : options[key]\n}\n\n/**\n * @callback validateObject\n * @param {*} value\n * @param {string} name\n * @param {{\n *   allowArray?: boolean,\n *   allowFunction?: boolean,\n *   nullable?: boolean\n * }} [options]\n */\n\n/** @type {validateObject} */\nconst validateObject = hideStackFrames((value, name, options = null) => {\n  const allowArray = getOwnPropertyValueOrDefault(options, 'allowArray', false)\n  const allowFunction = getOwnPropertyValueOrDefault(options, 'allowFunction', false)\n  const nullable = getOwnPropertyValueOrDefault(options, 'nullable', false)\n  if (\n    (!nullable && value === null) ||\n    (!allowArray && ArrayIsArray(value)) ||\n    (typeof value !== 'object' && (!allowFunction || typeof value !== 'function'))\n  ) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'Object', value)\n  }\n})\n\n/**\n * @callback validateDictionary - We are using the Web IDL Standard definition\n *                                of \"dictionary\" here, which means any value\n *                                whose Type is either Undefined, Null, or\n *                                Object (which includes functions).\n * @param {*} value\n * @param {string} name\n * @see https://webidl.spec.whatwg.org/#es-dictionary\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\n */\n\n/** @type {validateDictionary} */\nconst validateDictionary = hideStackFrames((value, name) => {\n  if (value != null && typeof value !== 'object' && typeof value !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'a dictionary', value)\n  }\n})\n\n/**\n * @callback validateArray\n * @param {*} value\n * @param {string} name\n * @param {number} [minLength]\n * @returns {asserts value is any[]}\n */\n\n/** @type {validateArray} */\nconst validateArray = hideStackFrames((value, name, minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'Array', value)\n  }\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`\n    throw new ERR_INVALID_ARG_VALUE(name, value, reason)\n  }\n})\n\n/**\n * @callback validateStringArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string[]}\n */\n\n/** @type {validateStringArray} */\nfunction validateStringArray(value, name) {\n  validateArray(value, name)\n  for (let i = 0; i < value.length; i++) {\n    validateString(value[i], `${name}[${i}]`)\n  }\n}\n\n/**\n * @callback validateBooleanArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean[]}\n */\n\n/** @type {validateBooleanArray} */\nfunction validateBooleanArray(value, name) {\n  validateArray(value, name)\n  for (let i = 0; i < value.length; i++) {\n    validateBoolean(value[i], `${name}[${i}]`)\n  }\n}\n\n/**\n * @param {*} signal\n * @param {string} [name='signal']\n * @returns {asserts signal is keyof signals}\n */\nfunction validateSignalName(signal, name = 'signal') {\n  validateString(signal, name)\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal + ' (signals must use all capital letters)')\n    }\n    throw new ERR_UNKNOWN_SIGNAL(signal)\n  }\n}\n\n/**\n * @callback validateBuffer\n * @param {*} buffer\n * @param {string} [name='buffer']\n * @returns {asserts buffer is ArrayBufferView}\n */\n\n/** @type {validateBuffer} */\nconst validateBuffer = hideStackFrames((buffer, name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name, ['Buffer', 'TypedArray', 'DataView'], buffer)\n  }\n})\n\n/**\n * @param {string} data\n * @param {string} encoding\n */\nfunction validateEncoding(data, encoding) {\n  const normalizedEncoding = normalizeEncoding(encoding)\n  const length = data.length\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding', encoding, `is invalid for data of length ${length}`)\n  }\n}\n\n/**\n * Check that the port number is not NaN when coerced to a number,\n * is an integer and that it falls within the legal range of port numbers.\n * @param {*} port\n * @param {string} [name='Port']\n * @param {boolean} [allowZero=true]\n * @returns {number}\n */\nfunction validatePort(port, name = 'Port', allowZero = true) {\n  if (\n    (typeof port !== 'number' && typeof port !== 'string') ||\n    (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n    +port !== +port >>> 0 ||\n    port > 0xffff ||\n    (port === 0 && !allowZero)\n  ) {\n    throw new ERR_SOCKET_BAD_PORT(name, port, allowZero)\n  }\n  return port | 0\n}\n\n/**\n * @callback validateAbortSignal\n * @param {*} signal\n * @param {string} name\n */\n\n/** @type {validateAbortSignal} */\nconst validateAbortSignal = hideStackFrames((signal, name) => {\n  if (signal !== undefined && (signal === null || typeof signal !== 'object' || !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'AbortSignal', signal)\n  }\n})\n\n/**\n * @callback validateFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validateFunction} */\nconst validateFunction = hideStackFrames((value, name) => {\n  if (typeof value !== 'function') throw new ERR_INVALID_ARG_TYPE(name, 'Function', value)\n})\n\n/**\n * @callback validatePlainFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validatePlainFunction} */\nconst validatePlainFunction = hideStackFrames((value, name) => {\n  if (typeof value !== 'function' || isAsyncFunction(value)) throw new ERR_INVALID_ARG_TYPE(name, 'Function', value)\n})\n\n/**\n * @callback validateUndefined\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is undefined}\n */\n\n/** @type {validateUndefined} */\nconst validateUndefined = hideStackFrames((value, name) => {\n  if (value !== undefined) throw new ERR_INVALID_ARG_TYPE(name, 'undefined', value)\n})\n\n/**\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} union\n */\nfunction validateUnion(value, name, union) {\n  if (!ArrayPrototypeIncludes(union, value)) {\n    throw new ERR_INVALID_ARG_TYPE(name, `('${ArrayPrototypeJoin(union, '|')}')`, value)\n  }\n}\n\n/*\n  The rules for the Link header field are described here:\n  https://www.rfc-editor.org/rfc/rfc8288.html#section-3\n\n  This regex validates any string surrounded by angle brackets\n  (not necessarily a valid URI reference) followed by zero or more\n  link-params separated by semicolons.\n*/\nconst linkValueRegExp = /^(?:<[^>]*>)(?:\\s*;\\s*[^;\"\\s]+(?:=(\")?[^;\"\\s]*\\1)?)*$/\n\n/**\n * @param {any} value\n * @param {string} name\n */\nfunction validateLinkHeaderFormat(value, name) {\n  if (typeof value === 'undefined' || !RegExpPrototypeExec(linkValueRegExp, value)) {\n    throw new ERR_INVALID_ARG_VALUE(\n      name,\n      value,\n      'must be an array or string of format \"</styles.css>; rel=preload; as=style\"'\n    )\n  }\n}\n\n/**\n * @param {any} hints\n * @return {string}\n */\nfunction validateLinkHeaderValue(hints) {\n  if (typeof hints === 'string') {\n    validateLinkHeaderFormat(hints, 'hints')\n    return hints\n  } else if (ArrayIsArray(hints)) {\n    const hintsLength = hints.length\n    let result = ''\n    if (hintsLength === 0) {\n      return result\n    }\n    for (let i = 0; i < hintsLength; i++) {\n      const link = hints[i]\n      validateLinkHeaderFormat(link, 'hints')\n      result += link\n      if (i !== hintsLength - 1) {\n        result += ', '\n      }\n    }\n    return result\n  }\n  throw new ERR_INVALID_ARG_VALUE(\n    'hints',\n    hints,\n    'must be an array or string of format \"</styles.css>; rel=preload; as=style\"'\n  )\n}\nmodule.exports = {\n  isInt32,\n  isUint32,\n  parseFileMode,\n  validateArray,\n  validateStringArray,\n  validateBooleanArray,\n  validateBoolean,\n  validateBuffer,\n  validateDictionary,\n  validateEncoding,\n  validateFunction,\n  validateInt32,\n  validateInteger,\n  validateNumber,\n  validateObject,\n  validateOneOf,\n  validatePlainFunction,\n  validatePort,\n  validateSignalName,\n  validateString,\n  validateUint32,\n  validateUndefined,\n  validateUnion,\n  validateAbortSignal,\n  validateLinkHeaderValue\n}\n","'use strict'\n\nconst { Symbol, SymbolAsyncIterator, SymbolIterator, SymbolFor } = require('../../ours/primordials')\nconst kDestroyed = Symbol('kDestroyed')\nconst kIsErrored = Symbol('kIsErrored')\nconst kIsReadable = Symbol('kIsReadable')\nconst kIsDisturbed = Symbol('kIsDisturbed')\nconst kIsClosedPromise = SymbolFor('nodejs.webstream.isClosedPromise')\nconst kControllerErrorFunction = SymbolFor('nodejs.webstream.controllerErrorFunction')\nfunction isReadableNodeStream(obj, strict = false) {\n  var _obj$_readableState\n  return !!(\n    (\n      obj &&\n      typeof obj.pipe === 'function' &&\n      typeof obj.on === 'function' &&\n      (!strict || (typeof obj.pause === 'function' && typeof obj.resume === 'function')) &&\n      (!obj._writableState ||\n        ((_obj$_readableState = obj._readableState) === null || _obj$_readableState === undefined\n          ? undefined\n          : _obj$_readableState.readable) !== false) &&\n      // Duplex\n      (!obj._writableState || obj._readableState)\n    ) // Writable has .pipe.\n  )\n}\n\nfunction isWritableNodeStream(obj) {\n  var _obj$_writableState\n  return !!(\n    (\n      obj &&\n      typeof obj.write === 'function' &&\n      typeof obj.on === 'function' &&\n      (!obj._readableState ||\n        ((_obj$_writableState = obj._writableState) === null || _obj$_writableState === undefined\n          ? undefined\n          : _obj$_writableState.writable) !== false)\n    ) // Duplex\n  )\n}\n\nfunction isDuplexNodeStream(obj) {\n  return !!(\n    obj &&\n    typeof obj.pipe === 'function' &&\n    obj._readableState &&\n    typeof obj.on === 'function' &&\n    typeof obj.write === 'function'\n  )\n}\nfunction isNodeStream(obj) {\n  return (\n    obj &&\n    (obj._readableState ||\n      obj._writableState ||\n      (typeof obj.write === 'function' && typeof obj.on === 'function') ||\n      (typeof obj.pipe === 'function' && typeof obj.on === 'function'))\n  )\n}\nfunction isReadableStream(obj) {\n  return !!(\n    obj &&\n    !isNodeStream(obj) &&\n    typeof obj.pipeThrough === 'function' &&\n    typeof obj.getReader === 'function' &&\n    typeof obj.cancel === 'function'\n  )\n}\nfunction isWritableStream(obj) {\n  return !!(obj && !isNodeStream(obj) && typeof obj.getWriter === 'function' && typeof obj.abort === 'function')\n}\nfunction isTransformStream(obj) {\n  return !!(obj && !isNodeStream(obj) && typeof obj.readable === 'object' && typeof obj.writable === 'object')\n}\nfunction isWebStream(obj) {\n  return isReadableStream(obj) || isWritableStream(obj) || isTransformStream(obj)\n}\nfunction isIterable(obj, isAsync) {\n  if (obj == null) return false\n  if (isAsync === true) return typeof obj[SymbolAsyncIterator] === 'function'\n  if (isAsync === false) return typeof obj[SymbolIterator] === 'function'\n  return typeof obj[SymbolAsyncIterator] === 'function' || typeof obj[SymbolIterator] === 'function'\n}\nfunction isDestroyed(stream) {\n  if (!isNodeStream(stream)) return null\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const state = wState || rState\n  return !!(stream.destroyed || stream[kDestroyed] || (state !== null && state !== undefined && state.destroyed))\n}\n\n// Have been end():d.\nfunction isWritableEnded(stream) {\n  if (!isWritableNodeStream(stream)) return null\n  if (stream.writableEnded === true) return true\n  const wState = stream._writableState\n  if (wState !== null && wState !== undefined && wState.errored) return false\n  if (typeof (wState === null || wState === undefined ? undefined : wState.ended) !== 'boolean') return null\n  return wState.ended\n}\n\n// Have emitted 'finish'.\nfunction isWritableFinished(stream, strict) {\n  if (!isWritableNodeStream(stream)) return null\n  if (stream.writableFinished === true) return true\n  const wState = stream._writableState\n  if (wState !== null && wState !== undefined && wState.errored) return false\n  if (typeof (wState === null || wState === undefined ? undefined : wState.finished) !== 'boolean') return null\n  return !!(wState.finished || (strict === false && wState.ended === true && wState.length === 0))\n}\n\n// Have been push(null):d.\nfunction isReadableEnded(stream) {\n  if (!isReadableNodeStream(stream)) return null\n  if (stream.readableEnded === true) return true\n  const rState = stream._readableState\n  if (!rState || rState.errored) return false\n  if (typeof (rState === null || rState === undefined ? undefined : rState.ended) !== 'boolean') return null\n  return rState.ended\n}\n\n// Have emitted 'end'.\nfunction isReadableFinished(stream, strict) {\n  if (!isReadableNodeStream(stream)) return null\n  const rState = stream._readableState\n  if (rState !== null && rState !== undefined && rState.errored) return false\n  if (typeof (rState === null || rState === undefined ? undefined : rState.endEmitted) !== 'boolean') return null\n  return !!(rState.endEmitted || (strict === false && rState.ended === true && rState.length === 0))\n}\nfunction isReadable(stream) {\n  if (stream && stream[kIsReadable] != null) return stream[kIsReadable]\n  if (typeof (stream === null || stream === undefined ? undefined : stream.readable) !== 'boolean') return null\n  if (isDestroyed(stream)) return false\n  return isReadableNodeStream(stream) && stream.readable && !isReadableFinished(stream)\n}\nfunction isWritable(stream) {\n  if (typeof (stream === null || stream === undefined ? undefined : stream.writable) !== 'boolean') return null\n  if (isDestroyed(stream)) return false\n  return isWritableNodeStream(stream) && stream.writable && !isWritableEnded(stream)\n}\nfunction isFinished(stream, opts) {\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (isDestroyed(stream)) {\n    return true\n  }\n  if ((opts === null || opts === undefined ? undefined : opts.readable) !== false && isReadable(stream)) {\n    return false\n  }\n  if ((opts === null || opts === undefined ? undefined : opts.writable) !== false && isWritable(stream)) {\n    return false\n  }\n  return true\n}\nfunction isWritableErrored(stream) {\n  var _stream$_writableStat, _stream$_writableStat2\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (stream.writableErrored) {\n    return stream.writableErrored\n  }\n  return (_stream$_writableStat =\n    (_stream$_writableStat2 = stream._writableState) === null || _stream$_writableStat2 === undefined\n      ? undefined\n      : _stream$_writableStat2.errored) !== null && _stream$_writableStat !== undefined\n    ? _stream$_writableStat\n    : null\n}\nfunction isReadableErrored(stream) {\n  var _stream$_readableStat, _stream$_readableStat2\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (stream.readableErrored) {\n    return stream.readableErrored\n  }\n  return (_stream$_readableStat =\n    (_stream$_readableStat2 = stream._readableState) === null || _stream$_readableStat2 === undefined\n      ? undefined\n      : _stream$_readableStat2.errored) !== null && _stream$_readableStat !== undefined\n    ? _stream$_readableStat\n    : null\n}\nfunction isClosed(stream) {\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (typeof stream.closed === 'boolean') {\n    return stream.closed\n  }\n  const wState = stream._writableState\n  const rState = stream._readableState\n  if (\n    typeof (wState === null || wState === undefined ? undefined : wState.closed) === 'boolean' ||\n    typeof (rState === null || rState === undefined ? undefined : rState.closed) === 'boolean'\n  ) {\n    return (\n      (wState === null || wState === undefined ? undefined : wState.closed) ||\n      (rState === null || rState === undefined ? undefined : rState.closed)\n    )\n  }\n  if (typeof stream._closed === 'boolean' && isOutgoingMessage(stream)) {\n    return stream._closed\n  }\n  return null\n}\nfunction isOutgoingMessage(stream) {\n  return (\n    typeof stream._closed === 'boolean' &&\n    typeof stream._defaultKeepAlive === 'boolean' &&\n    typeof stream._removedConnection === 'boolean' &&\n    typeof stream._removedContLen === 'boolean'\n  )\n}\nfunction isServerResponse(stream) {\n  return typeof stream._sent100 === 'boolean' && isOutgoingMessage(stream)\n}\nfunction isServerRequest(stream) {\n  var _stream$req\n  return (\n    typeof stream._consuming === 'boolean' &&\n    typeof stream._dumped === 'boolean' &&\n    ((_stream$req = stream.req) === null || _stream$req === undefined ? undefined : _stream$req.upgradeOrConnect) ===\n      undefined\n  )\n}\nfunction willEmitClose(stream) {\n  if (!isNodeStream(stream)) return null\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const state = wState || rState\n  return (\n    (!state && isServerResponse(stream)) || !!(state && state.autoDestroy && state.emitClose && state.closed === false)\n  )\n}\nfunction isDisturbed(stream) {\n  var _stream$kIsDisturbed\n  return !!(\n    stream &&\n    ((_stream$kIsDisturbed = stream[kIsDisturbed]) !== null && _stream$kIsDisturbed !== undefined\n      ? _stream$kIsDisturbed\n      : stream.readableDidRead || stream.readableAborted)\n  )\n}\nfunction isErrored(stream) {\n  var _ref,\n    _ref2,\n    _ref3,\n    _ref4,\n    _ref5,\n    _stream$kIsErrored,\n    _stream$_readableStat3,\n    _stream$_writableStat3,\n    _stream$_readableStat4,\n    _stream$_writableStat4\n  return !!(\n    stream &&\n    ((_ref =\n      (_ref2 =\n        (_ref3 =\n          (_ref4 =\n            (_ref5 =\n              (_stream$kIsErrored = stream[kIsErrored]) !== null && _stream$kIsErrored !== undefined\n                ? _stream$kIsErrored\n                : stream.readableErrored) !== null && _ref5 !== undefined\n              ? _ref5\n              : stream.writableErrored) !== null && _ref4 !== undefined\n            ? _ref4\n            : (_stream$_readableStat3 = stream._readableState) === null || _stream$_readableStat3 === undefined\n            ? undefined\n            : _stream$_readableStat3.errorEmitted) !== null && _ref3 !== undefined\n          ? _ref3\n          : (_stream$_writableStat3 = stream._writableState) === null || _stream$_writableStat3 === undefined\n          ? undefined\n          : _stream$_writableStat3.errorEmitted) !== null && _ref2 !== undefined\n        ? _ref2\n        : (_stream$_readableStat4 = stream._readableState) === null || _stream$_readableStat4 === undefined\n        ? undefined\n        : _stream$_readableStat4.errored) !== null && _ref !== undefined\n      ? _ref\n      : (_stream$_writableStat4 = stream._writableState) === null || _stream$_writableStat4 === undefined\n      ? undefined\n      : _stream$_writableStat4.errored)\n  )\n}\nmodule.exports = {\n  kDestroyed,\n  isDisturbed,\n  kIsDisturbed,\n  isErrored,\n  kIsErrored,\n  isReadable,\n  kIsReadable,\n  kIsClosedPromise,\n  kControllerErrorFunction,\n  isClosed,\n  isDestroyed,\n  isDuplexNodeStream,\n  isFinished,\n  isIterable,\n  isReadableNodeStream,\n  isReadableStream,\n  isReadableEnded,\n  isReadableFinished,\n  isReadableErrored,\n  isNodeStream,\n  isWebStream,\n  isWritable,\n  isWritableNodeStream,\n  isWritableStream,\n  isWritableEnded,\n  isWritableFinished,\n  isWritableErrored,\n  isServerRequest,\n  isServerResponse,\n  willEmitClose,\n  isTransformStream\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n;('use strict')\nconst { AbortError, codes } = require('../../ours/errors')\nconst { ERR_INVALID_ARG_TYPE, ERR_STREAM_PREMATURE_CLOSE } = codes\nconst { kEmptyObject, once } = require('../../ours/util')\nconst { validateAbortSignal, validateFunction, validateObject, validateBoolean } = require('../validators')\nconst { Promise, PromisePrototypeThen } = require('../../ours/primordials')\nconst {\n  isClosed,\n  isReadable,\n  isReadableNodeStream,\n  isReadableStream,\n  isReadableFinished,\n  isReadableErrored,\n  isWritable,\n  isWritableNodeStream,\n  isWritableStream,\n  isWritableFinished,\n  isWritableErrored,\n  isNodeStream,\n  willEmitClose: _willEmitClose,\n  kIsClosedPromise\n} = require('./utils')\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function'\n}\nconst nop = () => {}\nfunction eos(stream, options, callback) {\n  var _options$readable, _options$writable\n  if (arguments.length === 2) {\n    callback = options\n    options = kEmptyObject\n  } else if (options == null) {\n    options = kEmptyObject\n  } else {\n    validateObject(options, 'options')\n  }\n  validateFunction(callback, 'callback')\n  validateAbortSignal(options.signal, 'options.signal')\n  callback = once(callback)\n  if (isReadableStream(stream) || isWritableStream(stream)) {\n    return eosWeb(stream, options, callback)\n  }\n  if (!isNodeStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream', ['ReadableStream', 'WritableStream', 'Stream'], stream)\n  }\n  const readable =\n    (_options$readable = options.readable) !== null && _options$readable !== undefined\n      ? _options$readable\n      : isReadableNodeStream(stream)\n  const writable =\n    (_options$writable = options.writable) !== null && _options$writable !== undefined\n      ? _options$writable\n      : isWritableNodeStream(stream)\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const onlegacyfinish = () => {\n    if (!stream.writable) {\n      onfinish()\n    }\n  }\n\n  // TODO (ronag): Improve soft detection to include core modules and\n  // common ecosystem modules that do properly emit 'close' but fail\n  // this generic check.\n  let willEmitClose =\n    _willEmitClose(stream) && isReadableNodeStream(stream) === readable && isWritableNodeStream(stream) === writable\n  let writableFinished = isWritableFinished(stream, false)\n  const onfinish = () => {\n    writableFinished = true\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false\n    }\n    if (willEmitClose && (!stream.readable || readable)) {\n      return\n    }\n    if (!readable || readableFinished) {\n      callback.call(stream)\n    }\n  }\n  let readableFinished = isReadableFinished(stream, false)\n  const onend = () => {\n    readableFinished = true\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false\n    }\n    if (willEmitClose && (!stream.writable || writable)) {\n      return\n    }\n    if (!writable || writableFinished) {\n      callback.call(stream)\n    }\n  }\n  const onerror = (err) => {\n    callback.call(stream, err)\n  }\n  let closed = isClosed(stream)\n  const onclose = () => {\n    closed = true\n    const errored = isWritableErrored(stream) || isReadableErrored(stream)\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream, errored)\n    }\n    if (readable && !readableFinished && isReadableNodeStream(stream, true)) {\n      if (!isReadableFinished(stream, false)) return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE())\n    }\n    if (writable && !writableFinished) {\n      if (!isWritableFinished(stream, false)) return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE())\n    }\n    callback.call(stream)\n  }\n  const onclosed = () => {\n    closed = true\n    const errored = isWritableErrored(stream) || isReadableErrored(stream)\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream, errored)\n    }\n    callback.call(stream)\n  }\n  const onrequest = () => {\n    stream.req.on('finish', onfinish)\n  }\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish)\n    if (!willEmitClose) {\n      stream.on('abort', onclose)\n    }\n    if (stream.req) {\n      onrequest()\n    } else {\n      stream.on('request', onrequest)\n    }\n  } else if (writable && !wState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish)\n    stream.on('close', onlegacyfinish)\n  }\n\n  // Not all streams will emit 'close' after 'aborted'.\n  if (!willEmitClose && typeof stream.aborted === 'boolean') {\n    stream.on('aborted', onclose)\n  }\n  stream.on('end', onend)\n  stream.on('finish', onfinish)\n  if (options.error !== false) {\n    stream.on('error', onerror)\n  }\n  stream.on('close', onclose)\n  if (closed) {\n    process.nextTick(onclose)\n  } else if (\n    (wState !== null && wState !== undefined && wState.errorEmitted) ||\n    (rState !== null && rState !== undefined && rState.errorEmitted)\n  ) {\n    if (!willEmitClose) {\n      process.nextTick(onclosed)\n    }\n  } else if (\n    !readable &&\n    (!willEmitClose || isReadable(stream)) &&\n    (writableFinished || isWritable(stream) === false)\n  ) {\n    process.nextTick(onclosed)\n  } else if (\n    !writable &&\n    (!willEmitClose || isWritable(stream)) &&\n    (readableFinished || isReadable(stream) === false)\n  ) {\n    process.nextTick(onclosed)\n  } else if (rState && stream.req && stream.aborted) {\n    process.nextTick(onclosed)\n  }\n  const cleanup = () => {\n    callback = nop\n    stream.removeListener('aborted', onclose)\n    stream.removeListener('complete', onfinish)\n    stream.removeListener('abort', onclose)\n    stream.removeListener('request', onrequest)\n    if (stream.req) stream.req.removeListener('finish', onfinish)\n    stream.removeListener('end', onlegacyfinish)\n    stream.removeListener('close', onlegacyfinish)\n    stream.removeListener('finish', onfinish)\n    stream.removeListener('end', onend)\n    stream.removeListener('error', onerror)\n    stream.removeListener('close', onclose)\n  }\n  if (options.signal && !closed) {\n    const abort = () => {\n      // Keep it because cleanup removes it.\n      const endCallback = callback\n      cleanup()\n      endCallback.call(\n        stream,\n        new AbortError(undefined, {\n          cause: options.signal.reason\n        })\n      )\n    }\n    if (options.signal.aborted) {\n      process.nextTick(abort)\n    } else {\n      const originalCallback = callback\n      callback = once((...args) => {\n        options.signal.removeEventListener('abort', abort)\n        originalCallback.apply(stream, args)\n      })\n      options.signal.addEventListener('abort', abort)\n    }\n  }\n  return cleanup\n}\nfunction eosWeb(stream, options, callback) {\n  let isAborted = false\n  let abort = nop\n  if (options.signal) {\n    abort = () => {\n      isAborted = true\n      callback.call(\n        stream,\n        new AbortError(undefined, {\n          cause: options.signal.reason\n        })\n      )\n    }\n    if (options.signal.aborted) {\n      process.nextTick(abort)\n    } else {\n      const originalCallback = callback\n      callback = once((...args) => {\n        options.signal.removeEventListener('abort', abort)\n        originalCallback.apply(stream, args)\n      })\n      options.signal.addEventListener('abort', abort)\n    }\n  }\n  const resolverFn = (...args) => {\n    if (!isAborted) {\n      process.nextTick(() => callback.apply(stream, args))\n    }\n  }\n  PromisePrototypeThen(stream[kIsClosedPromise].promise, resolverFn, resolverFn)\n  return nop\n}\nfunction finished(stream, opts) {\n  var _opts\n  let autoCleanup = false\n  if (opts === null) {\n    opts = kEmptyObject\n  }\n  if ((_opts = opts) !== null && _opts !== undefined && _opts.cleanup) {\n    validateBoolean(opts.cleanup, 'cleanup')\n    autoCleanup = opts.cleanup\n  }\n  return new Promise((resolve, reject) => {\n    const cleanup = eos(stream, opts, (err) => {\n      if (autoCleanup) {\n        cleanup()\n      }\n      if (err) {\n        reject(err)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\nmodule.exports = eos\nmodule.exports.finished = finished\n","'use strict'\n\n/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\nconst {\n  aggregateTwoErrors,\n  codes: { ERR_MULTIPLE_CALLBACK },\n  AbortError\n} = require('../../ours/errors')\nconst { Symbol } = require('../../ours/primordials')\nconst { kDestroyed, isDestroyed, isFinished, isServerRequest } = require('./utils')\nconst kDestroy = Symbol('kDestroy')\nconst kConstruct = Symbol('kConstruct')\nfunction checkError(err, w, r) {\n  if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err\n    }\n    if (r && !r.errored) {\n      r.errored = err\n    }\n  }\n}\n\n// Backwards compat. cb() is undocumented and unused in core but\n// unfortunately might be used by modules.\nfunction destroy(err, cb) {\n  const r = this._readableState\n  const w = this._writableState\n  // With duplex streams we use the writable side for state.\n  const s = w || r\n  if ((w !== null && w !== undefined && w.destroyed) || (r !== null && r !== undefined && r.destroyed)) {\n    if (typeof cb === 'function') {\n      cb()\n    }\n    return this\n  }\n\n  // We set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n  checkError(err, w, r)\n  if (w) {\n    w.destroyed = true\n  }\n  if (r) {\n    r.destroyed = true\n  }\n\n  // If still constructing then defer calling _destroy.\n  if (!s.constructed) {\n    this.once(kDestroy, function (er) {\n      _destroy(this, aggregateTwoErrors(er, err), cb)\n    })\n  } else {\n    _destroy(this, err, cb)\n  }\n  return this\n}\nfunction _destroy(self, err, cb) {\n  let called = false\n  function onDestroy(err) {\n    if (called) {\n      return\n    }\n    called = true\n    const r = self._readableState\n    const w = self._writableState\n    checkError(err, w, r)\n    if (w) {\n      w.closed = true\n    }\n    if (r) {\n      r.closed = true\n    }\n    if (typeof cb === 'function') {\n      cb(err)\n    }\n    if (err) {\n      process.nextTick(emitErrorCloseNT, self, err)\n    } else {\n      process.nextTick(emitCloseNT, self)\n    }\n  }\n  try {\n    self._destroy(err || null, onDestroy)\n  } catch (err) {\n    onDestroy(err)\n  }\n}\nfunction emitErrorCloseNT(self, err) {\n  emitErrorNT(self, err)\n  emitCloseNT(self)\n}\nfunction emitCloseNT(self) {\n  const r = self._readableState\n  const w = self._writableState\n  if (w) {\n    w.closeEmitted = true\n  }\n  if (r) {\n    r.closeEmitted = true\n  }\n  if ((w !== null && w !== undefined && w.emitClose) || (r !== null && r !== undefined && r.emitClose)) {\n    self.emit('close')\n  }\n}\nfunction emitErrorNT(self, err) {\n  const r = self._readableState\n  const w = self._writableState\n  if ((w !== null && w !== undefined && w.errorEmitted) || (r !== null && r !== undefined && r.errorEmitted)) {\n    return\n  }\n  if (w) {\n    w.errorEmitted = true\n  }\n  if (r) {\n    r.errorEmitted = true\n  }\n  self.emit('error', err)\n}\nfunction undestroy() {\n  const r = this._readableState\n  const w = this._writableState\n  if (r) {\n    r.constructed = true\n    r.closed = false\n    r.closeEmitted = false\n    r.destroyed = false\n    r.errored = null\n    r.errorEmitted = false\n    r.reading = false\n    r.ended = r.readable === false\n    r.endEmitted = r.readable === false\n  }\n  if (w) {\n    w.constructed = true\n    w.destroyed = false\n    w.closed = false\n    w.closeEmitted = false\n    w.errored = null\n    w.errorEmitted = false\n    w.finalCalled = false\n    w.prefinished = false\n    w.ended = w.writable === false\n    w.ending = w.writable === false\n    w.finished = w.writable === false\n  }\n}\nfunction errorOrDestroy(stream, err, sync) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  const r = stream._readableState\n  const w = stream._writableState\n  if ((w !== null && w !== undefined && w.destroyed) || (r !== null && r !== undefined && r.destroyed)) {\n    return this\n  }\n  if ((r !== null && r !== undefined && r.autoDestroy) || (w !== null && w !== undefined && w.autoDestroy))\n    stream.destroy(err)\n  else if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err\n    }\n    if (r && !r.errored) {\n      r.errored = err\n    }\n    if (sync) {\n      process.nextTick(emitErrorNT, stream, err)\n    } else {\n      emitErrorNT(stream, err)\n    }\n  }\n}\nfunction construct(stream, cb) {\n  if (typeof stream._construct !== 'function') {\n    return\n  }\n  const r = stream._readableState\n  const w = stream._writableState\n  if (r) {\n    r.constructed = false\n  }\n  if (w) {\n    w.constructed = false\n  }\n  stream.once(kConstruct, cb)\n  if (stream.listenerCount(kConstruct) > 1) {\n    // Duplex\n    return\n  }\n  process.nextTick(constructNT, stream)\n}\nfunction constructNT(stream) {\n  let called = false\n  function onConstruct(err) {\n    if (called) {\n      errorOrDestroy(stream, err !== null && err !== undefined ? err : new ERR_MULTIPLE_CALLBACK())\n      return\n    }\n    called = true\n    const r = stream._readableState\n    const w = stream._writableState\n    const s = w || r\n    if (r) {\n      r.constructed = true\n    }\n    if (w) {\n      w.constructed = true\n    }\n    if (s.destroyed) {\n      stream.emit(kDestroy, err)\n    } else if (err) {\n      errorOrDestroy(stream, err, true)\n    } else {\n      process.nextTick(emitConstructNT, stream)\n    }\n  }\n  try {\n    stream._construct((err) => {\n      process.nextTick(onConstruct, err)\n    })\n  } catch (err) {\n    process.nextTick(onConstruct, err)\n  }\n}\nfunction emitConstructNT(stream) {\n  stream.emit(kConstruct)\n}\nfunction isRequest(stream) {\n  return (stream === null || stream === undefined ? undefined : stream.setHeader) && typeof stream.abort === 'function'\n}\nfunction emitCloseLegacy(stream) {\n  stream.emit('close')\n}\nfunction emitErrorCloseLegacy(stream, err) {\n  stream.emit('error', err)\n  process.nextTick(emitCloseLegacy, stream)\n}\n\n// Normalize destroy for legacy.\nfunction destroyer(stream, err) {\n  if (!stream || isDestroyed(stream)) {\n    return\n  }\n  if (!err && !isFinished(stream)) {\n    err = new AbortError()\n  }\n\n  // TODO: Remove isRequest branches.\n  if (isServerRequest(stream)) {\n    stream.socket = null\n    stream.destroy(err)\n  } else if (isRequest(stream)) {\n    stream.abort()\n  } else if (isRequest(stream.req)) {\n    stream.req.abort()\n  } else if (typeof stream.destroy === 'function') {\n    stream.destroy(err)\n  } else if (typeof stream.close === 'function') {\n    // TODO: Don't lose err?\n    stream.close()\n  } else if (err) {\n    process.nextTick(emitErrorCloseLegacy, stream, err)\n  } else {\n    process.nextTick(emitCloseLegacy, stream)\n  }\n  if (!stream.destroyed) {\n    stream[kDestroyed] = true\n  }\n}\nmodule.exports = {\n  construct,\n  destroyer,\n  destroy,\n  undestroy,\n  errorOrDestroy\n}\n","'use strict'\n\nconst { ArrayIsArray, ObjectSetPrototypeOf } = require('../../ours/primordials')\nconst { EventEmitter: EE } = require('events')\nfunction Stream(opts) {\n  EE.call(this, opts)\n}\nObjectSetPrototypeOf(Stream.prototype, EE.prototype)\nObjectSetPrototypeOf(Stream, EE)\nStream.prototype.pipe = function (dest, options) {\n  const source = this\n  function ondata(chunk) {\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\n      source.pause()\n    }\n  }\n  source.on('data', ondata)\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume()\n    }\n  }\n  dest.on('drain', ondrain)\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend)\n    source.on('close', onclose)\n  }\n  let didOnEnd = false\n  function onend() {\n    if (didOnEnd) return\n    didOnEnd = true\n    dest.end()\n  }\n  function onclose() {\n    if (didOnEnd) return\n    didOnEnd = true\n    if (typeof dest.destroy === 'function') dest.destroy()\n  }\n\n  // Don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup()\n    if (EE.listenerCount(this, 'error') === 0) {\n      this.emit('error', er)\n    }\n  }\n  prependListener(source, 'error', onerror)\n  prependListener(dest, 'error', onerror)\n\n  // Remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata)\n    dest.removeListener('drain', ondrain)\n    source.removeListener('end', onend)\n    source.removeListener('close', onclose)\n    source.removeListener('error', onerror)\n    dest.removeListener('error', onerror)\n    source.removeListener('end', cleanup)\n    source.removeListener('close', cleanup)\n    dest.removeListener('close', cleanup)\n  }\n  source.on('end', cleanup)\n  source.on('close', cleanup)\n  dest.on('close', cleanup)\n  dest.emit('pipe', source)\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest\n}\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn)\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn)\n  else if (ArrayIsArray(emitter._events[event])) emitter._events[event].unshift(fn)\n  else emitter._events[event] = [fn, emitter._events[event]]\n}\nmodule.exports = {\n  Stream,\n  prependListener\n}\n","'use strict'\n\nconst { AbortError, codes } = require('../../ours/errors')\nconst { isNodeStream, isWebStream, kControllerErrorFunction } = require('./utils')\nconst eos = require('./end-of-stream')\nconst { ERR_INVALID_ARG_TYPE } = codes\n\n// This method is inlined here for readable-stream\n// It also does not allow for signal to not exist on the stream\n// https://github.com/nodejs/node/pull/36061#discussion_r533718029\nconst validateAbortSignal = (signal, name) => {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'AbortSignal', signal)\n  }\n}\nmodule.exports.addAbortSignal = function addAbortSignal(signal, stream) {\n  validateAbortSignal(signal, 'signal')\n  if (!isNodeStream(stream) && !isWebStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream', ['ReadableStream', 'WritableStream', 'Stream'], stream)\n  }\n  return module.exports.addAbortSignalNoValidate(signal, stream)\n}\nmodule.exports.addAbortSignalNoValidate = function (signal, stream) {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    return stream\n  }\n  const onAbort = isNodeStream(stream)\n    ? () => {\n        stream.destroy(\n          new AbortError(undefined, {\n            cause: signal.reason\n          })\n        )\n      }\n    : () => {\n        stream[kControllerErrorFunction](\n          new AbortError(undefined, {\n            cause: signal.reason\n          })\n        )\n      }\n  if (signal.aborted) {\n    onAbort()\n  } else {\n    signal.addEventListener('abort', onAbort)\n    eos(stream, () => signal.removeEventListener('abort', onAbort))\n  }\n  return stream\n}\n","'use strict'\n\nconst { StringPrototypeSlice, SymbolIterator, TypedArrayPrototypeSet, Uint8Array } = require('../../ours/primordials')\nconst { Buffer } = require('buffer')\nconst { inspect } = require('../../ours/util')\nmodule.exports = class BufferList {\n  constructor() {\n    this.head = null\n    this.tail = null\n    this.length = 0\n  }\n  push(v) {\n    const entry = {\n      data: v,\n      next: null\n    }\n    if (this.length > 0) this.tail.next = entry\n    else this.head = entry\n    this.tail = entry\n    ++this.length\n  }\n  unshift(v) {\n    const entry = {\n      data: v,\n      next: this.head\n    }\n    if (this.length === 0) this.tail = entry\n    this.head = entry\n    ++this.length\n  }\n  shift() {\n    if (this.length === 0) return\n    const ret = this.head.data\n    if (this.length === 1) this.head = this.tail = null\n    else this.head = this.head.next\n    --this.length\n    return ret\n  }\n  clear() {\n    this.head = this.tail = null\n    this.length = 0\n  }\n  join(s) {\n    if (this.length === 0) return ''\n    let p = this.head\n    let ret = '' + p.data\n    while ((p = p.next) !== null) ret += s + p.data\n    return ret\n  }\n  concat(n) {\n    if (this.length === 0) return Buffer.alloc(0)\n    const ret = Buffer.allocUnsafe(n >>> 0)\n    let p = this.head\n    let i = 0\n    while (p) {\n      TypedArrayPrototypeSet(ret, p.data, i)\n      i += p.data.length\n      p = p.next\n    }\n    return ret\n  }\n\n  // Consumes a specified amount of bytes or characters from the buffered data.\n  consume(n, hasStrings) {\n    const data = this.head.data\n    if (n < data.length) {\n      // `slice` is the same for buffers and strings.\n      const slice = data.slice(0, n)\n      this.head.data = data.slice(n)\n      return slice\n    }\n    if (n === data.length) {\n      // First chunk is a perfect match.\n      return this.shift()\n    }\n    // Result spans more than one buffer.\n    return hasStrings ? this._getString(n) : this._getBuffer(n)\n  }\n  first() {\n    return this.head.data\n  }\n  *[SymbolIterator]() {\n    for (let p = this.head; p; p = p.next) {\n      yield p.data\n    }\n  }\n\n  // Consumes a specified amount of characters from the buffered data.\n  _getString(n) {\n    let ret = ''\n    let p = this.head\n    let c = 0\n    do {\n      const str = p.data\n      if (n > str.length) {\n        ret += str\n        n -= str.length\n      } else {\n        if (n === str.length) {\n          ret += str\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          ret += StringPrototypeSlice(str, 0, n)\n          this.head = p\n          p.data = StringPrototypeSlice(str, n)\n        }\n        break\n      }\n      ++c\n    } while ((p = p.next) !== null)\n    this.length -= c\n    return ret\n  }\n\n  // Consumes a specified amount of bytes from the buffered data.\n  _getBuffer(n) {\n    const ret = Buffer.allocUnsafe(n)\n    const retLen = n\n    let p = this.head\n    let c = 0\n    do {\n      const buf = p.data\n      if (n > buf.length) {\n        TypedArrayPrototypeSet(ret, buf, retLen - n)\n        n -= buf.length\n      } else {\n        if (n === buf.length) {\n          TypedArrayPrototypeSet(ret, buf, retLen - n)\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          TypedArrayPrototypeSet(ret, new Uint8Array(buf.buffer, buf.byteOffset, n), retLen - n)\n          this.head = p\n          p.data = buf.slice(n)\n        }\n        break\n      }\n      ++c\n    } while ((p = p.next) !== null)\n    this.length -= c\n    return ret\n  }\n\n  // Make sure the linked list only shows the minimal necessary information.\n  [Symbol.for('nodejs.util.inspect.custom')](_, options) {\n    return inspect(this, {\n      ...options,\n      // Only inspect one level.\n      depth: 0,\n      // It should not recurse.\n      customInspect: false\n    })\n  }\n}\n","'use strict'\n\nconst { MathFloor, NumberIsInteger } = require('../../ours/primordials')\nconst { ERR_INVALID_ARG_VALUE } = require('../../ours/errors').codes\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null\n}\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? 16 : 16 * 1024\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  const hwm = highWaterMarkFrom(options, isDuplex, duplexKey)\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark'\n      throw new ERR_INVALID_ARG_VALUE(name, hwm)\n    }\n    return MathFloor(hwm)\n  }\n\n  // Default value\n  return getDefaultHighWaterMark(state.objectMode)\n}\nmodule.exports = {\n  getHighWaterMark,\n  getDefaultHighWaterMark\n}\n","'use strict'\n\n/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\nconst { PromisePrototypeThen, SymbolAsyncIterator, SymbolIterator } = require('../../ours/primordials')\nconst { Buffer } = require('buffer')\nconst { ERR_INVALID_ARG_TYPE, ERR_STREAM_NULL_VALUES } = require('../../ours/errors').codes\nfunction from(Readable, iterable, opts) {\n  let iterator\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\n    return new Readable({\n      objectMode: true,\n      ...opts,\n      read() {\n        this.push(iterable)\n        this.push(null)\n      }\n    })\n  }\n  let isAsync\n  if (iterable && iterable[SymbolAsyncIterator]) {\n    isAsync = true\n    iterator = iterable[SymbolAsyncIterator]()\n  } else if (iterable && iterable[SymbolIterator]) {\n    isAsync = false\n    iterator = iterable[SymbolIterator]()\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('iterable', ['Iterable'], iterable)\n  }\n  const readable = new Readable({\n    objectMode: true,\n    highWaterMark: 1,\n    // TODO(ronag): What options should be allowed?\n    ...opts\n  })\n\n  // Flag to protect against _read\n  // being called before last iteration completion.\n  let reading = false\n  readable._read = function () {\n    if (!reading) {\n      reading = true\n      next()\n    }\n  }\n  readable._destroy = function (error, cb) {\n    PromisePrototypeThen(\n      close(error),\n      () => process.nextTick(cb, error),\n      // nextTick is here in case cb throws\n      (e) => process.nextTick(cb, e || error)\n    )\n  }\n  async function close(error) {\n    const hadError = error !== undefined && error !== null\n    const hasThrow = typeof iterator.throw === 'function'\n    if (hadError && hasThrow) {\n      const { value, done } = await iterator.throw(error)\n      await value\n      if (done) {\n        return\n      }\n    }\n    if (typeof iterator.return === 'function') {\n      const { value } = await iterator.return()\n      await value\n    }\n  }\n  async function next() {\n    for (;;) {\n      try {\n        const { value, done } = isAsync ? await iterator.next() : iterator.next()\n        if (done) {\n          readable.push(null)\n        } else {\n          const res = value && typeof value.then === 'function' ? await value : value\n          if (res === null) {\n            reading = false\n            throw new ERR_STREAM_NULL_VALUES()\n          } else if (readable.push(res)) {\n            continue\n          } else {\n            reading = false\n          }\n        }\n      } catch (err) {\n        readable.destroy(err)\n      }\n      break\n    }\n  }\n  return readable\n}\nmodule.exports = from\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n;('use strict')\nconst {\n  ArrayPrototypeIndexOf,\n  NumberIsInteger,\n  NumberIsNaN,\n  NumberParseInt,\n  ObjectDefineProperties,\n  ObjectKeys,\n  ObjectSetPrototypeOf,\n  Promise,\n  SafeSet,\n  SymbolAsyncIterator,\n  Symbol\n} = require('../../ours/primordials')\nmodule.exports = Readable\nReadable.ReadableState = ReadableState\nconst { EventEmitter: EE } = require('events')\nconst { Stream, prependListener } = require('./legacy')\nconst { Buffer } = require('buffer')\nconst { addAbortSignal } = require('./add-abort-signal')\nconst eos = require('./end-of-stream')\nlet debug = require('../../ours/util').debuglog('stream', (fn) => {\n  debug = fn\n})\nconst BufferList = require('./buffer_list')\nconst destroyImpl = require('./destroy')\nconst { getHighWaterMark, getDefaultHighWaterMark } = require('./state')\nconst {\n  aggregateTwoErrors,\n  codes: {\n    ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_OUT_OF_RANGE,\n    ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\n  }\n} = require('../../ours/errors')\nconst { validateObject } = require('../validators')\nconst kPaused = Symbol('kPaused')\nconst { StringDecoder } = require('string_decoder')\nconst from = require('./from')\nObjectSetPrototypeOf(Readable.prototype, Stream.prototype)\nObjectSetPrototypeOf(Readable, Stream)\nconst nop = () => {}\nconst { errorOrDestroy } = destroyImpl\nfunction ReadableState(options, stream, isDuplex) {\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof require('./duplex')\n\n  // Object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away.\n  this.objectMode = !!(options && options.objectMode)\n  if (isDuplex) this.objectMode = this.objectMode || !!(options && options.readableObjectMode)\n\n  // The point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = options\n    ? getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex)\n    : getDefaultHighWaterMark(false)\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift().\n  this.buffer = new BufferList()\n  this.length = 0\n  this.pipes = []\n  this.flowing = null\n  this.ended = false\n  this.endEmitted = false\n  this.reading = false\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in, therefore we start as\n  // constructed.\n  this.constructed = true\n\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true\n\n  // Whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false\n  this.emittedReadable = false\n  this.readableListening = false\n  this.resumeScheduled = false\n  this[kPaused] = null\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  this.autoDestroy = !options || options.autoDestroy !== false\n\n  // Has it been destroyed.\n  this.destroyed = false\n\n  // Indicates whether the stream has errored. When true no further\n  // _read calls, 'data' or 'readable' events should occur. This is needed\n  // since when autoDestroy is disabled we need a way to tell whether the\n  // stream has failed.\n  this.errored = null\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8'\n\n  // Ref the piped dest which we need a drain event on it\n  // type: null | Writable | Set<Writable>.\n  this.awaitDrainWriters = null\n  this.multiAwaitDrain = false\n\n  // If true, a maybeReadMore has been scheduled.\n  this.readingMore = false\n  this.dataEmitted = false\n  this.decoder = null\n  this.encoding = null\n  if (options && options.encoding) {\n    this.decoder = new StringDecoder(options.encoding)\n    this.encoding = options.encoding\n  }\n}\nfunction Readable(options) {\n  if (!(this instanceof Readable)) return new Readable(options)\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5.\n  const isDuplex = this instanceof require('./duplex')\n  this._readableState = new ReadableState(options, this, isDuplex)\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read\n    if (typeof options.destroy === 'function') this._destroy = options.destroy\n    if (typeof options.construct === 'function') this._construct = options.construct\n    if (options.signal && !isDuplex) addAbortSignal(options.signal, this)\n  }\n  Stream.call(this, options)\n  destroyImpl.construct(this, () => {\n    if (this._readableState.needReadable) {\n      maybeReadMore(this, this._readableState)\n    }\n  })\n}\nReadable.prototype.destroy = destroyImpl.destroy\nReadable.prototype._undestroy = destroyImpl.undestroy\nReadable.prototype._destroy = function (err, cb) {\n  cb(err)\n}\nReadable.prototype[EE.captureRejectionSymbol] = function (err) {\n  this.destroy(err)\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  return readableAddChunk(this, chunk, encoding, false)\n}\n\n// Unshift should *always* be something directly out of read().\nReadable.prototype.unshift = function (chunk, encoding) {\n  return readableAddChunk(this, chunk, encoding, true)\n}\nfunction readableAddChunk(stream, chunk, encoding, addToFront) {\n  debug('readableAddChunk', chunk)\n  const state = stream._readableState\n  let err\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding\n      if (state.encoding !== encoding) {\n        if (addToFront && state.encoding) {\n          // When unshifting, if state.encoding is set, we have to save\n          // the string in the BufferList with the state encoding.\n          chunk = Buffer.from(chunk, encoding).toString(state.encoding)\n        } else {\n          chunk = Buffer.from(chunk, encoding)\n          encoding = ''\n        }\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = ''\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk)\n      encoding = ''\n    } else if (chunk != null) {\n      err = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk)\n    }\n  }\n  if (err) {\n    errorOrDestroy(stream, err)\n  } else if (chunk === null) {\n    state.reading = false\n    onEofChunk(stream, state)\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\n    if (addToFront) {\n      if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT())\n      else if (state.destroyed || state.errored) return false\n      else addChunk(stream, state, chunk, true)\n    } else if (state.ended) {\n      errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF())\n    } else if (state.destroyed || state.errored) {\n      return false\n    } else {\n      state.reading = false\n      if (state.decoder && !encoding) {\n        chunk = state.decoder.write(chunk)\n        if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false)\n        else maybeReadMore(stream, state)\n      } else {\n        addChunk(stream, state, chunk, false)\n      }\n    }\n  } else if (!addToFront) {\n    state.reading = false\n    maybeReadMore(stream, state)\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0)\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync && stream.listenerCount('data') > 0) {\n    // Use the guard to avoid creating `Set()` repeatedly\n    // when we have multiple pipes.\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear()\n    } else {\n      state.awaitDrainWriters = null\n    }\n    state.dataEmitted = true\n    stream.emit('data', chunk)\n  } else {\n    // Update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length\n    if (addToFront) state.buffer.unshift(chunk)\n    else state.buffer.push(chunk)\n    if (state.needReadable) emitReadable(stream)\n  }\n  maybeReadMore(stream, state)\n}\nReadable.prototype.isPaused = function () {\n  const state = this._readableState\n  return state[kPaused] === true || state.flowing === false\n}\n\n// Backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  const decoder = new StringDecoder(enc)\n  this._readableState.decoder = decoder\n  // If setEncoding(null), decoder.encoding equals utf8.\n  this._readableState.encoding = this._readableState.decoder.encoding\n  const buffer = this._readableState.buffer\n  // Iterate over current buffer to convert already stored Buffers:\n  let content = ''\n  for (const data of buffer) {\n    content += decoder.write(data)\n  }\n  buffer.clear()\n  if (content !== '') buffer.push(content)\n  this._readableState.length = content.length\n  return this\n}\n\n// Don't raise the hwm > 1GB.\nconst MAX_HWM = 0x40000000\nfunction computeNewHighWaterMark(n) {\n  if (n > MAX_HWM) {\n    throw new ERR_OUT_OF_RANGE('size', '<= 1GiB', n)\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts.\n    n--\n    n |= n >>> 1\n    n |= n >>> 2\n    n |= n >>> 4\n    n |= n >>> 8\n    n |= n >>> 16\n    n++\n  }\n  return n\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || (state.length === 0 && state.ended)) return 0\n  if (state.objectMode) return 1\n  if (NumberIsNaN(n)) {\n    // Only flow one buffer at a time.\n    if (state.flowing && state.length) return state.buffer.first().length\n    return state.length\n  }\n  if (n <= state.length) return n\n  return state.ended ? state.length : 0\n}\n\n// You can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n)\n  // Same as parseInt(undefined, 10), however V8 7.3 performance regressed\n  // in this scenario, so we are doing it manually.\n  if (n === undefined) {\n    n = NaN\n  } else if (!NumberIsInteger(n)) {\n    n = NumberParseInt(n, 10)\n  }\n  const state = this._readableState\n  const nOrig = n\n\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n)\n  if (n !== 0) state.emittedReadable = false\n\n  // If we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (\n    n === 0 &&\n    state.needReadable &&\n    ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)\n  ) {\n    debug('read: emitReadable', state.length, state.ended)\n    if (state.length === 0 && state.ended) endReadable(this)\n    else emitReadable(this)\n    return null\n  }\n  n = howMuchToRead(n, state)\n\n  // If we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this)\n    return null\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  let doRead = state.needReadable\n  debug('need readable', doRead)\n\n  // If we currently have less than the highWaterMark, then also read some.\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true\n    debug('length less than watermark', doRead)\n  }\n\n  // However, if we've ended, then there's no point, if we're already\n  // reading, then it's unnecessary, if we're constructing we have to wait,\n  // and if we're destroyed or errored, then it's not allowed,\n  if (state.ended || state.reading || state.destroyed || state.errored || !state.constructed) {\n    doRead = false\n    debug('reading, ended or constructing', doRead)\n  } else if (doRead) {\n    debug('do read')\n    state.reading = true\n    state.sync = true\n    // If the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true\n\n    // Call internal read method\n    try {\n      this._read(state.highWaterMark)\n    } catch (err) {\n      errorOrDestroy(this, err)\n    }\n    state.sync = false\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state)\n  }\n  let ret\n  if (n > 0) ret = fromList(n, state)\n  else ret = null\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark\n    n = 0\n  } else {\n    state.length -= n\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear()\n    } else {\n      state.awaitDrainWriters = null\n    }\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this)\n  }\n  if (ret !== null && !state.errorEmitted && !state.closeEmitted) {\n    state.dataEmitted = true\n    this.emit('data', ret)\n  }\n  return ret\n}\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk')\n  if (state.ended) return\n  if (state.decoder) {\n    const chunk = state.decoder.end()\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk)\n      state.length += state.objectMode ? 1 : chunk.length\n    }\n  }\n  state.ended = true\n  if (state.sync) {\n    // If we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call.\n    emitReadable(stream)\n  } else {\n    // Emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false\n    state.emittedReadable = true\n    // We have to emit readable now that we are EOF. Modules\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\n    emitReadable_(stream)\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  const state = stream._readableState\n  debug('emitReadable', state.needReadable, state.emittedReadable)\n  state.needReadable = false\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing)\n    state.emittedReadable = true\n    process.nextTick(emitReadable_, stream)\n  }\n}\nfunction emitReadable_(stream) {\n  const state = stream._readableState\n  debug('emitReadable_', state.destroyed, state.length, state.ended)\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\n    stream.emit('readable')\n    state.emittedReadable = false\n  }\n\n  // The stream needs another readable event if:\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark\n  flow(stream)\n}\n\n// At this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore && state.constructed) {\n    state.readingMore = true\n    process.nextTick(maybeReadMore_, stream, state)\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (\n    !state.reading &&\n    !state.ended &&\n    (state.length < state.highWaterMark || (state.flowing && state.length === 0))\n  ) {\n    const len = state.length\n    debug('maybeReadMore read 0')\n    stream.read(0)\n    if (len === state.length)\n      // Didn't get any data, stop spinning.\n      break\n  }\n  state.readingMore = false\n}\n\n// Abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()')\n}\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  const src = this\n  const state = this._readableState\n  if (state.pipes.length === 1) {\n    if (!state.multiAwaitDrain) {\n      state.multiAwaitDrain = true\n      state.awaitDrainWriters = new SafeSet(state.awaitDrainWriters ? [state.awaitDrainWriters] : [])\n    }\n  }\n  state.pipes.push(dest)\n  debug('pipe count=%d opts=%j', state.pipes.length, pipeOpts)\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr\n  const endFn = doEnd ? onend : unpipe\n  if (state.endEmitted) process.nextTick(endFn)\n  else src.once('end', endFn)\n  dest.on('unpipe', onunpipe)\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe')\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true\n        cleanup()\n      }\n    }\n  }\n  function onend() {\n    debug('onend')\n    dest.end()\n  }\n  let ondrain\n  let cleanedUp = false\n  function cleanup() {\n    debug('cleanup')\n    // Cleanup event handlers once the pipe is broken.\n    dest.removeListener('close', onclose)\n    dest.removeListener('finish', onfinish)\n    if (ondrain) {\n      dest.removeListener('drain', ondrain)\n    }\n    dest.removeListener('error', onerror)\n    dest.removeListener('unpipe', onunpipe)\n    src.removeListener('end', onend)\n    src.removeListener('end', unpipe)\n    src.removeListener('data', ondata)\n    cleanedUp = true\n\n    // If the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (ondrain && state.awaitDrainWriters && (!dest._writableState || dest._writableState.needDrain)) ondrain()\n  }\n  function pause() {\n    // If the user unpiped during `dest.write()`, it is possible\n    // to get stuck in a permanently paused state if that write\n    // also returned false.\n    // => Check whether `dest` is still a piping destination.\n    if (!cleanedUp) {\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\n        debug('false write response, pause', 0)\n        state.awaitDrainWriters = dest\n        state.multiAwaitDrain = false\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\n        debug('false write response, pause', state.awaitDrainWriters.size)\n        state.awaitDrainWriters.add(dest)\n      }\n      src.pause()\n    }\n    if (!ondrain) {\n      // When the dest drains, it reduces the awaitDrain counter\n      // on the source.  This would be more elegant with a .once()\n      // handler in flow(), but adding and removing repeatedly is\n      // too slow.\n      ondrain = pipeOnDrain(src, dest)\n      dest.on('drain', ondrain)\n    }\n  }\n  src.on('data', ondata)\n  function ondata(chunk) {\n    debug('ondata')\n    const ret = dest.write(chunk)\n    debug('dest.write', ret)\n    if (ret === false) {\n      pause()\n    }\n  }\n\n  // If the dest has an error, then stop piping into it.\n  // However, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er)\n    unpipe()\n    dest.removeListener('error', onerror)\n    if (dest.listenerCount('error') === 0) {\n      const s = dest._writableState || dest._readableState\n      if (s && !s.errorEmitted) {\n        // User incorrectly emitted 'error' directly on the stream.\n        errorOrDestroy(dest, er)\n      } else {\n        dest.emit('error', er)\n      }\n    }\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror)\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish)\n    unpipe()\n  }\n  dest.once('close', onclose)\n  function onfinish() {\n    debug('onfinish')\n    dest.removeListener('close', onclose)\n    unpipe()\n  }\n  dest.once('finish', onfinish)\n  function unpipe() {\n    debug('unpipe')\n    src.unpipe(dest)\n  }\n\n  // Tell the dest that it's being piped to.\n  dest.emit('pipe', src)\n\n  // Start the flow if it hasn't been started already.\n\n  if (dest.writableNeedDrain === true) {\n    if (state.flowing) {\n      pause()\n    }\n  } else if (!state.flowing) {\n    debug('pipe resume')\n    src.resume()\n  }\n  return dest\n}\nfunction pipeOnDrain(src, dest) {\n  return function pipeOnDrainFunctionResult() {\n    const state = src._readableState\n\n    // `ondrain` will call directly,\n    // `this` maybe not a reference to dest,\n    // so we use the real dest here.\n    if (state.awaitDrainWriters === dest) {\n      debug('pipeOnDrain', 1)\n      state.awaitDrainWriters = null\n    } else if (state.multiAwaitDrain) {\n      debug('pipeOnDrain', state.awaitDrainWriters.size)\n      state.awaitDrainWriters.delete(dest)\n    }\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) && src.listenerCount('data')) {\n      src.resume()\n    }\n  }\n}\nReadable.prototype.unpipe = function (dest) {\n  const state = this._readableState\n  const unpipeInfo = {\n    hasUnpiped: false\n  }\n\n  // If we're not piping anywhere, then do nothing.\n  if (state.pipes.length === 0) return this\n  if (!dest) {\n    // remove all.\n    const dests = state.pipes\n    state.pipes = []\n    this.pause()\n    for (let i = 0; i < dests.length; i++)\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      })\n    return this\n  }\n\n  // Try to find the right one.\n  const index = ArrayPrototypeIndexOf(state.pipes, dest)\n  if (index === -1) return this\n  state.pipes.splice(index, 1)\n  if (state.pipes.length === 0) this.pause()\n  dest.emit('unpipe', this, unpipeInfo)\n  return this\n}\n\n// Set up data events if they are asked for\n// Ensure readable listeners eventually get something.\nReadable.prototype.on = function (ev, fn) {\n  const res = Stream.prototype.on.call(this, ev, fn)\n  const state = this._readableState\n  if (ev === 'data') {\n    // Update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0\n\n    // Try start flowing on next tick if stream isn't explicitly paused.\n    if (state.flowing !== false) this.resume()\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true\n      state.flowing = false\n      state.emittedReadable = false\n      debug('on readable', state.length, state.reading)\n      if (state.length) {\n        emitReadable(this)\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this)\n      }\n    }\n  }\n  return res\n}\nReadable.prototype.addListener = Readable.prototype.on\nReadable.prototype.removeListener = function (ev, fn) {\n  const res = Stream.prototype.removeListener.call(this, ev, fn)\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this)\n  }\n  return res\n}\nReadable.prototype.off = Readable.prototype.removeListener\nReadable.prototype.removeAllListeners = function (ev) {\n  const res = Stream.prototype.removeAllListeners.apply(this, arguments)\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this)\n  }\n  return res\n}\nfunction updateReadableListening(self) {\n  const state = self._readableState\n  state.readableListening = self.listenerCount('readable') > 0\n  if (state.resumeScheduled && state[kPaused] === false) {\n    // Flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true\n\n    // Crude way to check if we should resume.\n  } else if (self.listenerCount('data') > 0) {\n    self.resume()\n  } else if (!state.readableListening) {\n    state.flowing = null\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0')\n  self.read(0)\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  const state = this._readableState\n  if (!state.flowing) {\n    debug('resume')\n    // We flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume().\n    state.flowing = !state.readableListening\n    resume(this, state)\n  }\n  state[kPaused] = false\n  return this\n}\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true\n    process.nextTick(resume_, stream, state)\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading)\n  if (!state.reading) {\n    stream.read(0)\n  }\n  state.resumeScheduled = false\n  stream.emit('resume')\n  flow(stream)\n  if (state.flowing && !state.reading) stream.read(0)\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing)\n  if (this._readableState.flowing !== false) {\n    debug('pause')\n    this._readableState.flowing = false\n    this.emit('pause')\n  }\n  this._readableState[kPaused] = true\n  return this\n}\nfunction flow(stream) {\n  const state = stream._readableState\n  debug('flow', state.flowing)\n  while (state.flowing && stream.read() !== null);\n}\n\n// Wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  let paused = false\n\n  // TODO (ronag): Should this.destroy(err) emit\n  // 'error' on the wrapped stream? Would require\n  // a static factory method, e.g. Readable.wrap(stream).\n\n  stream.on('data', (chunk) => {\n    if (!this.push(chunk) && stream.pause) {\n      paused = true\n      stream.pause()\n    }\n  })\n  stream.on('end', () => {\n    this.push(null)\n  })\n  stream.on('error', (err) => {\n    errorOrDestroy(this, err)\n  })\n  stream.on('close', () => {\n    this.destroy()\n  })\n  stream.on('destroy', () => {\n    this.destroy()\n  })\n  this._read = () => {\n    if (paused && stream.resume) {\n      paused = false\n      stream.resume()\n    }\n  }\n\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\n  const streamKeys = ObjectKeys(stream)\n  for (let j = 1; j < streamKeys.length; j++) {\n    const i = streamKeys[j]\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = stream[i].bind(stream)\n    }\n  }\n  return this\n}\nReadable.prototype[SymbolAsyncIterator] = function () {\n  return streamToAsyncIterator(this)\n}\nReadable.prototype.iterator = function (options) {\n  if (options !== undefined) {\n    validateObject(options, 'options')\n  }\n  return streamToAsyncIterator(this, options)\n}\nfunction streamToAsyncIterator(stream, options) {\n  if (typeof stream.read !== 'function') {\n    stream = Readable.wrap(stream, {\n      objectMode: true\n    })\n  }\n  const iter = createAsyncIterator(stream, options)\n  iter.stream = stream\n  return iter\n}\nasync function* createAsyncIterator(stream, options) {\n  let callback = nop\n  function next(resolve) {\n    if (this === stream) {\n      callback()\n      callback = nop\n    } else {\n      callback = resolve\n    }\n  }\n  stream.on('readable', next)\n  let error\n  const cleanup = eos(\n    stream,\n    {\n      writable: false\n    },\n    (err) => {\n      error = err ? aggregateTwoErrors(error, err) : null\n      callback()\n      callback = nop\n    }\n  )\n  try {\n    while (true) {\n      const chunk = stream.destroyed ? null : stream.read()\n      if (chunk !== null) {\n        yield chunk\n      } else if (error) {\n        throw error\n      } else if (error === null) {\n        return\n      } else {\n        await new Promise(next)\n      }\n    }\n  } catch (err) {\n    error = aggregateTwoErrors(error, err)\n    throw error\n  } finally {\n    if (\n      (error || (options === null || options === undefined ? undefined : options.destroyOnReturn) !== false) &&\n      (error === undefined || stream._readableState.autoDestroy)\n    ) {\n      destroyImpl.destroyer(stream, null)\n    } else {\n      stream.off('readable', next)\n      cleanup()\n    }\n  }\n}\n\n// Making it explicit these properties are not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail.\nObjectDefineProperties(Readable.prototype, {\n  readable: {\n    __proto__: null,\n    get() {\n      const r = this._readableState\n      // r.readable === false means that this is part of a Duplex stream\n      // where the readable side was disabled upon construction.\n      // Compat. The user might manually disable readable side through\n      // deprecated setter.\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted && !r.endEmitted\n    },\n    set(val) {\n      // Backwards compat.\n      if (this._readableState) {\n        this._readableState.readable = !!val\n      }\n    }\n  },\n  readableDidRead: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.dataEmitted\n    }\n  },\n  readableAborted: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return !!(\n        this._readableState.readable !== false &&\n        (this._readableState.destroyed || this._readableState.errored) &&\n        !this._readableState.endEmitted\n      )\n    }\n  },\n  readableHighWaterMark: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.highWaterMark\n    }\n  },\n  readableBuffer: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState && this._readableState.buffer\n    }\n  },\n  readableFlowing: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.flowing\n    },\n    set: function (state) {\n      if (this._readableState) {\n        this._readableState.flowing = state\n      }\n    }\n  },\n  readableLength: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState.length\n    }\n  },\n  readableObjectMode: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.objectMode : false\n    }\n  },\n  readableEncoding: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.encoding : null\n    }\n  },\n  errored: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.errored : null\n    }\n  },\n  closed: {\n    __proto__: null,\n    get() {\n      return this._readableState ? this._readableState.closed : false\n    }\n  },\n  destroyed: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.destroyed : false\n    },\n    set(value) {\n      // We ignore the value if the stream\n      // has not been initialized yet.\n      if (!this._readableState) {\n        return\n      }\n\n      // Backward compatibility, the user is explicitly\n      // managing destroyed.\n      this._readableState.destroyed = value\n    }\n  },\n  readableEnded: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.endEmitted : false\n    }\n  }\n})\nObjectDefineProperties(ReadableState.prototype, {\n  // Legacy getter for `pipesCount`.\n  pipesCount: {\n    __proto__: null,\n    get() {\n      return this.pipes.length\n    }\n  },\n  // Legacy property for `paused`.\n  paused: {\n    __proto__: null,\n    get() {\n      return this[kPaused] !== false\n    },\n    set(value) {\n      this[kPaused] = !!value\n    }\n  }\n})\n\n// Exposed for testing purposes only.\nReadable._fromList = fromList\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered.\n  if (state.length === 0) return null\n  let ret\n  if (state.objectMode) ret = state.buffer.shift()\n  else if (!n || n >= state.length) {\n    // Read it all, truncate the list.\n    if (state.decoder) ret = state.buffer.join('')\n    else if (state.buffer.length === 1) ret = state.buffer.first()\n    else ret = state.buffer.concat(state.length)\n    state.buffer.clear()\n  } else {\n    // read part of list.\n    ret = state.buffer.consume(n, state.decoder)\n  }\n  return ret\n}\nfunction endReadable(stream) {\n  const state = stream._readableState\n  debug('endReadable', state.endEmitted)\n  if (!state.endEmitted) {\n    state.ended = true\n    process.nextTick(endReadableNT, state, stream)\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length)\n\n  // Check that we didn't get one last unshift.\n  if (!state.errored && !state.closeEmitted && !state.endEmitted && state.length === 0) {\n    state.endEmitted = true\n    stream.emit('end')\n    if (stream.writable && stream.allowHalfOpen === false) {\n      process.nextTick(endWritableNT, stream)\n    } else if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well.\n      const wState = stream._writableState\n      const autoDestroy =\n        !wState ||\n        (wState.autoDestroy &&\n          // We don't expect the writable to ever 'finish'\n          // if writable is explicitly set to false.\n          (wState.finished || wState.writable === false))\n      if (autoDestroy) {\n        stream.destroy()\n      }\n    }\n  }\n}\nfunction endWritableNT(stream) {\n  const writable = stream.writable && !stream.writableEnded && !stream.destroyed\n  if (writable) {\n    stream.end()\n  }\n}\nReadable.from = function (iterable, opts) {\n  return from(Readable, iterable, opts)\n}\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nReadable.fromWeb = function (readableStream, options) {\n  return lazyWebStreams().newStreamReadableFromReadableStream(readableStream, options)\n}\nReadable.toWeb = function (streamReadable, options) {\n  return lazyWebStreams().newReadableStreamFromStreamReadable(streamReadable, options)\n}\nReadable.wrap = function (src, options) {\n  var _ref, _src$readableObjectMo\n  return new Readable({\n    objectMode:\n      (_ref =\n        (_src$readableObjectMo = src.readableObjectMode) !== null && _src$readableObjectMo !== undefined\n          ? _src$readableObjectMo\n          : src.objectMode) !== null && _ref !== undefined\n        ? _ref\n        : true,\n    ...options,\n    destroy(err, callback) {\n      destroyImpl.destroyer(src, err)\n      callback(err)\n    }\n  }).wrap(src)\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n;('use strict')\nconst {\n  ArrayPrototypeSlice,\n  Error,\n  FunctionPrototypeSymbolHasInstance,\n  ObjectDefineProperty,\n  ObjectDefineProperties,\n  ObjectSetPrototypeOf,\n  StringPrototypeToLowerCase,\n  Symbol,\n  SymbolHasInstance\n} = require('../../ours/primordials')\nmodule.exports = Writable\nWritable.WritableState = WritableState\nconst { EventEmitter: EE } = require('events')\nconst Stream = require('./legacy').Stream\nconst { Buffer } = require('buffer')\nconst destroyImpl = require('./destroy')\nconst { addAbortSignal } = require('./add-abort-signal')\nconst { getHighWaterMark, getDefaultHighWaterMark } = require('./state')\nconst {\n  ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED,\n  ERR_STREAM_ALREADY_FINISHED,\n  ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING\n} = require('../../ours/errors').codes\nconst { errorOrDestroy } = destroyImpl\nObjectSetPrototypeOf(Writable.prototype, Stream.prototype)\nObjectSetPrototypeOf(Writable, Stream)\nfunction nop() {}\nconst kOnFinished = Symbol('kOnFinished')\nfunction WritableState(options, stream, isDuplex) {\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof require('./duplex')\n\n  // Object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!(options && options.objectMode)\n  if (isDuplex) this.objectMode = this.objectMode || !!(options && options.writableObjectMode)\n\n  // The point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write().\n  this.highWaterMark = options\n    ? getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex)\n    : getDefaultHighWaterMark(false)\n\n  // if _final has been called.\n  this.finalCalled = false\n\n  // drain event flag.\n  this.needDrain = false\n  // At the start of calling end()\n  this.ending = false\n  // When end() has been called, and returned.\n  this.ended = false\n  // When 'finish' is emitted.\n  this.finished = false\n\n  // Has it been destroyed\n  this.destroyed = false\n\n  // Should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  const noDecode = !!(options && options.decodeStrings === false)\n  this.decodeStrings = !noDecode\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8'\n\n  // Not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0\n\n  // A flag to see when we're in the middle of a write.\n  this.writing = false\n\n  // When true all writes will be buffered until .uncork() call.\n  this.corked = 0\n\n  // A flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true\n\n  // A flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false\n\n  // The callback that's passed to _write(chunk, cb).\n  this.onwrite = onwrite.bind(undefined, stream)\n\n  // The callback that the user supplies to write(chunk, encoding, cb).\n  this.writecb = null\n\n  // The amount that is being written when _write is called.\n  this.writelen = 0\n\n  // Storage for data passed to the afterWrite() callback in case of\n  // synchronous _write() completion.\n  this.afterWriteTickInfo = null\n  resetBuffer(this)\n\n  // Number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted.\n  this.pendingcb = 0\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in, therefore we start as\n  // constructed.\n  this.constructed = true\n\n  // Emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams.\n  this.prefinished = false\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false\n\n  // Should .destroy() be called after 'finish' (and potentially 'end').\n  this.autoDestroy = !options || options.autoDestroy !== false\n\n  // Indicates whether the stream has errored. When true all write() calls\n  // should return false. This is needed since when autoDestroy\n  // is disabled we need a way to tell whether the stream has failed.\n  this.errored = null\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false\n  this[kOnFinished] = []\n}\nfunction resetBuffer(state) {\n  state.buffered = []\n  state.bufferedIndex = 0\n  state.allBuffers = true\n  state.allNoop = true\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  return ArrayPrototypeSlice(this.buffered, this.bufferedIndex)\n}\nObjectDefineProperty(WritableState.prototype, 'bufferedRequestCount', {\n  __proto__: null,\n  get() {\n    return this.buffered.length - this.bufferedIndex\n  }\n})\nfunction Writable(options) {\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5.\n  const isDuplex = this instanceof require('./duplex')\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable, this)) return new Writable(options)\n  this._writableState = new WritableState(options, this, isDuplex)\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write\n    if (typeof options.writev === 'function') this._writev = options.writev\n    if (typeof options.destroy === 'function') this._destroy = options.destroy\n    if (typeof options.final === 'function') this._final = options.final\n    if (typeof options.construct === 'function') this._construct = options.construct\n    if (options.signal) addAbortSignal(options.signal, this)\n  }\n  Stream.call(this, options)\n  destroyImpl.construct(this, () => {\n    const state = this._writableState\n    if (!state.writing) {\n      clearBuffer(this, state)\n    }\n    finishMaybe(this, state)\n  })\n}\nObjectDefineProperty(Writable, SymbolHasInstance, {\n  __proto__: null,\n  value: function (object) {\n    if (FunctionPrototypeSymbolHasInstance(this, object)) return true\n    if (this !== Writable) return false\n    return object && object._writableState instanceof WritableState\n  }\n})\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE())\n}\nfunction _write(stream, chunk, encoding, cb) {\n  const state = stream._writableState\n  if (typeof encoding === 'function') {\n    cb = encoding\n    encoding = state.defaultEncoding\n  } else {\n    if (!encoding) encoding = state.defaultEncoding\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding)) throw new ERR_UNKNOWN_ENCODING(encoding)\n    if (typeof cb !== 'function') cb = nop\n  }\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES()\n  } else if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      if (state.decodeStrings !== false) {\n        chunk = Buffer.from(chunk, encoding)\n        encoding = 'buffer'\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = 'buffer'\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk)\n      encoding = 'buffer'\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk)\n    }\n  }\n  let err\n  if (state.ending) {\n    err = new ERR_STREAM_WRITE_AFTER_END()\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('write')\n  }\n  if (err) {\n    process.nextTick(cb, err)\n    errorOrDestroy(stream, err, true)\n    return err\n  }\n  state.pendingcb++\n  return writeOrBuffer(stream, state, chunk, encoding, cb)\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  return _write(this, chunk, encoding, cb) === true\n}\nWritable.prototype.cork = function () {\n  this._writableState.corked++\n}\nWritable.prototype.uncork = function () {\n  const state = this._writableState\n  if (state.corked) {\n    state.corked--\n    if (!state.writing) clearBuffer(this, state)\n  }\n}\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = StringPrototypeToLowerCase(encoding)\n  if (!Buffer.isEncoding(encoding)) throw new ERR_UNKNOWN_ENCODING(encoding)\n  this._writableState.defaultEncoding = encoding\n  return this\n}\n\n// If we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, callback) {\n  const len = state.objectMode ? 1 : chunk.length\n  state.length += len\n\n  // stream._write resets state.length\n  const ret = state.length < state.highWaterMark\n  // We must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true\n  if (state.writing || state.corked || state.errored || !state.constructed) {\n    state.buffered.push({\n      chunk,\n      encoding,\n      callback\n    })\n    if (state.allBuffers && encoding !== 'buffer') {\n      state.allBuffers = false\n    }\n    if (state.allNoop && callback !== nop) {\n      state.allNoop = false\n    }\n  } else {\n    state.writelen = len\n    state.writecb = callback\n    state.writing = true\n    state.sync = true\n    stream._write(chunk, encoding, state.onwrite)\n    state.sync = false\n  }\n\n  // Return false if errored or destroyed in order to break\n  // any synchronous while(stream.write(data)) loops.\n  return ret && !state.errored && !state.destroyed\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len\n  state.writecb = cb\n  state.writing = true\n  state.sync = true\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'))\n  else if (writev) stream._writev(chunk, state.onwrite)\n  else stream._write(chunk, encoding, state.onwrite)\n  state.sync = false\n}\nfunction onwriteError(stream, state, er, cb) {\n  --state.pendingcb\n  cb(er)\n  // Ensure callbacks are invoked even when autoDestroy is\n  // not enabled. Passing `er` here doesn't make sense since\n  // it's related to one specific write, not to the buffered\n  // writes.\n  errorBuffer(state)\n  // This can emit error, but error must always follow cb.\n  errorOrDestroy(stream, er)\n}\nfunction onwrite(stream, er) {\n  const state = stream._writableState\n  const sync = state.sync\n  const cb = state.writecb\n  if (typeof cb !== 'function') {\n    errorOrDestroy(stream, new ERR_MULTIPLE_CALLBACK())\n    return\n  }\n  state.writing = false\n  state.writecb = null\n  state.length -= state.writelen\n  state.writelen = 0\n  if (er) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    er.stack // eslint-disable-line no-unused-expressions\n\n    if (!state.errored) {\n      state.errored = er\n    }\n\n    // In case of duplex streams we need to notify the readable side of the\n    // error.\n    if (stream._readableState && !stream._readableState.errored) {\n      stream._readableState.errored = er\n    }\n    if (sync) {\n      process.nextTick(onwriteError, stream, state, er, cb)\n    } else {\n      onwriteError(stream, state, er, cb)\n    }\n  } else {\n    if (state.buffered.length > state.bufferedIndex) {\n      clearBuffer(stream, state)\n    }\n    if (sync) {\n      // It is a common case that the callback passed to .write() is always\n      // the same. In that case, we do not schedule a new nextTick(), but\n      // rather just increase a counter, to improve performance and avoid\n      // memory allocations.\n      if (state.afterWriteTickInfo !== null && state.afterWriteTickInfo.cb === cb) {\n        state.afterWriteTickInfo.count++\n      } else {\n        state.afterWriteTickInfo = {\n          count: 1,\n          cb,\n          stream,\n          state\n        }\n        process.nextTick(afterWriteTick, state.afterWriteTickInfo)\n      }\n    } else {\n      afterWrite(stream, state, 1, cb)\n    }\n  }\n}\nfunction afterWriteTick({ stream, state, count, cb }) {\n  state.afterWriteTickInfo = null\n  return afterWrite(stream, state, count, cb)\n}\nfunction afterWrite(stream, state, count, cb) {\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 && state.needDrain\n  if (needDrain) {\n    state.needDrain = false\n    stream.emit('drain')\n  }\n  while (count-- > 0) {\n    state.pendingcb--\n    cb()\n  }\n  if (state.destroyed) {\n    errorBuffer(state)\n  }\n  finishMaybe(stream, state)\n}\n\n// If there's something in the buffer waiting, then invoke callbacks.\nfunction errorBuffer(state) {\n  if (state.writing) {\n    return\n  }\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\n    var _state$errored\n    const { chunk, callback } = state.buffered[n]\n    const len = state.objectMode ? 1 : chunk.length\n    state.length -= len\n    callback(\n      (_state$errored = state.errored) !== null && _state$errored !== undefined\n        ? _state$errored\n        : new ERR_STREAM_DESTROYED('write')\n    )\n  }\n  const onfinishCallbacks = state[kOnFinished].splice(0)\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    var _state$errored2\n    onfinishCallbacks[i](\n      (_state$errored2 = state.errored) !== null && _state$errored2 !== undefined\n        ? _state$errored2\n        : new ERR_STREAM_DESTROYED('end')\n    )\n  }\n  resetBuffer(state)\n}\n\n// If there's something in the buffer waiting, then process it.\nfunction clearBuffer(stream, state) {\n  if (state.corked || state.bufferProcessing || state.destroyed || !state.constructed) {\n    return\n  }\n  const { buffered, bufferedIndex, objectMode } = state\n  const bufferedLength = buffered.length - bufferedIndex\n  if (!bufferedLength) {\n    return\n  }\n  let i = bufferedIndex\n  state.bufferProcessing = true\n  if (bufferedLength > 1 && stream._writev) {\n    state.pendingcb -= bufferedLength - 1\n    const callback = state.allNoop\n      ? nop\n      : (err) => {\n          for (let n = i; n < buffered.length; ++n) {\n            buffered[n].callback(err)\n          }\n        }\n    // Make a copy of `buffered` if it's going to be used by `callback` above,\n    // since `doWrite` will mutate the array.\n    const chunks = state.allNoop && i === 0 ? buffered : ArrayPrototypeSlice(buffered, i)\n    chunks.allBuffers = state.allBuffers\n    doWrite(stream, state, true, state.length, chunks, '', callback)\n    resetBuffer(state)\n  } else {\n    do {\n      const { chunk, encoding, callback } = buffered[i]\n      buffered[i++] = null\n      const len = objectMode ? 1 : chunk.length\n      doWrite(stream, state, false, len, chunk, encoding, callback)\n    } while (i < buffered.length && !state.writing)\n    if (i === buffered.length) {\n      resetBuffer(state)\n    } else if (i > 256) {\n      buffered.splice(0, i)\n      state.bufferedIndex = 0\n    } else {\n      state.bufferedIndex = i\n    }\n  }\n  state.bufferProcessing = false\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  if (this._writev) {\n    this._writev(\n      [\n        {\n          chunk,\n          encoding\n        }\n      ],\n      cb\n    )\n  } else {\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()')\n  }\n}\nWritable.prototype._writev = null\nWritable.prototype.end = function (chunk, encoding, cb) {\n  const state = this._writableState\n  if (typeof chunk === 'function') {\n    cb = chunk\n    chunk = null\n    encoding = null\n  } else if (typeof encoding === 'function') {\n    cb = encoding\n    encoding = null\n  }\n  let err\n  if (chunk !== null && chunk !== undefined) {\n    const ret = _write(this, chunk, encoding)\n    if (ret instanceof Error) {\n      err = ret\n    }\n  }\n\n  // .end() fully uncorks.\n  if (state.corked) {\n    state.corked = 1\n    this.uncork()\n  }\n  if (err) {\n    // Do nothing...\n  } else if (!state.errored && !state.ending) {\n    // This is forgiving in terms of unnecessary calls to end() and can hide\n    // logic errors. However, usually such errors are harmless and causing a\n    // hard error can be disproportionately destructive. It is not always\n    // trivial for the user to determine whether end() needs to be called\n    // or not.\n\n    state.ending = true\n    finishMaybe(this, state, true)\n    state.ended = true\n  } else if (state.finished) {\n    err = new ERR_STREAM_ALREADY_FINISHED('end')\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('end')\n  }\n  if (typeof cb === 'function') {\n    if (err || state.finished) {\n      process.nextTick(cb, err)\n    } else {\n      state[kOnFinished].push(cb)\n    }\n  }\n  return this\n}\nfunction needFinish(state) {\n  return (\n    state.ending &&\n    !state.destroyed &&\n    state.constructed &&\n    state.length === 0 &&\n    !state.errored &&\n    state.buffered.length === 0 &&\n    !state.finished &&\n    !state.writing &&\n    !state.errorEmitted &&\n    !state.closeEmitted\n  )\n}\nfunction callFinal(stream, state) {\n  let called = false\n  function onFinish(err) {\n    if (called) {\n      errorOrDestroy(stream, err !== null && err !== undefined ? err : ERR_MULTIPLE_CALLBACK())\n      return\n    }\n    called = true\n    state.pendingcb--\n    if (err) {\n      const onfinishCallbacks = state[kOnFinished].splice(0)\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\n        onfinishCallbacks[i](err)\n      }\n      errorOrDestroy(stream, err, state.sync)\n    } else if (needFinish(state)) {\n      state.prefinished = true\n      stream.emit('prefinish')\n      // Backwards compat. Don't check state.sync here.\n      // Some streams assume 'finish' will be emitted\n      // asynchronously relative to _final callback.\n      state.pendingcb++\n      process.nextTick(finish, stream, state)\n    }\n  }\n  state.sync = true\n  state.pendingcb++\n  try {\n    stream._final(onFinish)\n  } catch (err) {\n    onFinish(err)\n  }\n  state.sync = false\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.finalCalled = true\n      callFinal(stream, state)\n    } else {\n      state.prefinished = true\n      stream.emit('prefinish')\n    }\n  }\n}\nfunction finishMaybe(stream, state, sync) {\n  if (needFinish(state)) {\n    prefinish(stream, state)\n    if (state.pendingcb === 0) {\n      if (sync) {\n        state.pendingcb++\n        process.nextTick(\n          (stream, state) => {\n            if (needFinish(state)) {\n              finish(stream, state)\n            } else {\n              state.pendingcb--\n            }\n          },\n          stream,\n          state\n        )\n      } else if (needFinish(state)) {\n        state.pendingcb++\n        finish(stream, state)\n      }\n    }\n  }\n}\nfunction finish(stream, state) {\n  state.pendingcb--\n  state.finished = true\n  const onfinishCallbacks = state[kOnFinished].splice(0)\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i]()\n  }\n  stream.emit('finish')\n  if (state.autoDestroy) {\n    // In case of duplex streams we need a way to detect\n    // if the readable side is ready for autoDestroy as well.\n    const rState = stream._readableState\n    const autoDestroy =\n      !rState ||\n      (rState.autoDestroy &&\n        // We don't expect the readable to ever 'end'\n        // if readable is explicitly set to false.\n        (rState.endEmitted || rState.readable === false))\n    if (autoDestroy) {\n      stream.destroy()\n    }\n  }\n}\nObjectDefineProperties(Writable.prototype, {\n  closed: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.closed : false\n    }\n  },\n  destroyed: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.destroyed : false\n    },\n    set(value) {\n      // Backward compatibility, the user is explicitly managing destroyed.\n      if (this._writableState) {\n        this._writableState.destroyed = value\n      }\n    }\n  },\n  writable: {\n    __proto__: null,\n    get() {\n      const w = this._writableState\n      // w.writable === false means that this is part of a Duplex stream\n      // where the writable side was disabled upon construction.\n      // Compat. The user might manually disable writable side through\n      // deprecated setter.\n      return !!w && w.writable !== false && !w.destroyed && !w.errored && !w.ending && !w.ended\n    },\n    set(val) {\n      // Backwards compatible.\n      if (this._writableState) {\n        this._writableState.writable = !!val\n      }\n    }\n  },\n  writableFinished: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.finished : false\n    }\n  },\n  writableObjectMode: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.objectMode : false\n    }\n  },\n  writableBuffer: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.getBuffer()\n    }\n  },\n  writableEnded: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.ending : false\n    }\n  },\n  writableNeedDrain: {\n    __proto__: null,\n    get() {\n      const wState = this._writableState\n      if (!wState) return false\n      return !wState.destroyed && !wState.ending && wState.needDrain\n    }\n  },\n  writableHighWaterMark: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.highWaterMark\n    }\n  },\n  writableCorked: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.corked : 0\n    }\n  },\n  writableLength: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.length\n    }\n  },\n  errored: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._writableState ? this._writableState.errored : null\n    }\n  },\n  writableAborted: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return !!(\n        this._writableState.writable !== false &&\n        (this._writableState.destroyed || this._writableState.errored) &&\n        !this._writableState.finished\n      )\n    }\n  }\n})\nconst destroy = destroyImpl.destroy\nWritable.prototype.destroy = function (err, cb) {\n  const state = this._writableState\n\n  // Invoke pending callbacks.\n  if (!state.destroyed && (state.bufferedIndex < state.buffered.length || state[kOnFinished].length)) {\n    process.nextTick(errorBuffer, state)\n  }\n  destroy.call(this, err, cb)\n  return this\n}\nWritable.prototype._undestroy = destroyImpl.undestroy\nWritable.prototype._destroy = function (err, cb) {\n  cb(err)\n}\nWritable.prototype[EE.captureRejectionSymbol] = function (err) {\n  this.destroy(err)\n}\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nWritable.fromWeb = function (writableStream, options) {\n  return lazyWebStreams().newStreamWritableFromWritableStream(writableStream, options)\n}\nWritable.toWeb = function (streamWritable) {\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable)\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\n;('use strict')\nconst bufferModule = require('buffer')\nconst {\n  isReadable,\n  isWritable,\n  isIterable,\n  isNodeStream,\n  isReadableNodeStream,\n  isWritableNodeStream,\n  isDuplexNodeStream\n} = require('./utils')\nconst eos = require('./end-of-stream')\nconst {\n  AbortError,\n  codes: { ERR_INVALID_ARG_TYPE, ERR_INVALID_RETURN_VALUE }\n} = require('../../ours/errors')\nconst { destroyer } = require('./destroy')\nconst Duplex = require('./duplex')\nconst Readable = require('./readable')\nconst { createDeferredPromise } = require('../../ours/util')\nconst from = require('./from')\nconst Blob = globalThis.Blob || bufferModule.Blob\nconst isBlob =\n  typeof Blob !== 'undefined'\n    ? function isBlob(b) {\n        return b instanceof Blob\n      }\n    : function isBlob(b) {\n        return false\n      }\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nconst { FunctionPrototypeCall } = require('../../ours/primordials')\n\n// This is needed for pre node 17.\nclass Duplexify extends Duplex {\n  constructor(options) {\n    super(options)\n\n    // https://github.com/nodejs/node/pull/34385\n\n    if ((options === null || options === undefined ? undefined : options.readable) === false) {\n      this._readableState.readable = false\n      this._readableState.ended = true\n      this._readableState.endEmitted = true\n    }\n    if ((options === null || options === undefined ? undefined : options.writable) === false) {\n      this._writableState.writable = false\n      this._writableState.ending = true\n      this._writableState.ended = true\n      this._writableState.finished = true\n    }\n  }\n}\nmodule.exports = function duplexify(body, name) {\n  if (isDuplexNodeStream(body)) {\n    return body\n  }\n  if (isReadableNodeStream(body)) {\n    return _duplexify({\n      readable: body\n    })\n  }\n  if (isWritableNodeStream(body)) {\n    return _duplexify({\n      writable: body\n    })\n  }\n  if (isNodeStream(body)) {\n    return _duplexify({\n      writable: false,\n      readable: false\n    })\n  }\n\n  // TODO: Webstreams\n  // if (isReadableStream(body)) {\n  //   return _duplexify({ readable: Readable.fromWeb(body) });\n  // }\n\n  // TODO: Webstreams\n  // if (isWritableStream(body)) {\n  //   return _duplexify({ writable: Writable.fromWeb(body) });\n  // }\n\n  if (typeof body === 'function') {\n    const { value, write, final, destroy } = fromAsyncGen(body)\n    if (isIterable(value)) {\n      return from(Duplexify, value, {\n        // TODO (ronag): highWaterMark?\n        objectMode: true,\n        write,\n        final,\n        destroy\n      })\n    }\n    const then = value === null || value === undefined ? undefined : value.then\n    if (typeof then === 'function') {\n      let d\n      const promise = FunctionPrototypeCall(\n        then,\n        value,\n        (val) => {\n          if (val != null) {\n            throw new ERR_INVALID_RETURN_VALUE('nully', 'body', val)\n          }\n        },\n        (err) => {\n          destroyer(d, err)\n        }\n      )\n      return (d = new Duplexify({\n        // TODO (ronag): highWaterMark?\n        objectMode: true,\n        readable: false,\n        write,\n        final(cb) {\n          final(async () => {\n            try {\n              await promise\n              process.nextTick(cb, null)\n            } catch (err) {\n              process.nextTick(cb, err)\n            }\n          })\n        },\n        destroy\n      }))\n    }\n    throw new ERR_INVALID_RETURN_VALUE('Iterable, AsyncIterable or AsyncFunction', name, value)\n  }\n  if (isBlob(body)) {\n    return duplexify(body.arrayBuffer())\n  }\n  if (isIterable(body)) {\n    return from(Duplexify, body, {\n      // TODO (ronag): highWaterMark?\n      objectMode: true,\n      writable: false\n    })\n  }\n\n  // TODO: Webstreams.\n  // if (\n  //   isReadableStream(body?.readable) &&\n  //   isWritableStream(body?.writable)\n  // ) {\n  //   return Duplexify.fromWeb(body);\n  // }\n\n  if (\n    typeof (body === null || body === undefined ? undefined : body.writable) === 'object' ||\n    typeof (body === null || body === undefined ? undefined : body.readable) === 'object'\n  ) {\n    const readable =\n      body !== null && body !== undefined && body.readable\n        ? isReadableNodeStream(body === null || body === undefined ? undefined : body.readable)\n          ? body === null || body === undefined\n            ? undefined\n            : body.readable\n          : duplexify(body.readable)\n        : undefined\n    const writable =\n      body !== null && body !== undefined && body.writable\n        ? isWritableNodeStream(body === null || body === undefined ? undefined : body.writable)\n          ? body === null || body === undefined\n            ? undefined\n            : body.writable\n          : duplexify(body.writable)\n        : undefined\n    return _duplexify({\n      readable,\n      writable\n    })\n  }\n  const then = body === null || body === undefined ? undefined : body.then\n  if (typeof then === 'function') {\n    let d\n    FunctionPrototypeCall(\n      then,\n      body,\n      (val) => {\n        if (val != null) {\n          d.push(val)\n        }\n        d.push(null)\n      },\n      (err) => {\n        destroyer(d, err)\n      }\n    )\n    return (d = new Duplexify({\n      objectMode: true,\n      writable: false,\n      read() {}\n    }))\n  }\n  throw new ERR_INVALID_ARG_TYPE(\n    name,\n    [\n      'Blob',\n      'ReadableStream',\n      'WritableStream',\n      'Stream',\n      'Iterable',\n      'AsyncIterable',\n      'Function',\n      '{ readable, writable } pair',\n      'Promise'\n    ],\n    body\n  )\n}\nfunction fromAsyncGen(fn) {\n  let { promise, resolve } = createDeferredPromise()\n  const ac = new AbortController()\n  const signal = ac.signal\n  const value = fn(\n    (async function* () {\n      while (true) {\n        const _promise = promise\n        promise = null\n        const { chunk, done, cb } = await _promise\n        process.nextTick(cb)\n        if (done) return\n        if (signal.aborted)\n          throw new AbortError(undefined, {\n            cause: signal.reason\n          })\n        ;({ promise, resolve } = createDeferredPromise())\n        yield chunk\n      }\n    })(),\n    {\n      signal\n    }\n  )\n  return {\n    value,\n    write(chunk, encoding, cb) {\n      const _resolve = resolve\n      resolve = null\n      _resolve({\n        chunk,\n        done: false,\n        cb\n      })\n    },\n    final(cb) {\n      const _resolve = resolve\n      resolve = null\n      _resolve({\n        done: true,\n        cb\n      })\n    },\n    destroy(err, cb) {\n      ac.abort()\n      cb(err)\n    }\n  }\n}\nfunction _duplexify(pair) {\n  const r = pair.readable && typeof pair.readable.read !== 'function' ? Readable.wrap(pair.readable) : pair.readable\n  const w = pair.writable\n  let readable = !!isReadable(r)\n  let writable = !!isWritable(w)\n  let ondrain\n  let onfinish\n  let onreadable\n  let onclose\n  let d\n  function onfinished(err) {\n    const cb = onclose\n    onclose = null\n    if (cb) {\n      cb(err)\n    } else if (err) {\n      d.destroy(err)\n    }\n  }\n\n  // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See, https://github.com/nodejs/node/pull/33515.\n  d = new Duplexify({\n    // TODO (ronag): highWaterMark?\n    readableObjectMode: !!(r !== null && r !== undefined && r.readableObjectMode),\n    writableObjectMode: !!(w !== null && w !== undefined && w.writableObjectMode),\n    readable,\n    writable\n  })\n  if (writable) {\n    eos(w, (err) => {\n      writable = false\n      if (err) {\n        destroyer(r, err)\n      }\n      onfinished(err)\n    })\n    d._write = function (chunk, encoding, callback) {\n      if (w.write(chunk, encoding)) {\n        callback()\n      } else {\n        ondrain = callback\n      }\n    }\n    d._final = function (callback) {\n      w.end()\n      onfinish = callback\n    }\n    w.on('drain', function () {\n      if (ondrain) {\n        const cb = ondrain\n        ondrain = null\n        cb()\n      }\n    })\n    w.on('finish', function () {\n      if (onfinish) {\n        const cb = onfinish\n        onfinish = null\n        cb()\n      }\n    })\n  }\n  if (readable) {\n    eos(r, (err) => {\n      readable = false\n      if (err) {\n        destroyer(r, err)\n      }\n      onfinished(err)\n    })\n    r.on('readable', function () {\n      if (onreadable) {\n        const cb = onreadable\n        onreadable = null\n        cb()\n      }\n    })\n    r.on('end', function () {\n      d.push(null)\n    })\n    d._read = function () {\n      while (true) {\n        const buf = r.read()\n        if (buf === null) {\n          onreadable = d._read\n          return\n        }\n        if (!d.push(buf)) {\n          return\n        }\n      }\n    }\n  }\n  d._destroy = function (err, callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError()\n    }\n    onreadable = null\n    ondrain = null\n    onfinish = null\n    if (onclose === null) {\n      callback(err)\n    } else {\n      onclose = callback\n      destroyer(w, err)\n      destroyer(r, err)\n    }\n  }\n  return d\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototype inheritance, this class\n// prototypically inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict'\n\nconst {\n  ObjectDefineProperties,\n  ObjectGetOwnPropertyDescriptor,\n  ObjectKeys,\n  ObjectSetPrototypeOf\n} = require('../../ours/primordials')\nmodule.exports = Duplex\nconst Readable = require('./readable')\nconst Writable = require('./writable')\nObjectSetPrototypeOf(Duplex.prototype, Readable.prototype)\nObjectSetPrototypeOf(Duplex, Readable)\n{\n  const keys = ObjectKeys(Writable.prototype)\n  // Allow the keys array to be GC'ed.\n  for (let i = 0; i < keys.length; i++) {\n    const method = keys[i]\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method]\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options)\n  Readable.call(this, options)\n  Writable.call(this, options)\n  if (options) {\n    this.allowHalfOpen = options.allowHalfOpen !== false\n    if (options.readable === false) {\n      this._readableState.readable = false\n      this._readableState.ended = true\n      this._readableState.endEmitted = true\n    }\n    if (options.writable === false) {\n      this._writableState.writable = false\n      this._writableState.ending = true\n      this._writableState.ended = true\n      this._writableState.finished = true\n    }\n  } else {\n    this.allowHalfOpen = true\n  }\n}\nObjectDefineProperties(Duplex.prototype, {\n  writable: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writable')\n  },\n  writableHighWaterMark: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableHighWaterMark')\n  },\n  writableObjectMode: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableObjectMode')\n  },\n  writableBuffer: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableBuffer')\n  },\n  writableLength: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableLength')\n  },\n  writableFinished: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableFinished')\n  },\n  writableCorked: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableCorked')\n  },\n  writableEnded: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableEnded')\n  },\n  writableNeedDrain: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableNeedDrain')\n  },\n  destroyed: {\n    __proto__: null,\n    get() {\n      if (this._readableState === undefined || this._writableState === undefined) {\n        return false\n      }\n      return this._readableState.destroyed && this._writableState.destroyed\n    },\n    set(value) {\n      // Backward compatibility, the user is explicitly\n      // managing destroyed.\n      if (this._readableState && this._writableState) {\n        this._readableState.destroyed = value\n        this._writableState.destroyed = value\n      }\n    }\n  }\n})\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nDuplex.fromWeb = function (pair, options) {\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(pair, options)\n}\nDuplex.toWeb = function (duplex) {\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex)\n}\nlet duplexify\nDuplex.from = function (body) {\n  if (!duplexify) {\n    duplexify = require('./duplexify')\n  }\n  return duplexify(body, 'body')\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict'\n\nconst { ObjectSetPrototypeOf, Symbol } = require('../../ours/primordials')\nmodule.exports = Transform\nconst { ERR_METHOD_NOT_IMPLEMENTED } = require('../../ours/errors').codes\nconst Duplex = require('./duplex')\nconst { getHighWaterMark } = require('./state')\nObjectSetPrototypeOf(Transform.prototype, Duplex.prototype)\nObjectSetPrototypeOf(Transform, Duplex)\nconst kCallback = Symbol('kCallback')\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options)\n\n  // TODO (ronag): This should preferably always be\n  // applied but would be semver-major. Or even better;\n  // make Transform a Readable with the Writable interface.\n  const readableHighWaterMark = options ? getHighWaterMark(this, options, 'readableHighWaterMark', true) : null\n  if (readableHighWaterMark === 0) {\n    // A Duplex will buffer both on the writable and readable side while\n    // a Transform just wants to buffer hwm number of elements. To avoid\n    // buffering twice we disable buffering on the writable side.\n    options = {\n      ...options,\n      highWaterMark: null,\n      readableHighWaterMark,\n      // TODO (ronag): 0 is not optimal since we have\n      // a \"bug\" where we check needDrain before calling _write and not after.\n      // Refs: https://github.com/nodejs/node/pull/32887\n      // Refs: https://github.com/nodejs/node/pull/35941\n      writableHighWaterMark: options.writableHighWaterMark || 0\n    }\n  }\n  Duplex.call(this, options)\n\n  // We have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false\n  this[kCallback] = null\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform\n    if (typeof options.flush === 'function') this._flush = options.flush\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  // Backwards compat. Some Transform streams incorrectly implement _final\n  // instead of or in addition to _flush. By using 'prefinish' instead of\n  // implementing _final we continue supporting this unfortunate use case.\n  this.on('prefinish', prefinish)\n}\nfunction final(cb) {\n  if (typeof this._flush === 'function' && !this.destroyed) {\n    this._flush((er, data) => {\n      if (er) {\n        if (cb) {\n          cb(er)\n        } else {\n          this.destroy(er)\n        }\n        return\n      }\n      if (data != null) {\n        this.push(data)\n      }\n      this.push(null)\n      if (cb) {\n        cb()\n      }\n    })\n  } else {\n    this.push(null)\n    if (cb) {\n      cb()\n    }\n  }\n}\nfunction prefinish() {\n  if (this._final !== final) {\n    final.call(this)\n  }\n}\nTransform.prototype._final = final\nTransform.prototype._transform = function (chunk, encoding, callback) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()')\n}\nTransform.prototype._write = function (chunk, encoding, callback) {\n  const rState = this._readableState\n  const wState = this._writableState\n  const length = rState.length\n  this._transform(chunk, encoding, (err, val) => {\n    if (err) {\n      callback(err)\n      return\n    }\n    if (val != null) {\n      this.push(val)\n    }\n    if (\n      wState.ended ||\n      // Backwards compat.\n      length === rState.length ||\n      // Backwards compat.\n      rState.length < rState.highWaterMark\n    ) {\n      callback()\n    } else {\n      this[kCallback] = callback\n    }\n  })\n}\nTransform.prototype._read = function () {\n  if (this[kCallback]) {\n    const callback = this[kCallback]\n    this[kCallback] = null\n    callback()\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict'\n\nconst { ObjectSetPrototypeOf } = require('../../ours/primordials')\nmodule.exports = PassThrough\nconst Transform = require('./transform')\nObjectSetPrototypeOf(PassThrough.prototype, Transform.prototype)\nObjectSetPrototypeOf(PassThrough, Transform)\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options)\n  Transform.call(this, options)\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk)\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n;('use strict')\nconst { ArrayIsArray, Promise, SymbolAsyncIterator } = require('../../ours/primordials')\nconst eos = require('./end-of-stream')\nconst { once } = require('../../ours/util')\nconst destroyImpl = require('./destroy')\nconst Duplex = require('./duplex')\nconst {\n  aggregateTwoErrors,\n  codes: {\n    ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_RETURN_VALUE,\n    ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED,\n    ERR_STREAM_PREMATURE_CLOSE\n  },\n  AbortError\n} = require('../../ours/errors')\nconst { validateFunction, validateAbortSignal } = require('../validators')\nconst {\n  isIterable,\n  isReadable,\n  isReadableNodeStream,\n  isNodeStream,\n  isTransformStream,\n  isWebStream,\n  isReadableStream,\n  isReadableEnded\n} = require('./utils')\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nlet PassThrough\nlet Readable\nfunction destroyer(stream, reading, writing) {\n  let finished = false\n  stream.on('close', () => {\n    finished = true\n  })\n  const cleanup = eos(\n    stream,\n    {\n      readable: reading,\n      writable: writing\n    },\n    (err) => {\n      finished = !err\n    }\n  )\n  return {\n    destroy: (err) => {\n      if (finished) return\n      finished = true\n      destroyImpl.destroyer(stream, err || new ERR_STREAM_DESTROYED('pipe'))\n    },\n    cleanup\n  }\n}\nfunction popCallback(streams) {\n  // Streams should never be an empty array. It should always contain at least\n  // a single stream. Therefore optimize for the average case instead of\n  // checking for length === 0 as well.\n  validateFunction(streams[streams.length - 1], 'streams[stream.length - 1]')\n  return streams.pop()\n}\nfunction makeAsyncIterable(val) {\n  if (isIterable(val)) {\n    return val\n  } else if (isReadableNodeStream(val)) {\n    // Legacy streams are not Iterable.\n    return fromReadable(val)\n  }\n  throw new ERR_INVALID_ARG_TYPE('val', ['Readable', 'Iterable', 'AsyncIterable'], val)\n}\nasync function* fromReadable(val) {\n  if (!Readable) {\n    Readable = require('./readable')\n  }\n  yield* Readable.prototype[SymbolAsyncIterator].call(val)\n}\nasync function pumpToNode(iterable, writable, finish, { end }) {\n  let error\n  let onresolve = null\n  const resume = (err) => {\n    if (err) {\n      error = err\n    }\n    if (onresolve) {\n      const callback = onresolve\n      onresolve = null\n      callback()\n    }\n  }\n  const wait = () =>\n    new Promise((resolve, reject) => {\n      if (error) {\n        reject(error)\n      } else {\n        onresolve = () => {\n          if (error) {\n            reject(error)\n          } else {\n            resolve()\n          }\n        }\n      }\n    })\n  writable.on('drain', resume)\n  const cleanup = eos(\n    writable,\n    {\n      readable: false\n    },\n    resume\n  )\n  try {\n    if (writable.writableNeedDrain) {\n      await wait()\n    }\n    for await (const chunk of iterable) {\n      if (!writable.write(chunk)) {\n        await wait()\n      }\n    }\n    if (end) {\n      writable.end()\n    }\n    await wait()\n    finish()\n  } catch (err) {\n    finish(error !== err ? aggregateTwoErrors(error, err) : err)\n  } finally {\n    cleanup()\n    writable.off('drain', resume)\n  }\n}\nasync function pumpToWeb(readable, writable, finish, { end }) {\n  if (isTransformStream(writable)) {\n    writable = writable.writable\n  }\n  // https://streams.spec.whatwg.org/#example-manual-write-with-backpressure\n  const writer = writable.getWriter()\n  try {\n    for await (const chunk of readable) {\n      await writer.ready\n      writer.write(chunk).catch(() => {})\n    }\n    await writer.ready\n    if (end) {\n      await writer.close()\n    }\n    finish()\n  } catch (err) {\n    try {\n      await writer.abort(err)\n      finish(err)\n    } catch (err) {\n      finish(err)\n    }\n  }\n}\nfunction pipeline(...streams) {\n  return pipelineImpl(streams, once(popCallback(streams)))\n}\nfunction pipelineImpl(streams, callback, opts) {\n  if (streams.length === 1 && ArrayIsArray(streams[0])) {\n    streams = streams[0]\n  }\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams')\n  }\n  const ac = new AbortController()\n  const signal = ac.signal\n  const outerSignal = opts === null || opts === undefined ? undefined : opts.signal\n\n  // Need to cleanup event listeners if last stream is readable\n  // https://github.com/nodejs/node/issues/35452\n  const lastStreamCleanup = []\n  validateAbortSignal(outerSignal, 'options.signal')\n  function abort() {\n    finishImpl(new AbortError())\n  }\n  outerSignal === null || outerSignal === undefined ? undefined : outerSignal.addEventListener('abort', abort)\n  let error\n  let value\n  const destroys = []\n  let finishCount = 0\n  function finish(err) {\n    finishImpl(err, --finishCount === 0)\n  }\n  function finishImpl(err, final) {\n    if (err && (!error || error.code === 'ERR_STREAM_PREMATURE_CLOSE')) {\n      error = err\n    }\n    if (!error && !final) {\n      return\n    }\n    while (destroys.length) {\n      destroys.shift()(error)\n    }\n    outerSignal === null || outerSignal === undefined ? undefined : outerSignal.removeEventListener('abort', abort)\n    ac.abort()\n    if (final) {\n      if (!error) {\n        lastStreamCleanup.forEach((fn) => fn())\n      }\n      process.nextTick(callback, error, value)\n    }\n  }\n  let ret\n  for (let i = 0; i < streams.length; i++) {\n    const stream = streams[i]\n    const reading = i < streams.length - 1\n    const writing = i > 0\n    const end = reading || (opts === null || opts === undefined ? undefined : opts.end) !== false\n    const isLastStream = i === streams.length - 1\n    if (isNodeStream(stream)) {\n      if (end) {\n        const { destroy, cleanup } = destroyer(stream, reading, writing)\n        destroys.push(destroy)\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      }\n\n      // Catch stream errors that occur after pipe/pump has completed.\n      function onError(err) {\n        if (err && err.name !== 'AbortError' && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n          finish(err)\n        }\n      }\n      stream.on('error', onError)\n      if (isReadable(stream) && isLastStream) {\n        lastStreamCleanup.push(() => {\n          stream.removeListener('error', onError)\n        })\n      }\n    }\n    if (i === 0) {\n      if (typeof stream === 'function') {\n        ret = stream({\n          signal\n        })\n        if (!isIterable(ret)) {\n          throw new ERR_INVALID_RETURN_VALUE('Iterable, AsyncIterable or Stream', 'source', ret)\n        }\n      } else if (isIterable(stream) || isReadableNodeStream(stream) || isTransformStream(stream)) {\n        ret = stream\n      } else {\n        ret = Duplex.from(stream)\n      }\n    } else if (typeof stream === 'function') {\n      if (isTransformStream(ret)) {\n        var _ret\n        ret = makeAsyncIterable((_ret = ret) === null || _ret === undefined ? undefined : _ret.readable)\n      } else {\n        ret = makeAsyncIterable(ret)\n      }\n      ret = stream(ret, {\n        signal\n      })\n      if (reading) {\n        if (!isIterable(ret, true)) {\n          throw new ERR_INVALID_RETURN_VALUE('AsyncIterable', `transform[${i - 1}]`, ret)\n        }\n      } else {\n        var _ret2\n        if (!PassThrough) {\n          PassThrough = require('./passthrough')\n        }\n\n        // If the last argument to pipeline is not a stream\n        // we must create a proxy stream so that pipeline(...)\n        // always returns a stream which can be further\n        // composed through `.pipe(stream)`.\n\n        const pt = new PassThrough({\n          objectMode: true\n        })\n\n        // Handle Promises/A+ spec, `then` could be a getter that throws on\n        // second use.\n        const then = (_ret2 = ret) === null || _ret2 === undefined ? undefined : _ret2.then\n        if (typeof then === 'function') {\n          finishCount++\n          then.call(\n            ret,\n            (val) => {\n              value = val\n              if (val != null) {\n                pt.write(val)\n              }\n              if (end) {\n                pt.end()\n              }\n              process.nextTick(finish)\n            },\n            (err) => {\n              pt.destroy(err)\n              process.nextTick(finish, err)\n            }\n          )\n        } else if (isIterable(ret, true)) {\n          finishCount++\n          pumpToNode(ret, pt, finish, {\n            end\n          })\n        } else if (isReadableStream(ret) || isTransformStream(ret)) {\n          const toRead = ret.readable || ret\n          finishCount++\n          pumpToNode(toRead, pt, finish, {\n            end\n          })\n        } else {\n          throw new ERR_INVALID_RETURN_VALUE('AsyncIterable or Promise', 'destination', ret)\n        }\n        ret = pt\n        const { destroy, cleanup } = destroyer(ret, false, true)\n        destroys.push(destroy)\n        if (isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      }\n    } else if (isNodeStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount += 2\n        const cleanup = pipe(ret, stream, finish, {\n          end\n        })\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      } else if (isTransformStream(ret) || isReadableStream(ret)) {\n        const toRead = ret.readable || ret\n        finishCount++\n        pumpToNode(toRead, stream, finish, {\n          end\n        })\n      } else if (isIterable(ret)) {\n        finishCount++\n        pumpToNode(ret, stream, finish, {\n          end\n        })\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val',\n          ['Readable', 'Iterable', 'AsyncIterable', 'ReadableStream', 'TransformStream'],\n          ret\n        )\n      }\n      ret = stream\n    } else if (isWebStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount++\n        pumpToWeb(makeAsyncIterable(ret), stream, finish, {\n          end\n        })\n      } else if (isReadableStream(ret) || isIterable(ret)) {\n        finishCount++\n        pumpToWeb(ret, stream, finish, {\n          end\n        })\n      } else if (isTransformStream(ret)) {\n        finishCount++\n        pumpToWeb(ret.readable, stream, finish, {\n          end\n        })\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val',\n          ['Readable', 'Iterable', 'AsyncIterable', 'ReadableStream', 'TransformStream'],\n          ret\n        )\n      }\n      ret = stream\n    } else {\n      ret = Duplex.from(stream)\n    }\n  }\n  if (\n    (signal !== null && signal !== undefined && signal.aborted) ||\n    (outerSignal !== null && outerSignal !== undefined && outerSignal.aborted)\n  ) {\n    process.nextTick(abort)\n  }\n  return ret\n}\nfunction pipe(src, dst, finish, { end }) {\n  let ended = false\n  dst.on('close', () => {\n    if (!ended) {\n      // Finish if the destination closes before the source has completed.\n      finish(new ERR_STREAM_PREMATURE_CLOSE())\n    }\n  })\n  src.pipe(dst, {\n    end: false\n  }) // If end is true we already will have a listener to end dst.\n\n  if (end) {\n    // Compat. Before node v10.12.0 stdio used to throw an error so\n    // pipe() did/does not end() stdio destinations.\n    // Now they allow it but \"secretly\" don't close the underlying fd.\n\n    function endFn() {\n      ended = true\n      dst.end()\n    }\n    if (isReadableEnded(src)) {\n      // End the destination if the source has already ended.\n      process.nextTick(endFn)\n    } else {\n      src.once('end', endFn)\n    }\n  } else {\n    finish()\n  }\n  eos(\n    src,\n    {\n      readable: true,\n      writable: false\n    },\n    (err) => {\n      const rState = src._readableState\n      if (\n        err &&\n        err.code === 'ERR_STREAM_PREMATURE_CLOSE' &&\n        rState &&\n        rState.ended &&\n        !rState.errored &&\n        !rState.errorEmitted\n      ) {\n        // Some readable streams will emit 'close' before 'end'. However, since\n        // this is on the readable side 'end' should still be emitted if the\n        // stream has been ended and no error emitted. This should be allowed in\n        // favor of backwards compatibility. Since the stream is piped to a\n        // destination this should not result in any observable difference.\n        // We don't need to check if this is a writable premature close since\n        // eos will only fail with premature close on the reading side for\n        // duplex streams.\n        src.once('end', finish).once('error', finish)\n      } else {\n        finish(err)\n      }\n    }\n  )\n  return eos(\n    dst,\n    {\n      readable: false,\n      writable: true\n    },\n    finish\n  )\n}\nmodule.exports = {\n  pipelineImpl,\n  pipeline\n}\n","'use strict'\n\nconst { pipeline } = require('./pipeline')\nconst Duplex = require('./duplex')\nconst { destroyer } = require('./destroy')\nconst {\n  isNodeStream,\n  isReadable,\n  isWritable,\n  isWebStream,\n  isTransformStream,\n  isWritableStream,\n  isReadableStream\n} = require('./utils')\nconst {\n  AbortError,\n  codes: { ERR_INVALID_ARG_VALUE, ERR_MISSING_ARGS }\n} = require('../../ours/errors')\nconst eos = require('./end-of-stream')\nmodule.exports = function compose(...streams) {\n  if (streams.length === 0) {\n    throw new ERR_MISSING_ARGS('streams')\n  }\n  if (streams.length === 1) {\n    return Duplex.from(streams[0])\n  }\n  const orgStreams = [...streams]\n  if (typeof streams[0] === 'function') {\n    streams[0] = Duplex.from(streams[0])\n  }\n  if (typeof streams[streams.length - 1] === 'function') {\n    const idx = streams.length - 1\n    streams[idx] = Duplex.from(streams[idx])\n  }\n  for (let n = 0; n < streams.length; ++n) {\n    if (!isNodeStream(streams[n]) && !isWebStream(streams[n])) {\n      // TODO(ronag): Add checks for non streams.\n      continue\n    }\n    if (\n      n < streams.length - 1 &&\n      !(isReadable(streams[n]) || isReadableStream(streams[n]) || isTransformStream(streams[n]))\n    ) {\n      throw new ERR_INVALID_ARG_VALUE(`streams[${n}]`, orgStreams[n], 'must be readable')\n    }\n    if (n > 0 && !(isWritable(streams[n]) || isWritableStream(streams[n]) || isTransformStream(streams[n]))) {\n      throw new ERR_INVALID_ARG_VALUE(`streams[${n}]`, orgStreams[n], 'must be writable')\n    }\n  }\n  let ondrain\n  let onfinish\n  let onreadable\n  let onclose\n  let d\n  function onfinished(err) {\n    const cb = onclose\n    onclose = null\n    if (cb) {\n      cb(err)\n    } else if (err) {\n      d.destroy(err)\n    } else if (!readable && !writable) {\n      d.destroy()\n    }\n  }\n  const head = streams[0]\n  const tail = pipeline(streams, onfinished)\n  const writable = !!(isWritable(head) || isWritableStream(head) || isTransformStream(head))\n  const readable = !!(isReadable(tail) || isReadableStream(tail) || isTransformStream(tail))\n\n  // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See, https://github.com/nodejs/node/pull/33515.\n  d = new Duplex({\n    // TODO (ronag): highWaterMark?\n    writableObjectMode: !!(head !== null && head !== undefined && head.writableObjectMode),\n    readableObjectMode: !!(tail !== null && tail !== undefined && tail.writableObjectMode),\n    writable,\n    readable\n  })\n  if (writable) {\n    if (isNodeStream(head)) {\n      d._write = function (chunk, encoding, callback) {\n        if (head.write(chunk, encoding)) {\n          callback()\n        } else {\n          ondrain = callback\n        }\n      }\n      d._final = function (callback) {\n        head.end()\n        onfinish = callback\n      }\n      head.on('drain', function () {\n        if (ondrain) {\n          const cb = ondrain\n          ondrain = null\n          cb()\n        }\n      })\n    } else if (isWebStream(head)) {\n      const writable = isTransformStream(head) ? head.writable : head\n      const writer = writable.getWriter()\n      d._write = async function (chunk, encoding, callback) {\n        try {\n          await writer.ready\n          writer.write(chunk).catch(() => {})\n          callback()\n        } catch (err) {\n          callback(err)\n        }\n      }\n      d._final = async function (callback) {\n        try {\n          await writer.ready\n          writer.close().catch(() => {})\n          onfinish = callback\n        } catch (err) {\n          callback(err)\n        }\n      }\n    }\n    const toRead = isTransformStream(tail) ? tail.readable : tail\n    eos(toRead, () => {\n      if (onfinish) {\n        const cb = onfinish\n        onfinish = null\n        cb()\n      }\n    })\n  }\n  if (readable) {\n    if (isNodeStream(tail)) {\n      tail.on('readable', function () {\n        if (onreadable) {\n          const cb = onreadable\n          onreadable = null\n          cb()\n        }\n      })\n      tail.on('end', function () {\n        d.push(null)\n      })\n      d._read = function () {\n        while (true) {\n          const buf = tail.read()\n          if (buf === null) {\n            onreadable = d._read\n            return\n          }\n          if (!d.push(buf)) {\n            return\n          }\n        }\n      }\n    } else if (isWebStream(tail)) {\n      const readable = isTransformStream(tail) ? tail.readable : tail\n      const reader = readable.getReader()\n      d._read = async function () {\n        while (true) {\n          try {\n            const { value, done } = await reader.read()\n            if (!d.push(value)) {\n              return\n            }\n            if (done) {\n              d.push(null)\n              return\n            }\n          } catch {\n            return\n          }\n        }\n      }\n    }\n  }\n  d._destroy = function (err, callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError()\n    }\n    onreadable = null\n    ondrain = null\n    onfinish = null\n    if (onclose === null) {\n      callback(err)\n    } else {\n      onclose = callback\n      if (isNodeStream(tail)) {\n        destroyer(tail, err)\n      }\n    }\n  }\n  return d\n}\n","'use strict'\n\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nconst {\n  codes: { ERR_INVALID_ARG_VALUE, ERR_INVALID_ARG_TYPE, ERR_MISSING_ARGS, ERR_OUT_OF_RANGE },\n  AbortError\n} = require('../../ours/errors')\nconst { validateAbortSignal, validateInteger, validateObject } = require('../validators')\nconst kWeakHandler = require('../../ours/primordials').Symbol('kWeak')\nconst { finished } = require('./end-of-stream')\nconst staticCompose = require('./compose')\nconst { addAbortSignalNoValidate } = require('./add-abort-signal')\nconst { isWritable, isNodeStream } = require('./utils')\nconst {\n  ArrayPrototypePush,\n  MathFloor,\n  Number,\n  NumberIsNaN,\n  Promise,\n  PromiseReject,\n  PromisePrototypeThen,\n  Symbol\n} = require('../../ours/primordials')\nconst kEmpty = Symbol('kEmpty')\nconst kEof = Symbol('kEof')\nfunction compose(stream, options) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  if (isNodeStream(stream) && !isWritable(stream)) {\n    throw new ERR_INVALID_ARG_VALUE('stream', stream, 'must be writable')\n  }\n  const composedStream = staticCompose(this, stream)\n  if (options !== null && options !== undefined && options.signal) {\n    // Not validating as we already validated before\n    addAbortSignalNoValidate(options.signal, composedStream)\n  }\n  return composedStream\n}\nfunction map(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  let concurrency = 1\n  if ((options === null || options === undefined ? undefined : options.concurrency) != null) {\n    concurrency = MathFloor(options.concurrency)\n  }\n  validateInteger(concurrency, 'concurrency', 1)\n  return async function* map() {\n    var _options$signal, _options$signal2\n    const ac = new AbortController()\n    const stream = this\n    const queue = []\n    const signal = ac.signal\n    const signalOpt = {\n      signal\n    }\n    const abort = () => ac.abort()\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal = options.signal) !== null &&\n      _options$signal !== undefined &&\n      _options$signal.aborted\n    ) {\n      abort()\n    }\n    options === null || options === undefined\n      ? undefined\n      : (_options$signal2 = options.signal) === null || _options$signal2 === undefined\n      ? undefined\n      : _options$signal2.addEventListener('abort', abort)\n    let next\n    let resume\n    let done = false\n    function onDone() {\n      done = true\n    }\n    async function pump() {\n      try {\n        for await (let val of stream) {\n          var _val\n          if (done) {\n            return\n          }\n          if (signal.aborted) {\n            throw new AbortError()\n          }\n          try {\n            val = fn(val, signalOpt)\n          } catch (err) {\n            val = PromiseReject(err)\n          }\n          if (val === kEmpty) {\n            continue\n          }\n          if (typeof ((_val = val) === null || _val === undefined ? undefined : _val.catch) === 'function') {\n            val.catch(onDone)\n          }\n          queue.push(val)\n          if (next) {\n            next()\n            next = null\n          }\n          if (!done && queue.length && queue.length >= concurrency) {\n            await new Promise((resolve) => {\n              resume = resolve\n            })\n          }\n        }\n        queue.push(kEof)\n      } catch (err) {\n        const val = PromiseReject(err)\n        PromisePrototypeThen(val, undefined, onDone)\n        queue.push(val)\n      } finally {\n        var _options$signal3\n        done = true\n        if (next) {\n          next()\n          next = null\n        }\n        options === null || options === undefined\n          ? undefined\n          : (_options$signal3 = options.signal) === null || _options$signal3 === undefined\n          ? undefined\n          : _options$signal3.removeEventListener('abort', abort)\n      }\n    }\n    pump()\n    try {\n      while (true) {\n        while (queue.length > 0) {\n          const val = await queue[0]\n          if (val === kEof) {\n            return\n          }\n          if (signal.aborted) {\n            throw new AbortError()\n          }\n          if (val !== kEmpty) {\n            yield val\n          }\n          queue.shift()\n          if (resume) {\n            resume()\n            resume = null\n          }\n        }\n        await new Promise((resolve) => {\n          next = resolve\n        })\n      }\n    } finally {\n      ac.abort()\n      done = true\n      if (resume) {\n        resume()\n        resume = null\n      }\n    }\n  }.call(this)\n}\nfunction asIndexedPairs(options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  return async function* asIndexedPairs() {\n    let index = 0\n    for await (const val of this) {\n      var _options$signal4\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal4 = options.signal) !== null &&\n        _options$signal4 !== undefined &&\n        _options$signal4.aborted\n      ) {\n        throw new AbortError({\n          cause: options.signal.reason\n        })\n      }\n      yield [index++, val]\n    }\n  }.call(this)\n}\nasync function some(fn, options = undefined) {\n  for await (const unused of filter.call(this, fn, options)) {\n    return true\n  }\n  return false\n}\nasync function every(fn, options = undefined) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  // https://en.wikipedia.org/wiki/De_Morgan%27s_laws\n  return !(await some.call(\n    this,\n    async (...args) => {\n      return !(await fn(...args))\n    },\n    options\n  ))\n}\nasync function find(fn, options) {\n  for await (const result of filter.call(this, fn, options)) {\n    return result\n  }\n  return undefined\n}\nasync function forEach(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  async function forEachFn(value, options) {\n    await fn(value, options)\n    return kEmpty\n  }\n  // eslint-disable-next-line no-unused-vars\n  for await (const unused of map.call(this, forEachFn, options));\n}\nfunction filter(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  async function filterFn(value, options) {\n    if (await fn(value, options)) {\n      return value\n    }\n    return kEmpty\n  }\n  return map.call(this, filterFn, options)\n}\n\n// Specific to provide better error to reduce since the argument is only\n// missing if the stream has no items in it - but the code is still appropriate\nclass ReduceAwareErrMissingArgs extends ERR_MISSING_ARGS {\n  constructor() {\n    super('reduce')\n    this.message = 'Reduce of an empty stream requires an initial value'\n  }\n}\nasync function reduce(reducer, initialValue, options) {\n  var _options$signal5\n  if (typeof reducer !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('reducer', ['Function', 'AsyncFunction'], reducer)\n  }\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  let hasInitialValue = arguments.length > 1\n  if (\n    options !== null &&\n    options !== undefined &&\n    (_options$signal5 = options.signal) !== null &&\n    _options$signal5 !== undefined &&\n    _options$signal5.aborted\n  ) {\n    const err = new AbortError(undefined, {\n      cause: options.signal.reason\n    })\n    this.once('error', () => {}) // The error is already propagated\n    await finished(this.destroy(err))\n    throw err\n  }\n  const ac = new AbortController()\n  const signal = ac.signal\n  if (options !== null && options !== undefined && options.signal) {\n    const opts = {\n      once: true,\n      [kWeakHandler]: this\n    }\n    options.signal.addEventListener('abort', () => ac.abort(), opts)\n  }\n  let gotAnyItemFromStream = false\n  try {\n    for await (const value of this) {\n      var _options$signal6\n      gotAnyItemFromStream = true\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal6 = options.signal) !== null &&\n        _options$signal6 !== undefined &&\n        _options$signal6.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (!hasInitialValue) {\n        initialValue = value\n        hasInitialValue = true\n      } else {\n        initialValue = await reducer(initialValue, value, {\n          signal\n        })\n      }\n    }\n    if (!gotAnyItemFromStream && !hasInitialValue) {\n      throw new ReduceAwareErrMissingArgs()\n    }\n  } finally {\n    ac.abort()\n  }\n  return initialValue\n}\nasync function toArray(options) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  const result = []\n  for await (const val of this) {\n    var _options$signal7\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal7 = options.signal) !== null &&\n      _options$signal7 !== undefined &&\n      _options$signal7.aborted\n    ) {\n      throw new AbortError(undefined, {\n        cause: options.signal.reason\n      })\n    }\n    ArrayPrototypePush(result, val)\n  }\n  return result\n}\nfunction flatMap(fn, options) {\n  const values = map.call(this, fn, options)\n  return async function* flatMap() {\n    for await (const val of values) {\n      yield* val\n    }\n  }.call(this)\n}\nfunction toIntegerOrInfinity(number) {\n  // We coerce here to align with the spec\n  // https://github.com/tc39/proposal-iterator-helpers/issues/169\n  number = Number(number)\n  if (NumberIsNaN(number)) {\n    return 0\n  }\n  if (number < 0) {\n    throw new ERR_OUT_OF_RANGE('number', '>= 0', number)\n  }\n  return number\n}\nfunction drop(number, options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  number = toIntegerOrInfinity(number)\n  return async function* drop() {\n    var _options$signal8\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal8 = options.signal) !== null &&\n      _options$signal8 !== undefined &&\n      _options$signal8.aborted\n    ) {\n      throw new AbortError()\n    }\n    for await (const val of this) {\n      var _options$signal9\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal9 = options.signal) !== null &&\n        _options$signal9 !== undefined &&\n        _options$signal9.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (number-- <= 0) {\n        yield val\n      }\n    }\n  }.call(this)\n}\nfunction take(number, options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  number = toIntegerOrInfinity(number)\n  return async function* take() {\n    var _options$signal10\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal10 = options.signal) !== null &&\n      _options$signal10 !== undefined &&\n      _options$signal10.aborted\n    ) {\n      throw new AbortError()\n    }\n    for await (const val of this) {\n      var _options$signal11\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal11 = options.signal) !== null &&\n        _options$signal11 !== undefined &&\n        _options$signal11.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (number-- > 0) {\n        yield val\n      } else {\n        return\n      }\n    }\n  }.call(this)\n}\nmodule.exports.streamReturningOperators = {\n  asIndexedPairs,\n  drop,\n  filter,\n  flatMap,\n  map,\n  take,\n  compose\n}\nmodule.exports.promiseReturningOperators = {\n  every,\n  forEach,\n  reduce,\n  toArray,\n  some,\n  find\n}\n","'use strict'\n\nconst { ArrayPrototypePop, Promise } = require('../ours/primordials')\nconst { isIterable, isNodeStream, isWebStream } = require('../internal/streams/utils')\nconst { pipelineImpl: pl } = require('../internal/streams/pipeline')\nconst { finished } = require('../internal/streams/end-of-stream')\nrequire('../../lib/stream.js')\nfunction pipeline(...streams) {\n  return new Promise((resolve, reject) => {\n    let signal\n    let end\n    const lastArg = streams[streams.length - 1]\n    if (\n      lastArg &&\n      typeof lastArg === 'object' &&\n      !isNodeStream(lastArg) &&\n      !isIterable(lastArg) &&\n      !isWebStream(lastArg)\n    ) {\n      const options = ArrayPrototypePop(streams)\n      signal = options.signal\n      end = options.end\n    }\n    pl(\n      streams,\n      (err, value) => {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(value)\n        }\n      },\n      {\n        signal,\n        end\n      }\n    )\n  })\n}\nmodule.exports = {\n  finished,\n  pipeline\n}\n","/* replacement start */\n\nconst { Buffer } = require('buffer')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n;('use strict')\nconst { ObjectDefineProperty, ObjectKeys, ReflectApply } = require('./ours/primordials')\nconst {\n  promisify: { custom: customPromisify }\n} = require('./ours/util')\nconst { streamReturningOperators, promiseReturningOperators } = require('./internal/streams/operators')\nconst {\n  codes: { ERR_ILLEGAL_CONSTRUCTOR }\n} = require('./ours/errors')\nconst compose = require('./internal/streams/compose')\nconst { pipeline } = require('./internal/streams/pipeline')\nconst { destroyer } = require('./internal/streams/destroy')\nconst eos = require('./internal/streams/end-of-stream')\nconst internalBuffer = {}\nconst promises = require('./stream/promises')\nconst utils = require('./internal/streams/utils')\nconst Stream = (module.exports = require('./internal/streams/legacy').Stream)\nStream.isDisturbed = utils.isDisturbed\nStream.isErrored = utils.isErrored\nStream.isReadable = utils.isReadable\nStream.Readable = require('./internal/streams/readable')\nfor (const key of ObjectKeys(streamReturningOperators)) {\n  const op = streamReturningOperators[key]\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR()\n    }\n    return Stream.Readable.from(ReflectApply(op, this, args))\n  }\n  ObjectDefineProperty(fn, 'name', {\n    __proto__: null,\n    value: op.name\n  })\n  ObjectDefineProperty(fn, 'length', {\n    __proto__: null,\n    value: op.length\n  })\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\n    __proto__: null,\n    value: fn,\n    enumerable: false,\n    configurable: true,\n    writable: true\n  })\n}\nfor (const key of ObjectKeys(promiseReturningOperators)) {\n  const op = promiseReturningOperators[key]\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR()\n    }\n    return ReflectApply(op, this, args)\n  }\n  ObjectDefineProperty(fn, 'name', {\n    __proto__: null,\n    value: op.name\n  })\n  ObjectDefineProperty(fn, 'length', {\n    __proto__: null,\n    value: op.length\n  })\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\n    __proto__: null,\n    value: fn,\n    enumerable: false,\n    configurable: true,\n    writable: true\n  })\n}\nStream.Writable = require('./internal/streams/writable')\nStream.Duplex = require('./internal/streams/duplex')\nStream.Transform = require('./internal/streams/transform')\nStream.PassThrough = require('./internal/streams/passthrough')\nStream.pipeline = pipeline\nconst { addAbortSignal } = require('./internal/streams/add-abort-signal')\nStream.addAbortSignal = addAbortSignal\nStream.finished = eos\nStream.destroy = destroyer\nStream.compose = compose\nObjectDefineProperty(Stream, 'promises', {\n  __proto__: null,\n  configurable: true,\n  enumerable: true,\n  get() {\n    return promises\n  }\n})\nObjectDefineProperty(pipeline, customPromisify, {\n  __proto__: null,\n  enumerable: true,\n  get() {\n    return promises.pipeline\n  }\n})\nObjectDefineProperty(eos, customPromisify, {\n  __proto__: null,\n  enumerable: true,\n  get() {\n    return promises.finished\n  }\n})\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream\nStream._isUint8Array = function isUint8Array(value) {\n  return value instanceof Uint8Array\n}\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n}\n","'use strict'\n\nconst CustomStream = require('../stream')\nconst promises = require('../stream/promises')\nconst originalDestroy = CustomStream.Readable.destroy\nmodule.exports = CustomStream.Readable\n\n// Explicit export naming is needed for ESM\nmodule.exports._uint8ArrayToBuffer = CustomStream._uint8ArrayToBuffer\nmodule.exports._isUint8Array = CustomStream._isUint8Array\nmodule.exports.isDisturbed = CustomStream.isDisturbed\nmodule.exports.isErrored = CustomStream.isErrored\nmodule.exports.isReadable = CustomStream.isReadable\nmodule.exports.Readable = CustomStream.Readable\nmodule.exports.Writable = CustomStream.Writable\nmodule.exports.Duplex = CustomStream.Duplex\nmodule.exports.Transform = CustomStream.Transform\nmodule.exports.PassThrough = CustomStream.PassThrough\nmodule.exports.addAbortSignal = CustomStream.addAbortSignal\nmodule.exports.finished = CustomStream.finished\nmodule.exports.destroy = CustomStream.destroy\nmodule.exports.destroy = originalDestroy\nmodule.exports.pipeline = CustomStream.pipeline\nmodule.exports.compose = CustomStream.compose\nObject.defineProperty(CustomStream, 'promises', {\n  configurable: true,\n  enumerable: true,\n  get() {\n    return promises\n  }\n})\nmodule.exports.Stream = CustomStream.Stream\n\n// Allow default importing\nmodule.exports.default = module.exports\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst readable_stream_1 = require(\"readable-stream\");\nfunction bufferStream(opts) {\n    opts = Object.assign({}, opts);\n    const array = opts.array;\n    let encoding = opts.encoding;\n    const buffer = encoding === \"buffer\";\n    let objectMode = false;\n    if (array) {\n        objectMode = !(encoding || buffer);\n    }\n    else {\n        encoding = encoding || \"utf8\";\n    }\n    if (buffer) {\n        encoding = undefined;\n    }\n    let len = 0;\n    const ret = [];\n    const stream = new readable_stream_1.PassThrough({\n        objectMode\n    });\n    if (encoding) {\n        stream.setEncoding(encoding);\n    }\n    stream.on(\"data\", (chunk) => {\n        ret.push(chunk);\n        if (objectMode) {\n            len = ret.length;\n        }\n        else {\n            len += chunk.length;\n        }\n    });\n    stream.getBufferedValue = () => {\n        if (array) {\n            return ret;\n        }\n        return buffer ? Buffer.concat(ret, len) : ret.join(\"\");\n    };\n    stream.getBufferedLength = () => len;\n    return stream;\n}\nexports.default = bufferStream;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.array = exports.buffer = exports.getStream = void 0;\nconst buffer_stream_1 = __importDefault(require(\"./buffer-stream\"));\nfunction getStream(inputStream, opts = {}) {\n    if (!inputStream) {\n        return Promise.reject(new Error(\"Expected a stream\"));\n    }\n    opts = Object.assign({ maxBuffer: Infinity }, opts);\n    const maxBuffer = opts.maxBuffer || Infinity;\n    let stream;\n    let clean;\n    const p = new Promise((resolve, reject) => {\n        const error = (err) => {\n            if (err) {\n                // null check\n                err.bufferedData = stream.getBufferedValue();\n            }\n            reject(err);\n        };\n        stream = (0, buffer_stream_1.default)(opts);\n        inputStream.once(\"error\", error);\n        inputStream.pipe(stream);\n        stream.on(\"data\", () => {\n            if (stream.getBufferedLength() > maxBuffer) {\n                reject(new Error(\"maxBuffer exceeded\"));\n            }\n        });\n        stream.once(\"error\", error);\n        stream.on(\"end\", resolve);\n        clean = () => {\n            // some streams doesn't implement the `stream.Readable` interface correctly\n            if (inputStream.unpipe) {\n                inputStream.unpipe(stream);\n            }\n        };\n    });\n    p.then(clean, clean);\n    return p.then(() => stream.getBufferedValue());\n}\nexports.getStream = getStream;\nfunction buffer(stream, opts = {}) {\n    getStream(stream, Object.assign({}, opts, { encoding: \"buffer\" }));\n}\nexports.buffer = buffer;\nfunction array(stream, opts = {}) {\n    getStream(stream, Object.assign({}, opts, { array: true }));\n}\nexports.array = array;\n","export default {}","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readFromFileOrURL = exports.readableFromFileOrURL = void 0;\nconst fs = __importStar(require(\"fs\"));\nconst browser_or_node_1 = require(\"browser-or-node\");\nconst get_stream_1 = require(\"./get-stream\");\nconst ts_necessities_1 = require(\"@glideapps/ts-necessities\");\nconst index_1 = require(\"../../index\");\nconst isURL = require(\"is-url\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nfunction parseHeaders(httpHeaders) {\n    if (!Array.isArray(httpHeaders)) {\n        return {};\n    }\n    return httpHeaders.reduce(function (result, httpHeader) {\n        if (httpHeader !== undefined && httpHeader.length > 0) {\n            const split = httpHeader.indexOf(\":\");\n            if (split < 0) {\n                return (0, index_1.panic)(`Could not parse HTTP header \"${httpHeader}\".`);\n            }\n            const key = httpHeader.slice(0, split).trim();\n            const value = httpHeader.slice(split + 1).trim();\n            result[key] = value;\n        }\n        return result;\n    }, {});\n}\nfunction readableFromFileOrURL(fileOrURL, httpHeaders) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            if (isURL(fileOrURL)) {\n                const response = yield (0, cross_fetch_1.default)(fileOrURL, {\n                    headers: parseHeaders(httpHeaders)\n                });\n                return (0, ts_necessities_1.defined)(response.body);\n            }\n            else if (browser_or_node_1.isNode) {\n                if (fileOrURL === \"-\") {\n                    // Cast node readable to isomorphic readable from readable-stream\n                    return process.stdin;\n                }\n                const filePath = fs.lstatSync(fileOrURL).isSymbolicLink() ? fs.readlinkSync(fileOrURL) : fileOrURL;\n                if (fs.existsSync(filePath)) {\n                    // Cast node readable to isomorphic readable from readable-stream\n                    return fs.createReadStream(filePath, \"utf8\");\n                }\n            }\n        }\n        catch (e) {\n            return (0, index_1.messageError)(\"MiscReadError\", { fileOrURL, message: (0, ts_necessities_1.exceptionToString)(e) });\n        }\n        return (0, index_1.messageError)(\"DriverInputFileDoesNotExist\", { filename: fileOrURL });\n    });\n}\nexports.readableFromFileOrURL = readableFromFileOrURL;\nfunction readFromFileOrURL(fileOrURL, httpHeaders) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const readable = yield readableFromFileOrURL(fileOrURL, httpHeaders);\n        try {\n            return yield (0, get_stream_1.getStream)(readable);\n        }\n        catch (e) {\n            return (0, index_1.messageError)(\"MiscReadError\", { fileOrURL, message: (0, ts_necessities_1.exceptionToString)(e) });\n        }\n    });\n}\nexports.readFromFileOrURL = readFromFileOrURL;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FetchingJSONSchemaStore = void 0;\nconst JSONSchemaStore_1 = require(\"./JSONSchemaStore\");\nconst __1 = require(\"..\");\nconst NodeIO_1 = require(\"./io/NodeIO\");\nclass FetchingJSONSchemaStore extends JSONSchemaStore_1.JSONSchemaStore {\n    constructor(_httpHeaders) {\n        super();\n        this._httpHeaders = _httpHeaders;\n    }\n    fetch(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // console.log(`Fetching ${address}`);\n            return (0, __1.parseJSON)(yield (0, NodeIO_1.readFromFileOrURL)(address, this._httpHeaders), \"JSON Schema\", address);\n        });\n    }\n}\nexports.FetchingJSONSchemaStore = FetchingJSONSchemaStore;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sourcesFromPostmanCollection = void 0;\nconst Support_1 = require(\"../support/Support\");\nfunction isValidJSON(s) {\n    try {\n        JSON.parse(s);\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction sourcesFromPostmanCollection(collectionJSON, collectionJSONAddress) {\n    const sources = [];\n    const descriptions = [];\n    function processCollection(c) {\n        if (typeof c !== \"object\")\n            return;\n        if (Array.isArray(c.item)) {\n            for (const item of c.item) {\n                processCollection(item);\n            }\n            if (typeof c.info === \"object\" && typeof c.info.description === \"string\") {\n                descriptions.push(c.info.description);\n            }\n        }\n        if (typeof c.name === \"string\" && Array.isArray(c.response)) {\n            const samples = [];\n            for (const r of c.response) {\n                if (typeof r === \"object\" && typeof r.body === \"string\" && isValidJSON(r.body)) {\n                    samples.push(r.body);\n                }\n            }\n            if (samples.length > 0) {\n                const source = { name: c.name, samples };\n                const sourceDescription = [c.name];\n                if (typeof c.request === \"object\") {\n                    const { method, url } = c.request;\n                    if (method !== undefined && typeof url === \"object\" && url.raw !== undefined) {\n                        sourceDescription.push(`${method} ${url.raw}`);\n                    }\n                }\n                if (typeof c.request === \"object\" && typeof c.request.description === \"string\") {\n                    sourceDescription.push(c.request.description);\n                }\n                source.description = sourceDescription.length === 0 ? undefined : sourceDescription.join(\"\\n\\n\");\n                sources.push(source);\n            }\n        }\n    }\n    processCollection((0, Support_1.parseJSON)(collectionJSON, \"Postman collection\", collectionJSONAddress));\n    const joinedDescription = descriptions.join(\"\\n\\n\").trim();\n    let description = undefined;\n    if (joinedDescription !== \"\") {\n        description = joinedDescription;\n    }\n    return { sources, description };\n}\nexports.sourcesFromPostmanCollection = sourcesFromPostmanCollection;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClassType = exports.ArrayType = exports.PrimitiveType = exports.Type = exports.messageAssert = exports.messageError = exports.QuickTypeError = exports.trainMarkovChain = exports.isLetterOrDigit = exports.legalizeCharacters = exports.allUpperWordStyle = exports.firstUpperWordStyle = exports.combineWords = exports.capitalize = exports.splitIntoWords = exports.inflateBase64 = exports.checkArray = exports.checkStringMap = exports.parseJSON = exports.assertNever = exports.defined = exports.assert = exports.panic = exports.IssueAnnotationData = exports.Namer = exports.funPrefixNamer = exports.Name = exports.parenIfNeeded = exports.singleWord = exports.modifySource = exports.languageNamed = exports.defaultTargetLanguages = exports.TargetLanguage = exports.getOptionValues = exports.Option = exports.Ref = exports.JSONSchemaInput = exports.jsonInputForTargetLanguage = exports.JSONInput = exports.InputData = exports.CompressedJSON = exports.inferenceFlagsObject = exports.defaultInferenceFlags = exports.inferenceFlagNames = exports.inferenceFlags = exports.combineRenderResults = exports.quicktype = exports.quicktypeMultiFileSync = exports.quicktypeMultiFile = exports.getTargetLanguage = void 0;\nexports.JavaScriptPropTypesRenderer = exports.JavaScriptPropTypesTargetLanguage = exports.javaScriptOptions = exports.JavaScriptRenderer = exports.JavaScriptTargetLanguage = exports.javaOptions = exports.JavaRenderer = exports.JavaTargetLanguage = exports.objcOptions = exports.ObjectiveCRenderer = exports.ObjectiveCTargetLanguage = exports.goOptions = exports.GoRenderer = exports.GoTargetLanguage = exports.pythonOptions = exports.PythonRenderer = exports.PythonTargetLanguage = exports.CSharpRenderer = exports.cSharpOptions = exports.CSharpTargetLanguage = exports.cPlusPlusOptions = exports.CPlusPlusRenderer = exports.CPlusPlusTargetLanguage = exports.cJSONOptions = exports.CJSONRenderer = exports.CJSONTargetLanguage = exports.uriTypeAttributeKind = exports.ConvenienceRenderer = exports.nullableFromUnion = exports.matchType = exports.removeNullFromUnion = exports.StringTypes = exports.namesTypeAttributeKind = exports.makeNamesTypeAttributes = exports.TypeNames = exports.emptyTypeAttributes = exports.TypeAttributeKind = exports.derefTypeRef = exports.TypeBuilder = exports.sourcesFromPostmanCollection = exports.JSONSchemaStore = exports.FetchingJSONSchemaStore = exports.readFromFileOrURL = exports.readableFromFileOrURL = exports.getStream = exports.ObjectType = exports.UnionType = exports.MapType = exports.EnumType = exports.ClassProperty = void 0;\nexports.dartOptions = exports.DartRenderer = exports.DartTargetLanguage = exports.haskellOptions = exports.HaskellRenderer = exports.HaskellTargetLanguage = exports.CrystalRenderer = exports.CrystalTargetLanguage = exports.rubyOptions = exports.RubyRenderer = exports.RubyTargetLanguage = exports.rustOptions = exports.RustRenderer = exports.RustTargetLanguage = exports.JSONSchemaRenderer = exports.JSONSchemaTargetLanguage = exports.elmOptions = exports.ElmRenderer = exports.ElmTargetLanguage = exports.SmithyOptions = exports.Smithy4sRenderer = exports.SmithyTargetLanguage = exports.scala3Options = exports.Scala3Renderer = exports.Scala3TargetLanguage = exports.kotlinOptions = exports.KotlinRenderer = exports.KotlinTargetLanguage = exports.swiftOptions = exports.SwiftRenderer = exports.SwiftTargetLanguage = exports.tsFlowOptions = exports.FlowRenderer = exports.FlowTargetLanguage = exports.TypeScriptRenderer = exports.TypeScriptTargetLanguage = exports.javaScriptPropTypesOptions = void 0;\nvar Run_1 = require(\"./Run\");\nObject.defineProperty(exports, \"getTargetLanguage\", { enumerable: true, get: function () { return Run_1.getTargetLanguage; } });\nObject.defineProperty(exports, \"quicktypeMultiFile\", { enumerable: true, get: function () { return Run_1.quicktypeMultiFile; } });\nObject.defineProperty(exports, \"quicktypeMultiFileSync\", { enumerable: true, get: function () { return Run_1.quicktypeMultiFileSync; } });\nObject.defineProperty(exports, \"quicktype\", { enumerable: true, get: function () { return Run_1.quicktype; } });\nObject.defineProperty(exports, \"combineRenderResults\", { enumerable: true, get: function () { return Run_1.combineRenderResults; } });\nObject.defineProperty(exports, \"inferenceFlags\", { enumerable: true, get: function () { return Run_1.inferenceFlags; } });\nObject.defineProperty(exports, \"inferenceFlagNames\", { enumerable: true, get: function () { return Run_1.inferenceFlagNames; } });\nObject.defineProperty(exports, \"defaultInferenceFlags\", { enumerable: true, get: function () { return Run_1.defaultInferenceFlags; } });\nObject.defineProperty(exports, \"inferenceFlagsObject\", { enumerable: true, get: function () { return Run_1.inferenceFlagsObject; } });\nvar CompressedJSON_1 = require(\"./input/CompressedJSON\");\nObject.defineProperty(exports, \"CompressedJSON\", { enumerable: true, get: function () { return CompressedJSON_1.CompressedJSON; } });\nvar Inputs_1 = require(\"./input/Inputs\");\nObject.defineProperty(exports, \"InputData\", { enumerable: true, get: function () { return Inputs_1.InputData; } });\nObject.defineProperty(exports, \"JSONInput\", { enumerable: true, get: function () { return Inputs_1.JSONInput; } });\nObject.defineProperty(exports, \"jsonInputForTargetLanguage\", { enumerable: true, get: function () { return Inputs_1.jsonInputForTargetLanguage; } });\nvar JSONSchemaInput_1 = require(\"./input/JSONSchemaInput\");\nObject.defineProperty(exports, \"JSONSchemaInput\", { enumerable: true, get: function () { return JSONSchemaInput_1.JSONSchemaInput; } });\nvar JSONSchemaInput_2 = require(\"./input/JSONSchemaInput\");\nObject.defineProperty(exports, \"Ref\", { enumerable: true, get: function () { return JSONSchemaInput_2.Ref; } });\nvar RendererOptions_1 = require(\"./RendererOptions\");\nObject.defineProperty(exports, \"Option\", { enumerable: true, get: function () { return RendererOptions_1.Option; } });\nObject.defineProperty(exports, \"getOptionValues\", { enumerable: true, get: function () { return RendererOptions_1.getOptionValues; } });\nvar TargetLanguage_1 = require(\"./TargetLanguage\");\nObject.defineProperty(exports, \"TargetLanguage\", { enumerable: true, get: function () { return TargetLanguage_1.TargetLanguage; } });\nvar All_1 = require(\"./language/All\");\nObject.defineProperty(exports, \"defaultTargetLanguages\", { enumerable: true, get: function () { return All_1.all; } });\nObject.defineProperty(exports, \"languageNamed\", { enumerable: true, get: function () { return All_1.languageNamed; } });\nvar Source_1 = require(\"./Source\");\nObject.defineProperty(exports, \"modifySource\", { enumerable: true, get: function () { return Source_1.modifySource; } });\nObject.defineProperty(exports, \"singleWord\", { enumerable: true, get: function () { return Source_1.singleWord; } });\nObject.defineProperty(exports, \"parenIfNeeded\", { enumerable: true, get: function () { return Source_1.parenIfNeeded; } });\nvar Naming_1 = require(\"./Naming\");\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return Naming_1.Name; } });\nObject.defineProperty(exports, \"funPrefixNamer\", { enumerable: true, get: function () { return Naming_1.funPrefixNamer; } });\nObject.defineProperty(exports, \"Namer\", { enumerable: true, get: function () { return Naming_1.Namer; } });\nvar Annotation_1 = require(\"./Annotation\");\nObject.defineProperty(exports, \"IssueAnnotationData\", { enumerable: true, get: function () { return Annotation_1.IssueAnnotationData; } });\nvar Support_1 = require(\"./support/Support\");\nObject.defineProperty(exports, \"panic\", { enumerable: true, get: function () { return Support_1.panic; } });\nObject.defineProperty(exports, \"assert\", { enumerable: true, get: function () { return Support_1.assert; } });\nObject.defineProperty(exports, \"defined\", { enumerable: true, get: function () { return Support_1.defined; } });\nObject.defineProperty(exports, \"assertNever\", { enumerable: true, get: function () { return Support_1.assertNever; } });\nObject.defineProperty(exports, \"parseJSON\", { enumerable: true, get: function () { return Support_1.parseJSON; } });\nObject.defineProperty(exports, \"checkStringMap\", { enumerable: true, get: function () { return Support_1.checkStringMap; } });\nObject.defineProperty(exports, \"checkArray\", { enumerable: true, get: function () { return Support_1.checkArray; } });\nObject.defineProperty(exports, \"inflateBase64\", { enumerable: true, get: function () { return Support_1.inflateBase64; } });\nvar Strings_1 = require(\"./support/Strings\");\nObject.defineProperty(exports, \"splitIntoWords\", { enumerable: true, get: function () { return Strings_1.splitIntoWords; } });\nObject.defineProperty(exports, \"capitalize\", { enumerable: true, get: function () { return Strings_1.capitalize; } });\nObject.defineProperty(exports, \"combineWords\", { enumerable: true, get: function () { return Strings_1.combineWords; } });\nObject.defineProperty(exports, \"firstUpperWordStyle\", { enumerable: true, get: function () { return Strings_1.firstUpperWordStyle; } });\nObject.defineProperty(exports, \"allUpperWordStyle\", { enumerable: true, get: function () { return Strings_1.allUpperWordStyle; } });\nObject.defineProperty(exports, \"legalizeCharacters\", { enumerable: true, get: function () { return Strings_1.legalizeCharacters; } });\nObject.defineProperty(exports, \"isLetterOrDigit\", { enumerable: true, get: function () { return Strings_1.isLetterOrDigit; } });\nvar MarkovChain_1 = require(\"./MarkovChain\");\nObject.defineProperty(exports, \"trainMarkovChain\", { enumerable: true, get: function () { return MarkovChain_1.train; } });\nvar Messages_1 = require(\"./Messages\");\nObject.defineProperty(exports, \"QuickTypeError\", { enumerable: true, get: function () { return Messages_1.QuickTypeError; } });\nObject.defineProperty(exports, \"messageError\", { enumerable: true, get: function () { return Messages_1.messageError; } });\nObject.defineProperty(exports, \"messageAssert\", { enumerable: true, get: function () { return Messages_1.messageAssert; } });\nvar Type_1 = require(\"./Type\");\nObject.defineProperty(exports, \"Type\", { enumerable: true, get: function () { return Type_1.Type; } });\nObject.defineProperty(exports, \"PrimitiveType\", { enumerable: true, get: function () { return Type_1.PrimitiveType; } });\nObject.defineProperty(exports, \"ArrayType\", { enumerable: true, get: function () { return Type_1.ArrayType; } });\nObject.defineProperty(exports, \"ClassType\", { enumerable: true, get: function () { return Type_1.ClassType; } });\nObject.defineProperty(exports, \"ClassProperty\", { enumerable: true, get: function () { return Type_1.ClassProperty; } });\nObject.defineProperty(exports, \"EnumType\", { enumerable: true, get: function () { return Type_1.EnumType; } });\nObject.defineProperty(exports, \"MapType\", { enumerable: true, get: function () { return Type_1.MapType; } });\nObject.defineProperty(exports, \"UnionType\", { enumerable: true, get: function () { return Type_1.UnionType; } });\nObject.defineProperty(exports, \"ObjectType\", { enumerable: true, get: function () { return Type_1.ObjectType; } });\nvar get_stream_1 = require(\"./input/io/get-stream\");\nObject.defineProperty(exports, \"getStream\", { enumerable: true, get: function () { return get_stream_1.getStream; } });\nvar NodeIO_1 = require(\"./input/io/NodeIO\");\nObject.defineProperty(exports, \"readableFromFileOrURL\", { enumerable: true, get: function () { return NodeIO_1.readableFromFileOrURL; } });\nObject.defineProperty(exports, \"readFromFileOrURL\", { enumerable: true, get: function () { return NodeIO_1.readFromFileOrURL; } });\nvar FetchingJSONSchemaStore_1 = require(\"./input/FetchingJSONSchemaStore\");\nObject.defineProperty(exports, \"FetchingJSONSchemaStore\", { enumerable: true, get: function () { return FetchingJSONSchemaStore_1.FetchingJSONSchemaStore; } });\nvar JSONSchemaStore_1 = require(\"./input/JSONSchemaStore\");\nObject.defineProperty(exports, \"JSONSchemaStore\", { enumerable: true, get: function () { return JSONSchemaStore_1.JSONSchemaStore; } });\nvar PostmanCollection_1 = require(\"./input/PostmanCollection\");\nObject.defineProperty(exports, \"sourcesFromPostmanCollection\", { enumerable: true, get: function () { return PostmanCollection_1.sourcesFromPostmanCollection; } });\nvar TypeBuilder_1 = require(\"./TypeBuilder\");\nObject.defineProperty(exports, \"TypeBuilder\", { enumerable: true, get: function () { return TypeBuilder_1.TypeBuilder; } });\nvar TypeGraph_1 = require(\"./TypeGraph\");\nObject.defineProperty(exports, \"derefTypeRef\", { enumerable: true, get: function () { return TypeGraph_1.derefTypeRef; } });\nvar TypeAttributes_1 = require(\"./attributes/TypeAttributes\");\nObject.defineProperty(exports, \"TypeAttributeKind\", { enumerable: true, get: function () { return TypeAttributes_1.TypeAttributeKind; } });\nObject.defineProperty(exports, \"emptyTypeAttributes\", { enumerable: true, get: function () { return TypeAttributes_1.emptyTypeAttributes; } });\nvar TypeNames_1 = require(\"./attributes/TypeNames\");\nObject.defineProperty(exports, \"TypeNames\", { enumerable: true, get: function () { return TypeNames_1.TypeNames; } });\nObject.defineProperty(exports, \"makeNamesTypeAttributes\", { enumerable: true, get: function () { return TypeNames_1.makeNamesTypeAttributes; } });\nObject.defineProperty(exports, \"namesTypeAttributeKind\", { enumerable: true, get: function () { return TypeNames_1.namesTypeAttributeKind; } });\nvar StringTypes_1 = require(\"./attributes/StringTypes\");\nObject.defineProperty(exports, \"StringTypes\", { enumerable: true, get: function () { return StringTypes_1.StringTypes; } });\nvar TypeUtils_1 = require(\"./TypeUtils\");\nObject.defineProperty(exports, \"removeNullFromUnion\", { enumerable: true, get: function () { return TypeUtils_1.removeNullFromUnion; } });\nObject.defineProperty(exports, \"matchType\", { enumerable: true, get: function () { return TypeUtils_1.matchType; } });\nObject.defineProperty(exports, \"nullableFromUnion\", { enumerable: true, get: function () { return TypeUtils_1.nullableFromUnion; } });\nvar ConvenienceRenderer_1 = require(\"./ConvenienceRenderer\");\nObject.defineProperty(exports, \"ConvenienceRenderer\", { enumerable: true, get: function () { return ConvenienceRenderer_1.ConvenienceRenderer; } });\nvar URIAttributes_1 = require(\"./attributes/URIAttributes\");\nObject.defineProperty(exports, \"uriTypeAttributeKind\", { enumerable: true, get: function () { return URIAttributes_1.uriTypeAttributeKind; } });\nvar CJSON_1 = require(\"./language/CJSON\");\nObject.defineProperty(exports, \"CJSONTargetLanguage\", { enumerable: true, get: function () { return CJSON_1.CJSONTargetLanguage; } });\nObject.defineProperty(exports, \"CJSONRenderer\", { enumerable: true, get: function () { return CJSON_1.CJSONRenderer; } });\nObject.defineProperty(exports, \"cJSONOptions\", { enumerable: true, get: function () { return CJSON_1.cJSONOptions; } });\nvar CPlusPlus_1 = require(\"./language/CPlusPlus\");\nObject.defineProperty(exports, \"CPlusPlusTargetLanguage\", { enumerable: true, get: function () { return CPlusPlus_1.CPlusPlusTargetLanguage; } });\nObject.defineProperty(exports, \"CPlusPlusRenderer\", { enumerable: true, get: function () { return CPlusPlus_1.CPlusPlusRenderer; } });\nObject.defineProperty(exports, \"cPlusPlusOptions\", { enumerable: true, get: function () { return CPlusPlus_1.cPlusPlusOptions; } });\nvar CSharp_1 = require(\"./language/CSharp\");\nObject.defineProperty(exports, \"CSharpTargetLanguage\", { enumerable: true, get: function () { return CSharp_1.CSharpTargetLanguage; } });\nObject.defineProperty(exports, \"cSharpOptions\", { enumerable: true, get: function () { return CSharp_1.cSharpOptions; } });\nObject.defineProperty(exports, \"CSharpRenderer\", { enumerable: true, get: function () { return CSharp_1.CSharpRenderer; } });\nvar Python_1 = require(\"./language/Python\");\nObject.defineProperty(exports, \"PythonTargetLanguage\", { enumerable: true, get: function () { return Python_1.PythonTargetLanguage; } });\nObject.defineProperty(exports, \"PythonRenderer\", { enumerable: true, get: function () { return Python_1.PythonRenderer; } });\nObject.defineProperty(exports, \"pythonOptions\", { enumerable: true, get: function () { return Python_1.pythonOptions; } });\nvar Golang_1 = require(\"./language/Golang\");\nObject.defineProperty(exports, \"GoTargetLanguage\", { enumerable: true, get: function () { return Golang_1.GoTargetLanguage; } });\nObject.defineProperty(exports, \"GoRenderer\", { enumerable: true, get: function () { return Golang_1.GoRenderer; } });\nObject.defineProperty(exports, \"goOptions\", { enumerable: true, get: function () { return Golang_1.goOptions; } });\nvar Objective_C_1 = require(\"./language/Objective-C\");\nObject.defineProperty(exports, \"ObjectiveCTargetLanguage\", { enumerable: true, get: function () { return Objective_C_1.ObjectiveCTargetLanguage; } });\nObject.defineProperty(exports, \"ObjectiveCRenderer\", { enumerable: true, get: function () { return Objective_C_1.ObjectiveCRenderer; } });\nObject.defineProperty(exports, \"objcOptions\", { enumerable: true, get: function () { return Objective_C_1.objcOptions; } });\nvar Java_1 = require(\"./language/Java\");\nObject.defineProperty(exports, \"JavaTargetLanguage\", { enumerable: true, get: function () { return Java_1.JavaTargetLanguage; } });\nObject.defineProperty(exports, \"JavaRenderer\", { enumerable: true, get: function () { return Java_1.JavaRenderer; } });\nObject.defineProperty(exports, \"javaOptions\", { enumerable: true, get: function () { return Java_1.javaOptions; } });\nvar JavaScript_1 = require(\"./language/JavaScript\");\nObject.defineProperty(exports, \"JavaScriptTargetLanguage\", { enumerable: true, get: function () { return JavaScript_1.JavaScriptTargetLanguage; } });\nObject.defineProperty(exports, \"JavaScriptRenderer\", { enumerable: true, get: function () { return JavaScript_1.JavaScriptRenderer; } });\nObject.defineProperty(exports, \"javaScriptOptions\", { enumerable: true, get: function () { return JavaScript_1.javaScriptOptions; } });\nvar JavaScriptPropTypes_1 = require(\"./language/JavaScriptPropTypes\");\nObject.defineProperty(exports, \"JavaScriptPropTypesTargetLanguage\", { enumerable: true, get: function () { return JavaScriptPropTypes_1.JavaScriptPropTypesTargetLanguage; } });\nObject.defineProperty(exports, \"JavaScriptPropTypesRenderer\", { enumerable: true, get: function () { return JavaScriptPropTypes_1.JavaScriptPropTypesRenderer; } });\nObject.defineProperty(exports, \"javaScriptPropTypesOptions\", { enumerable: true, get: function () { return JavaScriptPropTypes_1.javaScriptPropTypesOptions; } });\nvar TypeScriptFlow_1 = require(\"./language/TypeScriptFlow\");\nObject.defineProperty(exports, \"TypeScriptTargetLanguage\", { enumerable: true, get: function () { return TypeScriptFlow_1.TypeScriptTargetLanguage; } });\nObject.defineProperty(exports, \"TypeScriptRenderer\", { enumerable: true, get: function () { return TypeScriptFlow_1.TypeScriptRenderer; } });\nObject.defineProperty(exports, \"FlowTargetLanguage\", { enumerable: true, get: function () { return TypeScriptFlow_1.FlowTargetLanguage; } });\nObject.defineProperty(exports, \"FlowRenderer\", { enumerable: true, get: function () { return TypeScriptFlow_1.FlowRenderer; } });\nObject.defineProperty(exports, \"tsFlowOptions\", { enumerable: true, get: function () { return TypeScriptFlow_1.tsFlowOptions; } });\nvar Swift_1 = require(\"./language/Swift\");\nObject.defineProperty(exports, \"SwiftTargetLanguage\", { enumerable: true, get: function () { return Swift_1.SwiftTargetLanguage; } });\nObject.defineProperty(exports, \"SwiftRenderer\", { enumerable: true, get: function () { return Swift_1.SwiftRenderer; } });\nObject.defineProperty(exports, \"swiftOptions\", { enumerable: true, get: function () { return Swift_1.swiftOptions; } });\nvar Kotlin_1 = require(\"./language/Kotlin\");\nObject.defineProperty(exports, \"KotlinTargetLanguage\", { enumerable: true, get: function () { return Kotlin_1.KotlinTargetLanguage; } });\nObject.defineProperty(exports, \"KotlinRenderer\", { enumerable: true, get: function () { return Kotlin_1.KotlinRenderer; } });\nObject.defineProperty(exports, \"kotlinOptions\", { enumerable: true, get: function () { return Kotlin_1.kotlinOptions; } });\nvar Scala3_1 = require(\"./language/Scala3\");\nObject.defineProperty(exports, \"Scala3TargetLanguage\", { enumerable: true, get: function () { return Scala3_1.Scala3TargetLanguage; } });\nObject.defineProperty(exports, \"Scala3Renderer\", { enumerable: true, get: function () { return Scala3_1.Scala3Renderer; } });\nObject.defineProperty(exports, \"scala3Options\", { enumerable: true, get: function () { return Scala3_1.scala3Options; } });\nvar Smithy4s_1 = require(\"./language/Smithy4s\");\nObject.defineProperty(exports, \"SmithyTargetLanguage\", { enumerable: true, get: function () { return Smithy4s_1.SmithyTargetLanguage; } });\nObject.defineProperty(exports, \"Smithy4sRenderer\", { enumerable: true, get: function () { return Smithy4s_1.Smithy4sRenderer; } });\nObject.defineProperty(exports, \"SmithyOptions\", { enumerable: true, get: function () { return Smithy4s_1.SmithyOptions; } });\nvar Elm_1 = require(\"./language/Elm\");\nObject.defineProperty(exports, \"ElmTargetLanguage\", { enumerable: true, get: function () { return Elm_1.ElmTargetLanguage; } });\nObject.defineProperty(exports, \"ElmRenderer\", { enumerable: true, get: function () { return Elm_1.ElmRenderer; } });\nObject.defineProperty(exports, \"elmOptions\", { enumerable: true, get: function () { return Elm_1.elmOptions; } });\nvar JSONSchema_1 = require(\"./language/JSONSchema\");\nObject.defineProperty(exports, \"JSONSchemaTargetLanguage\", { enumerable: true, get: function () { return JSONSchema_1.JSONSchemaTargetLanguage; } });\nObject.defineProperty(exports, \"JSONSchemaRenderer\", { enumerable: true, get: function () { return JSONSchema_1.JSONSchemaRenderer; } });\nvar Rust_1 = require(\"./language/Rust\");\nObject.defineProperty(exports, \"RustTargetLanguage\", { enumerable: true, get: function () { return Rust_1.RustTargetLanguage; } });\nObject.defineProperty(exports, \"RustRenderer\", { enumerable: true, get: function () { return Rust_1.RustRenderer; } });\nObject.defineProperty(exports, \"rustOptions\", { enumerable: true, get: function () { return Rust_1.rustOptions; } });\nvar ruby_1 = require(\"./language/ruby\");\nObject.defineProperty(exports, \"RubyTargetLanguage\", { enumerable: true, get: function () { return ruby_1.RubyTargetLanguage; } });\nObject.defineProperty(exports, \"RubyRenderer\", { enumerable: true, get: function () { return ruby_1.RubyRenderer; } });\nObject.defineProperty(exports, \"rubyOptions\", { enumerable: true, get: function () { return ruby_1.rubyOptions; } });\nvar Crystal_1 = require(\"./language/Crystal\");\nObject.defineProperty(exports, \"CrystalTargetLanguage\", { enumerable: true, get: function () { return Crystal_1.CrystalTargetLanguage; } });\nObject.defineProperty(exports, \"CrystalRenderer\", { enumerable: true, get: function () { return Crystal_1.CrystalRenderer; } });\nvar Haskell_1 = require(\"./language/Haskell\");\nObject.defineProperty(exports, \"HaskellTargetLanguage\", { enumerable: true, get: function () { return Haskell_1.HaskellTargetLanguage; } });\nObject.defineProperty(exports, \"HaskellRenderer\", { enumerable: true, get: function () { return Haskell_1.HaskellRenderer; } });\nObject.defineProperty(exports, \"haskellOptions\", { enumerable: true, get: function () { return Haskell_1.haskellOptions; } });\nvar Dart_1 = require(\"./language/Dart\");\nObject.defineProperty(exports, \"DartTargetLanguage\", { enumerable: true, get: function () { return Dart_1.DartTargetLanguage; } });\nObject.defineProperty(exports, \"DartRenderer\", { enumerable: true, get: function () { return Dart_1.DartRenderer; } });\nObject.defineProperty(exports, \"dartOptions\", { enumerable: true, get: function () { return Dart_1.dartOptions; } });\n"],"names":["Messages","errorMessages","QuickTypeError","errorMessage","messageName","userMessage","properties","messageError","kind","message","propertiesMap","name","value","messageAssert","assertion","__createBinding","this","o","m","k","k2","desc","__setModuleDefault","v","__importStar","mod","result","Support","js_base64_1","require$$0","pako","require$$1","Messages_1","require$$2","YAML","require$$3","isStringMap","x","checkValue","checkString","checkStringMap","panic","checkArray","checkItem","defined","nonNull","assertNever","assert","condition","mustNotHappen","repeated","n","arr","i","repeatedCall","producer","inflateBase64","encoded","bytes","parseJSON","text","description","address","e","indentationString","level","numberEnumValues","TypeAttributes","collection_utils_1","Support_1","TypeAttributeKind","_attrs","attrs","_","_schema","_t","_builder","a","kvps","modify","modified","makeDefault","other","combineTypeAttributes","combinationKind","firstOrArray","second","union","attributeArray","attributesByKind","combine","makeTypeAttributesInferred","attr","increaseTypeAttributesDistance","RendererOptions","Option","definition","values","getOptionValues","options","untypedOptionValues","optionValues","BooleanOption","defaultValue","negated","StringOption","typeLabel","EnumOption","exports","RendererOptions_1","Strings_1","AcronymStyleOptions","acronymOption","defaultOption","acronymStyle","style","__importDefault","Acronyms_1","unicode_properties_1","computeAsciiMap","mapper","charStringMap","charNoEscapeMap","noEscape","precomputedCodePointPredicate","p","asciiResults","cp","utf16ConcatMap","s","cs","start","cc","str","isHighSurrogate","isLowSurrogate","utf32ConcatMap","highSurrogate","lowSurrogate","highBits","utf16LegalizeCharacters","isLegal","u","legalizeCharacters","repeatString","intToHex","width","standardUnicodeHexEscape","codePoint","escapeNonPrintableMapper","printablePredicate","escaper","isPrintable","category","isAscii","isLetter","isDigit","isNumeric","isLetterOrDigit","isLetterOrUnderscore","isLetterOrUnderscoreOrDigit","isWordCharacter","trimEnd","l","firstWS","modifyFirstChar","f","capitalize","c","decapitalize","wordSeparatorRegex","pascalCase","camelCase","snakeCase","splitIntoWords","word","startWithLetter","isAllowedStart","upper","knownAcronyms","fastIsWordCharacter","fastIsNonWordCharacter","fastIsLowerCase","fastNonLetter","fastIsDigit","intervals","intervalStart","len","lastLowerCaseIndex","atEnd","currentCodePoint","skipWhile","skipNonWord","skipLowerCase","skipUpperCase","skipNonLetter","skipDigits","startInterval","commitInterval","allUpper","intervalLength","words","end","isAcronym","firstUpperWordStyle","allUpperWordStyle","originalWord","allLowerWordStyle","styleWord","combineWords","removeInvalidCharacters","firstWordStyle","restWordStyle","firstWordAcronymStyle","restAcronymStyle","separator","isStartCharacter","legalizedWords","w","validEmpty","styledWords","first","firstStyle","styledFirstWord","restWords","validThe","styledThe","addPrefixIfNecessary","prefix","makeNameStyle","namingStyle","legalizeName","original","styledName","Chance_1","MersenneTwister","seed","y","mag01","kk","Chance","animalTypeArray","animals","cities","pluralize","TypeAttributes_1","require$$4","require$$5","chance","usedRandomNames","initTypeNames","makeRandomName","combineNames","names","originalFirst","namesSet","prefixLength","suffixLength","suffix","combined","TypeNames","alternativeNames","distance","TooManyTypeNames","RegularTypeNames","areInferred","_alternativeNames","namesArray","startIndex","newNames","newDistance","newAlternativeNames","set","an","TypeNamesTypeAttributeKind","tn","modifyTypeNames","attributes","modifier","singularizeTypeNames","maybeNames","makeNamesTypeAttributes","nameOrNames","areNamesInferred","typeNames","Type_1","TypeGraph_1","StringTypes_1","ProvenanceTypeAttributeKind","_kind","stringTypeMappingGet","stm","mapped","noStringTypeMapping","getNoStringTypeMapping","TypeBuilder","typeGraphSerial","_stringTypeMapping","canonicalOrder","_allPropertiesOptional","_addProvenanceAttributes","inheritsProvenanceAttributes","tref","index","trefs","t","filtered","forwardingRef","creator","maybeType","attribtues","existingAttributes","existing","nonIdentityAttributes","tr","identity","maker","identityMaker","maybeTypeRef","maybeAttributes","stringTypes","existingStringTypes","cases","isOptional","additionalProperties","ref","type","items","isFixed","members","TypeBuilder_1","StringTypes$1","StringTypes","count","transformations","othersArray","thisCases","otherCases","intersects","entries","_a","thisValue","otherValue","mapping","kinds","h","parts","enumCases","firstKey","StringTypesTypeAttributeKind","st","INTEGER_STRING","MIN_INTEGER_STRING","MAX_INTEGER_STRING","isIntegerString","UUID","isUUID","URI","isURI","inferTransformedStringTypeKindForString","recognizer","TypeUtils","assertIsObject","assertIsClass","setOperationMembersRecursively","oneOrMany","setOperations","includeAny","processedSetOperations","process","so","makeGroupsToFlatten","include","typeGroups","maybeSet","ts","combineTypeAttributesOfTypes","types","isAnyOrNull","removeNullFromUnion","sortBy","sort","nullType","removeNullFromType","nullableFromUnion","hasNull","nonNulls","nonNullTypeCases","getNullAsOptional","maybeNull","isNamedType","separateNamedTypes","objects","enums","unions","directlyReachableTypes","setForType","directlyReachableSingleNamedType","definedTypes","stringTypesForType","matchTypeExhaustive","noneType","anyType","boolType","integerType","doubleType","stringType","arrayType","classType","mapType","objectType","enumType","unionType","transformedStringType","matchType","typeNotSupported","matchCompoundType","ignore","GraphRewriting","TypeUtils_1","TypeReconstituter","_typeBuilder","_makeClassUnique","_typeAttributes","_forwardingRef","_register","maybeRefs","resultValues","BaseGraphRewriteBuilder","originalGraph","stringTypeMapping","alphabetizeProperties","graphHasProvenanceAttributes","debugPrint","maybeForwardingRef","typeCreator","actualRef","originalRef","maybeRef","typeRefs","delta","GraphRemapBuilder","_map","debugPrintRemapping","source","target","maybeSources","_maker","_tref","originalType","originalAttributes","attributeSources","newAttributes","reconstituter","GraphRewriteBuilder","setsToReplace","debugPrintReconstitution","_replacer","reconstituted","typesToReplace","alreadyReconstitutedType","replaceSet","allEqual","Graph_1","countComponentGraphNodes","components","largest","stronglyConnectedComponents","successors","stack","numNodes","indexes","lowLinks","onStack","sccs","strongconnect","scc","buildComponentOfNodeMap","numComponents","componentOfNode","buildMetaSuccessors","componentAdded","metaSuccessors","succ","ms","invertEdges","predecessors","calculateInDegrees","inDegrees","findRoots","roots","Graph","nodes","invertDirection","edges","edgesArray","root","preOrder","visited","visit","componentSuccessors","ns","includeNode","nodeLabel","lines","j","GraphRewriting_1","TypeNames_1","require$$6","require$$7","require$$8","require$$9","indexBits","indexMask","serialMask","isTypeRef","makeTypeRef","graph","typeRefIndex","assertTypeRefGraph","getGraph","graphOrBuilder","TypeGraph","derefTypeRef","attributesForTypeRef","typeAndAttributesForTypeRef","TypeAttributeStore","_typeGraph","_values","topLevelName","TypeAttributeStoreView","_attributeStore","_definition","TypeGraph$1","typeBuilder","serial","_haveProvenanceAttributes","topLevels","typeAttributes","predicate","seen","addFromType","view","sets","builder","newGraph","oldProvenance","newProvenance","difference","title","replacementGroups","replacer","force","removeIndirectionIntersections","map","childrenOfType","parents","children","maybeString","noneToAny","noneTypes","optionalToNullable","rewriteClass","classesWithOptional","setOfClass","current","member","urijs_1","protocolsSchemaProperty","extensionsSchemaProperty","URITypeAttributeKind","protocolSets","extensionSets","schema","protocols","extensions","extensionRegex","pathExtension","path","matches","uriInferenceAttributesProducer","uri","extension","uriSchemaAttributesProducer","_ref","maybeProtocols","maybeExtensions","transformedStringTypeTargetTypeKinds","isPrimitiveStringTypeKind","targetTypeKindForTransformedStringTypeKind","isNumberTypeKind","isPrimitiveTypeKind","triviallyStructurallyCompatible","TypeIdentity","_components","Type","typeRef","conflateNumbers","kindsCompatible","kind1","kind2","workList","done","failed","queue","b","ai","bi","found","dai","dbi","processed","ancestors","hasUniqueIdentityAttributes","ta","identityAttributes","primitiveTypeIdentity","PrimitiveType","_other","_conflateNumbers","_queue","arrayTypeIdentity","itemsRef","ArrayType","_itemsRef","maybeItems","GenericClassProperty","typeData","ClassProperty","objectTypeIdentify","additionalPropertiesRef","classTypeIdentity","mapTypeIdentify","ObjectType","_properties","_additionalPropertiesRef","MapType","ClassType","sortedProperties","propertiesInNewOrder","maybePropertyTypes","maybeAdditionalProperties","r","reconstitutedTypes","pa","pb","cpa","cpb","thisAdditionalProperties","otherAdditionalProperties","valuesRef","enumTypeIdentity","EnumType","setOperationCasesEqual","typesA","typesB","membersEqual","ma","mb","tb","setOperationTypeIdentity","memberRefs","unionTypeIdentity","intersectionTypeIdentity","SetOperationType","_memberRefs","getType","sortedMemberRefs","membersInOrder","maybeMembers","IntersectionType","UnionType","numObjectTypes","Naming","Namespace","_name","parent","forbiddenNamespaces","additionalForbidden","child","named","Namer","nameStyle","prefixes","forbiddenNamesIterable","namesToAssignIterable","forbiddenNames","namesToAssign","allAssignedNames","namesToPrefix","proposedNames","namingFunction","maybeUniqueName","proposed","assigned","suffixNumber","originalName","nameToTry","funPrefixes","funPrefixNamer","Name","_namingFunction","order","associate","FixedName","assignedName","assignments","associatedAssignedName","_fixedName","SimpleName","unstyledNames","AssociatedName","_sponsor","getName","DependencyName","_proposeUnstyledName","dependencies","keywordNamespace","keywords","kw","allNamespacesRecursively","namespaces","NamingContext","rootNamespaces","namedNamespace","namedsForProposed","namedsForName","namespace","assignNames","ctx","unfinishedNamespaces","readyNamespace","allForbiddenNames","allReadyNames","minOrderName","minOrder","readyNames","byNamingFunction","namer","namedsForNamingFunction","byProposed","nameds","Source","Naming_1","newline","sourcelikeToSource","sl","annotated","annotation","maybeAnnotated","doAnnotate","modifySource","sourceLineLength","serializeRenderResult","rootSource","indentation","indent","indentNeeded","currentLine","annotations","indentIfNeeded","flattenCurrentLine","currentLocation","finishLine","serializeToStringArray","numRows","widths","numColumns","columnWidths","row","rowWidths","colWidth","src","srcWidth","serialized","singleWord","multiWord","parenIfNeeded","needsParens","Annotation","AnnotationData","IssueAnnotationData","Renderer_1","Source_1","Annotation_1","getBlankLineConfig","cfg","lineIndentation","line","EmitContext","item","nl","numBlankLines","offset","Renderer","targetLanguage","renderContext","tableArray","table","lineParts","lineEmitted","linesString","numLines","currentIndent","newIndent","emitter","oldEmitContext","iterable","onFirst","position","interposedBlankLines","leadingBlankLines","didEmit","blankLineConfig","interposing","leading","fn","filename","existingEmitContext","givenOutputFilename","DeclarationIR_1","DeclarationIR","declarations","forwardedTypes","findBreaker","canBreak","maybeBreaker","cycleBreakerTypesForGraph","isImplicitCycleBreaker","canBreakCycles","visitedTypes","cycleBreakerTypes","declarationsForGraph","typeGraph","canBeForwardDeclared","needsDeclaration","topDown","visitedComponents","processGraph","_writeComponents","componentsGraph","visitComponent","component","declarationNeeded","forwardDeclarable","rest","restGraph","fullGraph","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","reject","fulfilled","step","rejected","JSONSchemaStore_1","JSONSchemaStore","AccessorNamesTypeAttributeKind","getFromEntry","entry","language","maybeForLanguage","maybeWildcard","lookupKey","accessors","key","objectPropertyNames","_cp","enumCaseNames","getAccessorName","maybeName","UnionIdentifierTypeAttributeKind","nextUnionIdentifier","makeUnionIdentifierAttribute","UnionMemberNamesTypeAttributeKind","makeUnionMemberNamesAttribute","unionAttributes","identifiers","unionMemberName","memberNames","fixedNames","maybeEntry","isNameFixed","size","isAccessorEntry","makeAccessorEntry","ae","makeAccessorNames","stringMap","accessorNamesAttributeProducer","canonicalRef","_types","maybeAccessors","identifierAttribute","caseAttributes","accessor","AccessorNames_1","EnumValuesTypeAttributeKind","enumCaseValues","enumValues","enumValuesAttributeProducer","_canonicalRef","maybeEnumValues","checkMinMaxConstraint","minmax","min","max","MinMaxConstraintTypeAttributeKind","_typeKinds","_minSchemaProperty","_maxSchemaProperty","otherMin","otherMax","minProperty","maxProperty","minMaxAttributeProducer","maybeMinMax","minMaxLengthAttributeProducer","maybeMinMaxLength","minMaxValueForType","minMaxLengthForType","PatternTypeAttributeKind","_arr","patternAttributeProducer","patt","patternForType","TypeNames_2","Description_1","require$$10","EnumValues_1","require$$11","Constraints_1","require$$12","Constraints_2","Constraints_3","URIAttributes_1","require$$13","PathElementKind","keyOrIndex","pe","pathElementEquals","withRef","refOrLoc","props","Ref","checkJSONSchemaObject","checkJSONSchema","numberRegexp","normalizeURI","elements","destroyURI","addressURI","newPath","keys","base","elementToString","local","refMaker","acc","Location","virtualRef","haveID","id","parsed","virtual","Canonizer","_ctx","loc","locWithoutID","maybeID","property","checkTypeList","typeOrTypes","validTypes","maybeInvalid","checkRequiredArray","schemaTypes","typeKindForJSONSchemaFormat","format","jsonSchema","schemaFetchError","Resolver","_store","_canonizer","fetchBase","lookupBase","didAdd","canonical","lookupLoc","altBase","addTypesInSchema","resolver","references","attributeProducers","typeForCanonicalRef","setTypeForLocation","makeObject","requiredArray","sortKey","required","propSchema","propName","propLoc","toType","additionalPropertiesType","additionalLoc","additionalRequired","additionalProps","convertToType","enumArray","isConst","typeSet","isTypeIncluded","includedTypes","producedAttributesForNoCases","forEachProducedAttribute","combineProducedAttributes","makeAttributes","forType","forUnion","forCases","maybeTypeNames","inferredAttributes","makeStringType","makeArrayType","singularAttributes","itemType","itemsLoc","itemTypes","itemLoc","makeObjectType","objectAttributes","forObject","propertyName","makeTypesFromCases","kindLoc","caseLoc","intersectionType","convertOneOrAnyOf","includeObject","includeArray","needStringEnum","needUnion","unionTypes","numberAttributes","forNumber","stringAttributes","forString","newLoc","topLevelRef","removeExtension","lower","ext","nameFromURI","fragment","refsInSchemaForURI","defaultName","propertiesAreTypes","InputJSONSchemaStore","_inputs","_delegate","maybeInput","JSONSchemaInput","_schemaStore","additionalAttributeProducers","_additionalSchemaAddresses","maybeSchemaStore","schemaStore","canonizer","normalizedURI","givenName","refs","refName","schemaSource","uris","isConverted","normalizedURIs","JSONSchemaInput_1","addDescriptionToSchema","DescriptionTypeAttributeKind","descriptions","PropertyDescriptionsTypeAttributeKind","sa","sb","propertyDescriptions","isPropertiesKey","el","descriptionAttributeProducer","propertyDescription","pathLength","maybeDescription","debugStringForType","followTargetType","getNumberOfNodes","xfer","Transformer","sourceTypeRef","_indent","ProducerTransformer","consumer","MatchTransformer","transformer","DecodingTransformer","targetTypeRef","continuationTransformer","EncodingTransformer","_targetTypeRef","_continuationTransformer","ArrayDecodingTransformer","_itemTargetTypeRef","itemTransformer","ArrayEncodingTransformer","ChoiceTransformer","transformers","UnionMemberMatchTransformer","memberMatchers","subTransformers","DecodingChoiceTransformer","nullTransformer","integerTransformer","doubleTransformer","boolTransformer","stringTransformer","arrayTransformer","objectTransformer","add","memberMatchTransformers","addCase","reversed","memberType","reverseAndAdd","filter","xfers","nonfailing","allTransformers","resultingTransformers","reconstitute","xf","memberTypeRef","StringMatchTransformer","stringCase","StringProducerTransformer","UnionInstantiationTransformer","ParseStringTransformer","StringifyTransformer","MinMaxLengthCheckTransformer","minLength","maxLength","MinMaxValueTransformer","minimum","maximum","Transformation","_graph","TransformationTypeAttributeKind","transformationForType","Comments","isStringComment","comment","Transformers_1","Comments_1","require$$14","wordWrap","require$$15","givenNameOrder","classPropertyNameOrder","assignedClassPropertyNameOrder","enumCaseNameOrder","assignedEnumCaseNameOrder","unionMemberNameOrder","splitDescription","assignedNameAttributeKind","assignedPropertyNamesAttributeKind","assignedMemberNamesAttributeKind","assignedCaseNamesAttributeKind","ConvenienceRenderer","_o","_className","_u","_unionName","_e","_enumName","_topLevelName","_xf","_typeName","namedUnions","dependencyNames","dn","_maybeNamedType","maybeNamedType","givenOrder","inferredOrder","info","namespaceName","forbiddenStrings","nameOrString","jsonName","alternative","_p","_jsonName","className","accessorNames","depName","unionName","lookup","caseName","enumName","propertyNameds","filteredMap","sortedMap","fieldType","simpleName","typeNameForUnionMember","_noneType","_anyType","_nullType","_boolType","_integerType","_doubleType","_stringType","_enumType","_unionType","transformedType","blankLocations","pos","decl","propertyNames","caseNames","sortOrder","iterateMembers","sortedMemberNames","sortedCaseNames","uniqueValue","firstUnionByValue","objectFunc","enumFunc","unionFunc","comments","lineStart","firstLineStart","lineEnd","beforeComment","afterComment","makePropertyRow","emitTable","classTypes","d","DateTime","DATE","DAYS","TIME","DATE_TIME_SEPARATOR","DefaultDateTimeRecognizer","month","day","hour","minute","dateTime","TargetLanguage_1","DateTime_1","TargetLanguage","displayName","actual","display","cliDefinitions","leadingComments","rendererOptions","renderer","renderResult","ConvenienceRenderer_1","Framework","AccessModifier","noFollow","needTransformerForType","maybeNullable","itemsNeed","alwaysApplyTransformation","csTypeForTransformedStringType","CSharpTargetLanguage","need","NewtonsoftCSharpRenderer","SystemTextJsonCSharpRenderer","csNameStyle","namingFunctionKeep","csNameStyleKeep","denseJsonPropertyName","denseRequiredEnumName","denseNullValueHandlingEnumName","utf16Unit","isPartCharacter","isValueType","CSharpRenderer","_csOptions","classNamed","unionNamed","semicolon","follow","withIssues","actualType","itemsType","nullable","csType","accessModifier","declaration","baseclass","_property","_c","propertyArray","blankLines","columns","isFirstProperty","previousDescription","attribute","fieldName","nullTests","declare","define","isProperty","stmt","withBlock","withReturn","_options","forbidden","typeName","extensionsName","rhs","jsonProperty","escapedName","isNullable","requiredClass","nullValueHandlingClass","nullValueHandling","converter","partial","typeKind","definedType","emitBody","tokenType","seenTypes","expr","variable","converterName","tokenCases","variableName","targetType","emitFinish","tokenCase","typeSource","output","directTargetType","continuation","caseXfers","caseXfer","matchXfer","test","memberName","itemVariable","immediateTargetType","conditions","initializer","reverse","canConvertExpr","haveNullable","jsonPropertyName","GoTargetLanguage","GoRenderer","goNameStyle","primitiveValueTypeKinds","compoundTypeKinds","canOmitEmpty","omitEmptyOption","unmarshalName","basename","goType","valueSource","usedTypes","docStrings","omitEmpty","doc","tags","tag","isNullableArg","ifMember","ifNotMember","maybeAssignNil","_1","_2","makeArgs","primitiveArg","compoundArg","args","isClass","includeJSONEncodingImport","imports","packageDeclaration","sortedImports","packageName","classImports","unionImports","typeImport","_fieldName","Support_2","pascalValue","underscoreValue","camelValue","upperUnderscoreValue","pascalUpperAcronymsValue","camelUpperAcronymsValue","CJSONTargetLanguage","CJSONRenderer","GlobalNames","IncludeKind","genName","proposedFilename","includes","combinedName","enumValue","_hasNull","cJSON","child_level","recur","child_level2","_type","global","withName","withSemicolon","withIndent","_rec","isClassMember","propertyType","propTypes","propRecord","incKind","forceInclude","isVariant","tt","CPlusPlusTargetLanguage","CPlusPlusRenderer","constraintsForType","minMax","minMaxLength","pattern","optionalAsSharedType","optionalFactoryAsSharedType","MemberNames","addQualifier","qualifier","qualified","WrappingCode","inner","BaseString","constStringType","smatch","regex","stringLiteralPrefix","toString","encodingClass","encodingFunction","_qualifier","_fromType","_toType","superThis","fromType","getterName","mutableGetterName","setterName","getterAndSetterNames","includeHelper","namespaceNames","forceNarrowString","typeList","inJsonNamespace","indirection","variant","needIndirection","typeSrc","tChild","keyType","theType","cppType","constraints","cnst","rendered","checkConst","res","numEmits","_propName","ourQualifier","json","propType","assignment","nullOrOptional","getter","variantType","functionForKind","func","typeForKind","maybeElse","emitAdlStruct","optType","factory","classConstraint","getterMinValue","getterMaxValue","getterMinIntValue","getterMaxIntValue","getterMinDoubleValue","getterMaxDoubleValue","getterMinLength","getterMaxLength","getterPattern","constraintMembers","comma","classConstEx","exceptions","ex","untypedMacroName","optionalMacroName","emitGetOptional","optionalType","label","gathered","userNamespaceForwardDecls","nlohmannNamespaceForwardDecls","_defName","defName","numForwards","numIncludes","rec","newType","DEFAULT_CLASS_PREFIX","ObjectiveCTargetLanguage","ObjectiveCRenderer","typeNameStyle","propertyNameStyle","isBool","booleanPrefixes","forbiddenPropertyNames","staticEnumValuesIdentifier","forbiddenForEnumCases","splitExtension","aTopLevel","firstNonUpper","rawName","_arrayType","_classType","_mapType","nullableOrBoxed","itemTypeName","dynamic","typed","nonPointerTypeName","pad","parameter","inTry","inCatch","isTopLevel","_json","irregular","unsafe","__","hasIrregularProperties","hasUnsafeProperties","jsonKey","instances","jsonValue","firstTopLevel","fromJsonExpression","hasTopLevelNonClassTypes","needsMap","JavaTargetLanguage","JavaRenderer","JacksonRenderer","javaKeywords","javaNameStyle","startWithUpper","upperUnderscore","acronymsStyle","JavaDateTimeProvider","_renderer","Java8DateTimeProvider","JavaLegacyDateTimeProvider","convention","methodName","pkg","fileName","main","handler","exception","reference","imp","_propertyName","_isSetter","setter","superAnnotations","stringBasedObjects","emitNullDeserializer","emitDeserializerCodeForStringObjects","parseFrom","emitDeserializeType","variableFieldName","stringBasedTypeKind","emitDeserializer","tokenTypes","emitStringDeserializer","fromVariable","emitNumberDeserializer","customObjectSerializer","serializerCodeForType","emitSerializeType","customSerializerType","topLevelType","topLevelTypeRendered","readerName","writerName","renderedForClass","ConvertersOptions","convertersOption","JavaScriptUnicodeMaps","lookupInUnicodeMap","code","lo","hi","mid","isES3IdentifierStart","ch","unicodeES3IdentifierStart","isES3IdentifierPart","unicodeES3IdentifierPart","Converters_1","JavaScriptUnicodeMaps_1","JavaScriptTargetLanguage","dateTimeType","JavaScriptRenderer","identityNamingFunction","_jsOptions","acronyms","_assignedName","typeMap","emit","anyAnnotation","additional","_caseName","parsedJson","anyArrayAnnotation","anyMapAnnotation","stringAnnotation","stringArrayAnnotation","neverAnnotation","moduleLine","camelCaseName","serializer","deserializer","__1","JavaScript_1","JavaScriptPropTypesTargetLanguage","JavaScriptPropTypesRenderer","match","_transformedStringType","lhs","moduleName","_position","mapKey","mapValue","ordinal","depIndex","tsFlowTypeAnnotations","TypeScriptFlowBaseTargetLanguage","TypeScriptTargetLanguage","TypeScriptRenderer","quotePropertyName","escaped","quoted","TypeScriptFlowBaseRenderer","_tsFlowOptions","jsonType","returnType","topLevelNames","FlowTargetLanguage","FlowRenderer","maybeOr","MAX_SAMELINE_PROPERTIES","swiftDateTimeRegex","SwiftDateTimeRecognizer","SwiftTargetLanguage","SwiftRenderer","swiftNameStyle","isUpper","unicodeEscape","stringEscape","_classNamed","justTypes","notJustTypes","noOptional","optional","baseClass","groups","group","redundant","useMutableProperties","structOrClass","lastProperty","lastNames","emitLastProperty","sources","propertyLines","initProperties","propertiesLines","convenience","protocolString","renderUnionCase","indirect","boolMember","integerMember","extensionSource","horizontalLine","KotlinTargetLanguage","KotlinRenderer","KotlinJacksonRenderer","KotlinKlaxonRenderer","KotlinXRenderer","kotlinNameStyle","_stringEscape","_kotlinOptions","delimiter","open","close","_noOptional","elementType","kotlinType","nullableOrOptional","last","meta","_required","_meta","_nonNulls","_maybeNull","hasUnions","hasEmptyObjects","converters","namesDiffer","top","rename","toJsonTable","isPrefixBool","propertyOpts","valType","jsonEnum","invalidSymbols","shouldAddBacktick","paramName","wrapOption","scalaNameStyle","upperNamingFunction","lowerNamingFunction","Scala3Renderer","_scalaOptions","scalaType","nameWithBackticks","backticks","theTypes","UpickleRenderer","Smithy4sRenderer","CirceRenderer","thisUnionType","sourceLikeTypes","paramTemp","Scala3TargetLanguage","smithyType","emitLater","arrayTypes","at","mt","SmithyTargetLanguage","ElmTargetLanguage","ElmRenderer","elmNameStyle","requiredOrOptional","fallback","encoder","decoder","nullableType","nullableDecoder","nullableEncoder","equalsOrPipe","constructor","decoderName","propDecoder","reqOrOpt","encoderName","bracketOrComma","propEncoder","topLevelDecoders","JSONSchema","JSONSchemaTargetLanguage","_untypedOptionValues","JSONSchemaRenderer","jsonNameStyle","req","prop","oneOf","definitions","Density","Visibility","namingStyles","RustTargetLanguage","RustRenderer","isAsciiLetterOrUnderscoreOrDigit","isAsciiLetterOrUnderscore","rustStyle","isSnakeCase","wordStyle","snakeNamingFunction","camelNamingFunction","standardUnicodeRustEscape","rustStringEscape","rustType","defaultNamingStyle","preferedNamingStyle","nameToNamingStyle","propertiesNamingStyles","_prop","listMatchingNamingStyles","defaultStyle","getPreferedNamingStyle","structBody","enumCasesNamingStyles","namingStyleOccurences","occurrences","preferedStyles","_style","num","_num","fromStyle","Crystal","CrystalTargetLanguage","CrystalRenderer","crystalStyle","standardUnicodeCrystalEscape","crystalStringEscape","crystalType","globalClasses","kernel","forbiddenForObjectProperties","Strictness","RubyTargetLanguage","RubyRenderer","simpleNameStyle","uppercase","memberNameStyle","exp","depth","safeNav","theName","castPrimitives","primitiveCast","primitive","safeAccess","expression","emitModuleInner","firstModule","subModules","inits","nilMembers","has","topLevel","self","needsToJsonDefined","classDeclaration","DartTargetLanguage","DartRenderer","typeNamingFunction","dartNameStyle","propertyNamingFunction","enumCaseNamingFunction","optionNameIsEmpty","forceNullable","withNullable","list","valueType","valueMapper","_n","forbiddenTypeNames","PythonTargetLanguage","PythonRenderer","JSONPythonRenderer","isNormalizedStartCharacter3","isNormalizedPartCharacter3","isStartCharacter3","isPartCharacter3","legalizeName3","classNameStyle","getWordStyle","forceSnakeNameStyle","snakeNameStyle","pyOptions","docstring","content","module","_isRootTypeDef","_doubletype","memberTypes","_givenOutputFilename","declarationLines","closingLines","supportLines","compose","input","makeValue","makeLambda","vol","tvar","cf","arg","inputTransformer","consume","isType","valueToCheck","lambdas","deserializers","serializers","fromDict","toDict","pythonType","Pike","enumNamingFunction","namedTypeNamingFunction","PikeTargetLanguage","PikeRenderer","pikeType","opening","closing","assignmentRval","HaskellTargetLanguage","HaskellRenderer","haskellNameStyle","counter","classProperties","operator","TypeScriptZodTargetLanguage","TypeScriptZodRenderer","addType","mapTypeRef","mapName","mapChildTypeRefs","childTypeRefs","indices","deferredIndices","MAX_PASSES","passNum","foundAllChildren","childRef","childIndex","PhpTargetLanguage","PhpRenderer","phpNameStyle","validateName","fromName","toName","sampleName","_basename","_imports","_reference","optionalize","attrName","scopeAttrName","idx","is","isfn","myT","jdx","enumSerdeType","givenFilename","TypeScriptEffectSchemaTargetLanguage","TypeScriptEffectSchemaRenderer","CSharp_1","Golang_1","CJSON_1","CPlusPlus_1","Objective_C_1","Java_1","JavaScriptPropTypes_1","TypeScriptFlow_1","Swift_1","Kotlin_1","Scala3_1","Smithy4s_1","Elm_1","JSONSchema_1","Rust_1","require$$16","Crystal_1","require$$17","ruby_1","require$$18","Dart_1","require$$19","Python_1","require$$20","Pike_1","require$$21","Haskell_1","require$$22","TypeScriptZod_1","require$$23","Php_1","require$$24","TypeScriptEffectSchema_1","require$$25","languageNamed","targetLanguages","maybeTargetLanguage","UnionBuilder_1","addAttributes","accumulatorAttributes","setAttributes","attributeMap","addAttributesToBuilder","buildTypeAttributeMap","moveAttributes","fromKind","toKind","fromAttributes","UnionAccumulator","_attributes","stringTypesAttributes","maybeEnumAttributes","merged","allAttributes","FauxUnion","attributesForTypes","unionsForType","typesForUnion","unionsEquivalentToRoot","traverse","isEquivalentToRoot","rootPath","typesArray","resultAttributes","unionForType","singleAncestors","inheritedAttributes","TypeRefUnionAccumulator","attributesMap","UnionBuilder","typeProvider","unique","memberAttributes","typesSet","UnifyClasses","getCliqueProperties","clique","makePropertyType","lostTypeAttributes","maybeProperty","unifiedAdditionalProperties","unifiedPropertiesArray","countProperties","hasProperties","hasAdditionalProperties","hasNonAnyAdditionalProperties","UnifyUnionBuilder","_makeObjectTypes","_makeClassesFixed","_unifyTypes","objectRefs","objectTypes","propertyTypes","additionalPropertyTypes","arrays","unionBuilderForUnification","makeObjectTypes","makeClassesFixed","unifyTypes","unionBuilder","accumulator","nestedAttributes","CombineClasses","UnifyClasses_1","REQUIRED_OVERLAP","typeSetsCanBeCombined","s1","s2","canBeCombined","c1","c2","onlyWithSameProperties","p1","p2","larger","smaller","maxFaults","minOverlap","commonProperties","faults","tl","tsCases","tlCases","tryAddToClique","prototype","findSimilarityCliques","includeFixedClasses","classCandidates","cliques","cliqueIndex","tmp","cl","combineClasses","makeCliqueClass","EncodedMarkovChain","MarkovChain","EncodedMarkovChain_1","makeTrie","seq","increment","train","trie","load","evaluateFull","mc","scores","evaluate","randomInt","range","generate","state","unseenWeight","counts","sum","testWord","InferMaps","MarkovChain_1","mapSizeThreshold","stringMapSizeThreshold","markovChain","nameProbability","shouldBeMap","numProperties","product","probability","exponent","scale","limit","firstNonNullCases","allCases","canBeMap","nn","inferMaps","replaceClass","setOfOneClass","shouldBe","classesToReplace","GatherNames","UniqueQueue","gatherNames","destructive","setNames","namesForType","addNames","originalNames","oldNames","transformation","_objectType","directAlternativesForType","ancestorAlternativesForType","pairsProcessed","addAlternatives","alternatives","processType","ancestor","alternativeSuffix","processedEntry","ancestorAlternatives","directAlternatives","ancestorNames","ancestorForMembers","ExpandStrings","MIN_LENGTH_FOR_ENUM","MIN_LENGTH_FOR_OVERLAP","isOwnEnum","numValues","enumCasesOverlap","newCases","existingCases","newAreSubordinate","isAlwaysEmptyString","expandStrings","inference","allStrings","makeEnumInfo","mappedStringTypes","enumInfos","enumSets","findOverlap","enumInfo","replaceString","setMatches","fullCases","FlattenUnions","flattenUnions","needsRepeat","replace","allUnions","nonCanonicalUnions","foundIntersection","ResolveIntersections","canResolve","IntersectionAccumulator","haveNumber","maybeArray","maybeObject","objectAdditionalProperties","allPropertyNames","newProperty","maybeDoubleAttributes","IntersectionUnionBuilder","reconstitutedMembers","maybeData","resolveIntersections","intersections","intersectionAttributes","extraAttributes","allIntersections","resolvableIntersections","ReplaceObjectType","replaceObjectType","leaveFullObjects","setOfOneType","reconstituteProperties","makeClass","reconstituteAdditionalProperties","allObjectTypes","objectTypesToReplace","Tag","TAG_BITS","TAG_MASK","getIndex","valueTag","CompressedJSON","dateTimeRecognizer","handleRefs","_input","obj","isDouble","numberTag","hashAccumulator","CompressedJSONFromString","Inference","CompressedJSON_1","forEachArrayInNestedValueArray","va","forEachValueInNestedValueArray","InferenceUnionBuilder","_typeInference","_fixed","TypeInference","_cjson","_inferMaps","_inferEnums","valueArray","fixed","part","resolved","propertyValues","allRefs","Inputs","Inference_1","All_1","messageParseError","JSONInput","_compressedJSON","sample","samples","inferEnums","fixedTopLevels","jsonInputForTargetLanguage","languages","handleJSONRefs","compressedJSON","InputData","makeInput","schemaStrings","FlattenStrings","unionNeedsReplacing","stringMembers","replaceUnion","flattenStrings","unionsToReplace","MakeTransformations","transformationAttributes","reconstitutedTargetType","debugPrintTransformations","makeEnumTransformer","caseTransformers","transformedTypes","additionalAttributes","reconstituteMember","targetTypeKind","targetTypeMember","reconstitutedMembersByKind","reconstitutedMemberSet","haveUnion","memberForKind","transformerForKind","maybeStringType","getStringType","transformerForStringType","memberRef","transformerForString","transformerForClass","transformerForMap","transformerForObject","replaceArray","anyArrayType","reconstitutedItems","reconstitutedArray","replaceEnum","reconstitutedEnum","replaceNumber","reconstitutedAttributes","replaceTransformedStringType","makeTransformations","setOfOneUnion","CombineClasses_1","InferMaps_1","GatherNames_1","ExpandStrings_1","FlattenUnions_1","ResolveIntersections_1","ReplaceObjectType_1","Inputs_1","FlattenStrings_1","MakeTransformations_1","getTargetLanguage","nameOrInstance","defaultOptions","makeDefaultInferenceFlags","flags","flag","Run","allInputs","graphInputs","unionsDone","intersectionsDone","graphBeforeRewrites","combinedGraph","enumInference","inputData","schemaString","srr","preRunResult","quicktypeMultiFile","quicktypeMultiFileSync","offsetLocation","lineOffset","offsetSpan","span","combineRenderResults","ann","quicktype","primordials","sep","thisArgs","instance","proto","thenFn","catchFn","err","buf","bufferModule","AsyncFunction","Blob","isBlob","AggregateError","errors","callback","called","rej","_unused","replacement","inspect","CustomAggregateError","kIsNodeError","kTypes","classRegExp","nodeInternalPrefix","codes","addNumericalSeparator","val","getMessage","msg","expectedLength","E","Base","NodeError","hideStackFrames","hidden","aggregateTwoErrors","innerError","outerError","expected","_actual$constructor","inspected","reason","_value$constructor","received","AbortError","ArrayIsArray","ArrayPrototypeIncludes","ArrayPrototypeJoin","ArrayPrototypeMap","NumberIsInteger","NumberIsNaN","NumberMAX_SAFE_INTEGER","NumberMIN_SAFE_INTEGER","NumberParseInt","ObjectPrototypeHasOwnProperty","RegExpPrototypeExec","String","StringPrototypeToUpperCase","StringPrototypeTrim","ERR_SOCKET_BAD_PORT","ERR_INVALID_ARG_TYPE","ERR_INVALID_ARG_VALUE","ERR_OUT_OF_RANGE","ERR_UNKNOWN_SIGNAL","normalizeEncoding","isAsyncFunction","isArrayBufferView","signals","isInt32","isUint32","octalReg","modeDesc","parseFileMode","def","validateUint32","validateInteger","validateInt32","positive","validateString","validateNumber","validateOneOf","validateBoolean","getOwnPropertyValueOrDefault","validateObject","allowArray","allowFunction","validateDictionary","validateArray","validateStringArray","validateBooleanArray","validateSignalName","signal","validateBuffer","buffer","validateEncoding","data","encoding","normalizedEncoding","length","validatePort","port","allowZero","validateAbortSignal","validateFunction","validatePlainFunction","validateUndefined","validateUnion","linkValueRegExp","validateLinkHeaderFormat","validateLinkHeaderValue","hints","hintsLength","link","validators","Symbol","SymbolAsyncIterator","SymbolIterator","SymbolFor","kDestroyed","kIsErrored","kIsReadable","kIsDisturbed","kIsClosedPromise","kControllerErrorFunction","isReadableNodeStream","strict","_obj$_readableState","isWritableNodeStream","_obj$_writableState","isDuplexNodeStream","isNodeStream","isReadableStream","isWritableStream","isTransformStream","isWebStream","isIterable","isAsync","isDestroyed","stream","wState","rState","isWritableEnded","isWritableFinished","isReadableEnded","isReadableFinished","isReadable","isWritable","isFinished","opts","isWritableErrored","_stream$_writableStat","_stream$_writableStat2","isReadableErrored","_stream$_readableStat","_stream$_readableStat2","isClosed","isOutgoingMessage","isServerResponse","isServerRequest","_stream$req","willEmitClose","isDisturbed","_stream$kIsDisturbed","isErrored","_ref2","_ref3","_ref4","_ref5","_stream$kIsErrored","_stream$_readableStat3","_stream$_writableStat3","_stream$_readableStat4","_stream$_writableStat4","utils","ERR_STREAM_PREMATURE_CLOSE","kEmptyObject","once","Promise","PromisePrototypeThen","_willEmitClose","isRequest","nop","eos","_options$readable","_options$writable","eosWeb","readable","writable","onlegacyfinish","onfinish","writableFinished","readableFinished","onend","onerror","closed","onclose","errored","onclosed","onrequest","cleanup","abort","endCallback","originalCallback","isAborted","resolverFn","finished","_opts","autoCleanup","endOfStreamModule","ERR_MULTIPLE_CALLBACK","kDestroy","kConstruct","checkError","destroy","cb","_destroy","er","onDestroy","emitErrorCloseNT","emitCloseNT","emitErrorNT","undestroy","errorOrDestroy","sync","construct","constructNT","onConstruct","emitConstructNT","emitCloseLegacy","emitErrorCloseLegacy","destroyer","destroy_1","ObjectSetPrototypeOf","EE","Stream","dest","ondata","chunk","ondrain","didOnEnd","prependListener","event","legacy","onAbort","StringPrototypeSlice","TypedArrayPrototypeSet","Uint8Array","Buffer","buffer_list","ret","hasStrings","slice","retLen","MathFloor","highWaterMarkFrom","isDuplex","duplexKey","getDefaultHighWaterMark","objectMode","getHighWaterMark","hwm","ERR_STREAM_NULL_VALUES","from","Readable","iterator","reading","next","error","hadError","hasThrow","from_1","ArrayPrototypeIndexOf","ObjectDefineProperties","ObjectKeys","SafeSet","ReadableState","addAbortSignal","debug","BufferList","destroyImpl","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","kPaused","StringDecoder","maybeReadMore","readableAddChunk","addToFront","onEofChunk","addChunk","emitReadable","enc","MAX_HWM","computeNewHighWaterMark","howMuchToRead","nOrig","endReadable","doRead","fromList","emitReadable_","flow","maybeReadMore_","pipeOpts","endFn","unpipe","onunpipe","unpipeInfo","cleanedUp","pause","pipeOnDrain","dests","ev","nReadingNextTick","updateReadableListening","resume","resume_","paused","streamKeys","streamToAsyncIterator","iter","createAsyncIterator","endReadableNT","endWritableNT","webStreamsAdapters","lazyWebStreams","readableStream","streamReadable","_src$readableObjectMo","ArrayPrototypeSlice","Error","FunctionPrototypeSymbolHasInstance","ObjectDefineProperty","StringPrototypeToLowerCase","SymbolHasInstance","Writable","WritableState","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_ALREADY_FINISHED","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","kOnFinished","noDecode","onwrite","resetBuffer","clearBuffer","finishMaybe","object","_write","writeOrBuffer","doWrite","writev","onwriteError","errorBuffer","afterWriteTick","afterWrite","_state$errored","onfinishCallbacks","_state$errored2","buffered","bufferedIndex","bufferedLength","chunks","needFinish","callFinal","onFinish","finish","prefinish","writableStream","streamWritable","ERR_INVALID_RETURN_VALUE","Duplex","createDeferredPromise","AbortController","FunctionPrototypeCall","Duplexify","duplexify","body","_duplexify","write","final","fromAsyncGen","then","promise","ac","_promise","_resolve","pair","onreadable","onfinished","ObjectGetOwnPropertyDescriptor","duplex","method","transform","Transform","kCallback","readableHighWaterMark","passthrough","PassThrough","ERR_MISSING_ARGS","writing","popCallback","streams","makeAsyncIterable","fromReadable","pumpToNode","onresolve","wait","pumpToWeb","writer","pipeline","pipelineImpl","outerSignal","lastStreamCleanup","finishImpl","destroys","finishCount","isLastStream","onError","_ret","_ret2","pt","toRead","pipe","dst","ended","pipeline_1","orgStreams","head","tail","reader","kWeakHandler","staticCompose","addAbortSignalNoValidate","ArrayPrototypePush","Number","PromiseReject","kEmpty","kEof","composedStream","concurrency","_options$signal","_options$signal2","signalOpt","onDone","pump","_val","_options$signal3","asIndexedPairs","_options$signal4","some","unused","every","find","forEach","forEachFn","filterFn","ReduceAwareErrMissingArgs","reduce","reducer","initialValue","_options$signal5","hasInitialValue","gotAnyItemFromStream","_options$signal6","toArray","_options$signal7","flatMap","toIntegerOrInfinity","number","drop","_options$signal8","_options$signal9","take","_options$signal10","_options$signal11","operators","ArrayPrototypePop","pl","lastArg","promises","ReflectApply","customPromisify","streamReturningOperators","promiseReturningOperators","ERR_ILLEGAL_CONSTRUCTOR","streamModule","op","CustomStream","originalDestroy","bufferStream_1","readable_stream_1","bufferStream","array","getStream_1","buffer_stream_1","getStream","inputStream","maxBuffer","clean","__viteBrowserExternal","NodeIO","fs","browser_or_node_1","get_stream_1","ts_necessities_1","index_1","isURL","cross_fetch_1","parseHeaders","httpHeaders","httpHeader","split","readableFromFileOrURL","fileOrURL","response","filePath","readFromFileOrURL","FetchingJSONSchemaStore_1","NodeIO_1","FetchingJSONSchemaStore$1","_httpHeaders","FetchingJSONSchemaStore","PostmanCollection","isValidJSON","sourcesFromPostmanCollection","collectionJSON","collectionJSONAddress","processCollection","sourceDescription","url","joinedDescription","Run_1","JSONSchemaInput_2","PostmanCollection_1","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","require$$34","require$$35","require$$36","require$$37","require$$38","require$$39","require$$40","require$$41","require$$42","require$$43","require$$44","require$$45","require$$46","require$$47","require$$48"],"mappings":"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A,eACA,2BACA,uBACA,oBACA,eACA,uBACA,sBACA,mBACA,WACA,iBACA,YACA,gBACA,OACA,eACA,kBACA,kBACA,WACA,4BACA,cACA,aACA,qBACA,YACA,aACA,uBACA,aACA,qBACA,sBACA,wBACA,iBACA,sBACA,OACA,oBACA,oBACA,MACA,aACA,sBACA,mBACA,QACA,qBACA,UACA,QACA,YACA,cACA,OACA,2BACA,eACA,aACA,wBACA,UACA,cACA,OACA,aACA,SACA,gBACA,iBACA,wBACA,sBACA,MACA,gBACA,gBACA,iBACA,sBACA,kBACA,eACA,YACA,YACA,wBACA,kBACA,kBACA,WACA,cACA,WACA,QACA,mBACA,gBACA,gCACA,MACA,UACA,sBACA,8BACA,aACA,eACA,iBACA,gBACA,wBACA,iBACA,iBACA,cACA,yBACA,kBACA,eACA,YACA,oBACA,kBACA,qBACA,UACA,UACA,oBACA,UACA,OACA,UACA,mBACA,SACA,kBACA,cACA,cACA,qBACA,mBACA,mBACA,cACA,UACA,OACA,aACA,iBACA,sBACA,iBACA,UACA,sBACA,sBACA,SACA,mBACA,uBACA,YACA,YACA,0BACA,eACA,eACA,QACA,qBACA,UACA,kBACA,eACA,SACA,OACA,WACA,uBACA,aACA,UACA,oBACA,oBACA,qBACA,iBACA,oBACA,UACA,YACA,SACA,kBACA,mBACA,gBACA,aACA,UACA,WACA,YACA,SACA,SACA,YACA,kBACA,iBACA,UACA,WACA,aACA,oBACA,6BACA,uBACA,iBACA,aACA,cACA,UACA,gBACA,yBACA,UACA,kBACA,gBACA,WACA,QACA,SACA,qBACA,sBACA,kBACA,kBACA,+BACA,8BACA,8BACA,uBACA,wBACA,yBACA,UACA,qBACA,WACA,cACA,WACA,WACA,WACA,aACA,wBACA,wBACA,SACA,kBACA,cACA,mBACA,qBACA,UACA,UACA,eACA,MACA,WACA,gBACA,cACA,kBACA,aACA,YACA,SACA,cACA,gBACA,UACA,uBACA,6BACA,WACA,eACA,WACA,aACA,OACA,QACA,sBACA,wBACA,SACA,kBACA,gBACA,oBACA,qBACA,SACA,iBACA,oBACA,SACA,wBACA,kBACA,oBACA,gBACA,QACA,YACA,WACA,cACA,YACA,qBACA,WACA,YACA,mBACA,qBACA,wBACA,uBACA,cACA,cACA,WACA,WACA,4BACA,OACA,iBACA,cACA,4BACA,oBACA,YACA,gBACA,UACA,QACA,SACA,sBACA,QACA,cACA,kBACA,uBACA,wBACA,eACA,YACA,SACA,YACA,YACA,wBACA,qBACA,yBACA,qBACA,iBACA,aACA,aACH,EAED,OAAQ,CACJ,WACA,QACA,mBACA,MACA,WACA,YACA,SACA,SACA,MACA,iBACA,SACA,OACA,mBACA,MACA,aACA,UACA,YACA,QACA,UACA,WACA,cACA,YACA,UACA,WACA,aACA,iBACA,QACA,QACA,aACA,SACA,UACA,YACA,OACA,aACA,OACA,UACA,QACA,UACA,WACA,MACA,SACA,MACA,MACA,YACA,QACA,iBACA,SACA,cACA,UACA,QACA,UACA,OACA,WACA,QACA,QACA,SACA,WACA,eACA,UACA,SACA,UACA,UACA,OACA,QACA,UACA,QACA,OACA,UACA,MACA,YACA,SACA,SACA,UACA,cACA,aACA,WACA,kBACA,cACA,WACA,YACA,YACA,MACA,OACA,WACA,oBACA,QACA,UACA,UACA,QACA,OACH,EACD,UAAW,CACP,WACA,WACA,WACA,kBACA,mBACA,SACA,WACA,MACA,WACA,WACA,YACA,SACA,SACA,YACA,SACA,MACA,MACA,YACA,SACA,OACA,QACA,mBACA,sBACA,WACA,MACA,YACA,aACA,WACA,aACA,UACA,YACA,UACA,UACA,WACA,WACA,cACA,UACA,WACA,QACA,iBACA,kBACA,QACA,QACA,WACA,YACA,eACA,aACA,SACA,UACA,SACA,QACA,YACA,UACA,OACA,SACA,cACA,OACA,aACA,QACA,WACA,OACA,SACA,OACA,SACA,UACA,QACA,UACA,WACA,MACA,MACA,SACA,QACA,OACA,MACA,cACA,MACA,OACA,YACA,eACA,UACA,QACA,iBACA,SACA,iBACA,UACA,cACA,SACA,YACA,SACA,UACA,aACA,UACA,UACA,aACA,OACA,WACA,eACA,eACA,WACA,QACA,QACA,SACA,SACA,SACA,aACA,WACA,eACA,UACA,UACA,UACA,UACA,OACA,QACA,UACA,QACA,OACA,OACA,UACA,MACA,WACA,WACA,cACA,YACA,qBACA,SACA,QACA,SACA,QACA,aACA,WACA,aACA,kBACA,WACA,WACA,YACA,WACA,kBACA,YACA,SACA,OACA,UACH,EACD,OAAQ,CACJ,SACA,WACA,OACA,MACA,WACA,WACA,YACA,mBACA,UACA,WACA,SACA,SACA,YACA,UACA,SACA,WACA,MACA,iBACA,MACA,YACA,SACA,UACA,YACA,mBACA,QACA,YACA,SACA,WACA,WACA,aACA,YACA,UACA,YACA,WACA,YACA,cACA,YACA,YACA,aACA,SACA,QACA,kBACA,QACA,QACA,WACA,YACA,SACA,UACA,aACA,SACA,YACA,UACA,YACA,OACA,SACA,SACA,cACA,OACA,QACA,QACA,WACA,SACA,OACA,SACA,QACA,UACA,WACA,QACA,kBACA,OACA,eACA,MACA,cACA,QACA,OACA,YACA,OACA,QACA,UACA,SACA,wBACA,OACA,WACA,eACA,WACA,QACA,SACA,SACA,SACA,aACA,UACA,UACA,QACA,UACA,OACA,QACA,WACA,SACA,SACA,QACA,aACA,OACA,QACA,uBACA,YACA,MACA,WACA,UACA,WACA,SACA,SACA,SACA,SACA,UACA,YACA,gBACA,aACA,aACA,kBACA,WACA,WACA,YACA,WACA,WACA,UACA,QACA,YACA,SACA,QACA,MACA,OACA,WACA,SACA,SACA,YACA,SACA,SACA,oBACA,QACA,UACA,UACA,UACA,OACA,UACA,SACA,eACA,WACA,YACA,SACA,cACA,OACA,OACA,SACA,eACA,WACA,kBACA,sBACA,QACA,OACA,QACA,MACA,aACA,WACA,eACA,aACA,SACA,aACA,WACA,MACA,MACA,SACA,MACA,eACA,cACA,iBACA,YACA,SACA,UACA,iBACA,WACA,QACA,SACA,QACA,cACA,kBACA,YACA,SACA,OACA,SACA,UACA,OACA,SACA,YACA,YACH,EAED,KAAM,CACF,SACA,UACA,UACA,MACA,MACA,UACA,OACA,QACA,SACA,MACA,OACA,MACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,MACA,SACA,OACA,SACA,QACA,WACA,SACA,MACA,MACH,EAED,IAAK,CACD,iBACA,QACA,QACA,OACA,aACA,WACA,cACA,uBACA,OACA,OACA,SACA,QACA,UACA,OACA,SACA,QACA,UACA,QACA,cACA,cACA,WACA,YACA,SACA,UACA,SACA,UACA,OACA,OACA,UACA,gBACA,UACA,SACA,kBACA,UACA,OACA,QACA,SACA,SACA,gBACA,gBACA,YACA,UACA,SACH,EAED,IAAK,CACD,WACA,mBACA,mBACA,qBACA,iBACA,aACA,WACA,gBACA,iBACA,kBACA,aACA,aACA,cACA,YACA,sBACA,qBACA,aACA,iBACA,oBACA,sBACA,eACA,aACA,QACA,SACA,iBACA,UACA,UACA,eACA,6BACA,iBACA,oBACA,aACA,eACA,gBACA,yBACA,OACA,iBACA,sBACA,qBACA,gBACA,gBACA,0BACA,cACA,oBACA,iBACA,2BACA,cACA,QACA,mBACA,aACA,iBACA,oBACA,YACA,mBACA,oBACA,uBACA,aACA,2BACA,eACA,YACA,2BACA,6BACA,kBACA,gBACA,uBACA,2BACA,OACH,CACL,EAEMC,GAAS,CACX,QACA,OACA,SACA,aACA,eACA,UACA,cACA,SACA,YACA,QACA,gBACA,SACA,cACA,aACA,YACA,UACA,QACA,OACA,UACA,WACA,SACA,cACA,UACA,WACA,UACA,SACA,SACA,SACA,cACA,OACA,YACA,YACA,YACA,aACA,UACA,SACA,QACA,YACA,OACA,WACA,QACA,aACA,QACA,OACA,YACA,aACA,SACA,cACA,OACA,iBACA,YACA,OACA,UACA,WACA,YACA,eACA,YACA,QACA,SACA,cACA,YACA,YACA,UACA,WACA,eACA,UACA,YACA,cACA,QACA,WACA,aACA,QACA,SACA,SACA,UACA,QACA,WACA,OACA,mBACA,UACA,cACA,UACA,UACA,YACA,YACA,SACA,UACA,aACA,YACA,QACA,SACA,UACA,eACA,OACA,QACA,aACA,QACA,YACA,YACA,WACA,QACA,OACA,UACA,gBACA,gBACA,SACA,kBACA,WACA,SACA,SACA,cACA,YACA,UACA,QACA,SACA,aACA,QACA,UACA,SACA,iBACA,cACA,cACA,QACA,OACA,sBACA,aACA,YACA,YACA,MACA,cACA,UACA,UACA,gBACA,SACA,SACA,OACA,UACA,UACA,YACA,OACA,gBACA,QACA,WACA,QACA,UACA,WACA,WACA,aACA,YACA,YACA,SACA,YACA,SACA,SACA,2BACA,aACA,QACA,YACA,UACA,eACA,SACA,aACA,QACA,WACA,SACA,UACA,YACA,WACA,UACA,SACA,WACA,YACA,SACA,YACA,UACA,YACA,UACA,YACA,OACA,OACA,aACA,SACA,WACA,UACA,UACA,WACA,SACA,UACA,YACA,UACA,OACA,UACA,aACA,UACA,SACA,aACA,UACA,QACA,UACA,SACA,SACA,UACA,cACA,aACA,WACA,oBACA,aACA,SACA,WACA,QACA,SACA,OACA,YACA,WACA,oBACA,SACA,SACA,UACA,WACA,UACA,OACA,aACA,WACA,YACA,QACA,YACA,QACA,YACA,aACA,YACA,aACA,SACA,WACA,WACA,QACA,cACA,OACA,SACA,aACA,SACA,UACA,cACA,UACA,WACA,UACA,aACA,QACA,WACA,UACA,SACA,YACA,gBACA,SACA,QACA,SACA,OACA,WACA,OACA,WACA,cACA,WACA,SACA,eACA,cACA,SACA,SACA,mBACA,WACA,UACA,SACA,YACA,gBACA,SACA,UACA,YACA,cACA,SACA,OACA,SACA,cACA,WACA,WACA,QACA,SACA,SACA,WACA,aACA,WACA,QACA,YACA,cACA,aACA,UACA,WACA,WACA,QACA,wBACA,UACA,YACA,UACA,QACA,SACA,UACA,UACA,aACA,OACA,aACA,YACA,WACA,WACA,SACA,WACA,YACA,SACA,OACA,UACA,QACA,WACA,QACA,SACA,QACA,cACA,QACA,SACA,SACA,gBACA,YACA,SACA,SACA,UACA,YACA,cACA,UACA,YACA,UACA,UACA,SACA,YACA,UACA,UACA,yBACA,UACA,kBACA,QACA,WACA,mBACA,QACA,YACA,SACA,UACA,UACA,OACA,aACA,WACA,SACA,aACA,OACA,eACA,UACA,aACA,WACA,WACA,WACA,WACA,UACA,aACA,WACA,aACA,QACA,YACA,YACA,SACA,WACA,QACA,WACA,OACA,aACA,WACA,UACA,WACA,SACA,SACA,UACA,SACA,iBACA,cACA,gBACA,eACA,SACA,aACA,OACA,SACA,UACA,QACA,UACA,UACA,WACA,SACA,eACA,UACA,cACA,eACA,YACA,eACA,SACA,QACA,UACA,QACA,OACA,gBACA,WACA,YACA,WACA,QACA,SACA,UACA,aACA,cACA,YACA,QACA,SACA,aACA,SACA,YACA,QACA,aACA,WACA,oBACA,UACA,QACA,aACA,WACA,SACA,aACA,WACA,UACA,UACA,SACA,eACA,UACA,SACA,UACA,WACA,UACA,UACA,QACA,gBACA,UACA,gBACA,YACA,UACA,QACA,WACA,UACA,UACA,UACA,QACA,cACA,YACA,QACA,iBACA,UACA,QACA,SACA,UACA,SACA,SACA,QACA,SACA,SACA,SACA,WACA,aACA,WACA,OACA,QACA,UACA,QACA,YACA,YACA,YACA,QACA,QACA,UACA,UACA,YACA,WACA,aACA,aACA,QACA,UACA,UACA,SACA,QACA,WACA,OACA,QACA,UACA,WACA,UACA,gBACA,SACA,SACA,WACA,OACA,SACA,YACA,UACA,YACA,SACA,QACA,UACA,UACA,cACA,OACA,QACA,WACA,YACA,cACA,OACA,MACA,QACA,OACA,OACA,UACA,QACA,gBACA,YACA,YACA,QACA,WACA,aACA,YACA,OACA,WACA,YACA,cACA,QACA,WACA,WACA,YACA,SACA,YACA,UACA,YACA,aACA,aACA,UACA,QACA,aACA,WACA,UACA,UACA,UACA,OACA,OACA,UACA,aACA,SACA,WACA,WACA,YACA,WACA,UACA,YACA,UACA,UACA,UACA,aACA,UACA,WACA,SACA,WACA,WACA,UACA,QACA,QACA,WACA,WACA,WACA,UACA,YACA,gBACA,WACA,YACA,WACA,YACA,SACA,OACA,aACA,YACA,aACA,WACA,SACA,WACA,aACA,SACA,UACA,QACA,QACA,SACA,eACA,SACA,WACA,SACA,QACA,cACA,OACA,UACA,QACA,YACA,QACA,cACA,cACA,WACA,aACA,YACA,YACA,yBACA,UACA,6BACA,QACA,iBACA,aACA,YACA,YACA,UACA,UACA,OACA,WACA,QACA,SACA,UACA,WACA,SACA,SACA,SACA,OACA,SACA,WACA,cACA,QACA,QACA,YACA,QACA,WACA,UACA,WACA,OACA,QACA,YACA,SACA,UACA,SACA,UACA,WACA,SACA,WACA,SACA,YACA,SACA,WACA,UACA,WACA,QACA,SACA,SACA,YACA,YACA,WACA,SACA,iBACA,UACA,YACA,qBACA,WACA,aACA,YACA,UACA,kBACA,iBACA,SACA,gBACA,QACA,WACA,eACA,SACA,QACA,SACA,OACA,QACA,SACA,YACA,UACA,kBACA,cACA,YACA,SACA,mBACA,aACA,YACA,OACA,cACA,WACA,SACA,SACA,aACA,iBACA,OACA,gBACA,WACA,YACA,mBACA,aACA,aACA,WACA,YACA,gBACA,cACA,aACA,YACA,aACA,WACA,aACA,UACA,WACA,SACA,WACA,MACA,YACA,UACA,cACA,WACA,WACA,SACA,SACA,SACA,SACA,SACA,oBACA,QACA,YACA,iBACA,QACA,QACA,cACA,iBACA,iBACA,SACA,SACA,YACA,cACA,WACA,UACA,eACA,SACA,SACA,UACA,SACA,YACA,YACA,UACA,YACA,aACA,mBACA,YACA,UACA,YACA,SACA,aACA,aACA,cACA,UACA,aACA,YACA,eACA,OACA,SACA,aACA,WACA,aACA,iBACA,eACA,mBACA,cACA,gBACA,YACA,UACA,UACA,YACA,YACA,eACA,YACA,UACA,WACA,WACA,QACA,SACA,WACA,aACA,QACA,WACA,aACA,UACA,SACA,cACA,QACA,cACA,cACA,SACA,UACA,aACA,WACA,iBACA,SACA,SACA,gBACA,YACA,aACA,WACA,OACA,SACA,QACA,QACA,SACA,aACA,UACA,UACA,UACA,4BACA,iBACA,eACA,aACA,SACA,aACA,QACA,QACA,UACA,aACA,WACA,WACA,OACA,aACA,aACA,gBACA,aACA,kBACA,QACA,aACA,cACA,UACA,UACA,mBACA,sBACA,OACA,gBACA,OACA,SACA,OACA,SACA,OACA,SACA,UACA,SACA,QACA,mBACA,eACA,YACA,eACA,YACA,UACA,cACA,eACA,YACA,YACA,aACA,WACA,UACA,UACA,WACA,SACA,YACA,QACA,UACA,iBACA,SACA,aACA,UACA,QACA,SACA,YACA,SACA,WACA,WACA,YACA,SACA,YACA,SACA,QACA,YACA,UACA,sBACA,UACA,cACA,WACA,WACA,WACA,WACA,aACA,QACA,gBACA,SACA,UACA,QACA,gBACA,UACA,WACA,cACA,oBACA,iBACA,WACA,aACA,SACA,SACA,WACA,UACA,WACA,OACA,WACA,cACA,SACA,YACA,aACA,YACA,UACA,eACA,SACA,aACA,UACA,SACA,aACA,SACA,QACA,OACA,SACA,SACA,YACA,QACA,WACA,WACA,WACA,QACA,OACA,WACA,YACA,SACA,SACA,SACA,WACA,WACA,YACA,WACA,SACA,cACA,SACA,UACA,SACA,UACA,YACA,0BACA,cACA,SACA,OACA,QACA,uBACA,aACA,eACA,SACA,QACA,QACA,aACA,QACA,iBACA,aACA,WACA,UACA,eACA,UACA,eACA,wBACA,cACA,aACA,cACA,iBACA,SACA,eACA,kBACA,aACA,SACA,QACA,SACA,WACA,QACA,WACA,iBACA,sBACA,cACA,YACA,cACA,YACA,WACA,QACA,YACA,WACA,WACA,YACA,kBACA,WACA,WACA,SACA,eACA,UACA,UACA,UACA,wBACA,YACA,UACA,WACA,aACA,gBACA,aACA,YACA,WACA,eACA,SACA,mBACA,SACA,YACA,UACA,WACA,UACA,QACA,WACA,WACA,SACA,UACA,YACA,UACA,eACA,aACA,WACA,OACA,SACA,YACA,iBACA,aACA,eACA,aACA,WACA,WACA,aACA,WACA,8BACA,WACA,YACA,gBACA,UACA,eACA,SACA,UACA,WACA,WACA,0BACA,SACA,aACA,eACA,uBACA,SACA,SACA,eACA,WACA,eACA,YACA,qBACA,UACA,eACA,eACA,UACA,eACA,YACA,UACA,kBACA,cACA,sBACA,YACA,UACA,WACJ,eCvlEA,IAAIpO,EAAmBC,IAAQA,GAAK,kBAAqB,OAAO,OAAU,SAASC,EAAGC,EAAGC,EAAGC,EAAI,CACxFA,IAAO,SAAWA,EAAKD,GAC3B,IAAIE,EAAO,OAAO,yBAAyBH,EAAGC,CAAC,GAC3C,CAACE,IAAS,QAASA,EAAO,CAACH,EAAE,WAAaG,EAAK,UAAYA,EAAK,iBAClEA,EAAO,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,OAAOH,EAAEC,CAAC,CAAE,IAE3D,OAAO,eAAeF,EAAGG,EAAIC,CAAI,CACpC,EAAK,SAASJ,EAAGC,EAAGC,EAAGC,EAAI,CACpBA,IAAO,SAAWA,EAAKD,GAC3BF,EAAEG,CAAE,EAAIF,EAAEC,CAAC,CACd,GACGG,EAAsBN,IAAQA,GAAK,qBAAwB,OAAO,OAAU,SAASC,EAAGM,EAAG,CAC3F,OAAO,eAAeN,EAAG,UAAW,CAAE,WAAY,GAAM,MAAOM,CAAC,CAAE,CACtE,EAAK,SAASN,EAAGM,EAAG,CAChBN,EAAE,QAAaM,CACnB,GACIC,EAAgBR,IAAQA,GAAK,cAAiB,SAAUS,EAAK,CAC7D,GAAIA,GAAOA,EAAI,WAAY,OAAOA,EAClC,IAAIC,EAA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,mBAAoB,+BAAgC,CACxGmxC,EACAF,EACAD,EACAE,EACAE,EACAC,CACR,CAAK,CACL,EAEA,MAAMC,UAA4BtJ,EAAiB,cAAe,CAO9D,YAAYG,EAAc,YAAan/B,EAAQ,CAAC,QAAS,OAAO,EAAGyU,EAAY,IAAK,CAChF,MAAM0qB,EAAan/B,EAAOyU,CAAS,CACtC,CAKD,YAAa,CACT,MAAO,CACH1d,EAAQ,aAAa,gBACrBA,EAAQ,aAAa,gBACrBA,EAAQ,aAAa,gBACrBA,EAAQ,aAAa,WACrBA,EAAQ,aAAa,cACrBA,EAAQ,aAAa,gBACrBA,EAAQ,aAAa,kBACrBA,EAAQ,aAAa,qBACjC,CACK,CAKD,IAAI,mCAAoC,CACpC,MAAO,EACV,CAKD,IAAI,iCAAkC,CAClC,MAAO,EACV,CAOD,aAAagrB,EAAexrB,EAAqB,CAC7C,OAAO,IAAIgyC,EAAc,KAAMxmB,KAAmB/qB,EAAkB,iBAAiBD,EAAQ,aAAcR,CAAmB,CAAC,CAClI,CACJ,CACDQ,EAAA,oBAA8BuxC,EAE9B,MAAM5pC,KAAmBzH,EAAU,oBAAoBiB,MAAUjB,EAAU,SAASiB,CAAE,MAASjB,EAAU,6BAA6BiB,CAAE,CAAC,EAEnI+kB,EAAW,CAEb,UACA,UACA,MACA,SACA,MACA,gBACA,gBACA,kBACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,OACA,WACA,WACA,QACA,QACA,UACA,QACA,YACA,aACA,WACA,WACA,YACA,WACA,WACA,UACA,SACA,KACA,SACA,eACA,OACA,OACA,WACA,SACA,SACA,QACA,QACA,MACA,SACA,OACA,KACA,SACA,SACA,MACA,OACA,SACA,UACA,YACA,MACA,WACA,MACA,SACA,UACA,WACA,KACA,QACA,UACA,YACA,SACA,WACA,mBACA,WACA,WACA,SACA,QACA,SACA,SACA,SACA,gBACA,cACA,SACA,SACA,eACA,WACA,OACA,eACA,QACA,OACA,MACA,UACA,SACA,WACA,SACA,QACA,WACA,QACA,UACA,OACA,WACA,UACA,QACA,MACA,SACA,WACA,QACA,mBACA,2BACA,OA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AAaC,IAAY,QAEtE,MAAO,CAAE,OAAAF,EAAQ,aAAAC,EAAc,QAAAC,EAClC,CACD,MAAM7rC,KAAmBzH,EAAU,oBAAoBiB,MAAUjB,EAAU,SAASiB,CAAE,MAASjB,EAAU,6BAA6BiB,CAAE,CAAC,EACnI+kB,EAAW,CACb,UACA,UACA,MACA,SACA,MACA,gBACA,gBACA,kBACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,OACA,WACA,WACA,QACA,QACA,UACA,QACA,YACA,aACA,WACA,WACA,YACA,WACA,WACA,UACA,SACA,KACA,SACA,eACA,OACA,OACA,WACA,SACA,SACA,QACA,QACA,MACA,SACA,OACA,KACA,SACA,SACA,MACA,OACA,SACA,UACA,YACA,MACA,WACA,MACA,SACA,UACA,WACA,KACA,QACA,UACA,YACA,SACA,WACA,mBACA,WACA,SACA,QACA,SACA,SACA,SACA,gBACA,cACA,SACA,SACA,eACA,WACA,OACA,eACA,QACA,OACA,MACA,UACA,SACA,WACA,QACA,WACA,QACA,UACA,OACA,WACA,UACA,QACA,MACA,SACA,WACA,QACA,mBACA,2BACA,MACJ,EAEMutB,EAAuB,kBAEvBC,EAA8B,mBAMpC,IAAIhC,GACH,SAAUA,EAAa,CACpBA,EAAYA,EAAY,eAAoB,CAAC,EAAI,iBACjDA,EAAYA,EAAY,QAAa,CAAC,EAAI,YAC3CA,EAAc1xC,EAAQ,cAAgBA,EAAsB,YAAA,CAAE,EAAC,EAClE,IAAIyxC,GACH,SAAUA,EAAa,CACpBA,EAAYA,EAAY,uBAA4B,CAAC,EAAI,yBACzDA,EAAYA,EAAY,+BAAoC,CAAC,EAAI,iCACjEA,EAAYA,EAAY,qBAA0B,CAAC,EAAI,uBACvDA,EAAYA,EAAY,sBAA2B,CAAC,EAAI,wBACxDA,EAAYA,EAAY,uBAA4B,CAAC,EAAI,yBACzDA,EAAYA,EAAY,sBAA2B,CAAC,EAAI,wBACxDA,EAAYA,EAAY,wBAA6B,CAAC,EAAI,0BAC1DA,EAAYA,EAAY,gBAAqB,CAAC,EAAI,oBACnDA,EAAczxC,EAAQ,cAAgBA,EAAsB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,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACzG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACzG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACzG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACzG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACzG,MAAO,MAAO,MAAO,MAAO,MAAO,KACvC,EACME,GAA2B,CAC7B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC9G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5G,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACzG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACzG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACzG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,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O,CACHjoC,EAAQ,aAAa,UACrBA,EAAQ,aAAa,WACrBA,EAAQ,aAAa,MACrBA,EAAQ,aAAa,wBACrBA,EAAQ,aAAa,mBACrBA,EAAQ,aAAa,YACrBA,EAAQ,aAAa,UACrBA,EAAQ,aAAa,MACrBA,EAAQ,aAAa,gBACrBA,EAAQ,aAAa,SACrBA,EAAQ,aAAa,aACrBA,EAAQ,aAAa,YACrBA,EAAQ,aAAa,cACrBA,EAAQ,aAAa,SACrBA,EAAQ,aAAa,cACrBA,EAAQ,aAAa,gBACrBA,EAAQ,aAAa,iBACjC,CACK,CACD,IAAI,mBAAoB,CACpB,MAAM2O,EAAU,IAAI,IACpB,OAAAA,EAAQ,IAAI,YAAa,WAAW,EAC7BA,CACV,CACD,IAAI,iCAAkC,CAClC,MAAO,EACV,CACD,IAAI,mCAAoC,CACpC,MAAO,EACV,CACD,aAAaqc,EAAexrB,EAAqB,CAC7C,OAAO,IAAIojD,EAAc,KAAM53B,KAAmB/qB,EAAkB,iBAAiBD,EAAQ,aAAcR,CAAmB,CAAC,CAClI,CACD,IAAI,oBAAqB,CACrB,OAAO,IAAIkjD,CACd,CACJ,CACD1iD,EAAA,oBAA8B2iD,EAC9B,MAAMz8B,EAAW,CACb,QACA,iBACA,QACA,SACA,OACA,YACA,cACA,OACA,SACA,OACA,QACA,WACA,MACA,OACA,WACA,UACA,WACA,SACA,SACA,SACA,YACA,YACA,MACA,QACA,OACA,WACA,UACA,QACA,KACA,OACA,cACA,MACA,QACA,KACA,KACA,SACA,SACA,SACA,QACA,QACA,KACA,MACA,QACA,QACA,KACA,MACA,WACA,QACA,OACA,OACA,QACA,SACA,OACA,MACA,IACA,gBACA,cACA,UACA,SACA,QACA,MACA,QACA,WACA,OACA,OACA,WACA,cACA,WACA,WACA,UACA,aACA,SACA,WACA,WACA,QACA,MACA,OACA,UACA,OACA,UACA,SACA,MACA,SACA,OACA,OACA,OACA,MACA,cACA,aACA,oBACA,YACA,eACA,cACA,eACA,kBACA,cACA,gBACA,aACA,UACJ,EACA,SAAS8jB,EAAgBxnC,EAAW,CAChC,SAAWtC,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SACA,OACA,QACA,MACA,SACA,OACA,KACA,SACA,UACA,OACA,UACA,QACA,SACA,QACA,YACA,MACA,SACA,QACA,OACA,cACA,SACA,SACA,SACA,SACA,YACA,YACA,SACA,WACA,UACA,OACA,QACA,cACA,YACA,UACA,SACA,SACA,SACA,QACA,QACA,aACA,aACA,OACA,MACA,SACA,QACA,OACA,UACA,MACA,OACA,MACA,OACA,WACA,QACA,KACA,MACA,MACA,QACA,QACA,OACA,QACA,MACA,KACA,OACA,QACA,MACA,SACA,OACA,SACA,QACA,MACA,MACA,KACA,KACA,UACA,kBACA,QACA,MACA,QACA,SACA,OACA,MACA,OACA,KACA,MACA,YACA,UACA,YACA,UACA,SACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,OACA,SACA,gBACA,QACA,SACA,QACA,OACA,QACA,OACA,OACJ,EACA,SAASokC,GAAiC9nD,EAAW,CACjD,SAAStC,GAAU,SAASsC,CAAS,KAG1BtC,GAAU,6BAA6BsC,CAAS,EAFhD,EAGf,CACA,SAAS+nD,GAA0B/nD,EAAW,CAC1C,SAAStC,GAAU,SAASsC,CAAS,KAG1BtC,GAAU,sBAAsBsC,CAAS,EAFzC,EAGf,CACA,MAAMmF,MAAmBzH,GAAU,oBAAoBoqD,EAAgC,EACvF,SAAS8B,GAAaxkD,EAAU6iD,EAAa,CACzC,MAAM5kD,KAAY3F,GAAU,gBAAgB0H,CAAQ,EAC9C8iD,EAAYD,EAAcvqD,GAAU,kBAAoBA,GAAU,oBAClEqJ,KAAerJ,GAAU,cAAc2F,EAAO8B,GAAc+iD,EAAWA,EAAWA,EAAWA,EAAWD,EAAc,IAAM,GAAIF,EAAyB,EAC/J,OAAOhhD,IAAa,IAAM,cAAgBA,CAC9C,CACA,MAAMohD,MAA0BhjC,GAAS,gBAAgB,UAAY/f,GAAawkD,GAAaxkD,EAAU,EAAI,CAAC,EACxGgjD,MAA0BjjC,GAAS,gBAAgB,QAAU/f,GAAawkD,GAAaxkD,EAAU,EAAK,CAAC,EAC7G,SAASykD,GAA6B7pD,EAAW,CAC7C,OAAIA,GAAa,MACN,U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A,mBACA,aACA,UACA,oBACA,eACA,OACA,OACA,MACA,MACA,WACA,WACA,gBACA,aACA,aACA,QACA,YACA,aACA,QACA,aACA,OACA,WACA,QACA,mBACA,cACA,KACA,OACA,KACA,UACA,aACA,UACA,YACA,WACA,YACA,iBACA,UACA,YACA,OACA,SACA,SACA,QACA,YACA,WACA,gBACA,gBACA,sBACA,UACA,SACA,cACA,OACA,UACA,QACA,SACA,QACA,aACA,WACA,SACA,cACA,SACA,eACA,cACA,gBACA,MACA,SACA,kBACA,aACA,gBACA,gBACA,SACA,SACA,SACA,cACA,kBACA,aACA,mBACA,SACA,cACA,cACA,OACA,aACA,YACA,YACA,gBACA,qBACA,YACA,mBACA,UACA,mBACJ,EACMC,GAAS,CACX,aACA,UACA,SACA,aACA,WACA,IACA,KACA,KACA,IACA,KACA,MACA,KACA,MACA,KACA,IACA,KACA,QACA,YACA,UACA,WACA,YACA,UACA,eACA,SACA,mBACA,QACA,QACA,aACA,aACA,0BACA,qBACA,qBACA,kBACA,QACA,iBACA,YACA,gBACA,YACA,YACA,0BACA,qBACA,UACA,MACA,WACA,OACA,SACA,OACA,OACA,OACA,QACA,SACA,OACA,OACA,SACA,SACA,UACA,OACA,mBACA,OACA,UACA,WACA,mBACA,UACA,gBACA,gBACA,kBACA,mBACA,eACA,6BACA,wBACA,wBACA,qBACA,QACA,YACA,SACA,WACA,SACA,OACA,kBACA,OACA,SACA,kBACA,UACA,cACA,cACA,OACA,MACA,OACA,YACA,OACA,IACA,UACA,QACA,SACA,uBACA,mBACA,2BACA,0BACA,kBACA,OACA,6BACA,4BACA,oBACA,sBACA,kBACA,yBACA,0BACA,gBACA,yBACA,iBACA,cACA,OACA,OACA,QACA,OACA,WACA,YACA,wBACA,2BACA,UACA,mBACA,cACA,SACA,OACA,iBACA,kBACA,mBACA,mBACA,oBACA,QACA,QACA,UACA,QACA,UACA,SACA,QACA,WACA,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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108]}
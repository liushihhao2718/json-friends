{"version":3,"file":"wordwrap-CihqTgcv.js","sources":["../../node_modules/wordwrap/index.js"],"sourcesContent":["var wordwrap = module.exports = function (start, stop, params) {\n    if (typeof start === 'object') {\n        params = start;\n        start = params.start;\n        stop = params.stop;\n    }\n    \n    if (typeof stop === 'object') {\n        params = stop;\n        start = start || params.start;\n        stop = undefined;\n    }\n    \n    if (!stop) {\n        stop = start;\n        start = 0;\n    }\n    \n    if (!params) params = {};\n    var mode = params.mode || 'soft';\n    var re = mode === 'hard' ? /\\b/ : /(\\S+\\s+)/;\n    \n    return function (text) {\n        var chunks = text.toString()\n            .split(re)\n            .reduce(function (acc, x) {\n                if (mode === 'hard') {\n                    for (var i = 0; i < x.length; i += stop - start) {\n                        acc.push(x.slice(i, i + stop - start));\n                    }\n                }\n                else acc.push(x)\n                return acc;\n            }, [])\n        ;\n        \n        return chunks.reduce(function (lines, rawChunk) {\n            if (rawChunk === '') return lines;\n            \n            var chunk = rawChunk.replace(/\\t/g, '    ');\n            \n            var i = lines.length - 1;\n            if (lines[i].length + chunk.length > stop) {\n                lines[i] = lines[i].replace(/\\s+$/, '');\n                \n                chunk.split(/\\n/).forEach(function (c) {\n                    lines.push(\n                        new Array(start + 1).join(' ')\n                        + c.replace(/^\\s+/, '')\n                    );\n                });\n            }\n            else if (chunk.match(/\\n/)) {\n                var xs = chunk.split(/\\n/);\n                lines[i] += xs.shift();\n                xs.forEach(function (c) {\n                    lines.push(\n                        new Array(start + 1).join(' ')\n                        + c.replace(/^\\s+/, '')\n                    );\n                });\n            }\n            else {\n                lines[i] += chunk;\n            }\n            \n            return lines;\n        }, [ new Array(start + 1).join(' ') ]).join('\\n');\n    };\n};\n\nwordwrap.soft = wordwrap;\n\nwordwrap.hard = function (start, stop) {\n    return wordwrap(start, stop, { mode : 'hard' });\n};\n"],"names":["wordwrap","wordwrapModule","start","stop","params","mode","re","text","chunks","acc","x","i","lines","rawChunk","chunk","c","xs"],"mappings":"mBAAIA,EAAWC,EAAA,QAAiB,SAAUC,EAAOC,EAAMC,EAAQ,CACvD,OAAOF,GAAU,WACjBE,EAASF,EACTA,EAAQE,EAAO,MACfD,EAAOC,EAAO,MAGd,OAAOD,GAAS,WAChBC,EAASD,EACTD,EAAQA,GAASE,EAAO,MACxBD,EAAO,QAGNA,IACDA,EAAOD,EACPA,EAAQ,GAGPE,IAAQA,EAAS,IACtB,IAAIC,EAAOD,EAAO,MAAQ,OACtBE,EAAKD,IAAS,OAAS,KAAO,WAElC,OAAO,SAAUE,EAAM,CACnB,IAAIC,EAASD,EAAK,SAAU,EACvB,MAAMD,CAAE,EACR,OAAO,SAAUG,EAAKC,EAAG,CACtB,GAAIL,IAAS,OACT,QAASM,EAAI,EAAGA,EAAID,EAAE,OAAQC,GAAKR,EAAOD,EACtCO,EAAI,KAAKC,EAAE,MAAMC,EAAGA,EAAIR,EAAOD,CAAK,CAAC,OAGxCO,EAAI,KAAKC,CAAC,EACf,OAAOD,CACV,EAAE,EAAE,EAGT,OAAOD,EAAO,OAAO,SAAUI,EAAOC,EAAU,CAC5C,GAAIA,IAAa,GAAI,OAAOD,EAE5B,IAAIE,EAAQD,EAAS,QAAQ,MAAO,MAAM,EAEtCF,EAAIC,EAAM,OAAS,EACvB,GAAIA,EAAMD,CAAC,EAAE,OAASG,EAAM,OAASX,EACjCS,EAAMD,CAAC,EAAIC,EAAMD,CAAC,EAAE,QAAQ,OAAQ,EAAE,EAEtCG,EAAM,MAAM,IAAI,EAAE,QAAQ,SAAUC,EAAG,CACnCH,EAAM,KACF,IAAI,MAAMV,EAAQ,CAAC,EAAE,KAAK,GAAG,EAC3Ba,EAAE,QAAQ,OAAQ,EAAE,CAC9C,CACA,CAAiB,UAEID,EAAM,MAAM,IAAI,EAAG,CACxB,IAAIE,EAAKF,EAAM,MAAM,IAAI,EACzBF,EAAMD,CAAC,GAAKK,EAAG,MAAK,EACpBA,EAAG,QAAQ,SAAUD,EAAG,CACpBH,EAAM,KACF,IAAI,MAAMV,EAAQ,CAAC,EAAE,KAAK,GAAG,EAC3Ba,EAAE,QAAQ,OAAQ,EAAE,CAC9C,CACA,CAAiB,CACJ,MAEGH,EAAMD,CAAC,GAAKG,EAGhB,OAAOF,CACV,EAAE,CAAE,IAAI,MAAMV,EAAQ,CAAC,EAAE,KAAK,GAAG,CAAG,CAAA,EAAE,KAAK;AAAA,CAAI,CACxD,CACA,EAEAF,EAAS,KAAOA,EAEhBA,EAAS,KAAO,SAAUE,EAAOC,EAAM,CACnC,OAAOH,EAASE,EAAOC,EAAM,CAAE,KAAO,MAAM,CAAE,CAClD","x_google_ignoreList":[0]}
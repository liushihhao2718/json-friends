{"version":3,"file":"JsonTable-B1Tek8c4.js","sources":["../../src/assets/icon/sidebar-left.svg","../../src/assets/icon/sidebar-right.svg","../../src/components/JsonTable.vue"],"sourcesContent":["export default \"data:image/svg+xml,%3csvg%20fill='none'%20height='24'%20viewBox='0%200%2024%2024'%20width='24'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20stroke='%23292d32'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='1.5'%3e%3cpath%20d='m21.97%2015v-6c0-5-2-7-7-7h-6.00003c-5%200-7%202-7%207v6c0%205%202%207%207%207h6.00003c5%200%207-2%207-7z'/%3e%3cpath%20d='m7.96997%202v20'/%3e%3cpath%20d='m14.97%209.43994-2.56%202.55996%202.56%202.56'/%3e%3c/g%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20fill='none'%20height='24'%20viewBox='0%200%2024%2024'%20width='24'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20stroke='%23292d32'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='1.5'%3e%3cpath%20d='m21.97%2015v-6c0-5-2-7-7-7h-6.00003c-5%200-7%202-7%207v6c0%205%202%207%207%207h6.00003c5%200%207-2%207-7z'/%3e%3cpath%20d='m14.97%202v20'/%3e%3cpath%20d='m7.96997%209.43994%202.56003%202.55996-2.56003%202.56'/%3e%3c/g%3e%3c/svg%3e\"","<template>\n  <n-flex vertical style=\"width: 100%; overflow: scroll; gap: 0\">\n    <n-flex justify=\"space-between\"\n      style=\"padding: 4px 6px; flex-grow: 1;  border-bottom: 1px solid var(--n-border-color);\">\n      <n-flex justify=\"start\" style=\"column-gap: 2px;align-items: center;\">\n        <n-button @click=\"togglePannel(0)\">\n          <n-icon size=\"24\">\n            <img :src=\"sidebar_left_svg\" style=\"width: 100%;\"></img>\n          </n-icon>\n        </n-button>\n        <n-button @click=\"run()\">Run <n-icon size=\"20\" style=\"margin-left: 5px\">\n            <play />\n          </n-icon></n-button>\n        <n-checkbox size=\"small\" label=\"auto\" v-model:checked=\"auto_run\" />\n\n      </n-flex>\n\n      <n-button justify=\"end\" @click=\"togglePannel(2)\">\n        <n-icon size=\"24\">\n          <img :src=\"sidebar_right_svg\" style=\"width: 100%;\"></img>\n        </n-icon>\n      </n-button>\n    </n-flex>\n\n    <splitpanes :horizontal=\"isMobile()\" style=\"height: calc(100% - var(--header-height));\">\n      <pane :size=\"pannels[0].size\">\n        <n-input class=\"code_text\" style=\"height: 100%; overflow: scroll\" v-model:value=\"run_str\" type=\"textarea\"\n          placeholder='JSON Text { \"a\" : \"123\" }' />\n      </pane>\n      <pane :size=\"pannels[1].size\" class=\"json_table\">\n        <component :is=\"() => json_render(input_str)\" />\n      </pane>\n      <pane :size=\"pannels[2].size\" style=\"align-items: flex-start;\">\n        <n-flex vertical style=\"height: 100%; width: 100%; overflow: scroll;\">\n          <div style=\"display: block;width: calc(100% - 20px);margin: 10px auto;\">\n            <n-flex style=\"flex-direction: row;\">\n              <n-select v-model:value=\"query_current_select\" v-bind:style=\"{\n          width: `calc(${Math.max(...query_options.map(q => q.label.length)) / 1.3}rem)`,\n        }\" :options=\"query_options\" />\n\n              <n-auto-complete style=\"margin-bottom: 15px; width: max-content; flex-grow: 1;\" v-model:value=\"search_str\"\n                :input-props=\"{\n          autocomplete: 'disabled'\n        }\" :options=\"search_auto_complete_options()\" placeholder=\"JSON Pointer e.g. /foo/bar/0\" clearable />\n            </n-flex>\n            <n-collapse>\n              <n-collapse-item v-if=\"query_current_select == 'JSON Pointer'\" title=\"What's JSON Pointer?\" name=\"1\">\n                <n-card title=\"Example\">\n                  <p>A JSON Pointer is a list of zero-to-many tokens, each prefixed by <code>/</code>. Each token can be\n                    a string or a number. For example, given a JSON: </p>\n                  <div class=\"fragment\">\n                    <div class=\"line\">{</div>\n                    <div class=\"line\"> \"foo\" : [\"bar\", \"baz\"],</div>\n                    <div class=\"line\"> \"pi\" : 3.1416</div>\n                    <div class=\"line\">}</div>\n                  </div>\n                  <p>The following JSON Pointers resolve this JSON as:</p>\n                  <ol type=\"1\">\n                    <li><code>\"/foo\"</code> → <code>[ \"bar\", \"baz\" ]</code></li>\n                    <li><code>\"/foo/0\"</code> → <code>\"bar\"</code></li>\n                    <li><code>\"/foo/1\"</code> → <code>\"baz\"</code></li>\n                    <li><code>\"/pi\"</code> → <code>3.1416</code></li>\n                  </ol>\n                  <p>Note that, an empty JSON Pointer <code>\"\"</code> (zero token) resolves to the whole JSON.</p>\n                  <a href=\"https://rapidjson.org/md_doc_pointer.html\">https://rapidjson.org/md_doc_pointer.html</a>\n                </n-card>\n              </n-collapse-item>\n\n              <n-collapse-item v-else-if=\"query_current_select == 'JSON Path'\" title=\"JSONPath - XPath for JSON\"\n                name=\"1\">\n                <n-card title=\"Example\">\n                  <pre style=\"margin: 0;\"><code class=\"lang-json\"><span>{\n    <span class=\"hljs-attr\">\"Source\"</span>: <span class=\"hljs-string\">\"Server-01\"</span>,\n    <span class=\"hljs-attr\">\"Timestamp\"</span>: <span class=\"hljs-string\">\"2023-07-25T09:15:32.123Z\"</span>,\n    <span class=\"hljs-attr\">\"Log Level\"</span>: <span class=\"hljs-string\">\"INFO\"</span>,\n    <span class=\"hljs-attr\">\"Message\"</span>: <span class=\"hljs-string\">\"Application started successfully.\"</span>,\n    <span class=\"hljs-attr\">\"Details\"</span>: {\n      <span class=\"hljs-attr\">\"Service\"</span>: <span class=\"hljs-string\">\"AuthService\"</span>,\n      <span class=\"hljs-attr\">\"Endpoint\"</span>: <span class=\"hljs-string\">\"/api/login\"</span>,\n      <span class=\"hljs-attr\">\"Response Code\"</span>: <span class=\"hljs-number\">200</span>,\n      <span class=\"hljs-attr\">\"Response Time\"</span>: <span class=\"hljs-number\">54.21</span>,\n      <span class=\"hljs-attr\">\"User\"</span>: {\n        <span class=\"hljs-attr\">\"User ID\"</span>: <span class=\"hljs-string\">\"user123\"</span>,\n        <span class=\"hljs-attr\">\"Username\"</span>: <span class=\"hljs-string\">\"kiana_anderson\"</span>,\n        <span class=\"hljs-attr\">\"IP Address\"</span>: <span class=\"hljs-string\">\"192.168.1.100\"</span>\n      }\n    }\n  }</span>\n</code>\n</pre>\n                  <p>您可以使用 JSONPath 表示法來代表每個欄位，如下所示：</p>\n                  <pre class=\"has-inner-focus\"><code class=\"lang-kusto\" data-author-content=\"&quot;$.Source&quot;                     // Source field\n&quot;$.Timestamp&quot;                  // Timestamp field\n&quot;$['Log Level']&quot;               // Log Level field\n&quot;$.Message&quot;                    // Message field\n&quot;$.Details.Service&quot;            // Service field\n&quot;$.Details.Endpoint&quot;           // Endpoint field\n&quot;$.Details['Response Code']&quot;   // Response Code field\n&quot;$.Details['Response Time']&quot;   // Response Time field\n&quot;$.Details.User['User ID']&quot;    // User ID field\n&quot;$.Details.User.Username&quot;      // Username field\n&quot;$.Details.User['IP Address']&quot; // IP Address field\n\"><span><span class=\"hljs-string\">\"$.Source\"</span>                     <span class=\"hljs-comment\">// Source field</span>\n<span class=\"hljs-string\">\"$.Timestamp\"</span>                  <span class=\"hljs-comment\">// Timestamp field</span>\n<span class=\"hljs-string\">\"$['Log Level']\"</span>               <span class=\"hljs-comment\">// Log Level field</span>\n<span class=\"hljs-string\">\"$.Message\"</span>                    <span class=\"hljs-comment\">// Message field</span>\n<span class=\"hljs-string\">\"$.Details.Service\"</span>            <span class=\"hljs-comment\">// Service field</span>\n<span class=\"hljs-string\">\"$.Details.Endpoint\"</span>           <span class=\"hljs-comment\">// Endpoint field</span>\n<span class=\"hljs-string\">\"$.Details['Response Code']\"</span>   <span class=\"hljs-comment\">// Response Code field</span>\n<span class=\"hljs-string\">\"$.Details['Response Time']\"</span>   <span class=\"hljs-comment\">// Response Time field</span>\n<span class=\"hljs-string\">\"$.Details.User['User ID']\"</span>    <span class=\"hljs-comment\">// User ID field</span>\n<span class=\"hljs-string\">\"$.Details.User.Username\"</span>      <span class=\"hljs-comment\">// Username field</span>\n<span class=\"hljs-string\">\"$.Details.User['IP Address']\"</span> <span class=\"hljs-comment\">// IP Address field</span>\n</span></code></pre>\n\n                  <a class=\"n-a\"\n                    href=\"https://learn.microsoft.com/zh-tw/azure/data-explorer/kusto/query/jsonpath\">https://learn.microsoft.com/zh-tw/azure/data-explorer/kusto/query/jsonpath</a>\n                </n-card>\n              </n-collapse-item>\n            </n-collapse>\n\n            <component style=\"margin: 1rem auto; display: block;\" :is=\"() => search_path_table_render()\" />\n\n            <div style=\"margin-top: 5px;\" v-if=\"search_value?.length > 0\">\n              <label>JSON</label>\n              <n-input class=\"code_text\" v-model:value=\"search_value\" type=\"textarea\" />\n            </div>\n\n          </div>\n        </n-flex>\n      </pane>\n    </splitpanes>\n  </n-flex>\n</template>\n<script setup lang=\"tsx\">\nimport { Splitpanes, Pane } from \"splitpanes\";\nimport \"splitpanes/dist/splitpanes.css\";\nimport { NButton, NFlex, NInput, NIcon, NTable, NAutoComplete, NCollapse, NCollapseItem, NCard, NCheckbox, NSelect, NA } from \"naive-ui\";\nimport { Play } from \"@vicons/ionicons5\";\nimport { ref, h, watch, onMounted } from \"vue\";\nimport JSON5 from \"json5\";\nimport json_pointer from \"json-pointer\";\nimport jp from \"jsonpath\";\n\nimport sidebar_left_svg from \"../assets/icon/sidebar-left.svg\";\nimport sidebar_right_svg from \"../assets/icon/sidebar-right.svg\";\n\nconst auto_run = ref(JSON.parse(localStorage.getItem(\"json2table_auto\") || 'false'));\nconst run_str = ref(localStorage.getItem(\"input_str\") || \"\");\nlet table_data = ref(null);\nconst sub_value = ref(null);\n\nconst input_str = ref('');\n\n\nconst query_options = [{\n  label: 'JSON Pointer',\n  value: 'JSON Pointer',\n},\n{\n  label: 'JSON Path',\n  value: 'JSON Path',\n}]\nconst query_current_select = ref(query_options[0].value);\n\nconst search_str = ref(\"\");\nconst search_auto_complete_options = () => {\n\n  if (query_current_select.value === 'JSON Pointer') {\n    const search = search_str.value == '/' ? '' : search_str.value;\n    sub_value.value = save_json_pointer_get(search, table_data.value);\n\n    if (!sub_value.value) return []\n\n    console.log('sub_value', sub_value)\n    if (Array.isArray(sub_value.value)) {\n      return [search + '/0']\n    }\n\n    return Object.keys(sub_value.value).map(key => search + '/' + key)\n  }\n\n  return []\n}\n\nonMounted(() => {\n  if (auto_run.value) run();\n});\nwatch([auto_run], async () => {\n  localStorage.setItem(\"json2table_auto\", auto_run.value.toString());\n})\nwatch([run_str, auto_run], async (old_value, new_value) => {\n  if (auto_run.value)\n    run();\n})\n\nfunction isMobile() {\n  if (screen.width <= 760) {\n    return true;\n  }\n  else {\n    return false;\n  }\n}\n\nfunction run() {\n  input_str.value = run_str.value;\n}\n\nconst search_value = ref('')\n\n\nexport interface Table_pannel {\n  close: boolean;\n  size: number;\n  default_size: number;\n}\n\nconst json_table_pannels: Table_pannel[] = JSON.parse(\n  localStorage.getItem(\"json_table_pannels\") ||\n  JSON.stringify([\n    {\n      close: false,\n      size: 30,\n      default_size: 30,\n    },\n    {\n      close: false,\n      size: 35,\n      default_size: 35,\n    },\n    {\n      close: false,\n      size: 30,\n      default_size: 30,\n    },\n  ])\n);\nconst pannels = ref(json_table_pannels);\n\nasync function togglePannel(index: number) {\n  pannels.value[index].close = !pannels.value[index].close;\n\n  const col_size = pannels.value.map((p) => {\n    return p.close ? 0 : p.default_size;\n  });\n\n  pannels.value.forEach((x, i) => {\n    x.size = size(i);\n  });\n\n  localStorage.setItem(\"json_table_pannels\", JSON.stringify(pannels.value));\n\n  function size(index: number) {\n    const sum = col_size.reduce((a, b) => a + b, 0);\n\n    return Math.floor((col_size[index] / sum) * 100);\n  }\n}\n\nfunction json_render(str: string) {\n  try {\n    table_data.value = JSON5.parse(str);\n\n    const formatted = JSON.stringify(table_data.value, null, 4);\n    run_str.value = formatted;\n    localStorage.setItem(\"input_str\", str);\n\n    search_str.value = search_str.value + '';\n  } catch (e) {\n    table_data.value = null;\n\n    return;\n  }\n  return table_render_click(obj2Table(table_data.value));\n}\n\n\nfunction update_search(e: Event, json_pointer: string) {\n  e.stopPropagation();\n  query_current_select.value = 'JSON Pointer';\n  sub_value.value = save_json_pointer_get(json_pointer, table_data.value);\n  search_str.value = json_pointer;\n\n  console.log(json_pointer);\n}\nfunction table_render_click(obj?: { type: string, value: any }, json_pointer = '') {\n\n  if (obj.type == \"Array\") {\n    return (\n      <NTable single-line={false} size=\"small\" data-pointer={json_pointer}>\n        <thead onClick={e => update_search(e, json_pointer)}>\n          <tr>\n            <th>Array</th>\n          </tr>\n        </thead>\n        <tbody>\n          {obj.value.map((o, i) => {\n            return (\n              <tr>\n                <td>{table_render_click(o, `${json_pointer}/${i}`)}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </NTable>\n    );\n  }\n\n  if (obj.type == 'sameArrayField') {\n    return (\n      <NTable single-line={false} size=\"small\">\n        <thead>\n          <tr>\n            {\n              obj.value[0].type === 'Object' ? obj.value[0].value.map(key => <th>{key.name}</th>)\n                : <th>{obj.value[0].type}</th>\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            obj.value.map((v, v_i) => <tr>{\n              v.type === 'Object' ?\n                v.value.map(vv => <td>{table_render_click(vv.value, `${json_pointer}/${v_i}${vv.value.type == 'Primitive' ? '' : '/' + vv.name}`)}</td>)\n                : <td>{table_render_click(v, `${json_pointer}/${v_i}`)}</td>\n            }</tr>)\n\n          }\n        </tbody>\n      </NTable>\n    );\n  }\n\n  if (obj.type == \"Object\") {\n    return (<NTable single-line={false} size=\"small\">\n      <tr data-pointer={json_pointer} onClick={e => update_search(e, json_pointer)}>\n        <th>Key</th>\n        <th>Value</th>\n      </tr>\n      <tbody>{\n        obj.value.map(o => {\n          return (\n            <tr onClick={e => update_search(e, json_pointer + `/${o.name}`)}>\n              <td>{o.name}</td>\n              <td>{table_render_click(o.value, `${json_pointer}/${o.name}`)}</td>\n            </tr>\n          );\n        })\n      }\n      </tbody>\n    </NTable>\n    );\n  }\n\n  if (obj.type == \"Primitive\")\n    return <span onClick={e => update_search(e, json_pointer)}>\n      {obj.value.toString()}</span>;\n}\n\nfunction table_render(obj: { type: string, value: any }) {\n\n  if (obj.type == \"Array\") {\n    return (\n      <NTable single-line={false} size=\"small\">\n        <thead>\n          <tr>\n            <th>Array</th>\n          </tr>\n        </thead>\n        <tbody>\n          {obj.value.map((o) => {\n            return (\n              <tr>\n                <td>{table_render(o)}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </NTable>\n    );\n  }\n\n  if (obj.type == 'sameArrayField') {\n    return (\n      <NTable single-line={false} size=\"small\">\n        <thead>\n          <tr>\n            {\n              obj.value[0].type === 'Object' ?\n                obj.value[0].value.map(key => <th>{key.name}</th>)\n                : <th>{obj.value[0].type}</th>\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            obj.value.map(v => <tr>{\n              v.type === 'Object' ?\n                v.value.map(vv => <td>{table_render(vv.value)}</td>)\n                : <td>{table_render(v)}</td>\n            }</tr>)\n\n          }\n        </tbody>\n      </NTable>\n    );\n  }\n\n  if (obj.type == \"Object\") {\n    return (<NTable single-line={false} size=\"small\">\n      <tr>\n        <th>Key</th>\n        <th>Value</th>\n      </tr>\n      <tbody>{\n        obj.value.map(o => {\n          return (\n            <tr>\n              <td>{o.name}</td>\n              <td>{table_render(o.value)}</td>\n            </tr>\n          );\n        })\n      }\n      </tbody>\n    </NTable>\n    );\n  }\n\n  if (obj.type == \"Primitive\") return h(\"span\", obj.value.toString());\n}\nfunction obj2Table(obj: any): { type: string, value: any } | undefined {\n  if (obj === null) return {\n    type: \"Primitive\",\n    value: 'null',\n  };\n\n  if (Array.isArray(obj)) {\n\n    return {\n      type: sameArrayField(obj) ? \"sameArrayField\" : \"Array\",\n      value: obj.map((o) => obj2Table(o)),\n    };\n  }\n\n  if (typeof obj === \"object\") {\n    return {\n      type: \"Object\",\n      value: Object.entries(obj).map(([k, v]) => {\n        return {\n          name: k,\n          value: obj2Table(v),\n        };\n      }),\n    };\n  }\n\n  if (isPrimitive(obj)) {\n    return {\n      type: \"Primitive\",\n      value: obj,\n    };\n  }\n}\n\nfunction sameArrayField(arr: Array<any>) {\n  return arr\n    .map(obj => Object.keys(obj).join('|'))\n    .every((val, i, arr) => val === arr[0])\n    && !Array.isArray(arr[0])\n    && arr.length > 1\n}\n\nfunction isPrimitive(str) {\n  return [\n    \"string\",\n    \"number\",\n    \"bigint\",\n    \"boolean\",\n    \"undefined\",\n    \"symbol\",\n    \"null\",\n    \"object\",\n  ].includes(typeof str);\n}\n\nwatch([search_str, query_current_select], async (old_value, new_value) => {\n  try {\n    let pointer_obj;\n\n    switch (query_current_select.value) {\n      case 'JSON Pointer':\n        pointer_obj = json_pointer.get(table_data.value || {}, search_str.value);\n        break;\n      case 'JSON Path':\n        pointer_obj = jp.query(table_data.value, search_str.value)\n        break;\n      default:\n        break;\n    }\n\n    sub_value.value = pointer_obj;\n    search_value.value = JSON.stringify(pointer_obj);\n\n  } catch (e) {\n    search_value.value = e.toString();\n  }\n\n})\nfunction save_json_pointer_get(pointer_str: string, target_obj) {\n  try {\n    const pointer_obj = json_pointer.get(target_obj, pointer_str);\n    return pointer_obj;\n  } catch (e) {\n    return undefined;\n  }\n}\nfunction search_path_table_render() {\n  try {\n    if (!sub_value.value) return <p>empty object</p>\n\n\n    return table_render(obj2Table(sub_value.value));\n  }\n  catch (e) {\n    // search_value.value = e;\n\n    return <p>{e.toString()}</p>\n  }\n\n}\n\n\n</script>\n<style>\n:root {\n  --header-height: 43px;\n  --n-border-color: rgb(239, 239, 245)\n}\n\n.splitpanes__pane {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: Helvetica, Arial, sans-serif;\n  color: gray;\n  flex-grow: 1;\n}\n\n.splitpanes--vertical>.splitpanes__splitter {\n  width: 5px;\n  background-color: darkgray;\n  flex-shrink: 0;\n}\n\n.json_table {\n  /* font-size: 16px; */\n  overflow: scroll;\n  display: block;\n}\n\n.n-table {\n  width: fit-content;\n  margin: auto;\n}\n\n.n-table.n-table--bordered tr:last-child td {\n  border-bottom: 1px solid var(--n-border-color);\n}\n\ntd:first-child {\n  width: 10%;\n}\n\ndiv.fragment {\n  margin: 4px 8px 4px 2px;\n  background-color: #f8f8f8;\n  border: 1px solid #ddd;\n  font-size: 13px;\n  line-height: 19px;\n  overflow: auto;\n  padding: 6px 10px;\n  border-radius: 3px;\n}\n\ndiv.line {\n  font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace;\n  font-size: 13px;\n  font-style: normal;\n  font-variant: normal;\n  font-weight: normal;\n  line-height: 19px;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  text-indent: -53px;\n  padding-left: 53px;\n  padding-bottom: 0px;\n  margin: 0px;\n}\n\n.code_text {\n  font-family: Menlo, Monaco, 'Courier New', monospace\n}\n</style>\n"],"names":["sidebar_left_svg","sidebar_right_svg","auto_run","ref","JSON","parse","localStorage","getItem","run_str","table_data","sub_value","input_str","query_options","label","value","query_current_select","search_str","search_auto_complete_options","search","save_json_pointer_get","console","log","Array","isArray","Object","keys","map","key","onMounted","run","watch","setItem","toString","old_value","new_value","isMobile","screen","width","search_value","json_table_pannels","stringify","close","size","default_size","pannels","togglePannel","index","col_size","p","forEach","x","i","sum","reduce","a","b","Math","floor","json_render","str","JSON5","formatted","table_render_click","obj2Table","update_search","e","json_pointer","stopPropagation","obj","type","_createVNode2","NTable","default","_createTextVNode2","o","name","v","v_i","vv","table_render","h","sameArrayField","entries","k","isPrimitive","arr","join","every","val","length","includes","pointer_obj","get","jp","query","pointer_str","target_obj","search_path_table_render"],"mappings":"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"}
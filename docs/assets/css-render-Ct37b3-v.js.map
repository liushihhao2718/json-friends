{"version":3,"file":"css-render-Ct37b3-v.js","sources":["../../node_modules/css-render/esm/parse.js","../../node_modules/css-render/esm/utils.js","../../node_modules/css-render/esm/render.js","../../node_modules/css-render/esm/mount.js","../../node_modules/css-render/esm/c.js","../../node_modules/css-render/esm/CssRender.js","../../node_modules/css-render/esm/exists.js"],"sourcesContent":["function ampCount(selector) {\n    let cnt = 0;\n    for (let i = 0; i < selector.length; ++i) {\n        if (selector[i] === '&')\n            ++cnt;\n    }\n    return cnt;\n}\n/**\n * Don't just use ',' to separate css selector. For example:\n * x:(a, b) {} will be split into 'x:(a' and 'b)', which is not expected.\n * Make sure comma doesn't exist inside parentheses.\n */\nconst separatorRegex = /\\s*,(?![^(]*\\))\\s*/g;\nconst extraSpaceRegex = /\\s+/g;\n/**\n * selector must includes '&'\n * selector is trimmed\n * every part of amp is trimmed\n */\nfunction resolveSelectorWithAmp(amp, selector) {\n    const nextAmp = [];\n    selector.split(separatorRegex).forEach(partialSelector => {\n        let round = ampCount(partialSelector);\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (!round) {\n            amp.forEach(partialAmp => {\n                nextAmp.push(\n                // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n                (partialAmp && partialAmp + ' ') + partialSelector);\n            });\n            return;\n        }\n        else if (round === 1) {\n            amp.forEach(partialAmp => {\n                nextAmp.push(partialSelector.replace('&', partialAmp));\n            });\n            return;\n        }\n        let partialNextAmp = [\n            partialSelector\n        ];\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        while (round--) {\n            const nextPartialNextAmp = [];\n            partialNextAmp.forEach(selectorItr => {\n                amp.forEach(partialAmp => {\n                    nextPartialNextAmp.push(selectorItr.replace('&', partialAmp));\n                });\n            });\n            partialNextAmp = nextPartialNextAmp;\n        }\n        partialNextAmp.forEach(part => nextAmp.push(part));\n    });\n    return nextAmp;\n}\n/**\n * selector mustn't includes '&'\n * selector is trimmed\n */\nfunction resolveSelector(amp, selector) {\n    const nextAmp = [];\n    selector.split(separatorRegex).forEach(partialSelector => {\n        amp.forEach(partialAmp => {\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            nextAmp.push(((partialAmp && partialAmp + ' ') + partialSelector));\n        });\n    });\n    return nextAmp;\n}\nexport function parseSelectorPath(selectorPaths) {\n    let amp = [''];\n    selectorPaths.forEach(selector => {\n        // eslint-disable-next-line\n        selector = selector && selector.trim();\n        if (\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        !selector) {\n            /**\n             * if it's a empty selector, do nothing\n             */\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (selector.includes('&')) {\n            amp = resolveSelectorWithAmp(amp, selector);\n        }\n        else {\n            amp = resolveSelector(amp, selector);\n        }\n    });\n    return amp.join(', ').replace(extraSpaceRegex, ' ');\n}\n","export function removeElement(el) {\n    /* istanbul ignore if */\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (!el)\n        return;\n    const parentElement = el.parentElement;\n    /* istanbul ignore else */\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (parentElement)\n        parentElement.removeChild(el);\n}\nexport function queryElement(id) {\n    return document.querySelector(`style[cssr-id=\"${id}\"]`);\n}\nexport function createElement(id) {\n    const el = document.createElement('style');\n    el.setAttribute('cssr-id', id);\n    return el;\n}\nexport function isMediaOrSupports(selector) {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (!selector)\n        return false;\n    return /^\\s*@(s|m)/.test(selector);\n}\n","import { parseSelectorPath } from './parse';\nimport { isMediaOrSupports } from './utils';\nconst kebabRegex = /[A-Z]/g;\nfunction kebabCase(pattern) {\n    return pattern.replace(kebabRegex, match => '-' + match.toLowerCase());\n}\n/** TODO: refine it to solve nested object */\nfunction unwrapProperty(prop, indent = '  ') {\n    if (typeof prop === 'object' && prop !== null) {\n        return (' {\\n' +\n            Object.entries(prop).map(v => {\n                return indent + `  ${kebabCase(v[0])}: ${v[1]};`;\n            }).join('\\n') +\n            '\\n' + indent + '}');\n    }\n    return `: ${prop};`;\n}\n/** unwrap properties */\nfunction unwrapProperties(props, instance, params) {\n    if (typeof props === 'function') {\n        return props({\n            context: instance.context,\n            props: params\n        });\n    }\n    return props;\n}\nfunction createStyle(selector, props, instance, params) {\n    if (!props)\n        return '';\n    // eslint-disable-next-line\n    const unwrappedProps = unwrapProperties(props, instance, params);\n    if (!unwrappedProps)\n        return '';\n    if (typeof unwrappedProps === 'string') {\n        return `${selector} {\\n${unwrappedProps}\\n}`;\n    }\n    const propertyNames = Object.keys(unwrappedProps);\n    if (propertyNames.length === 0) {\n        if (instance.config.keepEmptyBlock)\n            return selector + ' {\\n}';\n        return '';\n    }\n    const statements = selector\n        ? [\n            selector + ' {'\n        ]\n        : [];\n    propertyNames.forEach(propertyName => {\n        const property = unwrappedProps[propertyName];\n        if (propertyName === 'raw') {\n            statements.push('\\n' + property + '\\n');\n            return;\n        }\n        propertyName = kebabCase(propertyName);\n        if (property !== null && property !== undefined) {\n            statements.push(`  ${propertyName}${unwrapProperty(property)}`);\n        }\n    });\n    if (selector) {\n        statements.push('}');\n    }\n    return statements.join('\\n');\n}\nfunction loopCNodeListWithCallback(children, options, callback) {\n    /* istanbul ignore if */\n    if (!children)\n        return;\n    children.forEach(child => {\n        if (Array.isArray(child)) {\n            loopCNodeListWithCallback(child, options, callback);\n        }\n        else if (typeof child === 'function') {\n            const grandChildren = child(options);\n            if (Array.isArray(grandChildren)) {\n                loopCNodeListWithCallback(grandChildren, options, callback);\n            }\n            else if (grandChildren) {\n                callback(grandChildren);\n            }\n        }\n        else if (child) {\n            callback(child);\n        }\n    });\n}\nfunction traverseCNode(node, selectorPaths, styles, instance, params, styleSheet) {\n    const $ = node.$;\n    let blockSelector = '';\n    if (!$ || typeof $ === 'string') {\n        if (isMediaOrSupports($)) {\n            blockSelector = $;\n        }\n        else {\n            // as a string selector\n            selectorPaths.push($);\n        }\n    }\n    else if (typeof $ === 'function') {\n        const selector = $({\n            context: instance.context,\n            props: params\n        });\n        if (isMediaOrSupports(selector)) {\n            blockSelector = selector;\n        }\n        else {\n            // as a lazy selector\n            selectorPaths.push(selector);\n        }\n    }\n    else { // as a option selector\n        if ($.before)\n            $.before(instance.context);\n        if (!$.$ || typeof $.$ === 'string') {\n            if (isMediaOrSupports($.$)) {\n                blockSelector = $.$;\n            }\n            else {\n                // as a string selector\n                selectorPaths.push($.$);\n            }\n        }\n        else /* istanbul ignore else */ if ($.$) {\n            const selector = $.$({\n                context: instance.context,\n                props: params\n            });\n            if (isMediaOrSupports(selector)) {\n                blockSelector = selector;\n            }\n            else {\n                // as a lazy selector\n                selectorPaths.push(selector);\n            }\n        }\n    }\n    const selector = parseSelectorPath(selectorPaths);\n    const style = createStyle(selector, node.props, instance, params);\n    if (blockSelector) {\n        styles.push(`${blockSelector} {`);\n        if (styleSheet && style) {\n            styleSheet.insertRule(`${blockSelector} {\\n${style}\\n}\\n`);\n        }\n    }\n    else {\n        if (styleSheet && style) {\n            styleSheet.insertRule(style);\n        }\n        if (!styleSheet && style.length)\n            styles.push(style);\n    }\n    if (node.children) {\n        loopCNodeListWithCallback(node.children, {\n            context: instance.context,\n            props: params\n        }, childNode => {\n            if (typeof childNode === 'string') {\n                const style = createStyle(selector, { raw: childNode }, instance, params);\n                if (styleSheet) {\n                    styleSheet.insertRule(style);\n                }\n                else {\n                    styles.push(style);\n                }\n            }\n            else {\n                traverseCNode(childNode, selectorPaths, styles, instance, params, styleSheet);\n            }\n        });\n    }\n    selectorPaths.pop();\n    if (blockSelector) {\n        styles.push('}');\n    }\n    if ($ && $.after)\n        $.after(instance.context);\n}\nexport function render(node, instance, props, insertRule = false) {\n    const styles = [];\n    traverseCNode(node, [], styles, instance, props, insertRule\n        ? node.instance.__styleSheet\n        : undefined);\n    if (insertRule)\n        return '';\n    return styles.join('\\n\\n');\n}\n","/* eslint-disable @typescript-eslint/prefer-ts-expect-error */\n/* eslint-disable @typescript-eslint/strict-boolean-expressions */\nimport hash from './hash';\nimport { render } from './render';\nimport { createElement, queryElement, removeElement } from './utils';\nif (typeof window !== 'undefined') {\n    window.__cssrContext = {};\n}\nexport function unmount(intance, node, id) {\n    const { els } = node;\n    // If id is undefined, unmount all styles\n    if (id === undefined) {\n        els.forEach(removeElement);\n        node.els = [];\n    }\n    else {\n        const target = queryElement(id);\n        // eslint-disable-next-line\n        if (target && els.includes(target)) {\n            removeElement(target);\n            node.els = els.filter((el) => el !== target);\n        }\n    }\n}\nfunction addElementToList(els, target) {\n    els.push(target);\n}\nfunction mount(instance, node, id, props, head, silent, force, anchorMetaName, ssrAdapter\n// eslint-disable-next-line @typescript-eslint/no-invalid-void-type\n) {\n    if (silent && !ssrAdapter) {\n        if (id === undefined) {\n            // it is possible to use hash to get rid of the requirements of id\n            // if you are interested in it, please create a pr\n            // i have no time to impl it\n            console.error('[css-render/mount]: `id` is required in `silent` mode.');\n            return;\n        }\n        const cssrContext = window.__cssrContext;\n        if (!cssrContext[id]) {\n            cssrContext[id] = true;\n            render(node, instance, props, silent);\n        }\n        return;\n    }\n    let style;\n    if (id === undefined) {\n        style = node.render(props);\n        id = hash(style);\n    }\n    if (ssrAdapter) {\n        ssrAdapter.adapter(id, style !== null && style !== void 0 ? style : node.render(props));\n        return;\n    }\n    const queriedTarget = queryElement(id);\n    if (queriedTarget !== null && !force) {\n        return queriedTarget;\n    }\n    const target = queriedTarget !== null && queriedTarget !== void 0 ? queriedTarget : createElement(id);\n    if (style === undefined)\n        style = node.render(props);\n    target.textContent = style;\n    if (queriedTarget !== null)\n        return queriedTarget;\n    if (anchorMetaName) {\n        const anchorMetaEl = document.head.querySelector(`meta[name=\"${anchorMetaName}\"]`);\n        if (anchorMetaEl) {\n            document.head.insertBefore(target, anchorMetaEl);\n            addElementToList(node.els, target);\n            return target;\n        }\n    }\n    if (head) {\n        document.head.insertBefore(target, document.head.querySelector('style, link'));\n    }\n    else {\n        document.head.appendChild(target);\n    }\n    addElementToList(node.els, target);\n    return target;\n}\nexport { mount };\n","import { render } from './render';\nimport { mount, unmount } from './mount';\nfunction wrappedRender(props) {\n    return render(this, this.instance, props);\n}\n// do not guard node calling, it should throw an error.\nfunction wrappedMount(options = {}\n// eslint-disable-next-line @typescript-eslint/no-invalid-void-type\n) {\n    const { id, ssr, props, head = false, silent = false, force = false, anchorMetaName } = options;\n    const targetElement = mount(this.instance, this, id, props, head, silent, force, anchorMetaName, ssr);\n    return targetElement;\n}\nfunction wrappedUnmount(options = {}) {\n    /* istanbul ignore next */\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    const { id } = options;\n    unmount(this.instance, this, id);\n}\nconst createCNode = function (instance, $, props, children) {\n    return {\n        instance,\n        $,\n        props,\n        children,\n        els: [],\n        render: wrappedRender,\n        mount: wrappedMount,\n        unmount: wrappedUnmount\n    };\n};\nexport const c = function (instance, $, props, children) {\n    if (Array.isArray($)) {\n        return createCNode(instance, { $: null }, null, $);\n    }\n    else if (Array.isArray(props)) {\n        return createCNode(instance, $, null, props);\n    }\n    else if (Array.isArray(children)) {\n        return createCNode(instance, $, props, children);\n    }\n    else {\n        return createCNode(instance, $, props, null);\n    }\n};\n","import { c } from './c';\nimport { queryElement } from './utils';\nexport function CssRender(config = {}) {\n    let styleSheet = null;\n    const cssr = {\n        c: ((...args) => c(cssr, ...args)),\n        use: (plugin, ...args) => plugin.install(cssr, ...args),\n        find: queryElement,\n        context: {},\n        config,\n        get __styleSheet() {\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            if (!styleSheet) {\n                const style = document.createElement('style');\n                document.head.appendChild(style);\n                styleSheet = document.styleSheets[document.styleSheets.length - 1];\n                return styleSheet;\n            }\n            return styleSheet;\n        }\n    };\n    return cssr;\n}\n","import { queryElement } from './utils';\nexport function exists(id, ssr) {\n    if (id === undefined)\n        return false;\n    if (ssr) {\n        const { context: { ids } } = ssr;\n        return ids.has(id);\n    }\n    return queryElement(id) !== null;\n}\n"],"names":["ampCount","selector","cnt","i","separatorRegex","extraSpaceRegex","resolveSelectorWithAmp","amp","nextAmp","partialSelector","round","partialAmp","partialNextAmp","nextPartialNextAmp","selectorItr","part","resolveSelector","parseSelectorPath","selectorPaths","removeElement","el","parentElement","queryElement","id","createElement","isMediaOrSupports","kebabRegex","kebabCase","pattern","match","unwrapProperty","prop","indent","v","unwrapProperties","props","instance","params","createStyle","unwrappedProps","propertyNames","statements","propertyName","property","loopCNodeListWithCallback","children","options","callback","child","grandChildren","traverseCNode","node","styles","styleSheet","$","blockSelector","style","childNode","render","insertRule","unmount","intance","els","target","addElementToList","mount","head","silent","force","anchorMetaName","ssrAdapter","cssrContext","hash","queriedTarget","anchorMetaEl","wrappedRender","wrappedMount","ssr","wrappedUnmount","createCNode","c","CssRender","config","cssr","args","plugin","exists","ids"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}